<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::TabulatedNormalDistribution&lt; RealType, tableBits &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml">TabulatedNormalDistribution</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1TabulatedNormalDistribution-members.xhtml">List of all members</a> &#124;
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::TabulatedNormalDistribution&lt; RealType, tableBits &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/random/tabulatednormaldistribution.h&gt;</code></p>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><h3>template&lt;class RealType = real, unsigned int tableBits = c_TabulatedNormalDistributionDefaultBits&gt;<br/>
class gmx::TabulatedNormalDistribution&lt; RealType, tableBits &gt;</h3>

<p>Tabulated normal random distribution. </p>
<p>Random distribution compatible with C++11 distributions - it can be used with any C++11 random engine.</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">RealType</td><td>Type of the return value. Float or double. Note that GROMACS uses "real" type by default in contrast to the C++11 standard library, to avoid double/float conversions. </td></tr>
    <tr><td class="paramname">tableBits</td><td>Size of the table, specified in bits. The storage space required is sizeof(RealType)*2^tableBits. To keep things sane this is limited to 24 bits.</td></tr>
  </table>
  </dd>
</dl>
<p>Some stochastic integrators depend on drawing a lot of normal distribution random numbers quickly, but in many cases the only important property is the distribution - given the noise in forces we do not need very high resolution. This distribution uses an internal table to return samples from a normal distribution with limited resolution. By default the table uses c_TabulatedNormalDistributionDefaultBits bits, but this is specified with a template parameter.</p>
<p>Since this distribution only uses tableBits bits per value generated, the values draw from the random engine are used for several results. To make sure you get a reproducible result when using counter-based random engines (such as <a class="el" href="classgmx_1_1ThreeFry2x64.xhtml" title="ThreeFry2x64 random engine with 20 iteractions. ">ThreeFry2x64</a>), remember to call the <a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#afe81f029c18670e54950df800d30e986" title="Clear all internal saved random bits from the random engine. ">reset()</a> method to cancel the internal memory of the distribution.</p>
<dl class="section note"><dt>Note</dt><dd>For modern NUMA systems, you likely want to use separate distributions for each thread, and make sure they are initialized on the CPU where they will run, so the table is placed in that NUMA memory pool. </dd>
<dd>
The finite table resolution means this distribution will NOT return arbitrarily small/large values, but with e.g. 14 bits the results are limited to roughly +/- 4 standard deviations. </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TabulatedNormalDistribution_1_1param__type.xhtml">param_type</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normal distribution parameter class (mean and stddev)  <a href="classgmx_1_1TabulatedNormalDistribution_1_1param__type.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aa89ced8831b517d66ec14b9651d4d839"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa89ced8831b517d66ec14b9651d4d839"></a>
typedef RealType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#aa89ced8831b517d66ec14b9651d4d839">result_type</a></td></tr>
<tr class="memdesc:aa89ced8831b517d66ec14b9651d4d839"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of normal distribution results. <br/></td></tr>
<tr class="separator:aa89ced8831b517d66ec14b9651d4d839"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abb053676a2ca8ed4f5a9908bc70f25a7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#abb053676a2ca8ed4f5a9908bc70f25a7">TabulatedNormalDistribution</a> (<a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#aa89ced8831b517d66ec14b9651d4d839">result_type</a> <a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#ad8e0f30cadea362bacd0579c6c1a63cd">mean</a>=0.0, <a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#aa89ced8831b517d66ec14b9651d4d839">result_type</a> <a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#add43e62acc1f32b5e9ac1e8a92294995">stddev</a>=1.0)</td></tr>
<tr class="memdesc:abb053676a2ca8ed4f5a9908bc70f25a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct new normal distribution with specified mean &amp; stdddev.  <a href="#abb053676a2ca8ed4f5a9908bc70f25a7">More...</a><br/></td></tr>
<tr class="separator:abb053676a2ca8ed4f5a9908bc70f25a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad090e6c16ba8f5b3a5408d8c07788dd3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#ad090e6c16ba8f5b3a5408d8c07788dd3">TabulatedNormalDistribution</a> (const <a class="el" href="classgmx_1_1TabulatedNormalDistribution_1_1param__type.xhtml">param_type</a> &amp;<a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#a27ddab15b55e8d2626a224bc52fa1af1">param</a>)</td></tr>
<tr class="memdesc:ad090e6c16ba8f5b3a5408d8c07788dd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct new normal distribution from parameter type.  <a href="#ad090e6c16ba8f5b3a5408d8c07788dd3">More...</a><br/></td></tr>
<tr class="separator:ad090e6c16ba8f5b3a5408d8c07788dd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a363481850bdc4a22574913f4cd3865c1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#aa89ced8831b517d66ec14b9651d4d839">result_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#a363481850bdc4a22574913f4cd3865c1">min</a> () const </td></tr>
<tr class="memdesc:a363481850bdc4a22574913f4cd3865c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Smallest value that can be generated in normal distrubiton.  <a href="#a363481850bdc4a22574913f4cd3865c1">More...</a><br/></td></tr>
<tr class="separator:a363481850bdc4a22574913f4cd3865c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd6cccd0aa5f63bf0df2d04356d71731"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#aa89ced8831b517d66ec14b9651d4d839">result_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#afd6cccd0aa5f63bf0df2d04356d71731">max</a> () const </td></tr>
<tr class="memdesc:afd6cccd0aa5f63bf0df2d04356d71731"><td class="mdescLeft">&#160;</td><td class="mdescRight">Largest value that can be generated in normal distribution.  <a href="#afd6cccd0aa5f63bf0df2d04356d71731">More...</a><br/></td></tr>
<tr class="separator:afd6cccd0aa5f63bf0df2d04356d71731"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8e0f30cadea362bacd0579c6c1a63cd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad8e0f30cadea362bacd0579c6c1a63cd"></a>
<a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#aa89ced8831b517d66ec14b9651d4d839">result_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#ad8e0f30cadea362bacd0579c6c1a63cd">mean</a> () const </td></tr>
<tr class="memdesc:ad8e0f30cadea362bacd0579c6c1a63cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mean of the present normal distribution. <br/></td></tr>
<tr class="separator:ad8e0f30cadea362bacd0579c6c1a63cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add43e62acc1f32b5e9ac1e8a92294995"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="add43e62acc1f32b5e9ac1e8a92294995"></a>
<a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#aa89ced8831b517d66ec14b9651d4d839">result_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#add43e62acc1f32b5e9ac1e8a92294995">stddev</a> () const </td></tr>
<tr class="memdesc:add43e62acc1f32b5e9ac1e8a92294995"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard deviation of the present normal distribution. <br/></td></tr>
<tr class="separator:add43e62acc1f32b5e9ac1e8a92294995"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27ddab15b55e8d2626a224bc52fa1af1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a27ddab15b55e8d2626a224bc52fa1af1"></a>
<a class="el" href="classgmx_1_1TabulatedNormalDistribution_1_1param__type.xhtml">param_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#a27ddab15b55e8d2626a224bc52fa1af1">param</a> () const </td></tr>
<tr class="memdesc:a27ddab15b55e8d2626a224bc52fa1af1"><td class="mdescLeft">&#160;</td><td class="mdescRight">The parameter class (mean &amp; stddev) of the normal distribution. <br/></td></tr>
<tr class="separator:a27ddab15b55e8d2626a224bc52fa1af1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe81f029c18670e54950df800d30e986"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afe81f029c18670e54950df800d30e986"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#afe81f029c18670e54950df800d30e986">reset</a> ()</td></tr>
<tr class="memdesc:afe81f029c18670e54950df800d30e986"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear all internal saved random bits from the random engine. <br/></td></tr>
<tr class="separator:afe81f029c18670e54950df800d30e986"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa31f6be477bf6d3f2a16cf06f38d6174"><td class="memTemplParams" colspan="2">template&lt;class Rng &gt; </td></tr>
<tr class="memitem:aa31f6be477bf6d3f2a16cf06f38d6174"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#aa89ced8831b517d66ec14b9651d4d839">result_type</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#aa31f6be477bf6d3f2a16cf06f38d6174">operator()</a> (Rng &amp;g)</td></tr>
<tr class="memdesc:aa31f6be477bf6d3f2a16cf06f38d6174"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return normal distribution value specified by internal parameters.  <a href="#aa31f6be477bf6d3f2a16cf06f38d6174">More...</a><br/></td></tr>
<tr class="separator:aa31f6be477bf6d3f2a16cf06f38d6174"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1cf20ee54ab4f0427f270c1b714a157"><td class="memTemplParams" colspan="2">template&lt;class Rng &gt; </td></tr>
<tr class="memitem:af1cf20ee54ab4f0427f270c1b714a157"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#aa89ced8831b517d66ec14b9651d4d839">result_type</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#af1cf20ee54ab4f0427f270c1b714a157">operator()</a> (Rng &amp;g, const <a class="el" href="classgmx_1_1TabulatedNormalDistribution_1_1param__type.xhtml">param_type</a> &amp;<a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#a27ddab15b55e8d2626a224bc52fa1af1">param</a>)</td></tr>
<tr class="memdesc:af1cf20ee54ab4f0427f270c1b714a157"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return normal distribution value specified by given parameters.  <a href="#af1cf20ee54ab4f0427f270c1b714a157">More...</a><br/></td></tr>
<tr class="separator:af1cf20ee54ab4f0427f270c1b714a157"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a338348eea3eafcb9f57c008178a1fcc3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#a338348eea3eafcb9f57c008178a1fcc3">operator==</a> (const <a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml">TabulatedNormalDistribution</a>&lt; RealType, tableBits &gt; &amp;x) const </td></tr>
<tr class="memdesc:a338348eea3eafcb9f57c008178a1fcc3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if two tabulated normal distributions have identical states.  <a href="#a338348eea3eafcb9f57c008178a1fcc3">More...</a><br/></td></tr>
<tr class="separator:a338348eea3eafcb9f57c008178a1fcc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41291475c76f45cdc26a439a17b4833d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#a41291475c76f45cdc26a439a17b4833d">operator!=</a> (const <a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml">TabulatedNormalDistribution</a>&lt; RealType, tableBits &gt; &amp;x) const </td></tr>
<tr class="memdesc:a41291475c76f45cdc26a439a17b4833d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if two tabulated normal distributions have different states.  <a href="#a41291475c76f45cdc26a439a17b4833d">More...</a><br/></td></tr>
<tr class="separator:a41291475c76f45cdc26a439a17b4833d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:acba60ea1bb747ed71e0211d4826ff7f5"><td class="memItemLeft" align="right" valign="top">static const std::vector<br class="typebreak"/>
&lt; RealType &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#acba60ea1bb747ed71e0211d4826ff7f5">makeTable</a> ()</td></tr>
<tr class="memdesc:acba60ea1bb747ed71e0211d4826ff7f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fill the table with values for the normal distribution.  <a href="#acba60ea1bb747ed71e0211d4826ff7f5">More...</a><br/></td></tr>
<tr class="separator:acba60ea1bb747ed71e0211d4826ff7f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="abb053676a2ca8ed4f5a9908bc70f25a7"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class RealType  = real, unsigned int tableBits = c_TabulatedNormalDistributionDefaultBits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml">gmx::TabulatedNormalDistribution</a>&lt; RealType, tableBits &gt;::<a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml">TabulatedNormalDistribution</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#aa89ced8831b517d66ec14b9651d4d839">result_type</a>&#160;</td>
          <td class="paramname"><em>mean</em> = <code>0.0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#aa89ced8831b517d66ec14b9651d4d839">result_type</a>&#160;</td>
          <td class="paramname"><em>stddev</em> = <code>1.0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct new normal distribution with specified mean &amp; stdddev. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mean</td><td>Mean value of tabulated normal distribution </td></tr>
    <tr><td class="paramname">stddev</td><td>Standard deviation of tabulated normal distribution </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad090e6c16ba8f5b3a5408d8c07788dd3"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class RealType  = real, unsigned int tableBits = c_TabulatedNormalDistributionDefaultBits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml">gmx::TabulatedNormalDistribution</a>&lt; RealType, tableBits &gt;::<a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml">TabulatedNormalDistribution</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1TabulatedNormalDistribution_1_1param__type.xhtml">param_type</a> &amp;&#160;</td>
          <td class="paramname"><em>param</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct new normal distribution from parameter type. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">param</td><td>Parameter class containing mean and standard deviation. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="acba60ea1bb747ed71e0211d4826ff7f5"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class RealType  = real, unsigned int tableBits = c_TabulatedNormalDistributionDefaultBits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static const std::vector&lt;RealType&gt; <a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml">gmx::TabulatedNormalDistribution</a>&lt; RealType, tableBits &gt;::makeTable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Fill the table with values for the normal distribution. </p>
<p>This routine returns a new a std::vector with the table data.</p>
<p>This routine is used to help construct objects of this class, and is exposed only to permit testing. Normal code should not need to call this function. </p>

</div>
</div>
<a class="anchor" id="afd6cccd0aa5f63bf0df2d04356d71731"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class RealType  = real, unsigned int tableBits = c_TabulatedNormalDistributionDefaultBits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#aa89ced8831b517d66ec14b9651d4d839">result_type</a> <a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml">gmx::TabulatedNormalDistribution</a>&lt; RealType, tableBits &gt;::max </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Largest value that can be generated in normal distribution. </p>
<dl class="section note"><dt>Note</dt><dd>The largest value is not infinity with a table, but it depends on the table resolution. With 14 bits, this is roughly four standard deviations above the mean. </dd></dl>

</div>
</div>
<a class="anchor" id="a363481850bdc4a22574913f4cd3865c1"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class RealType  = real, unsigned int tableBits = c_TabulatedNormalDistributionDefaultBits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#aa89ced8831b517d66ec14b9651d4d839">result_type</a> <a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml">gmx::TabulatedNormalDistribution</a>&lt; RealType, tableBits &gt;::min </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Smallest value that can be generated in normal distrubiton. </p>
<dl class="section note"><dt>Note</dt><dd>The smallest value is not -infinity with a table, but it depends on the table resolution. With 14 bits, this is roughly four standard deviations below the mean. </dd></dl>

</div>
</div>
<a class="anchor" id="a41291475c76f45cdc26a439a17b4833d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class RealType  = real, unsigned int tableBits = c_TabulatedNormalDistributionDefaultBits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml">gmx::TabulatedNormalDistribution</a>&lt; RealType, tableBits &gt;::operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml">TabulatedNormalDistribution</a>&lt; RealType, tableBits &gt; &amp;&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if two tabulated normal distributions have different states. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Instance to compare with. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa31f6be477bf6d3f2a16cf06f38d6174"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class RealType  = real, unsigned int tableBits = c_TabulatedNormalDistributionDefaultBits&gt; </div>
<div class="memtemplate">
template&lt;class Rng &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#aa89ced8831b517d66ec14b9651d4d839">result_type</a> <a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml">gmx::TabulatedNormalDistribution</a>&lt; RealType, tableBits &gt;::operator() </td>
          <td>(</td>
          <td class="paramtype">Rng &amp;&#160;</td>
          <td class="paramname"><em>g</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return normal distribution value specified by internal parameters. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Rng</td><td>Random engine type used to provide uniform random bits. </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">g</td><td>Random engine of class Rng. For normal GROMACS usage you likely want to use <a class="el" href="classgmx_1_1ThreeFry2x64.xhtml" title="ThreeFry2x64 random engine with 20 iteractions. ">ThreeFry2x64</a>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af1cf20ee54ab4f0427f270c1b714a157"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class RealType  = real, unsigned int tableBits = c_TabulatedNormalDistributionDefaultBits&gt; </div>
<div class="memtemplate">
template&lt;class Rng &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml#aa89ced8831b517d66ec14b9651d4d839">result_type</a> <a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml">gmx::TabulatedNormalDistribution</a>&lt; RealType, tableBits &gt;::operator() </td>
          <td>(</td>
          <td class="paramtype">Rng &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1TabulatedNormalDistribution_1_1param__type.xhtml">param_type</a> &amp;&#160;</td>
          <td class="paramname"><em>param</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return normal distribution value specified by given parameters. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Rng</td><td>Random engine type used to provide uniform random bits. </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">g</td><td>Random engine of class Rng. For normal GROMACS usage you likely want to use <a class="el" href="classgmx_1_1ThreeFry2x64.xhtml" title="ThreeFry2x64 random engine with 20 iteractions. ">ThreeFry2x64</a>. </td></tr>
    <tr><td class="paramname">param</td><td>Parameters used to specify normal distribution. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a338348eea3eafcb9f57c008178a1fcc3"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class RealType  = real, unsigned int tableBits = c_TabulatedNormalDistributionDefaultBits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml">gmx::TabulatedNormalDistribution</a>&lt; RealType, tableBits &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1TabulatedNormalDistribution.xhtml">TabulatedNormalDistribution</a>&lt; RealType, tableBits &gt; &amp;&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if two tabulated normal distributions have identical states. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Instance to compare with. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/gromacs/random/<a class="el" href="tabulatednormaldistribution_8h.xhtml">tabulatednormaldistribution.h</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:20:45 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

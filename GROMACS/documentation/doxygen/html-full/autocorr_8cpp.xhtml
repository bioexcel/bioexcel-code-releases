<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/correlationfunctions/autocorr.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_71392c6f4b1ed3a32ba5c064e868a1ba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a798d384400d41a9e6864d9b1b8753fe.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_04917eabbd9e9515f5b815e633560f88.xhtml">correlationfunctions</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">autocorr.cpp File Reference<div class="ingroups"><a class="el" href="group__module__correlationfunctions.xhtml">Correlation functions</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="gmxpre_8h.xhtml">gmxpre.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="autocorr_8h.xhtml">autocorr.h</a>&quot;</code><br/>
<code>#include &lt;stdio.h&gt;</code><br/>
<code>#include &lt;string.h&gt;</code><br/>
<code>#include &lt;cmath&gt;</code><br/>
<code>#include &lt;algorithm&gt;</code><br/>
<code>#include &quot;<a class="el" href="expfit_8h.xhtml">gromacs/correlationfunctions/expfit.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="integrate_8h.xhtml">gromacs/correlationfunctions/integrate.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="manyautocorrelation_8h.xhtml">gromacs/correlationfunctions/manyautocorrelation.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="polynomials_8h.xhtml">gromacs/correlationfunctions/polynomials.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/fileio/xvgr.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="functions_8h.xhtml">gromacs/math/functions.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/math/vec.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="arraysize_8h.xhtml">gromacs/utility/arraysize.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="fatalerror_8h.xhtml">gromacs/utility/fatalerror.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="futil_8h.xhtml">gromacs/utility/futil.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="real_8h.xhtml">gromacs/utility/real.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="smalloc_8h.xhtml">gromacs/utility/smalloc.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="stringutil_8h.xhtml">gromacs/utility/stringutil.h</a>&quot;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for autocorr.cpp:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="autocorr_8cpp__incl.svg" width="2226" height="470"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Implements function to compute many autocorrelation functions. </p>
<dl class="section author"><dt>Author</dt><dd>David van der Spoel <a href="#" onclick="location.href='mai'+'lto:'+'dav'+'id'+'.va'+'nd'+'ers'+'po'+'el@'+'ic'+'m.u'+'u.'+'se'; return false;">david<span style="display: none;">.nosp@m.</span>.van<span style="display: none;">.nosp@m.</span>dersp<span style="display: none;">.nosp@m.</span>oel@<span style="display: none;">.nosp@m.</span>icm.u<span style="display: none;">.nosp@m.</span>u.se</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a605dbdf5c9c7c6edbb25ad8981e471d6"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a605dbdf5c9c7c6edbb25ad8981e471d6"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="autocorr_8cpp.xhtml#a605dbdf5c9c7c6edbb25ad8981e471d6">MODE</a>(x)&#160;&#160;&#160;((mode &amp; (x)) == (x))</td></tr>
<tr class="memdesc:a605dbdf5c9c7c6edbb25ad8981e471d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shortcut macro to select modes. <br/></td></tr>
<tr class="separator:a605dbdf5c9c7c6edbb25ad8981e471d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a99fb83031ce9923c84392b4e92f956b5"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom">{ <b>enNorm</b>, 
<b>enCos</b>, 
<b>enSin</b>
 }</td></tr>
<tr class="separator:a99fb83031ce9923c84392b4e92f956b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a043f9ebb498fd4e92226d3be36265fd7"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a043f9ebb498fd4e92226d3be36265fd7"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="autocorr_8cpp.xhtml#a043f9ebb498fd4e92226d3be36265fd7">low_do_four_core</a> (int nfour, int nframes, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> c1[], <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> cfour[], int nCos)</td></tr>
<tr class="memdesc:a043f9ebb498fd4e92226d3be36265fd7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Routine to compute ACF using FFT. <br/></td></tr>
<tr class="separator:a043f9ebb498fd4e92226d3be36265fd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31962f60a4cacc06d974905180d537f2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a31962f60a4cacc06d974905180d537f2"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="autocorr_8cpp.xhtml#a31962f60a4cacc06d974905180d537f2">do_ac_core</a> (int nframes, int nout, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> corr[], <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> c1[], int nrestart, unsigned long mode)</td></tr>
<tr class="memdesc:a31962f60a4cacc06d974905180d537f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Routine to comput ACF without FFT. <br/></td></tr>
<tr class="separator:a31962f60a4cacc06d974905180d537f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8090869cd03e22d2704f6a0cccfdd86"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac8090869cd03e22d2704f6a0cccfdd86"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="autocorr_8cpp.xhtml#ac8090869cd03e22d2704f6a0cccfdd86">normalize_acf</a> (int nout, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> corr[])</td></tr>
<tr class="memdesc:ac8090869cd03e22d2704f6a0cccfdd86"><td class="mdescLeft">&#160;</td><td class="mdescRight">Routine to normalize ACF, dividing by corr[0]. <br/></td></tr>
<tr class="separator:ac8090869cd03e22d2704f6a0cccfdd86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a329ff6e946285b819f7e3ff2aa9597a0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a329ff6e946285b819f7e3ff2aa9597a0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="autocorr_8cpp.xhtml#a329ff6e946285b819f7e3ff2aa9597a0">average_acf</a> (<a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bVerbose, int n, int nitem, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> **c1)</td></tr>
<tr class="memdesc:a329ff6e946285b819f7e3ff2aa9597a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Routine that averages ACFs. <br/></td></tr>
<tr class="separator:a329ff6e946285b819f7e3ff2aa9597a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3718a055115043d8aa941b103c4c3b1e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3718a055115043d8aa941b103c4c3b1e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="autocorr_8cpp.xhtml#a3718a055115043d8aa941b103c4c3b1e">norm_and_scale_vectors</a> (int nframes, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> c1[], <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> scale)</td></tr>
<tr class="memdesc:a3718a055115043d8aa941b103c4c3b1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normalize ACFs. <br/></td></tr>
<tr class="separator:a3718a055115043d8aa941b103c4c3b1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9674f8059c2757e6e40d1842fcaf7b45"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9674f8059c2757e6e40d1842fcaf7b45"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="autocorr_8cpp.xhtml#a9674f8059c2757e6e40d1842fcaf7b45">dump_tmp</a> (char *s, int n, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> c[])</td></tr>
<tr class="memdesc:a9674f8059c2757e6e40d1842fcaf7b45"><td class="mdescLeft">&#160;</td><td class="mdescRight">Debugging. <br/></td></tr>
<tr class="separator:a9674f8059c2757e6e40d1842fcaf7b45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3cf1cfdd8d13001ec75bf2d24b94fb4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af3cf1cfdd8d13001ec75bf2d24b94fb4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="autocorr_8cpp.xhtml#af3cf1cfdd8d13001ec75bf2d24b94fb4">do_four_core</a> (unsigned long mode, int nfour, int nf2, int nframes, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> c1[], <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> csum[], <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> ctmp[])</td></tr>
<tr class="memdesc:af3cf1cfdd8d13001ec75bf2d24b94fb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">High level ACF routine. <br/></td></tr>
<tr class="separator:af3cf1cfdd8d13001ec75bf2d24b94fb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a432989a3b51095ed4fb0264152633459"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="autocorr_8cpp.xhtml#a432989a3b51095ed4fb0264152633459">low_do_autocorr</a> (const char *fn, const gmx_output_env_t *oenv, const char *title, int nframes, int nitem, int nout, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> **c1, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> dt, unsigned long mode, int nrestart, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bAver, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bNormalize, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bVerbose, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> tbeginfit, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> tendfit, int eFitFn)</td></tr>
<tr class="memdesc:a432989a3b51095ed4fb0264152633459"><td class="mdescLeft">&#160;</td><td class="mdescRight">Low level computation of autocorrelation functions.  <a href="#a432989a3b51095ed4fb0264152633459">More...</a><br/></td></tr>
<tr class="separator:a432989a3b51095ed4fb0264152633459"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abeb896c90190137b0cc92570f7f45a54"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structt__pargs.xhtml">t_pargs</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="autocorr_8cpp.xhtml#abeb896c90190137b0cc92570f7f45a54">add_acf_pargs</a> (int *npargs, <a class="el" href="structt__pargs.xhtml">t_pargs</a> *pa)</td></tr>
<tr class="memdesc:abeb896c90190137b0cc92570f7f45a54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add commandline arguments related to autocorrelations to the existing array. *npargs must be initialised to the number of elements in pa, it will be incremented appropriately.  <a href="#abeb896c90190137b0cc92570f7f45a54">More...</a><br/></td></tr>
<tr class="separator:abeb896c90190137b0cc92570f7f45a54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae559575d61ab253f6f81ffbcb318dcd1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="autocorr_8cpp.xhtml#ae559575d61ab253f6f81ffbcb318dcd1">do_autocorr</a> (const char *fn, const gmx_output_env_t *oenv, const char *title, int nframes, int nitem, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> **c1, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> dt, unsigned long mode, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bAver)</td></tr>
<tr class="memdesc:ae559575d61ab253f6f81ffbcb318dcd1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls low_do_autocorr (see below). add_acf_pargs has to be called before this can be used.  <a href="#ae559575d61ab253f6f81ffbcb318dcd1">More...</a><br/></td></tr>
<tr class="separator:ae559575d61ab253f6f81ffbcb318dcd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f368b34d1fe4b2c912c80f46bfce2cc"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="autocorr_8cpp.xhtml#a5f368b34d1fe4b2c912c80f46bfce2cc">get_acfnout</a> (void)</td></tr>
<tr class="memdesc:a5f368b34d1fe4b2c912c80f46bfce2cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of points to output from a correlation function. Works only AFTER do_auto_corr has been called!  <a href="#a5f368b34d1fe4b2c912c80f46bfce2cc">More...</a><br/></td></tr>
<tr class="separator:a5f368b34d1fe4b2c912c80f46bfce2cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dbba195574cb083f12c75b0d5e78bf4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="autocorr_8cpp.xhtml#a8dbba195574cb083f12c75b0d5e78bf4">get_acffitfn</a> (void)</td></tr>
<tr class="memdesc:a8dbba195574cb083f12c75b0d5e78bf4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the fitting function selected. Works only AFTER do_auto_corr has been called!  <a href="#a8dbba195574cb083f12c75b0d5e78bf4">More...</a><br/></td></tr>
<tr class="separator:a8dbba195574cb083f12c75b0d5e78bf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:aa37e36f81330624944fe74dbf2fae518"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa37e36f81330624944fe74dbf2fae518"></a>
static <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="autocorr_8cpp.xhtml#aa37e36f81330624944fe74dbf2fae518">bACFinit</a> = 0</td></tr>
<tr class="memdesc:aa37e36f81330624944fe74dbf2fae518"><td class="mdescLeft">&#160;</td><td class="mdescRight">Global variable set true if initialization routines are called. <br/></td></tr>
<tr class="separator:aa37e36f81330624944fe74dbf2fae518"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b7826027fef61b286a2a6c6e7e02615"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5b7826027fef61b286a2a6c6e7e02615"></a>
static t_acf&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="autocorr_8cpp.xhtml#a5b7826027fef61b286a2a6c6e7e02615">acf</a></td></tr>
<tr class="memdesc:a5b7826027fef61b286a2a6c6e7e02615"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data structure for storing command line variables. <br/></td></tr>
<tr class="separator:a5b7826027fef61b286a2a6c6e7e02615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae902094ccffe99ee5e65f18316a45c0b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae902094ccffe99ee5e65f18316a45c0b"></a>
static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="autocorr_8cpp.xhtml#ae902094ccffe99ee5e65f18316a45c0b">Leg</a> [] = { NULL, &quot;0&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, NULL }</td></tr>
<tr class="memdesc:ae902094ccffe99ee5e65f18316a45c0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Legend for selecting Legendre polynomials. <br/></td></tr>
<tr class="separator:ae902094ccffe99ee5e65f18316a45c0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="abeb896c90190137b0cc92570f7f45a54"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structt__pargs.xhtml">t_pargs</a>* add_acf_pargs </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>npargs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__pargs.xhtml">t_pargs</a> *&#160;</td>
          <td class="paramname"><em>pa</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add commandline arguments related to autocorrelations to the existing array. *npargs must be initialised to the number of elements in pa, it will be incremented appropriately. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir"></td><td class="paramname">npargs</td><td>The number of arguments before and after (is changed in this function) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pa</td><td>The initial argument list </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the new array </dd></dl>

</div>
</div>
<a class="anchor" id="ae559575d61ab253f6f81ffbcb318dcd1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void do_autocorr </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>fn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const gmx_output_env_t *&#160;</td>
          <td class="paramname"><em>oenv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>title</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nframes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nitem</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> **&#160;</td>
          <td class="paramname"><em>c1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>dt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bAver</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calls low_do_autocorr (see below). add_acf_pargs has to be called before this can be used. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fn</td><td>File name for xvg output (may this be NULL)? </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oenv</td><td>The output environment information </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>is the title in the output file </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nframes</td><td>is the number of frames in the time series </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nitem</td><td>is the number of items </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">c1</td><td>is an array of dimension [ 0 .. nitem-1 ] [ 0 .. nframes-1 ] on output, this array is filled with the correlation function to reduce storage </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dt</td><td>is the time between frames </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mode</td><td>Different types of ACF can be done, see above </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bAver</td><td>If set, all ndih C(t) functions are averaged into a single C(t) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8dbba195574cb083f12c75b0d5e78bf4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int get_acffitfn </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the fitting function selected. Works only AFTER do_auto_corr has been called! </p>
<dl class="section return"><dt>Returns</dt><dd>the fit function type. </dd></dl>

</div>
</div>
<a class="anchor" id="a5f368b34d1fe4b2c912c80f46bfce2cc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int get_acfnout </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of points to output from a correlation function. Works only AFTER do_auto_corr has been called! </p>
<dl class="section return"><dt>Returns</dt><dd>the output length for the correlation function </dd></dl>

</div>
</div>
<a class="anchor" id="a432989a3b51095ed4fb0264152633459"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void low_do_autocorr </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>fn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const gmx_output_env_t *&#160;</td>
          <td class="paramname"><em>oenv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>title</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nframes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nitem</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nout</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> **&#160;</td>
          <td class="paramname"><em>c1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>dt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nrestart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bAver</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bNormalize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bVerbose</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>tbeginfit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>tendfit</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nfitparm</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Low level computation of autocorrelation functions. </p>
<p>do_autocorr calculates autocorrelation functions for many things. It takes a 2 d array containing nitem arrays of length nframes for each item the ACF is calculated.</p>
<p>A number of "modes" exist for computation of the ACF controlled by variable mode, with the following meaning.</p>
<table class="doxtable">
<tr>
<th>Mode </th><th>Function  </th></tr>
<tr>
<td>eacNormal </td><td>C(t) = &lt; X (tau) * X (tau+t) &gt; </td></tr>
<tr>
<td>eacCos </td><td>C(t) = &lt; cos (X(tau) - X(tau+t)) &gt; </td></tr>
<tr>
<td>eacIden </td><td>C(t) = &lt; (X(tau) == X(tau+t)) &gt; (not fully supported yet) </td></tr>
<tr>
<td>eacVector </td><td>C(t) = &lt; X(tau) * X(tau+t) </td></tr>
<tr>
<td>eacP1 </td><td>C(t) = &lt; cos (X(tau) * X(tau+t) &gt; </td></tr>
<tr>
<td>eacP2 </td><td>C(t) = 1/2 * &lt; 3 cos (X(tau) * X(tau+t) - 1 &gt; </td></tr>
<tr>
<td>eacRcross </td><td>C(t) = &lt; ( X(tau) * X(tau+t) )^2 &gt; </td></tr>
</table>
<p>For modes eacVector, eacP1, eacP2 and eacRcross the input should be 3 x nframes long, where each triplet is taken as a 3D vector</p>
<p>For mode eacCos inputdata must be in radians, not degrees!</p>
<p>Other parameters are:</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fn</td><td>is output filename (.xvg) where the correlation function(s) are printed </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oenv</td><td>controls output file properties </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>is the title in the output file </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nframes</td><td>is the number of frames in the time series </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nitem</td><td>is the number of items </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nout</td><td></td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">c1</td><td>is an array of dimension [ 0 .. nitem-1 ] [ 0 .. nframes-1 ] on output, this array is filled with the correlation function to reduce storage </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dt</td><td>is the time between frames </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mode</td><td>Different types of ACF can be done, see above </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nrestart</td><td>is the number of steps between restarts for direct ACFs (i.e. without FFT) When set to 1 all points are used as time origin for averaging </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bAver</td><td>If set, all ndih C(t) functions are averaged into a single C(t) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bNormalize</td><td>If set, all ACFs will be normalized to start at 0 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bVerbose</td><td>If set output to console will be generated </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tbeginfit</td><td>Time to start fitting to the ACF </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tendfit</td><td>Time to end fitting to the ACF </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nfitparm</td><td>Number of fitting parameters in a multi-exponential fit </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:20:34 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

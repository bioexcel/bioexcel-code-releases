<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::TextTableFormatter Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1TextTableFormatter.xhtml">TextTableFormatter</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1TextTableFormatter-members.xhtml">List of all members</a> &#124;
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::TextTableFormatter Class Reference<div class="ingroups"><a class="el" href="group__group__libraryapi.xhtml">Library API</a> &#124; <a class="el" href="group__module__onlinehelp.xhtml">Help Formatting for Online Help (onlinehelp)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/onlinehelp/helpformat.h&gt;</code></p>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Formats rows of a table for text output. </p>
<p>This utility class formats tabular data, mainly for console output. Each row in the table can take multiple lines, and automatic text wrapping is supported. If text overflows the allocated width, the remaining columns on that line become shifted. To avoid this, it is possible to start the output for different columns from different lines (it is the caller's responsibility to check that overflows are avoided or are acceptable).</p>
<p>Column definitions are first set with <a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a44ab6318512bb8a6aa2b525f95e4779f" title="Adds a column to the table. ">addColumn()</a>. To format a row, first call <a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a8190414eec4b83f22e7f6ccd1bd8099e" title="Removes all text from all columns and resets the line offsets. ">clear()</a>. Then call <a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a14b9848bce828a0ca8337d92546ebe14" title="Adds text to be printed in a column. ">addColumnLine()</a> to add text to each column (can be called multiple times on a single column to add multiple lines), and possibly <a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a3f92a787a6dd26ca91fe5e19100192e0" title="Sets the first line to which text is printed for a column. ">setColumnFirstLineOffset()</a> to adjust the line from which the column output should start. Finally, call <a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a315d06a112412cbb8e95dce6d959f33b" title="Formats the lines for the current row. ">formatRow()</a> to obtain the formatted row.</p>
<p>A header (column titles and a horizontal line) is printed before the first line.</p>
<p>Typical usage: </p>
<div class="fragment"><div class="line">  <a class="code" href="classgmx_1_1TextTableFormatter.xhtml">gmx::TextTableFormatter</a> formatter;</div>
<div class="line">  formatter.<a class="code" href="classgmx_1_1TextTableFormatter.xhtml#a44ab6318512bb8a6aa2b525f95e4779f">addColumn</a>(<span class="stringliteral">&quot;Name&quot;</span>, 10, <span class="keyword">false</span>);</div>
<div class="line">  formatter.<a class="code" href="classgmx_1_1TextTableFormatter.xhtml#a44ab6318512bb8a6aa2b525f95e4779f">addColumn</a>(<span class="stringliteral">&quot;Type&quot;</span>, 10, <span class="keyword">false</span>);</div>
<div class="line">  formatter.<a class="code" href="classgmx_1_1TextTableFormatter.xhtml#a44ab6318512bb8a6aa2b525f95e4779f">addColumn</a>(<span class="stringliteral">&quot;Description&quot;</span>, 50, <span class="keyword">true</span>);</div>
<div class="line"></div>
<div class="line">  formatter.<a class="code" href="classgmx_1_1TextTableFormatter.xhtml#a8190414eec4b83f22e7f6ccd1bd8099e">clear</a>();</div>
<div class="line">  formatter.<a class="code" href="classgmx_1_1TextTableFormatter.xhtml#a14b9848bce828a0ca8337d92546ebe14">addColumnLine</a>(0, <span class="stringliteral">&quot;name&quot;</span>);</div>
<div class="line">  formatter.<a class="code" href="classgmx_1_1TextTableFormatter.xhtml#a14b9848bce828a0ca8337d92546ebe14">addColumnLine</a>(1, <span class="stringliteral">&quot;type&quot;</span>);</div>
<div class="line">  formatter.<a class="code" href="classgmx_1_1TextTableFormatter.xhtml#a14b9848bce828a0ca8337d92546ebe14">addColumnLine</a>(2, <span class="stringliteral">&quot;Description for name&quot;</span>);</div>
<div class="line">  printf(<span class="stringliteral">&quot;%s&quot;</span>, formatter.<a class="code" href="classgmx_1_1TextTableFormatter.xhtml#a315d06a112412cbb8e95dce6d959f33b">formatRow</a>().c_str());</div>
<div class="line"></div>
<div class="line">  formatter.<a class="code" href="classgmx_1_1TextTableFormatter.xhtml#a8190414eec4b83f22e7f6ccd1bd8099e">clear</a>();</div>
<div class="line">  formatter.<a class="code" href="classgmx_1_1TextTableFormatter.xhtml#a14b9848bce828a0ca8337d92546ebe14">addColumnLine</a>(0, <span class="stringliteral">&quot;averylongname&quot;</span>);</div>
<div class="line">  formatter.<a class="code" href="classgmx_1_1TextTableFormatter.xhtml#a14b9848bce828a0ca8337d92546ebe14">addColumnLine</a>(1, <span class="stringliteral">&quot;type&quot;</span>);</div>
<div class="line">  formatter.<a class="code" href="classgmx_1_1TextTableFormatter.xhtml#a3f92a787a6dd26ca91fe5e19100192e0">setColumnFirstLineOffset</a>(1, 1);</div>
<div class="line">  formatter.<a class="code" href="classgmx_1_1TextTableFormatter.xhtml#a14b9848bce828a0ca8337d92546ebe14">addColumnLine</a>(2, <span class="stringliteral">&quot;Description for name&quot;</span>);</div>
<div class="line">  printf(<span class="stringliteral">&quot;%s&quot;</span>, formatter.<a class="code" href="classgmx_1_1TextTableFormatter.xhtml#a315d06a112412cbb8e95dce6d959f33b">formatRow</a>().c_str());</div>
<div class="line"></div>
<div class="line">  <span class="comment">// format other rows by repeating the above code</span></div>
<div class="line">* </div>
</div><!-- fragment --><p>Methods in this class may throw std::bad_alloc if out of memory. Other exceptions are not thrown. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TextTableFormatter_1_1Impl.xhtml">Impl</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Private implementation class for <a class="el" href="classgmx_1_1TextTableFormatter.xhtml" title="Formats rows of a table for text output. ">TextTableFormatter</a>.  <a href="classgmx_1_1TextTableFormatter_1_1Impl.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3143f1dbd44198820b216acb24a2afb8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3143f1dbd44198820b216acb24a2afb8"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a3143f1dbd44198820b216acb24a2afb8">TextTableFormatter</a> ()</td></tr>
<tr class="memdesc:a3143f1dbd44198820b216acb24a2afb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs an empty formatter. <br/></td></tr>
<tr class="separator:a3143f1dbd44198820b216acb24a2afb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44ab6318512bb8a6aa2b525f95e4779f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a44ab6318512bb8a6aa2b525f95e4779f">addColumn</a> (const char *title, int width, bool bWrap)</td></tr>
<tr class="memdesc:a44ab6318512bb8a6aa2b525f95e4779f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a column to the table.  <a href="#a44ab6318512bb8a6aa2b525f95e4779f">More...</a><br/></td></tr>
<tr class="separator:a44ab6318512bb8a6aa2b525f95e4779f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a150a8f9bbf9b401f968d28b3c9e89035"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a150a8f9bbf9b401f968d28b3c9e89035">setFirstColumnIndent</a> (int indent)</td></tr>
<tr class="memdesc:a150a8f9bbf9b401f968d28b3c9e89035"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets amount on indentation before the first column.  <a href="#a150a8f9bbf9b401f968d28b3c9e89035">More...</a><br/></td></tr>
<tr class="separator:a150a8f9bbf9b401f968d28b3c9e89035"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46bfec0c8bc95b19de5817c14bc9867b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a46bfec0c8bc95b19de5817c14bc9867b">setFoldLastColumnToNextLine</a> (int indent)</td></tr>
<tr class="memdesc:a46bfec0c8bc95b19de5817c14bc9867b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables folding the last column to separate lines if it overflows.  <a href="#a46bfec0c8bc95b19de5817c14bc9867b">More...</a><br/></td></tr>
<tr class="separator:a46bfec0c8bc95b19de5817c14bc9867b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34ed7b3423063aa8df7dc443cf731337"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a34ed7b3423063aa8df7dc443cf731337">didOutput</a> () const </td></tr>
<tr class="memdesc:a34ed7b3423063aa8df7dc443cf731337"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether <a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a315d06a112412cbb8e95dce6d959f33b" title="Formats the lines for the current row. ">formatRow()</a> has been successfully called.  <a href="#a34ed7b3423063aa8df7dc443cf731337">More...</a><br/></td></tr>
<tr class="separator:a34ed7b3423063aa8df7dc443cf731337"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8190414eec4b83f22e7f6ccd1bd8099e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a8190414eec4b83f22e7f6ccd1bd8099e">clear</a> ()</td></tr>
<tr class="memdesc:a8190414eec4b83f22e7f6ccd1bd8099e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes all text from all columns and resets the line offsets.  <a href="#a8190414eec4b83f22e7f6ccd1bd8099e">More...</a><br/></td></tr>
<tr class="separator:a8190414eec4b83f22e7f6ccd1bd8099e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14b9848bce828a0ca8337d92546ebe14"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a14b9848bce828a0ca8337d92546ebe14">addColumnLine</a> (int index, const std::string &amp;text)</td></tr>
<tr class="memdesc:a14b9848bce828a0ca8337d92546ebe14"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds text to be printed in a column.  <a href="#a14b9848bce828a0ca8337d92546ebe14">More...</a><br/></td></tr>
<tr class="separator:a14b9848bce828a0ca8337d92546ebe14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b80f5e33adac9e38bfc0a33b1ff82b4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a1b80f5e33adac9e38bfc0a33b1ff82b4">addColumnHelpTextBlock</a> (int index, const <a class="el" href="classgmx_1_1HelpWriterContext.xhtml">HelpWriterContext</a> &amp;context, const std::string &amp;text)</td></tr>
<tr class="memdesc:a1b80f5e33adac9e38bfc0a33b1ff82b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds text containing help markup to be printed in a column.  <a href="#a1b80f5e33adac9e38bfc0a33b1ff82b4">More...</a><br/></td></tr>
<tr class="separator:a1b80f5e33adac9e38bfc0a33b1ff82b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f92a787a6dd26ca91fe5e19100192e0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a3f92a787a6dd26ca91fe5e19100192e0">setColumnFirstLineOffset</a> (int index, int firstLine)</td></tr>
<tr class="memdesc:a3f92a787a6dd26ca91fe5e19100192e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the first line to which text is printed for a column.  <a href="#a3f92a787a6dd26ca91fe5e19100192e0">More...</a><br/></td></tr>
<tr class="separator:a3f92a787a6dd26ca91fe5e19100192e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a315d06a112412cbb8e95dce6d959f33b"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a315d06a112412cbb8e95dce6d959f33b">formatRow</a> ()</td></tr>
<tr class="memdesc:a315d06a112412cbb8e95dce6d959f33b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formats the lines for the current row.  <a href="#a315d06a112412cbb8e95dce6d959f33b">More...</a><br/></td></tr>
<tr class="separator:a315d06a112412cbb8e95dce6d959f33b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a44ab6318512bb8a6aa2b525f95e4779f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::TextTableFormatter::addColumn </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>title</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bWrap</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a column to the table. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>Title string for the column (used for header). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">width</td><td>Width of the column (must be &gt; 0). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bWrap</td><td>Whether text that exceeds <code>width</code> is automatically wrapped.</td></tr>
  </table>
  </dd>
</dl>
<p>The length of <code>title</code> must not exceed <code>width</code>. </p>

</div>
</div>
<a class="anchor" id="a1b80f5e33adac9e38bfc0a33b1ff82b4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::TextTableFormatter::addColumnHelpTextBlock </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1HelpWriterContext.xhtml">HelpWriterContext</a> &amp;&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds text containing help markup to be printed in a column. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Zero-based column index. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Context to use for markup processing. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">text</td><td>Text to add.</td></tr>
  </table>
  </dd>
</dl>
<p>Works as <a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a14b9848bce828a0ca8337d92546ebe14" title="Adds text to be printed in a column. ">addColumnLine()</a>, except that it uses <a class="el" href="classgmx_1_1HelpWriterContext.xhtml#a8027f4f82a28c4e87b5c69ac4f2441c8" title="Substitutes markup used in help text and wraps lines. ">HelpWriterContext::substituteMarkupAndWrapToVector()</a> to process markup in the input text instead of just wrapping it as plain text. </p>

</div>
</div>
<a class="anchor" id="a14b9848bce828a0ca8337d92546ebe14"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::TextTableFormatter::addColumnLine </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds text to be printed in a column. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Zero-based column index. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">text</td><td>Text to add.</td></tr>
  </table>
  </dd>
</dl>
<p>Can be called multiple times. Additional calls append <code>text</code> as additional lines. Any calls with <code>text</code> empty have no effect. To add an empty line, use "\n" as <code>text</code>.</p>
<p>If <code>text</code> contains newlines, the text is automatically splitted to multiple lines. The same happens if automatic wrapping is on for the column and the text contains lines that are longer than what fits the column. </p>

</div>
</div>
<a class="anchor" id="a8190414eec4b83f22e7f6ccd1bd8099e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::TextTableFormatter::clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes all text from all columns and resets the line offsets. </p>
<p>Removes all text added using <a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a14b9848bce828a0ca8337d92546ebe14" title="Adds text to be printed in a column. ">addColumnLine()</a> and resets line offsets set with <a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a3f92a787a6dd26ca91fe5e19100192e0" title="Sets the first line to which text is printed for a column. ">setColumnFirstLineOffset()</a> to zero. Should be called before starting to add data for a row.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a34ed7b3423063aa8df7dc443cf731337"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::TextTableFormatter::didOutput </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Whether <a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a315d06a112412cbb8e95dce6d959f33b" title="Formats the lines for the current row. ">formatRow()</a> has been successfully called. </p>
<p>This method can be used to determine after-the-fact whether anything was written in the table.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a315d06a112412cbb8e95dce6d959f33b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string gmx::TextTableFormatter::formatRow </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Formats the lines for the current row. </p>
<dl class="section return"><dt>Returns</dt><dd>Current row formatted as a single string (contains newlines).</dd></dl>
<p>Formats the data as set after the previous <a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a8190414eec4b83f22e7f6ccd1bd8099e" title="Removes all text from all columns and resets the line offsets. ">clear()</a>/formatRow() using <a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a14b9848bce828a0ca8337d92546ebe14" title="Adds text to be printed in a column. ">addColumnLine()</a> and <a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a3f92a787a6dd26ca91fe5e19100192e0" title="Sets the first line to which text is printed for a column. ">setColumnFirstLineOffset()</a>.</p>
<p>If this is the first line to be formatted, a header is also added to the beginning of the returned string if any column has a title.</p>
<p>The return value always terminates with a newline.</p>
<p>Calls <a class="el" href="classgmx_1_1TextTableFormatter.xhtml#a8190414eec4b83f22e7f6ccd1bd8099e" title="Removes all text from all columns and resets the line offsets. ">clear()</a> on successful return. </p>

</div>
</div>
<a class="anchor" id="a3f92a787a6dd26ca91fe5e19100192e0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::TextTableFormatter::setColumnFirstLineOffset </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>firstLine</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the first line to which text is printed for a column. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Zero-based column index. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">firstLine</td><td>Zero-based line index from which to start the output.</td></tr>
  </table>
  </dd>
</dl>
<p>Can be called if there is no text for column <code>index</code>. Does not affect the output in this case.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a150a8f9bbf9b401f968d28b3c9e89035"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::TextTableFormatter::setFirstColumnIndent </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>indent</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets amount on indentation before the first column. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">indent</td><td>Number of spaces to use for indenting.</td></tr>
  </table>
  </dd>
</dl>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a46bfec0c8bc95b19de5817c14bc9867b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::TextTableFormatter::setFoldLastColumnToNextLine </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>indent</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables folding the last column to separate lines if it overflows. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">indent</td><td>Number of spaces to use for indenting the lines.</td></tr>
  </table>
  </dd>
</dl>
<p>If called with <code>indent &gt;= 0</code>, the last column for each row is treated specially: if it contains more lines than the other columns, and if the text would fit more compactly as separate lines after the row, then the whole last column is written after the row with the given <code>indent</code>. The column text then spans the whole space reserved for the table, making long text fit into a smaller amount of vertical space. If not called, the last column is not treates specially.</p>
<p>Does not throw. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/onlinehelp/<a class="el" href="helpformat_8h.xhtml">helpformat.h</a></li>
<li>src/gromacs/onlinehelp/<a class="el" href="helpformat_8cpp.xhtml">helpformat.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:20:45 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/domdec/domdec_topology.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_71392c6f4b1ed3a32ba5c064e868a1ba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a798d384400d41a9e6864d9b1b8753fe.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_5ffb912aaaca7a4de580829fa5521e15.xhtml">domdec</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">domdec_topology.cpp File Reference<div class="ingroups"><a class="el" href="group__module__domdec.xhtml">Spatial domain decomposition (for parallelization over MPI)</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="gmxpre_8h.xhtml">gmxpre.h</a>&quot;</code><br/>
<code>#include &lt;assert.h&gt;</code><br/>
<code>#include &lt;stdlib.h&gt;</code><br/>
<code>#include &lt;string.h&gt;</code><br/>
<code>#include &lt;algorithm&gt;</code><br/>
<code>#include &lt;string&gt;</code><br/>
<code>#include &quot;<a class="el" href="domdec_8h.xhtml">gromacs/domdec/domdec.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="domdec__network_8h.xhtml">gromacs/domdec/domdec_network.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ga2la_8h.xhtml">gromacs/domdec/ga2la.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/gmxlib/chargegroup.h&quot;</code><br/>
<code>#include &quot;gromacs/gmxlib/network.h&quot;</code><br/>
<code>#include &quot;gromacs/math/vec.h&quot;</code><br/>
<code>#include &quot;gromacs/mdlib/force.h&quot;</code><br/>
<code>#include &quot;gromacs/mdlib/forcerec.h&quot;</code><br/>
<code>#include &quot;gromacs/mdlib/gmx_omp_nthreads.h&quot;</code><br/>
<code>#include &quot;gromacs/mdlib/vsite.h&quot;</code><br/>
<code>#include &quot;gromacs/mdtypes/commrec.h&quot;</code><br/>
<code>#include &quot;gromacs/mdtypes/inputrec.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="md__enums_8h.xhtml">gromacs/mdtypes/md_enums.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/mdtypes/state.h&quot;</code><br/>
<code>#include &quot;gromacs/pbcutil/mshift.h&quot;</code><br/>
<code>#include &quot;gromacs/pbcutil/pbc.h&quot;</code><br/>
<code>#include &quot;gromacs/topology/mtop_util.h&quot;</code><br/>
<code>#include &quot;gromacs/topology/topsort.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="cstringutil_8h.xhtml">gromacs/utility/cstringutil.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="exceptions_8h.xhtml">gromacs/utility/exceptions.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="fatalerror_8h.xhtml">gromacs/utility/fatalerror.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="gmxassert_8h.xhtml">gromacs/utility/gmxassert.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="smalloc_8h.xhtml">gromacs/utility/smalloc.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="stringutil_8h.xhtml">gromacs/utility/stringutil.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="domdec__constraints_8h.xhtml">domdec_constraints.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="domdec__internal_8h.xhtml">domdec_internal.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="domdec__vsite_8h.xhtml">domdec_vsite.h</a>&quot;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for domdec_topology.cpp:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="domdec__topology_8cpp__incl.svg" width="2514" height="395"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>This file defines functions used by the domdec module while managing the construction, use and error checking for topologies local to a DD rank. </p>
<dl class="section author"><dt>Author</dt><dd>Berk Hess <a href="#" onclick="location.href='mai'+'lto:'+'hes'+'s@'+'kth'+'.s'+'e'; return false;">hess@<span style="display: none;">.nosp@m.</span>kth.<span style="display: none;">.nosp@m.</span>se</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structthread__work__t.xhtml">thread_work_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Struct for thread local work data for local topology generation.  <a href="structthread__work__t.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx__reverse__top__t.xhtml">gmx_reverse_top_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Struct for the reverse topology: links bonded interactions to atomsx.  <a href="structgmx__reverse__top__t.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a0a82d1583311a73202b787c28ead4d89"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0a82d1583311a73202b787c28ead4d89"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a0a82d1583311a73202b787c28ead4d89">NITEM_DD_INIT_LOCAL_STATE</a>&#160;&#160;&#160;5</td></tr>
<tr class="memdesc:a0a82d1583311a73202b787c28ead4d89"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of integer item in the local state, used for broadcasting of the state. <br/></td></tr>
<tr class="separator:a0a82d1583311a73202b787c28ead4d89"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a24ad697f9818f086a9440c353950bcda"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a24ad697f9818f086a9440c353950bcda"></a>
static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a24ad697f9818f086a9440c353950bcda">nral_rt</a> (int ftype)</td></tr>
<tr class="memdesc:a24ad697f9818f086a9440c353950bcda"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of atom entries for il in <a class="el" href="structgmx__reverse__top__t.xhtml" title="Struct for the reverse topology: links bonded interactions to atomsx. ">gmx_reverse_top_t</a>. <br/></td></tr>
<tr class="separator:a24ad697f9818f086a9440c353950bcda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8f732528b0c44401867e8c692e74dc2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac8f732528b0c44401867e8c692e74dc2"></a>
static <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#ac8f732528b0c44401867e8c692e74dc2">dd_check_ftype</a> (int ftype, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bBCheck, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bConstr, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bSettle)</td></tr>
<tr class="memdesc:ac8f732528b0c44401867e8c692e74dc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return whether interactions of type <code>ftype</code> need to be assigned exactly once. <br/></td></tr>
<tr class="separator:ac8f732528b0c44401867e8c692e74dc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa14e5c672f57cb96188bc29dd9c2d07"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaa14e5c672f57cb96188bc29dd9c2d07"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#aaa14e5c672f57cb96188bc29dd9c2d07">print_error_header</a> (FILE *fplog, const char *moltypename, int nprint)</td></tr>
<tr class="memdesc:aaa14e5c672f57cb96188bc29dd9c2d07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print a header on error messages. <br/></td></tr>
<tr class="separator:aaa14e5c672f57cb96188bc29dd9c2d07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38d9d8e3eee964f659a4dce1d683fea9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a38d9d8e3eee964f659a4dce1d683fea9"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a38d9d8e3eee964f659a4dce1d683fea9">print_missing_interactions_mb</a> (FILE *fplog, t_commrec *cr, const <a class="el" href="structgmx__reverse__top__t.xhtml">gmx_reverse_top_t</a> *rt, const char *moltypename, const reverse_ilist_t *ril, int a_start, int a_end, int nat_mol, int nmol, const t_idef *idef)</td></tr>
<tr class="memdesc:a38d9d8e3eee964f659a4dce1d683fea9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Help print error output when interactions are missing. <br/></td></tr>
<tr class="separator:a38d9d8e3eee964f659a4dce1d683fea9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac973e1951b82c65402ef363271bbdc51"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac973e1951b82c65402ef363271bbdc51"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#ac973e1951b82c65402ef363271bbdc51">print_missing_interactions_atoms</a> (FILE *fplog, t_commrec *cr, const gmx_mtop_t *mtop, const t_idef *idef)</td></tr>
<tr class="memdesc:ac973e1951b82c65402ef363271bbdc51"><td class="mdescLeft">&#160;</td><td class="mdescRight">Help print error output when interactions are missing. <br/></td></tr>
<tr class="separator:ac973e1951b82c65402ef363271bbdc51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0c2ef83cfb3b10f3f7a458e0b782819"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab0c2ef83cfb3b10f3f7a458e0b782819"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#ab0c2ef83cfb3b10f3f7a458e0b782819">dd_print_missing_interactions</a> (FILE *fplog, t_commrec *cr, int local_count, const gmx_mtop_t *top_global, const gmx_localtop_t *top_local, t_state *state_local)</td></tr>
<tr class="memdesc:ab0c2ef83cfb3b10f3f7a458e0b782819"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print error output when interactions are missing. <br/></td></tr>
<tr class="separator:ab0c2ef83cfb3b10f3f7a458e0b782819"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a500ebf7983fcfb6d5558f5eff54cbef2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a500ebf7983fcfb6d5558f5eff54cbef2"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a500ebf7983fcfb6d5558f5eff54cbef2">global_atomnr_to_moltype_ind</a> (<a class="el" href="structgmx__reverse__top__t.xhtml">gmx_reverse_top_t</a> *rt, int i_gl, int *mb, int *mt, int *mol, int *i_mol)</td></tr>
<tr class="memdesc:a500ebf7983fcfb6d5558f5eff54cbef2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return global topology molecule information for global atom index <code>i_gl</code>. <br/></td></tr>
<tr class="separator:a500ebf7983fcfb6d5558f5eff54cbef2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17782a4546448771715687e07297a921"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a17782a4546448771715687e07297a921"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a17782a4546448771715687e07297a921">count_excls</a> (const t_block *cgs, const t_blocka *excls, int *n_excl, int *n_intercg_excl, int *n_excl_at_max)</td></tr>
<tr class="memdesc:a17782a4546448771715687e07297a921"><td class="mdescLeft">&#160;</td><td class="mdescRight">Count the exclusions for all atoms in <code>cgs</code>. <br/></td></tr>
<tr class="separator:a17782a4546448771715687e07297a921"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a729fb6733f1db5ffef415b3c907302e6"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a729fb6733f1db5ffef415b3c907302e6"></a>
static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a729fb6733f1db5ffef415b3c907302e6">low_make_reverse_ilist</a> (const t_ilist *il_mt, const t_atom *atom, const int *const *vsite_pbc, int *count, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bConstr, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bSettle, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bBCheck, int *r_index, int *r_il, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bLinkToAllAtoms, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bAssign)</td></tr>
<tr class="memdesc:a729fb6733f1db5ffef415b3c907302e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run the reverse ilist generation and store it when <code>bAssign</code> = TRUE. <br/></td></tr>
<tr class="separator:a729fb6733f1db5ffef415b3c907302e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace0bfc7b22a3b96cfae56c0d0d4ed172"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ace0bfc7b22a3b96cfae56c0d0d4ed172"></a>
static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#ace0bfc7b22a3b96cfae56c0d0d4ed172">make_reverse_ilist</a> (const t_ilist *ilist, const t_atoms *atoms, const int *const *vsite_pbc, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bConstr, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bSettle, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bBCheck, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bLinkToAllAtoms, reverse_ilist_t *ril_mt)</td></tr>
<tr class="memdesc:ace0bfc7b22a3b96cfae56c0d0d4ed172"><td class="mdescLeft">&#160;</td><td class="mdescRight">Make the reverse ilist: a list of bonded interactions linked to atoms. <br/></td></tr>
<tr class="separator:ace0bfc7b22a3b96cfae56c0d0d4ed172"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c5e6cc521dad45ad27eab44474d293a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6c5e6cc521dad45ad27eab44474d293a"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a6c5e6cc521dad45ad27eab44474d293a">destroy_reverse_ilist</a> (reverse_ilist_t *ril)</td></tr>
<tr class="memdesc:a6c5e6cc521dad45ad27eab44474d293a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys a reverse_ilist_t struct. <br/></td></tr>
<tr class="separator:a6c5e6cc521dad45ad27eab44474d293a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa300d898071a06d701af569daf3a7300"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa300d898071a06d701af569daf3a7300"></a>
static <a class="el" href="structgmx__reverse__top__t.xhtml">gmx_reverse_top_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#aa300d898071a06d701af569daf3a7300">make_reverse_top</a> (const gmx_mtop_t *mtop, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bFE, const int *const *const *vsite_pbc_molt, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bConstr, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bSettle, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bBCheck, int *nint)</td></tr>
<tr class="memdesc:aa300d898071a06d701af569daf3a7300"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the reverse topology. <br/></td></tr>
<tr class="separator:aa300d898071a06d701af569daf3a7300"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34d70fd6a194a58cf82283c5e1c69384"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a34d70fd6a194a58cf82283c5e1c69384"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a34d70fd6a194a58cf82283c5e1c69384">dd_make_reverse_top</a> (FILE *fplog, gmx_domdec_t *dd, const gmx_mtop_t *mtop, const gmx_vsite_t *vsite, const t_inputrec *ir, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bBCheck)</td></tr>
<tr class="memdesc:a34d70fd6a194a58cf82283c5e1c69384"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate and store the reverse topology. <br/></td></tr>
<tr class="separator:a34d70fd6a194a58cf82283c5e1c69384"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc02ea86d93dc0534b52ab70e79f1e7c"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#afc02ea86d93dc0534b52ab70e79f1e7c">add_ifunc_for_vsites</a> (t_iatom *tiatoms, <a class="el" href="structgmx__ga2la__t.xhtml">gmx_ga2la_t</a> *ga2la, int nral, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bHomeA, int a, int a_gl, int a_mol, const t_iatom *iatoms, t_ilist *il)</td></tr>
<tr class="memdesc:afc02ea86d93dc0534b52ab70e79f1e7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Store a vsite interaction at the end of <code>il</code>.  <a href="#afc02ea86d93dc0534b52ab70e79f1e7c">More...</a><br/></td></tr>
<tr class="separator:afc02ea86d93dc0534b52ab70e79f1e7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6748493a0d4de0e52b5b3028fb766d83"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6748493a0d4de0e52b5b3028fb766d83"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a6748493a0d4de0e52b5b3028fb766d83">add_ifunc</a> (int nral, t_iatom *tiatoms, t_ilist *il)</td></tr>
<tr class="memdesc:a6748493a0d4de0e52b5b3028fb766d83"><td class="mdescLeft">&#160;</td><td class="mdescRight">Store a bonded interaction at the end of <code>il</code>. <br/></td></tr>
<tr class="separator:a6748493a0d4de0e52b5b3028fb766d83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bc4c5b598e3b1401e4a5f55fef19c90"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4bc4c5b598e3b1401e4a5f55fef19c90"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a4bc4c5b598e3b1401e4a5f55fef19c90">add_posres</a> (int mol, int a_mol, const gmx_molblock_t *molb, t_iatom *iatoms, const t_iparams *ip_in, t_idef *idef)</td></tr>
<tr class="memdesc:a4bc4c5b598e3b1401e4a5f55fef19c90"><td class="mdescLeft">&#160;</td><td class="mdescRight">Store a position restraint in idef and iatoms, complex because the parameters are different for each entry. <br/></td></tr>
<tr class="separator:a4bc4c5b598e3b1401e4a5f55fef19c90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26ffcb2405306f8181668df82e7604f3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a26ffcb2405306f8181668df82e7604f3"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a26ffcb2405306f8181668df82e7604f3">add_fbposres</a> (int mol, int a_mol, const gmx_molblock_t *molb, t_iatom *iatoms, const t_iparams *ip_in, t_idef *idef)</td></tr>
<tr class="memdesc:a26ffcb2405306f8181668df82e7604f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Store a flat-bottomed position restraint in idef and iatoms, complex because the parameters are different for each entry. <br/></td></tr>
<tr class="separator:a26ffcb2405306f8181668df82e7604f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b98c2fa496409a908b7131d5f50fa22"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7b98c2fa496409a908b7131d5f50fa22"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a7b98c2fa496409a908b7131d5f50fa22">add_vsite</a> (<a class="el" href="structgmx__ga2la__t.xhtml">gmx_ga2la_t</a> *ga2la, const int *index, const int *rtil, int ftype, int nral, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bHomeA, int a, int a_gl, int a_mol, const t_iatom *iatoms, t_idef *idef, int **vsite_pbc, int *vsite_pbc_nalloc)</td></tr>
<tr class="memdesc:a7b98c2fa496409a908b7131d5f50fa22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Store a virtual site interaction, complex because of PBC and recursion. <br/></td></tr>
<tr class="separator:a7b98c2fa496409a908b7131d5f50fa22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a430c379c751f72676f9f27cdbd09347c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a430c379c751f72676f9f27cdbd09347c"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a430c379c751f72676f9f27cdbd09347c">make_la2lc</a> (gmx_domdec_t *dd)</td></tr>
<tr class="memdesc:a430c379c751f72676f9f27cdbd09347c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update the local atom to local charge group index. <br/></td></tr>
<tr class="separator:a430c379c751f72676f9f27cdbd09347c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac537130203a6c906f78914b1eef00edc"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac537130203a6c906f78914b1eef00edc"></a>
static <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#ac537130203a6c906f78914b1eef00edc">dd_dist2</a> (<a class="el" href="structt__pbc.xhtml">t_pbc</a> *pbc_null, rvec *cg_cm, const int *la2lc, int i, int j)</td></tr>
<tr class="memdesc:ac537130203a6c906f78914b1eef00edc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the squared distance between charge groups <code>i</code> and <code>j</code>. <br/></td></tr>
<tr class="separator:ac537130203a6c906f78914b1eef00edc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7decd53779ce3a5fdf9a0f9f41b7f66"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac7decd53779ce3a5fdf9a0f9f41b7f66"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#ac7decd53779ce3a5fdf9a0f9f41b7f66">combine_blocka</a> (t_blocka *dest, const <a class="el" href="structthread__work__t.xhtml">thread_work_t</a> *src, int nsrc)</td></tr>
<tr class="memdesc:ac7decd53779ce3a5fdf9a0f9f41b7f66"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append t_blocka block structures 1 to nsrc in src to *dest. <br/></td></tr>
<tr class="separator:ac7decd53779ce3a5fdf9a0f9f41b7f66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2df1ee2d1755119a59a063c4811b591"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae2df1ee2d1755119a59a063c4811b591"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#ae2df1ee2d1755119a59a063c4811b591">combine_idef</a> (t_idef *dest, const <a class="el" href="structthread__work__t.xhtml">thread_work_t</a> *src, int nsrc, gmx_vsite_t *vsite)</td></tr>
<tr class="memdesc:ae2df1ee2d1755119a59a063c4811b591"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append t_idef structures 1 to nsrc in src to *dest, virtual sites need special attention, as pbc info differs per vsite. <br/></td></tr>
<tr class="separator:ae2df1ee2d1755119a59a063c4811b591"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa22ba8c0be060accb9d76ca35657e81a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa22ba8c0be060accb9d76ca35657e81a"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#aa22ba8c0be060accb9d76ca35657e81a">check_assign_interactions_atom</a> (int i, int i_gl, int mol, int i_mol, const int *index, const int *rtil, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bInterMolInteractions, int ind_start, int ind_end, const gmx_domdec_t *dd, const gmx_domdec_zones_t *zones, const gmx_molblock_t *molb, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bRCheckMB, ivec rcheck, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bRCheck2B, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> rc2, int *la2lc, <a class="el" href="structt__pbc.xhtml">t_pbc</a> *pbc_null, rvec *cg_cm, const t_iparams *ip_in, t_idef *idef, int **vsite_pbc, int *vsite_pbc_nalloc, int iz, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bBCheck, int *nbonded_local)</td></tr>
<tr class="memdesc:aa22ba8c0be060accb9d76ca35657e81a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check and when available assign bonded interactions for local atom i. <br/></td></tr>
<tr class="separator:aa22ba8c0be060accb9d76ca35657e81a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac14b1207f0456d1fe91a4ffce7b9baca"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#ac14b1207f0456d1fe91a4ffce7b9baca">make_bondeds_zone</a> (gmx_domdec_t *dd, const gmx_domdec_zones_t *zones, const gmx_molblock_t *molb, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bRCheckMB, ivec rcheck, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bRCheck2B, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> rc2, int *la2lc, <a class="el" href="structt__pbc.xhtml">t_pbc</a> *pbc_null, rvec *cg_cm, const t_iparams *ip_in, t_idef *idef, int **vsite_pbc, int *vsite_pbc_nalloc, int izone, int at_start, int at_end)</td></tr>
<tr class="memdesc:ac14b1207f0456d1fe91a4ffce7b9baca"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function looks up and assigns bonded interactions for zone iz.  <a href="#ac14b1207f0456d1fe91a4ffce7b9baca">More...</a><br/></td></tr>
<tr class="separator:ac14b1207f0456d1fe91a4ffce7b9baca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9701f4c6d5c440e4306e20ad58bfda5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa9701f4c6d5c440e4306e20ad58bfda5"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#aa9701f4c6d5c440e4306e20ad58bfda5">set_no_exclusions_zone</a> (gmx_domdec_t *dd, gmx_domdec_zones_t *zones, int iz, t_blocka *lexcls)</td></tr>
<tr class="memdesc:aa9701f4c6d5c440e4306e20ad58bfda5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the exclusion data for i-zone <code>iz</code> for the case of no exclusions. <br/></td></tr>
<tr class="separator:aa9701f4c6d5c440e4306e20ad58bfda5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77da942e40257029ea5ce0f178fd1ad8"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a77da942e40257029ea5ce0f178fd1ad8">make_exclusions_zone_cg</a> (gmx_domdec_t *dd, gmx_domdec_zones_t *zones, const gmx_moltype_t *moltype, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bRCheck, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> rc2, int *la2lc, <a class="el" href="structt__pbc.xhtml">t_pbc</a> *pbc_null, rvec *cg_cm, const int *cginfo, t_blocka *lexcls, int iz, int cg_start, int cg_end)</td></tr>
<tr class="memdesc:a77da942e40257029ea5ce0f178fd1ad8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the exclusion data for i-zone <code>iz</code>.  <a href="#a77da942e40257029ea5ce0f178fd1ad8">More...</a><br/></td></tr>
<tr class="separator:a77da942e40257029ea5ce0f178fd1ad8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa071d22c613af40d59e9237a5b56595d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa071d22c613af40d59e9237a5b56595d"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#aa071d22c613af40d59e9237a5b56595d">make_exclusions_zone</a> (gmx_domdec_t *dd, gmx_domdec_zones_t *zones, const gmx_moltype_t *moltype, const int *cginfo, t_blocka *lexcls, int iz, int at_start, int at_end)</td></tr>
<tr class="memdesc:aa071d22c613af40d59e9237a5b56595d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the exclusion data for i-zone <code>iz</code>. <br/></td></tr>
<tr class="separator:aa071d22c613af40d59e9237a5b56595d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaaa6821bc9b6142ff379de9ae4e41dd8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaaa6821bc9b6142ff379de9ae4e41dd8"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#aaaa6821bc9b6142ff379de9ae4e41dd8">check_alloc_index</a> (t_blocka *ba, int nindex_max)</td></tr>
<tr class="memdesc:aaaa6821bc9b6142ff379de9ae4e41dd8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ensure we have enough space in <code>ba</code> for <code>nindex_max</code> indices. <br/></td></tr>
<tr class="separator:aaaa6821bc9b6142ff379de9ae4e41dd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a277f5220a84002b9db9b3dfa02faadf9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a277f5220a84002b9db9b3dfa02faadf9"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a277f5220a84002b9db9b3dfa02faadf9">check_exclusions_alloc</a> (gmx_domdec_t *dd, gmx_domdec_zones_t *zones, t_blocka *lexcls)</td></tr>
<tr class="memdesc:a277f5220a84002b9db9b3dfa02faadf9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ensure that we have enough space for exclusion storate in <code>lexcls</code>. <br/></td></tr>
<tr class="separator:a277f5220a84002b9db9b3dfa02faadf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e8768a426ecf372a4f210a775c611c6"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4e8768a426ecf372a4f210a775c611c6"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a4e8768a426ecf372a4f210a775c611c6">finish_local_exclusions</a> (gmx_domdec_t *dd, gmx_domdec_zones_t *zones, t_blocka *lexcls)</td></tr>
<tr class="memdesc:a4e8768a426ecf372a4f210a775c611c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the total count indexes for the local exclusions, needed by several functions. <br/></td></tr>
<tr class="separator:a4e8768a426ecf372a4f210a775c611c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08cae9b1501c2c93c94fc5302aa04b62"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a08cae9b1501c2c93c94fc5302aa04b62"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a08cae9b1501c2c93c94fc5302aa04b62">clear_idef</a> (t_idef *idef)</td></tr>
<tr class="memdesc:a08cae9b1501c2c93c94fc5302aa04b62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear a t_idef struct. <br/></td></tr>
<tr class="separator:a08cae9b1501c2c93c94fc5302aa04b62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae73ac9898fdad35a626e520652ffa424"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae73ac9898fdad35a626e520652ffa424"></a>
static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#ae73ac9898fdad35a626e520652ffa424">make_local_bondeds_excls</a> (gmx_domdec_t *dd, gmx_domdec_zones_t *zones, const gmx_mtop_t *mtop, const int *cginfo, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bRCheckMB, ivec rcheck, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bRCheck2B, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> rc, int *la2lc, <a class="el" href="structt__pbc.xhtml">t_pbc</a> *pbc_null, rvec *cg_cm, t_idef *idef, gmx_vsite_t *vsite, t_blocka *lexcls, int *excl_count)</td></tr>
<tr class="memdesc:ae73ac9898fdad35a626e520652ffa424"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate and store all required local bonded interactions in <code>idef</code> and local exclusions in <code>lexcls</code>. <br/></td></tr>
<tr class="separator:ae73ac9898fdad35a626e520652ffa424"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af961d0c5957809c8e572a4181e231109"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af961d0c5957809c8e572a4181e231109"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#af961d0c5957809c8e572a4181e231109">dd_make_local_cgs</a> (gmx_domdec_t *dd, t_block *lcgs)</td></tr>
<tr class="memdesc:af961d0c5957809c8e572a4181e231109"><td class="mdescLeft">&#160;</td><td class="mdescRight">Store the local charge group index in <code>lcgs</code>. <br/></td></tr>
<tr class="separator:af961d0c5957809c8e572a4181e231109"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d22329b13a7d842cb3cddae9cdeb9bd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1d22329b13a7d842cb3cddae9cdeb9bd"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a1d22329b13a7d842cb3cddae9cdeb9bd">dd_make_local_top</a> (gmx_domdec_t *dd, gmx_domdec_zones_t *zones, int npbcdim, matrix box, rvec cellsize_min, ivec npulse, t_forcerec *fr, rvec *cgcm_or_x, gmx_vsite_t *vsite, const gmx_mtop_t *mtop, gmx_localtop_t *ltop)</td></tr>
<tr class="memdesc:a1d22329b13a7d842cb3cddae9cdeb9bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the local topology and virtual site data. <br/></td></tr>
<tr class="separator:a1d22329b13a7d842cb3cddae9cdeb9bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac601074954c9b537d8d3fbc795622c53"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac601074954c9b537d8d3fbc795622c53"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#ac601074954c9b537d8d3fbc795622c53">dd_sort_local_top</a> (gmx_domdec_t *dd, const <a class="el" href="structt__mdatoms.xhtml">t_mdatoms</a> *mdatoms, gmx_localtop_t *ltop)</td></tr>
<tr class="memdesc:ac601074954c9b537d8d3fbc795622c53"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sort ltop-&gt;ilist when we are doing free energy. <br/></td></tr>
<tr class="separator:ac601074954c9b537d8d3fbc795622c53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44e5b7b1f4da1acda483c4544a87a319"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a44e5b7b1f4da1acda483c4544a87a319"></a>
gmx_localtop_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a44e5b7b1f4da1acda483c4544a87a319">dd_init_local_top</a> (const gmx_mtop_t *top_global)</td></tr>
<tr class="memdesc:a44e5b7b1f4da1acda483c4544a87a319"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct local topology. <br/></td></tr>
<tr class="separator:a44e5b7b1f4da1acda483c4544a87a319"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7554d0e8b61ca0eb768dd97c5c5b3238"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7554d0e8b61ca0eb768dd97c5c5b3238"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a7554d0e8b61ca0eb768dd97c5c5b3238">dd_init_local_state</a> (gmx_domdec_t *dd, t_state *state_global, t_state *state_local)</td></tr>
<tr class="memdesc:a7554d0e8b61ca0eb768dd97c5c5b3238"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct local state. <br/></td></tr>
<tr class="separator:a7554d0e8b61ca0eb768dd97c5c5b3238"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa93986b39b47fdef1df866c4f2edaf4a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa93986b39b47fdef1df866c4f2edaf4a"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#aa93986b39b47fdef1df866c4f2edaf4a">check_link</a> (t_blocka *link, int cg_gl, int cg_gl_j)</td></tr>
<tr class="memdesc:aa93986b39b47fdef1df866c4f2edaf4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if a link is stored in <code>link</code> between charge groups <code>cg_gl</code> and <code>cg_gl_j</code> and if not so, store a link. <br/></td></tr>
<tr class="separator:aa93986b39b47fdef1df866c4f2edaf4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae61e227a72300f2349c0684355e9954e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae61e227a72300f2349c0684355e9954e"></a>
static int *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#ae61e227a72300f2349c0684355e9954e">make_at2cg</a> (t_block *cgs)</td></tr>
<tr class="memdesc:ae61e227a72300f2349c0684355e9954e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate and return an array of the charge group index for all atoms. <br/></td></tr>
<tr class="separator:ae61e227a72300f2349c0684355e9954e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5bee59b32b705f5903c7158429314f4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac5bee59b32b705f5903c7158429314f4"></a>
t_blocka *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#ac5bee59b32b705f5903c7158429314f4">make_charge_group_links</a> (const gmx_mtop_t *mtop, gmx_domdec_t *dd, cginfo_mb_t *cginfo_mb)</td></tr>
<tr class="memdesc:ac5bee59b32b705f5903c7158429314f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate a list of links between charge groups that are linked by bonded interactions. <br/></td></tr>
<tr class="separator:ac5bee59b32b705f5903c7158429314f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a921b3c66aa0100f3ddb8b0cb34d3d526"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a921b3c66aa0100f3ddb8b0cb34d3d526"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a921b3c66aa0100f3ddb8b0cb34d3d526">update_max_bonded_distance</a> (<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> r2, int ftype, int a1, int a2, bonded_distance_t *bd)</td></tr>
<tr class="memdesc:a921b3c66aa0100f3ddb8b0cb34d3d526"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compare distance^2 <code>r2</code> against the distance in <code>bd</code> and if larger store it along with <code>ftype</code> and atom indices <code>a1</code> and <code>a2</code>. <br/></td></tr>
<tr class="separator:a921b3c66aa0100f3ddb8b0cb34d3d526"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe13c983911ed957371ccf9cabb0e77c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abe13c983911ed957371ccf9cabb0e77c"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#abe13c983911ed957371ccf9cabb0e77c">bonded_cg_distance_mol</a> (gmx_moltype_t *molt, int *at2cg, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bBCheck, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bExcl, rvec *cg_cm, bonded_distance_t *bd_2b, bonded_distance_t *bd_mb)</td></tr>
<tr class="memdesc:abe13c983911ed957371ccf9cabb0e77c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the distance, function type and atom indices for the longest distance between charge-groups of molecule type <code>molt</code> for two-body and multi-body bonded interactions. <br/></td></tr>
<tr class="separator:abe13c983911ed957371ccf9cabb0e77c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f99fa49ec0d6bda76ba6726770b392b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1f99fa49ec0d6bda76ba6726770b392b"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a1f99fa49ec0d6bda76ba6726770b392b">bonded_distance_intermol</a> (const t_ilist *ilists_intermol, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bBCheck, const rvec *x, int ePBC, matrix box, bonded_distance_t *bd_2b, bonded_distance_t *bd_mb)</td></tr>
<tr class="memdesc:a1f99fa49ec0d6bda76ba6726770b392b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the distance, function type and atom indices for the longest atom distance involved in intermolecular interactions for two-body and multi-body bonded interactions. <br/></td></tr>
<tr class="separator:a1f99fa49ec0d6bda76ba6726770b392b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac19b37b97931b0c6a8460c6e96964915"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac19b37b97931b0c6a8460c6e96964915"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#ac19b37b97931b0c6a8460c6e96964915">get_cgcm_mol</a> (const gmx_moltype_t *molt, const gmx_ffparams_t *ffparams, int ePBC, t_graph *graph, matrix box, const gmx_vsite_t *vsite, const rvec *x, rvec *xs, rvec *cg_cm)</td></tr>
<tr class="memdesc:ac19b37b97931b0c6a8460c6e96964915"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute charge group centers of mass for molecule <code>molt</code>. <br/></td></tr>
<tr class="separator:ac19b37b97931b0c6a8460c6e96964915"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3afc082527bdb5015aa960565ed2d2d2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3afc082527bdb5015aa960565ed2d2d2"></a>
static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a3afc082527bdb5015aa960565ed2d2d2">have_vsite_molt</a> (gmx_moltype_t *molt)</td></tr>
<tr class="memdesc:a3afc082527bdb5015aa960565ed2d2d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether <code>molt</code> has a virtual site. <br/></td></tr>
<tr class="separator:a3afc082527bdb5015aa960565ed2d2d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11989318e4f4a7da8ccab6b746ceeacb"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a11989318e4f4a7da8ccab6b746ceeacb"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="domdec__topology_8cpp.xhtml#a11989318e4f4a7da8ccab6b746ceeacb">dd_bonded_cg_distance</a> (FILE *fplog, const gmx_mtop_t *mtop, const t_inputrec *ir, const rvec *x, matrix box, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bBCheck, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *r_2b, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *r_mb)</td></tr>
<tr class="memdesc:a11989318e4f4a7da8ccab6b746ceeacb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the maximum distance involved in 2-body and multi-body bonded interactions. <br/></td></tr>
<tr class="separator:a11989318e4f4a7da8ccab6b746ceeacb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="afc02ea86d93dc0534b52ab70e79f1e7c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void add_ifunc_for_vsites </td>
          <td>(</td>
          <td class="paramtype">t_iatom *&#160;</td>
          <td class="paramname"><em>tiatoms</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structgmx__ga2la__t.xhtml">gmx_ga2la_t</a> *&#160;</td>
          <td class="paramname"><em>ga2la</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nral</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bHomeA</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>a_gl</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>a_mol</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const t_iatom *&#160;</td>
          <td class="paramname"><em>iatoms</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">t_ilist *&#160;</td>
          <td class="paramname"><em>il</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Store a vsite interaction at the end of <code>il</code>. </p>
<p>This routine is very similar to add_ifunc, but vsites interactions have more work to do than other kinds of interactions, and the complex way nral (and thus vector contents) depends on ftype confuses static analysis tools unless we fuse the vsite atom-indexing organization code with the ifunc-adding code, so that they can see that nral is the same value. </p>

</div>
</div>
<a class="anchor" id="ac14b1207f0456d1fe91a4ffce7b9baca"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int make_bondeds_zone </td>
          <td>(</td>
          <td class="paramtype">gmx_domdec_t *&#160;</td>
          <td class="paramname"><em>dd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const gmx_domdec_zones_t *&#160;</td>
          <td class="paramname"><em>zones</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const gmx_molblock_t *&#160;</td>
          <td class="paramname"><em>molb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bRCheckMB</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ivec&#160;</td>
          <td class="paramname"><em>rcheck</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bRCheck2B</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>rc2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>la2lc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__pbc.xhtml">t_pbc</a> *&#160;</td>
          <td class="paramname"><em>pbc_null</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec *&#160;</td>
          <td class="paramname"><em>cg_cm</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const t_iparams *&#160;</td>
          <td class="paramname"><em>ip_in</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">t_idef *&#160;</td>
          <td class="paramname"><em>idef</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int **&#160;</td>
          <td class="paramname"><em>vsite_pbc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>vsite_pbc_nalloc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>izone</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>at_start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>at_end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This function looks up and assigns bonded interactions for zone iz. </p>
<p>With thread parallelizing each thread acts on a different atom range: at_start to at_end. </p>

</div>
</div>
<a class="anchor" id="a77da942e40257029ea5ce0f178fd1ad8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int make_exclusions_zone_cg </td>
          <td>(</td>
          <td class="paramtype">gmx_domdec_t *&#160;</td>
          <td class="paramname"><em>dd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gmx_domdec_zones_t *&#160;</td>
          <td class="paramname"><em>zones</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const gmx_moltype_t *&#160;</td>
          <td class="paramname"><em>moltype</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bRCheck</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>rc2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>la2lc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__pbc.xhtml">t_pbc</a> *&#160;</td>
          <td class="paramname"><em>pbc_null</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec *&#160;</td>
          <td class="paramname"><em>cg_cm</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int *&#160;</td>
          <td class="paramname"><em>cginfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">t_blocka *&#160;</td>
          <td class="paramname"><em>lexcls</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cg_start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cg_end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the exclusion data for i-zone <code>iz</code>. </p>
<p>This is a legacy version for the group scheme of the same routine below. Here charge groups and distance checks to ensure unique exclusions are supported. </p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:20:34 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

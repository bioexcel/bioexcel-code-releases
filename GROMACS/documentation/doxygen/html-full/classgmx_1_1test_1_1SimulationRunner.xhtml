<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::test::SimulationRunner Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="namespacegmx_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="classgmx_1_1test_1_1SimulationRunner.xhtml">SimulationRunner</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1test_1_1SimulationRunner-members.xhtml">List of all members</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::test::SimulationRunner Class Reference<div class="ingroups"><a class="el" href="group__module__mdrun__integration__tests.xhtml">Integration test utilities</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;programs/mdrun/tests/moduletest.h&gt;</code></p>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Helper object for running grompp and mdrun in integration tests of mdrun functionality. </p>
<p>Objects of this class are intended to be owned by <a class="el" href="classgmx_1_1test_1_1IntegrationTestFixture.xhtml" title="Test fixture for integration tests. ">IntegrationTestFixture</a> objects, and an <a class="el" href="classgmx_1_1test_1_1IntegrationTestFixture.xhtml" title="Test fixture for integration tests. ">IntegrationTestFixture</a> object might own more than one <a class="el" href="classgmx_1_1test_1_1SimulationRunner.xhtml" title="Helper object for running grompp and mdrun in integration tests of mdrun functionality. ">SimulationRunner</a>.</p>
<p>The setup phase creates various temporary files for input and output that are common for mdrun tests, using the file manager object of the fixture that owns this object. Individual tests should create any extra filenames similarly, so that the test users's current working directory does not get littered with files left over from tests.</p>
<p>Any method in this class may throw std::bad_alloc if out of memory.</p>
<p>By default, the convenience methods <a class="el" href="classgmx_1_1test_1_1SimulationRunner.xhtml#afa5ded590b8ce739140989972c5e5003" title="Convenience wrapper for a default call to callGrompp. ">callGrompp()</a> and <a class="el" href="classgmx_1_1test_1_1SimulationRunner.xhtml#a1e40bb03db149db9768daca7547d043e" title="Convenience wrapper for calling mdrun for testing with default command line. ">callMdrun()</a> just prepare and run a default call to mdrun. If there is a need to customize the command-line for grompp or mdrun (e.g. to invoke -maxwarn n, or -reprod), then make a <a class="el" href="classgmx_1_1test_1_1CommandLine.xhtml" title="Helper class for tests that need to construct command lines. ">CommandLine</a> object with the appropriate flags and pass that into the routines that accept such. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6d2f92a1ae0083b68d121fa413be11ef"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6d2f92a1ae0083b68d121fa413be11ef"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimulationRunner.xhtml#a6d2f92a1ae0083b68d121fa413be11ef">SimulationRunner</a> (<a class="el" href="classgmx_1_1test_1_1IntegrationTestFixture.xhtml">IntegrationTestFixture</a> *fixture_)</td></tr>
<tr class="memdesc:a6d2f92a1ae0083b68d121fa413be11ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor, which establishes the fixture that will own each object. <br/></td></tr>
<tr class="separator:a6d2f92a1ae0083b68d121fa413be11ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9e850e06640fd9a677dfa52e9000476"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac9e850e06640fd9a677dfa52e9000476"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimulationRunner.xhtml#ac9e850e06640fd9a677dfa52e9000476">useEmptyMdpFile</a> ()</td></tr>
<tr class="memdesc:ac9e850e06640fd9a677dfa52e9000476"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use an empty .mdp file as input to grompp. <br/></td></tr>
<tr class="separator:ac9e850e06640fd9a677dfa52e9000476"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75fa0a10a94033d78afcbbcb871df72d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a75fa0a10a94033d78afcbbcb871df72d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimulationRunner.xhtml#a75fa0a10a94033d78afcbbcb871df72d">useStringAsMdpFile</a> (const char *mdpString)</td></tr>
<tr class="memdesc:a75fa0a10a94033d78afcbbcb871df72d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use a given string as input to grompp. <br/></td></tr>
<tr class="separator:a75fa0a10a94033d78afcbbcb871df72d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accfb15b5d82dd09daa6b25b2e0c14846"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="accfb15b5d82dd09daa6b25b2e0c14846"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimulationRunner.xhtml#accfb15b5d82dd09daa6b25b2e0c14846">useStringAsMdpFile</a> (const std::string &amp;mdpString)</td></tr>
<tr class="memdesc:accfb15b5d82dd09daa6b25b2e0c14846"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use a given string as input to grompp. <br/></td></tr>
<tr class="separator:accfb15b5d82dd09daa6b25b2e0c14846"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f56be63b8d5d06ae1229a5879379e4a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0f56be63b8d5d06ae1229a5879379e4a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimulationRunner.xhtml#a0f56be63b8d5d06ae1229a5879379e4a">useStringAsNdxFile</a> (const char *ndxString)</td></tr>
<tr class="memdesc:a0f56be63b8d5d06ae1229a5879379e4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use a string as -n input to grompp. <br/></td></tr>
<tr class="separator:a0f56be63b8d5d06ae1229a5879379e4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad10ca111ebd1ad904c68accc18cb8bec"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad10ca111ebd1ad904c68accc18cb8bec"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimulationRunner.xhtml#ad10ca111ebd1ad904c68accc18cb8bec">useTopGroAndNdxFromDatabase</a> (const char *name)</td></tr>
<tr class="memdesc:ad10ca111ebd1ad904c68accc18cb8bec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use a standard .top and .gro file as input to grompp. <br/></td></tr>
<tr class="separator:ad10ca111ebd1ad904c68accc18cb8bec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f4af4c5eaeffc6f64bcd77e547977ef"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5f4af4c5eaeffc6f64bcd77e547977ef"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimulationRunner.xhtml#a5f4af4c5eaeffc6f64bcd77e547977ef">useGroFromDatabase</a> (const char *name)</td></tr>
<tr class="memdesc:a5f4af4c5eaeffc6f64bcd77e547977ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use a standard .gro file as input to grompp. <br/></td></tr>
<tr class="separator:a5f4af4c5eaeffc6f64bcd77e547977ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d5277a4c784f31a9cad4abd96fa7d1b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2d5277a4c784f31a9cad4abd96fa7d1b"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimulationRunner.xhtml#a2d5277a4c784f31a9cad4abd96fa7d1b">callGrompp</a> (const <a class="el" href="classgmx_1_1test_1_1CommandLine.xhtml">CommandLine</a> &amp;callerRef)</td></tr>
<tr class="memdesc:a2d5277a4c784f31a9cad4abd96fa7d1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls grompp (on rank 0, with a customized command line) to prepare for the mdrun test. <br/></td></tr>
<tr class="separator:a2d5277a4c784f31a9cad4abd96fa7d1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa5ded590b8ce739140989972c5e5003"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afa5ded590b8ce739140989972c5e5003"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimulationRunner.xhtml#afa5ded590b8ce739140989972c5e5003">callGrompp</a> ()</td></tr>
<tr class="memdesc:afa5ded590b8ce739140989972c5e5003"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convenience wrapper for a default call to <code>callGrompp</code>. <br/></td></tr>
<tr class="separator:afa5ded590b8ce739140989972c5e5003"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d4d81b77e1f910495f504db09831528"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8d4d81b77e1f910495f504db09831528"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimulationRunner.xhtml#a8d4d81b77e1f910495f504db09831528">callGromppOnThisRank</a> (const <a class="el" href="classgmx_1_1test_1_1CommandLine.xhtml">CommandLine</a> &amp;callerRef)</td></tr>
<tr class="memdesc:a8d4d81b77e1f910495f504db09831528"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls grompp (on this rank, with a customized command line) to prepare for the mdrun test. <br/></td></tr>
<tr class="separator:a8d4d81b77e1f910495f504db09831528"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a403d9fda0478e4e234a22551459ac131"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a403d9fda0478e4e234a22551459ac131"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimulationRunner.xhtml#a403d9fda0478e4e234a22551459ac131">callGromppOnThisRank</a> ()</td></tr>
<tr class="memdesc:a403d9fda0478e4e234a22551459ac131"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convenience wrapper for a default call to <code>callGromppOnThisRank</code>. <br/></td></tr>
<tr class="separator:a403d9fda0478e4e234a22551459ac131"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad958b05494b314175700a9002311f81b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad958b05494b314175700a9002311f81b"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimulationRunner.xhtml#ad958b05494b314175700a9002311f81b">callMdrun</a> (const <a class="el" href="classgmx_1_1test_1_1CommandLine.xhtml">CommandLine</a> &amp;callerRef)</td></tr>
<tr class="memdesc:ad958b05494b314175700a9002311f81b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls mdrun for testing with a customized command line. <br/></td></tr>
<tr class="separator:ad958b05494b314175700a9002311f81b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e40bb03db149db9768daca7547d043e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1e40bb03db149db9768daca7547d043e"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimulationRunner.xhtml#a1e40bb03db149db9768daca7547d043e">callMdrun</a> ()</td></tr>
<tr class="memdesc:a1e40bb03db149db9768daca7547d043e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convenience wrapper for calling mdrun for testing with default command line. <br/></td></tr>
<tr class="separator:a1e40bb03db149db9768daca7547d043e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Names for frequently used grompp and mdrun output files</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>These strings can be set to point to files present in the source tree, or to temporary files created for the test fixture. In the latter case, <a class="el" href="classgmx_1_1test_1_1IntegrationTestFixture.xhtml#a2ea38619b64784f0d33264ba577d4059" title="Object that manages finding input files, writing temporary output files and cleaning up files...">IntegrationTestFixture::fileManager_</a> should be used to fill these strings with paths to files, so that they are created in a temporary directory and (by default behaviour of <a class="el" href="classgmx_1_1test_1_1TestFileManager.xhtml" title="Helper for tests that need input and output files. ">TestFileManager</a>) deleted when the test is complete. </p>
</div></td></tr>
<tr class="memitem:a1e035ed9a2d093ca418a4b5aa23ebe80"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1e035ed9a2d093ca418a4b5aa23ebe80"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>topFileName_</b></td></tr>
<tr class="separator:a1e035ed9a2d093ca418a4b5aa23ebe80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9f7a396c0b98f553664dc936807f038"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa9f7a396c0b98f553664dc936807f038"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>groFileName_</b></td></tr>
<tr class="separator:aa9f7a396c0b98f553664dc936807f038"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a153c82e2c0c83e3e9fd944994c800642"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a153c82e2c0c83e3e9fd944994c800642"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>fullPrecisionTrajectoryFileName_</b></td></tr>
<tr class="separator:a153c82e2c0c83e3e9fd944994c800642"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2ea6fc2d82802ea29d337953f0c7c90"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa2ea6fc2d82802ea29d337953f0c7c90"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>reducedPrecisionTrajectoryFileName_</b></td></tr>
<tr class="separator:aa2ea6fc2d82802ea29d337953f0c7c90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24ca627121647edea434d0be6cd75754"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a24ca627121647edea434d0be6cd75754"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>groOutputFileName_</b></td></tr>
<tr class="separator:a24ca627121647edea434d0be6cd75754"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae9b9c8c76dd9d7ba090887a0b27f732"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aae9b9c8c76dd9d7ba090887a0b27f732"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>ndxFileName_</b></td></tr>
<tr class="separator:aae9b9c8c76dd9d7ba090887a0b27f732"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3443ca4339535939d6867f3d2192d74"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa3443ca4339535939d6867f3d2192d74"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>mdpInputFileName_</b></td></tr>
<tr class="separator:aa3443ca4339535939d6867f3d2192d74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a339a11337d86400ee3d3e23f170a14bb"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a339a11337d86400ee3d3e23f170a14bb"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>mdpOutputFileName_</b></td></tr>
<tr class="separator:a339a11337d86400ee3d3e23f170a14bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5233816fb9d95f754858ebeed885e67e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5233816fb9d95f754858ebeed885e67e"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>tprFileName_</b></td></tr>
<tr class="separator:a5233816fb9d95f754858ebeed885e67e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62fca9e2b559e42f7180d3a33a9252a3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a62fca9e2b559e42f7180d3a33a9252a3"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>logFileName_</b></td></tr>
<tr class="separator:a62fca9e2b559e42f7180d3a33a9252a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7f657de630e05cfe9c70b839bd44021"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa7f657de630e05cfe9c70b839bd44021"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>edrFileName_</b></td></tr>
<tr class="separator:aa7f657de630e05cfe9c70b839bd44021"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a446676567af1a3c5e4a177a6f3c10041"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a446676567af1a3c5e4a177a6f3c10041"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>cptFileName_</b></td></tr>
<tr class="separator:a446676567af1a3c5e4a177a6f3c10041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace3da6226236ba0067ae4ffa7888d33e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ace3da6226236ba0067ae4ffa7888d33e"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>swapFileName_</b></td></tr>
<tr class="separator:ace3da6226236ba0067ae4ffa7888d33e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0093076130837c7d864842a2a8e18f91"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0093076130837c7d864842a2a8e18f91"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><b>nsteps_</b></td></tr>
<tr class="separator:a0093076130837c7d864842a2a8e18f91"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/programs/mdrun/tests/<a class="el" href="programs_2mdrun_2tests_2moduletest_8h.xhtml">moduletest.h</a></li>
<li>src/programs/mdrun/tests/<a class="el" href="programs_2mdrun_2tests_2moduletest_8cpp.xhtml">moduletest.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:20:48 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

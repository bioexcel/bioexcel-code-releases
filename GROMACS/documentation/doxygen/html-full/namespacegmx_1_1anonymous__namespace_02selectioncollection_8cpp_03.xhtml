<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::anonymous_namespace{selectioncollection.cpp} Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li class="current"><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="namespaces.xhtml"><span>Namespace&#160;List</span></a></li>
      <li><a href="namespacemembers.xhtml"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="namespacegmx_1_1anonymous__namespace_02selectioncollection_8cpp_03.xhtml">anonymous_namespace{selectioncollection.cpp}</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::anonymous_namespace{selectioncollection.cpp} Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a4725dbb58fb88906d3e3f60fabad6903"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02selectioncollection_8cpp_03.xhtml#a4725dbb58fb88906d3e3f60fabad6903">promptLine</a> (<a class="el" href="classgmx_1_1TextInputStream.xhtml">TextInputStream</a> *inputStream, <a class="el" href="classgmx_1_1TextWriter.xhtml">TextWriter</a> *statusWriter, std::string *line)</td></tr>
<tr class="memdesc:a4725dbb58fb88906d3e3f60fabad6903"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads a single selection line from stdin.  <a href="#a4725dbb58fb88906d3e3f60fabad6903">More...</a><br/></td></tr>
<tr class="separator:a4725dbb58fb88906d3e3f60fabad6903"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19941d3c23f9ccc9a00c280cf2a4e058"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02selectioncollection_8cpp_03.xhtml#a19941d3c23f9ccc9a00c280cf2a4e058">runParserLoop</a> (yyscan_t scanner, _gmx_sel_yypstate *parserState, bool bInteractive)</td></tr>
<tr class="memdesc:a19941d3c23f9ccc9a00c280cf2a4e058"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function for tokenizing the input and pushing them to the parser.  <a href="#a19941d3c23f9ccc9a00c280cf2a4e058">More...</a><br/></td></tr>
<tr class="separator:a19941d3c23f9ccc9a00c280cf2a4e058"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab287e09e32b67a7d8eb6c426cbea825e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02selectioncollection_8cpp_03.xhtml#ab287e09e32b67a7d8eb6c426cbea825e">printCurrentStatus</a> (<a class="el" href="classgmx_1_1TextWriter.xhtml">TextWriter</a> *writer, <a class="el" href="structgmx__ana__selcollection__t.xhtml">gmx_ana_selcollection_t</a> *sc, <a class="el" href="structgmx__ana__indexgrps__t.xhtml">gmx_ana_indexgrps_t</a> *grps, size_t firstSelection, int maxCount, const std::string &amp;context, bool bFirst)</td></tr>
<tr class="memdesc:ab287e09e32b67a7d8eb6c426cbea825e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print current status in response to empty line in interactive input.  <a href="#ab287e09e32b67a7d8eb6c426cbea825e">More...</a><br/></td></tr>
<tr class="separator:ab287e09e32b67a7d8eb6c426cbea825e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe93236807caafdef3d12bf607712457"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02selectioncollection_8cpp_03.xhtml#abe93236807caafdef3d12bf607712457">printHelp</a> (<a class="el" href="classgmx_1_1TextWriter.xhtml">TextWriter</a> *writer, <a class="el" href="structgmx__ana__selcollection__t.xhtml">gmx_ana_selcollection_t</a> *sc, const std::string &amp;line)</td></tr>
<tr class="memdesc:abe93236807caafdef3d12bf607712457"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints selection help in interactive selection input.  <a href="#abe93236807caafdef3d12bf607712457">More...</a><br/></td></tr>
<tr class="separator:abe93236807caafdef3d12bf607712457"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8946156530ea3a73921de6735da8202"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacegmx.xhtml#ac852a0801cf49723903e23bc77a32163">SelectionList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02selectioncollection_8cpp_03.xhtml#ad8946156530ea3a73921de6735da8202">runParser</a> (yyscan_t scanner, <a class="el" href="classgmx_1_1TextInputStream.xhtml">TextInputStream</a> *inputStream, bool bInteractive, int maxnr, const std::string &amp;context)</td></tr>
<tr class="memdesc:ad8946156530ea3a73921de6735da8202"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function that runs the parser once the tokenizer has been initialized.  <a href="#ad8946156530ea3a73921de6735da8202">More...</a><br/></td></tr>
<tr class="separator:ad8946156530ea3a73921de6735da8202"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48b801436e4436783f4215cee575efe0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02selectioncollection_8cpp_03.xhtml#a48b801436e4436783f4215cee575efe0">checkExternalGroups</a> (const <a class="el" href="namespacegmx.xhtml#a2804c9c82f2a9bd0ec94d3c2f1003f42">SelectionTreeElementPointer</a> &amp;root, int natoms, <a class="el" href="classgmx_1_1ExceptionInitializer.xhtml">ExceptionInitializer</a> *errors)</td></tr>
<tr class="memdesc:a48b801436e4436783f4215cee575efe0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks that index groups have valid atom indices.  <a href="#a48b801436e4436783f4215cee575efe0">More...</a><br/></td></tr>
<tr class="separator:a48b801436e4436783f4215cee575efe0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a0058bd9d5bbd93d3de11316f49b44e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5a0058bd9d5bbd93d3de11316f49b44e"></a>
std::unique_ptr&lt; <a class="el" href="classgmx_1_1TextWriter.xhtml">TextWriter</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02selectioncollection_8cpp_03.xhtml#a5a0058bd9d5bbd93d3de11316f49b44e">initStatusWriter</a> (<a class="el" href="classgmx_1_1TextOutputStream.xhtml">TextOutputStream</a> *statusStream)</td></tr>
<tr class="memdesc:a5a0058bd9d5bbd93d3de11316f49b44e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function to initialize status writer for interactive selection parsing. <br/></td></tr>
<tr class="separator:a5a0058bd9d5bbd93d3de11316f49b44e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a48b801436e4436783f4215cee575efe0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::anonymous_namespace{selectioncollection.cpp}::checkExternalGroups </td>
          <td>(</td>
          <td class="paramtype">const SelectionTreeElementPointer &amp;&#160;</td>
          <td class="paramname"><em>root</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>natoms</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ExceptionInitializer *&#160;</td>
          <td class="paramname"><em>errors</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks that index groups have valid atom indices. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">root</td><td>Root of selection tree to process. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">natoms</td><td>Maximum number of atoms that the selections are set to evaluate. </td></tr>
    <tr><td class="paramdir"></td><td class="paramname">errors</td><td>Object for reporting any error messages. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory.</td></tr>
  </table>
  </dd>
</dl>
<p>Recursively checks the selection tree for index groups. Each found group is checked that it only contains atom indices that match the topology/maximum number of atoms set for the selection collection. Any issues are reported to <code>errors</code>. </p>

</div>
</div>
<a class="anchor" id="ab287e09e32b67a7d8eb6c426cbea825e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::anonymous_namespace{selectioncollection.cpp}::printCurrentStatus </td>
          <td>(</td>
          <td class="paramtype">TextWriter *&#160;</td>
          <td class="paramname"><em>writer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structgmx__ana__selcollection__t.xhtml">gmx_ana_selcollection_t</a> *&#160;</td>
          <td class="paramname"><em>sc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structgmx__ana__indexgrps__t.xhtml">gmx_ana_indexgrps_t</a> *&#160;</td>
          <td class="paramname"><em>grps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>firstSelection</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>maxCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bFirst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Print current status in response to empty line in interactive input. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">writer</td><td>Writer to use for the output. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">sc</td><td><a class="el" href="classgmx_1_1Selection.xhtml" title="Provides access to a single selection. ">Selection</a> collection data structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">grps</td><td>Available index groups. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">firstSelection</td><td>Index of first selection from this interactive session. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">maxCount</td><td>Maximum number of selections. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Context to print for what the selections are for. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bFirst</td><td>Whether this is the header that is printed before any user input.</td></tr>
  </table>
  </dd>
</dl>
<p>Prints the available index groups and currently provided selections. </p>

</div>
</div>
<a class="anchor" id="abe93236807caafdef3d12bf607712457"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::anonymous_namespace{selectioncollection.cpp}::printHelp </td>
          <td>(</td>
          <td class="paramtype">TextWriter *&#160;</td>
          <td class="paramname"><em>writer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structgmx__ana__selcollection__t.xhtml">gmx_ana_selcollection_t</a> *&#160;</td>
          <td class="paramname"><em>sc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prints selection help in interactive selection input. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">writer</td><td>Writer to use for the output. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">sc</td><td><a class="el" href="classgmx_1_1Selection.xhtml" title="Provides access to a single selection. ">Selection</a> collection data structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">line</td><td>Line of user input requesting help (starting with <code>help</code>).</td></tr>
  </table>
  </dd>
</dl>
<p>Initializes the selection help if not yet initialized, and finds the help topic based on words on the input line. </p>

</div>
</div>
<a class="anchor" id="a4725dbb58fb88906d3e3f60fabad6903"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::anonymous_namespace{selectioncollection.cpp}::promptLine </td>
          <td>(</td>
          <td class="paramtype">TextInputStream *&#160;</td>
          <td class="paramname"><em>inputStream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">TextWriter *&#160;</td>
          <td class="paramname"><em>statusWriter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string *&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads a single selection line from stdin. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">inputStream</td><td>Stream to read from (typically the <a class="el" href="classgmx_1_1StandardInputStream.xhtml" title="Text input stream implementation for reading from stdin. ">StandardInputStream</a>). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">statusWriter</td><td>Stream to print prompts to (if NULL, no output is done). </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">line</td><td>The read line in stored here. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if something was read, false if at end of input.</dd></dl>
<p>Handles line continuation, reading also the continuing line(s) in one call. </p>

</div>
</div>
<a class="anchor" id="ad8946156530ea3a73921de6735da8202"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacegmx.xhtml#ac852a0801cf49723903e23bc77a32163">SelectionList</a> gmx::anonymous_namespace{selectioncollection.cpp}::runParser </td>
          <td>(</td>
          <td class="paramtype">yyscan_t&#160;</td>
          <td class="paramname"><em>scanner</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">TextInputStream *&#160;</td>
          <td class="paramname"><em>inputStream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bInteractive</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>maxnr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>context</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Helper function that runs the parser once the tokenizer has been initialized. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">scanner</td><td>Scanner data structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">inputStream</td><td>Stream to use for input (currently only with <code>bInteractive==true</code>). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bInteractive</td><td>Whether to use a line-based reading algorithm designed for interactive input. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">maxnr</td><td>Maximum number of selections to parse (if -1, parse as many as provided by the user). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Context to print for what the selections are for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Vector of parsed selections. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InvalidInputError.xhtml" title="Exception class for situations where user input cannot be parsed/understood. ">InvalidInputError</a></td><td>if there is a parsing error.</td></tr>
  </table>
  </dd>
</dl>
<p>Used internally to implement parseInteractive(), parseFromFile() and parseFromString(). </p>

</div>
</div>
<a class="anchor" id="a19941d3c23f9ccc9a00c280cf2a4e058"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::anonymous_namespace{selectioncollection.cpp}::runParserLoop </td>
          <td>(</td>
          <td class="paramtype">yyscan_t&#160;</td>
          <td class="paramname"><em>scanner</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_gmx_sel_yypstate *&#160;</td>
          <td class="paramname"><em>parserState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bInteractive</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Helper function for tokenizing the input and pushing them to the parser. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir"></td><td class="paramname">scanner</td><td>Tokenizer data structure. </td></tr>
    <tr><td class="paramdir"></td><td class="paramname">parserState</td><td>Parser data structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bInteractive</td><td>Whether to operate in interactive mode.</td></tr>
  </table>
  </dd>
</dl>
<p>Repeatedly reads tokens using <code>scanner</code> and pushes them to the parser with <code>parserState</code> until there is no more input, or until enough input is given (only in interactive mode). </p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:20:47 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: Selection compilation</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li class="current"><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="index.xhtml">GROMACS</a></li><li class="navelem"><a class="el" href="page_analysisframework.xhtml">Framework for trajectory analysis</a></li><li class="navelem"><a class="el" href="page_selections.xhtml">Dynamic selections</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Selection compilation </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p>The compiler takes the selection element tree from the selection parser (see <a class="el" href="page_module_selection_parser.xhtml">Selection parsing</a>) as input. The selection parser is quite independent of selection evaluation details, and the compiler processes the tree to conform to what the evaluation functions expect. For better control and optimization possibilities, the compilation is done on all selections simultaneously. Hence, all the selections should be parsed before the compiler can be called.</p>
<p>The compiler initializes all fields in <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml" title="Represents an element of a selection expression. ">gmx::SelectionTreeElement</a> not initialized by the parser: <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a2085e80677c9c9f9e0427332fa08bc19" title="Value storage of the element. ">gmx::SelectionTreeElement::v</a> (some fields have already been initialized by the parser), <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#aa2729334e9625ab9446f87dee5e2acf4" title="Evaluation function for the element. ">gmx::SelectionTreeElement::evaluate</a>, and <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a999486baae5da90f918073871d4b0854" title="Data required by the evaluation function. ">gmx::SelectionTreeElement::u</a> (again, some elements have been initialized in the parser). The <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#af30728cbc6cd5a0c0ad8e6efa91f4632" title="Internal data for the selection compiler. ">gmx::SelectionTreeElement::cdata</a> field is used during the compilation to store internal data, but the data is freed when the compiler returns.</p>
<p>In addition to initializing the elements, the compiler reorganizes the tree to simplify and optimize evaluation. The compiler also evaluates the static parts of the selection: in the end of the compilation, static parts have been replaced by the result of the evaluation.</p>
<p>The compiler is invoked using <a class="el" href="classgmx_1_1SelectionCompiler.xhtml" title="Implements selection compilation. ">gmx::SelectionCompiler</a>. The <a class="el" href="classgmx_1_1SelectionCompiler.xhtml#aa72856cafe98fec9583722ce42816c9a" title="Compiles the given selection collection. ">gmx::SelectionCompiler::compile()</a> method does the compilation in several passes over the <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml" title="Represents an element of a selection expression. ">gmx::SelectionTreeElement</a> tree.</p>
<ol type="1">
<li>Defaults are set for the position type and flags of position calculation methods that were not explicitly specified in the user input.</li>
<li>Subexpressions are extracted: a separate root is created for each subexpression, and placed before the expression is first used. Currently, only variables and expressions used to evaluate parameter values are extracted, but common subexpression could also be detected here.</li>
<li>A second pass (in fact, multiple passes because of interdependencies) with simple reordering and initialization is done:<ol type="a">
<li>Boolean expressions are combined such that one element can evaluate, e.g., "A and B and C". The subexpressions in boolean expression are reordered such that static expressions come first without otherwise altering the relative order of the expressions.</li>
<li>The compiler data structure is allocated for each element, and the fields are initialized, with the exception of the contents of <code>gmax</code> and <code>gmin</code> fields. This is the part that needs multiple passes, because some flags are set recursively based on which elements refer to an element, and these flags need to be set to initialize other fields.</li>
<li>The <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#aa2729334e9625ab9446f87dee5e2acf4" title="Evaluation function for the element. ">gmx::SelectionTreeElement::evaluate</a> field is set to the correct evaluation function from <a class="el" href="evaluate_8h.xhtml" title="Evaluation functions for sel_evalfunc(). ">evaluate.h</a>.</li>
</ol>
</li>
<li>The evaluation function of all elements is replaced with the <a class="el" href="compiler_8cpp.xhtml#ac606faa067c02b2dc1bedfe5009ea455" title="Evaluates the static parts of sel and analyzes the structure. ">analyze_static()</a> function to be able to initialize the element before the actual evaluation function is called. The evaluation machinery is then called to initialize the whole tree, while simultaneously evaluating the static expressions. During the evaluation, track is kept of the smallest and largest possible selections, and these are stored in the internal compiler data structure for each element. To be able to do this for all possible values of dynamical expressions, special care needs to be taken with boolean expressions because they are short-circuiting. This is done through the <code>SEL_CDATA_EVALMAX</code> flag, which makes dynamic child expressions of <code>BOOL_OR</code> expressions evaluate to empty groups, while subexpressions of <code>BOOL_AND</code> are evaluated to largest possible groups. Memory is also allocated to store the results of the evaluation. For each element, <a class="el" href="compiler_8cpp.xhtml#ac606faa067c02b2dc1bedfe5009ea455" title="Evaluates the static parts of sel and analyzes the structure. ">analyze_static()</a> calls the actual evaluation function after the element has been properly initialized.</li>
<li>Another evaluation pass is done over subexpressions with more than one reference to them. These cannot be completely processed during the first pass, because it is not known whether later references require additional evaluation of static expressions.</li>
<li>Unused subexpressions are removed. For efficiency reasons (and to avoid some checks), this is actually done several times already earlier in the compilation process.</li>
<li>Most of the processing is now done, and the next pass simply sets the evaluation group of root elements to the largest selection as determined in pass 4. For root elements of subexpressions that should not be evaluated before they are referred to, the evaluation group/function is cleared. At the same time, position calculation data is initialized for for selection method elements that require it. Compiler data is also freed as it is no longer needed.</li>
<li>A final pass initializes the total masses and charges in the <code>gmx_ana_selection_t</code> data structures.</li>
</ol>
<p>The actual evaluation of the selection is described in the documentation of the functions in <a class="el" href="evaluate_8h.xhtml" title="Evaluation functions for sel_evalfunc(). ">evaluate.h</a>.</p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000044">Todo:</a></b></dt><dd>Some combinations of method parameter flags are not yet properly treated by the compiler or the evaluation functions in <a class="el" href="evaluate_8cpp.xhtml" title="Implements functions in evaluate.h. ">evaluate.cpp</a>. All the ones used by currently implemented methods should work, but new combinations might not.</dd></dl>
<h1><a class="anchor" id="selcompiler_tree"></a>
Element tree after compilation</h1>
<p>After the compilation, the selection element tree is suitable for gmx_ana_selcollection_evaluate(). Enough memory has been allocated for <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a2085e80677c9c9f9e0427332fa08bc19" title="Value storage of the element. ">gmx::SelectionTreeElement::v</a> (and <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#af90dd41be850fc4afbafa49fb3ce67e8" title="Index group data for several element types. ">gmx::SelectionTreeElement::cgrp</a> for <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46a4b01539a457afb7dbdf486c2a2e6dafb">SEL_SUBEXPR</a> elements) to allow the selection to be evaluated without allocating any memory.</p>
<h2><a class="anchor" id="selcompiler_tree_root"></a>
Root elements</h2>
<p>The top level of the tree consists of a chain of <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46a4374c0be00e03bae94a94c4f2d88569d">SEL_ROOT</a> elements. These are used for two purposes:</p>
<ol type="1">
<li>A selection that should be evaluated. These elements appear in the same order as the selections in the input. For these elements, <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a2085e80677c9c9f9e0427332fa08bc19" title="Value storage of the element. ">gmx::SelectionTreeElement::v</a> has been set to the maximum possible group that the selection can evaluate to (only for dynamic selections), and <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#af90dd41be850fc4afbafa49fb3ce67e8" title="Index group data for several element types. ">gmx::SelectionTreeElement::cgrp</a> has been set to use a NULL group for evaluation.</li>
<li>A subexpression that appears in one or more selections. Each selection that gives a value for a method parameter is a potential subexpression, as is any variable value. Only subexpressions that require evaluation for each frame are left after the selection is compiled. Each subexpression appears in the chain before any references to it. For these elements, <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#af90dd41be850fc4afbafa49fb3ce67e8" title="Index group data for several element types. ">gmx::SelectionTreeElement::cgrp</a> has been set to the group that should be used to evaluate the subexpression. If <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#af90dd41be850fc4afbafa49fb3ce67e8" title="Index group data for several element types. ">gmx::SelectionTreeElement::cgrp</a> is empty, the total evaluation group is not known in advance or it is more efficient to evaluate the subexpression only when it is referenced. If this is the case, <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#aa2729334e9625ab9446f87dee5e2acf4" title="Evaluation function for the element. ">gmx::SelectionTreeElement::evaluate</a> is also NULL.</li>
</ol>
<p>The children of the <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46a4374c0be00e03bae94a94c4f2d88569d">SEL_ROOT</a> elements can be used to distinguish the two types of root elements from each other; the rules are the same as for the parsed tree (see <a class="el" href="page_module_selection_parser.xhtml#selparser_tree_root">Root elements</a>). Subexpressions are treated as if they had been provided through variables.</p>
<p>Selection names are stored as after parsing (see <a class="el" href="page_module_selection_parser.xhtml#selparser_tree_root">Root elements</a>).</p>
<h2><a class="anchor" id="selcompiler_tree_const"></a>
Constant elements</h2>
<p>All (sub)selections that do not require particle positions have been replaced with <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46afae2ba2c065f70efcda76e4b7a7d17d0">SEL_CONST</a> elements. Constant elements from the parser are also retained if present in dynamic parts of the selections. Several constant elements with a NULL <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#aa2729334e9625ab9446f87dee5e2acf4" title="Evaluation function for the element. ">gmx::SelectionTreeElement::evaluate</a> are left for debugging purposes; of these, only the ones for <a class="el" href="selelem_8h.xhtml#ad24657d98854e03c3d6c46c37022a446a8c0bc1b3b7b2d3182a79286aaec0d13e">BOOL_OR</a> expressions are used during evaluation.</p>
<p>The value is stored in <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a2085e80677c9c9f9e0427332fa08bc19" title="Value storage of the element. ">gmx::SelectionTreeElement::v</a>, and for group values with an evaluation function set, also in <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#af90dd41be850fc4afbafa49fb3ce67e8" title="Index group data for several element types. ">gmx::SelectionTreeElement::cgrp</a>. For <a class="el" href="selvalue_8h.xhtml#a70b42b87d434580bf1493591857b8beca70a2af6eafa48adfab506ceee60471f6">GROUP_VALUE</a> elements, unnecessary atoms (i.e., atoms that could never be selected) have been removed from the value.</p>
<p><a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46afae2ba2c065f70efcda76e4b7a7d17d0">SEL_CONST</a> elements have no children.</p>
<h2><a class="anchor" id="selcompiler_tree_method"></a>
Method evaluation elements</h2>
<p>All selection methods that need to be evaluated dynamically are described by a <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46a3d3bb644ace8fdc5beac6feed4911a1f">SEL_EXPRESSION</a> element. The <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a54e0a2e6530911e98b0b49ecb877fe76" title="Pointer the the method used in this expression. ">gmx::SelectionTreeElement::method</a> and <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a1173ae4061374013d0fead828f1fa4d4" title="Pointer to the data allocated by the method&#39;s init_data (see sel_datafunc()). ">gmx::SelectionTreeElement::mdata</a> fields have already been initialized by the parser, and the compiler only calls the initialization functions in the method data structure to do some additional initialization of these fields at appropriate points. If the <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a16711f8089fd04a0822a56a977adfdb3" title="Pointer to the evaluation data for pos. ">gmx::SelectionTreeElement::pc</a> data field has been created by the parser, the compiler initializes the data structure properly once the required positions are known. If the <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a16711f8089fd04a0822a56a977adfdb3" title="Pointer to the evaluation data for pos. ">gmx::SelectionTreeElement::pc</a> field is NULL after the parser, but the method provides only <a class="el" href="selmethod_8h.xhtml#a0b18405511e5ed5fabfe37fc98888121" title="Evaluates a selection method using positions. ">sel_updatefunc_pos()</a>, an appropriate position calculation data structure is created. If <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a16711f8089fd04a0822a56a977adfdb3" title="Pointer to the evaluation data for pos. ">gmx::SelectionTreeElement::pc</a> is not NULL, <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#ac78b536909e9843043af491cc3df4775" title="Pointer to the position data passed to the method. ">gmx::SelectionTreeElement::pos</a> is also initialized to hold the positions calculated.</p>
<p>Children of these elements are of type <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46af3e44c019a776df8511a73457f9b32b4">SEL_SUBEXPRREF</a>, and describe parameter values that need to be evaluated for each frame. See the next section for more details. <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46afae2ba2c065f70efcda76e4b7a7d17d0">SEL_CONST</a> children can also appear, and stand for parameters that get their value from a static expression. These elements are present only for debugging purposes: they always have a NULL evaluation function.</p>
<h2><a class="anchor" id="selcompiler_tree_subexpr"></a>
Subexpression elements</h2>
<p>As described in <a class="el" href="page_module_selection_compiler.xhtml#selcompiler_tree_root">Root elements</a>, subexpressions are created for each variable and each expression that gives a value to a selection method parameter. As the only child of the <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46a4374c0be00e03bae94a94c4f2d88569d">SEL_ROOT</a> element, these elements have a <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46a4b01539a457afb7dbdf486c2a2e6dafb">SEL_SUBEXPR</a> element. The <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46a4b01539a457afb7dbdf486c2a2e6dafb">SEL_SUBEXPR</a> element has a single child, which evaluates the actual expression. After compilation, only subexpressions that require particle positions for evaluation are left. For non-variable subexpression, automatic names have been generated to help in debugging.</p>
<p>For <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46a4b01539a457afb7dbdf486c2a2e6dafb">SEL_SUBEXPR</a> elements, memory has been allocated for <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#af90dd41be850fc4afbafa49fb3ce67e8" title="Index group data for several element types. ">gmx::SelectionTreeElement::cgrp</a> to store the group for which the expression has been evaluated during the current frame. This is only done if full subexpression evaluation by <a class="el" href="evaluate_8cpp.xhtml#a83156ae734e0a975b7498826dee5bee4" title="Evaluates a subexpression. ">_gmx_sel_evaluate_subexpr()</a> is needed; the other evaluation functions do not require this memory.</p>
<p><a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46af3e44c019a776df8511a73457f9b32b4">SEL_SUBEXPRREF</a> elements are used to describe references to subexpressions. They have always a single child, which is the <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46a4b01539a457afb7dbdf486c2a2e6dafb">SEL_SUBEXPR</a> element being referenced.</p>
<p>If a subexpression is used only once, the evaluation has been optimized by setting the child of the <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46a4b01539a457afb7dbdf486c2a2e6dafb">SEL_SUBEXPR</a> element to evaluate the value of <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46af3e44c019a776df8511a73457f9b32b4">SEL_SUBEXPRREF</a> directly (in the case of memory pooling, this is managed by the evaluation functions). In such cases, the evaluation routines for the <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46af3e44c019a776df8511a73457f9b32b4">SEL_SUBEXPRREF</a> and <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46a4b01539a457afb7dbdf486c2a2e6dafb">SEL_SUBEXPR</a> elements only propagate some status information, but do not unnecessarily copy the values.</p>
<h2><a class="anchor" id="selcompiler_tree_bool"></a>
Boolean elements</h2>
<p><a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46ae886c4e170c3abd5527de0af74ba4a45">SEL_BOOLEAN</a> elements have been merged such that one element may carry out evaluation of more than one operation of the same type. The static parts of the expressions have been evaluated, and are placed in the first child. These are followed by the dynamic expressions, in the order provided by the user.</p>
<h2><a class="anchor" id="selcompiler_tree_arith"></a>
Arithmetic elements</h2>
<p>Constant and static expressions in <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46a8b75dccbec633c2002ea8c8fd3639b0e">SEL_ARITHMETIC</a> elements have been calculated. Currently, no other processing is done. </p>
</div></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:20:40 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

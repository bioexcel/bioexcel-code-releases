<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/gmxana/gmx_wham.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_71392c6f4b1ed3a32ba5c064e868a1ba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a798d384400d41a9e6864d9b1b8753fe.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_b4c0865fb72ac0396db9ea65f621fbdb.xhtml">gmxana</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx_wham.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="gmxpre_8h.xhtml">gmxpre.h</a>&quot;</code><br/>
<code>#include &quot;config.h&quot;</code><br/>
<code>#include &lt;cctype&gt;</code><br/>
<code>#include &lt;cmath&gt;</code><br/>
<code>#include &lt;cstdio&gt;</code><br/>
<code>#include &lt;cstdlib&gt;</code><br/>
<code>#include &lt;cstring&gt;</code><br/>
<code>#include &lt;algorithm&gt;</code><br/>
<code>#include &lt;sstream&gt;</code><br/>
<code>#include &quot;<a class="el" href="pargs_8h.xhtml">gromacs/commandline/pargs.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/fileio/tpxio.h&quot;</code><br/>
<code>#include &quot;gromacs/fileio/xvgr.h&quot;</code><br/>
<code>#include &quot;gromacs/gmxana/gmx_ana.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="functions_8h.xhtml">gromacs/math/functions.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/math/units.h&quot;</code><br/>
<code>#include &quot;gromacs/math/vec.h&quot;</code><br/>
<code>#include &quot;gromacs/mdtypes/inputrec.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="md__enums_8h.xhtml">gromacs/mdtypes/md_enums.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="pull-params_8h.xhtml">gromacs/mdtypes/pull-params.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="pull_8h.xhtml">gromacs/pulling/pull.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="tabulatednormaldistribution_8h.xhtml">gromacs/random/tabulatednormaldistribution.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="threefry_8h.xhtml">gromacs/random/threefry.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="uniformintdistribution_8h.xhtml">gromacs/random/uniformintdistribution.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="uniformrealdistribution_8h.xhtml">gromacs/random/uniformrealdistribution.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="arraysize_8h.xhtml">gromacs/utility/arraysize.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="cstringutil_8h.xhtml">gromacs/utility/cstringutil.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="exceptions_8h.xhtml">gromacs/utility/exceptions.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="fatalerror_8h.xhtml">gromacs/utility/fatalerror.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="futil_8h.xhtml">gromacs/utility/futil.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="gmxomp_8h.xhtml">gromacs/utility/gmxomp.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="pleasecite_8h.xhtml">gromacs/utility/pleasecite.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="smalloc_8h.xhtml">gromacs/utility/smalloc.h</a>&quot;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for gmx_wham.cpp:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="gmx__wham_8cpp__incl.svg" width="3536" height="544"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Implementation of the Weighted Histogram Analysis Method (WHAM) </p>
<dl class="section author"><dt>Author</dt><dd>Jochen Hub <a href="#" onclick="location.href='mai'+'lto:'+'jhu'+'b@'+'gwd'+'g.'+'de'; return false;">jhub@<span style="display: none;">.nosp@m.</span>gwdg<span style="display: none;">.nosp@m.</span>.de</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structt__pullcoord.xhtml">t_pullcoord</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parameters of one pull coodinate.  <a href="structt__pullcoord.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structt__UmbrellaHeader.xhtml">t_UmbrellaHeader</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parameters of the umbrella potentials.  <a href="structt__UmbrellaHeader.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data in the umbrella histograms.  <a href="structt__UmbrellaWindow.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structt__coordselection.xhtml">t_coordselection</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Selection of pull coordinates to be used in WHAM (one structure for each tpr file)  <a href="structt__coordselection.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parameters of WHAM.  <a href="structt__UmbrellaOptions.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a4bb26e307186e7ef216a62d99964b9ba"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4bb26e307186e7ef216a62d99964b9ba"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a4bb26e307186e7ef216a62d99964b9ba">WHAM_MAXFILELEN</a>&#160;&#160;&#160;2048</td></tr>
<tr class="memdesc:a4bb26e307186e7ef216a62d99964b9ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">longest file names allowed in input files <br/></td></tr>
<tr class="separator:a4bb26e307186e7ef216a62d99964b9ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a240511036c30b6b72ac36174fea7566d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a240511036c30b6b72ac36174fea7566d"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a240511036c30b6b72ac36174fea7566d">int2YN</a>(a)&#160;&#160;&#160;(((a) == 0) ? (&quot;N&quot;) : (&quot;Y&quot;))</td></tr>
<tr class="memdesc:a240511036c30b6b72ac36174fea7566d"><td class="mdescLeft">&#160;</td><td class="mdescRight">translate 0/1 to N/Y to write pull dimensions <br/></td></tr>
<tr class="separator:a240511036c30b6b72ac36174fea7566d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcee021c395370500966f0da93955358"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abcee021c395370500966f0da93955358"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#abcee021c395370500966f0da93955358">WHAM_AC_ZERO_LIMIT</a>&#160;&#160;&#160;0.05</td></tr>
<tr class="memdesc:abcee021c395370500966f0da93955358"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop integrating autoccorelation function when ACF drops under this value. <br/></td></tr>
<tr class="separator:abcee021c395370500966f0da93955358"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa91d3e3912eb9c3b52c84a2175e76bd1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa91d3e3912eb9c3b52c84a2175e76bd1"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#aa91d3e3912eb9c3b52c84a2175e76bd1">WHAMBOOLXOR</a>(a, b)&#160;&#160;&#160;( ((!(a)) &amp;&amp; (b)) || ((a) &amp;&amp; (!(b))))</td></tr>
<tr class="memdesc:aa91d3e3912eb9c3b52c84a2175e76bd1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Boolean XOR. <br/></td></tr>
<tr class="separator:aa91d3e3912eb9c3b52c84a2175e76bd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8485f4e81de2537e6a0935626167a775"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8485f4e81de2537e6a0935626167a775"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a8485f4e81de2537e6a0935626167a775">NFILE</a>&#160;&#160;&#160;<a class="el" href="group__module__utility.xhtml#ga0883345a58f8f63aefa249a4f127f707">asize</a>(fnm)</td></tr>
<tr class="memdesc:a8485f4e81de2537e6a0935626167a775"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of elements in fnm (used for command line parsing) <br/></td></tr>
<tr class="separator:a8485f4e81de2537e6a0935626167a775"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:afa231099d07583c3ed0981e0bb665f55"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom">{ <br/>
&#160;&#160;<b>enSel</b>, 
<b>en_kJ</b>, 
<b>en_kCal</b>, 
<b>en_kT</b>, 
<br/>
&#160;&#160;<b>enNr</b>
<br/>
 }</td></tr>
<tr class="memdesc:afa231099d07583c3ed0981e0bb665f55"><td class="mdescLeft">&#160;</td><td class="mdescRight">enum for energy units <br/></td></tr>
<tr class="separator:afa231099d07583c3ed0981e0bb665f55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a394b3903fbf00ba2b6243f60689a5a5f"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom">{ <b>whamin_unknown</b>, 
<b>whamin_tpr</b>, 
<b>whamin_pullxf</b>, 
<b>whamin_pdo</b>
 }</td></tr>
<tr class="memdesc:a394b3903fbf00ba2b6243f60689a5a5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">enum for type of input files (pdos, tpr, or pullf) <br/></td></tr>
<tr class="separator:a394b3903fbf00ba2b6243f60689a5a5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac205be2172292384dd687b5471a87edd"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom">{ <br/>
&#160;&#160;<b>bsMethod_unknown</b>, 
<b>bsMethod_BayesianHist</b>, 
<b>bsMethod_hist</b>, 
<b>bsMethod_traj</b>, 
<br/>
&#160;&#160;<b>bsMethod_trajGauss</b>
<br/>
 }</td></tr>
<tr class="memdesc:ac205be2172292384dd687b5471a87edd"><td class="mdescLeft">&#160;</td><td class="mdescRight">enum for bootstrapping method  <a href="gmx__wham_8cpp.xhtml#ac205be2172292384dd687b5471a87edd">More...</a><br/></td></tr>
<tr class="separator:ac205be2172292384dd687b5471a87edd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a67e020aca9397adf1bb0205ab2bcfcda"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a67e020aca9397adf1bb0205ab2bcfcda"></a>
<a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a67e020aca9397adf1bb0205ab2bcfcda">initUmbrellaWindows</a> (int nwin)</td></tr>
<tr class="memdesc:a67e020aca9397adf1bb0205ab2bcfcda"><td class="mdescLeft">&#160;</td><td class="mdescRight">Make an umbrella window (may contain several histograms) <br/></td></tr>
<tr class="separator:a67e020aca9397adf1bb0205ab2bcfcda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05c4d39d523815080bcdc8c7088074ee"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a05c4d39d523815080bcdc8c7088074ee"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a05c4d39d523815080bcdc8c7088074ee">freeUmbrellaWindows</a> (<a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *win, int nwin)</td></tr>
<tr class="memdesc:a05c4d39d523815080bcdc8c7088074ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Delete an umbrella window (may contain several histograms) <br/></td></tr>
<tr class="separator:a05c4d39d523815080bcdc8c7088074ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a838e5a64cad5e5dd2178ac103c8b82aa"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a838e5a64cad5e5dd2178ac103c8b82aa"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a838e5a64cad5e5dd2178ac103c8b82aa">setup_tab</a> (const char *fn, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt)</td></tr>
<tr class="memdesc:a838e5a64cad5e5dd2178ac103c8b82aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read and setup tabulated umbrella potential. <br/></td></tr>
<tr class="separator:a838e5a64cad5e5dd2178ac103c8b82aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe3a5216ab5503decf13549464b1c137"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abe3a5216ab5503decf13549464b1c137"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#abe3a5216ab5503decf13549464b1c137">read_pdo_header</a> (FILE *file, <a class="el" href="structt__UmbrellaHeader.xhtml">t_UmbrellaHeader</a> *header, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt)</td></tr>
<tr class="memdesc:abe3a5216ab5503decf13549464b1c137"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read the header of an PDO file (position, force const, nr of groups) <br/></td></tr>
<tr class="separator:abe3a5216ab5503decf13549464b1c137"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77d390546cff945857e773b6e3a7ae33"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a77d390546cff945857e773b6e3a7ae33"></a>
static char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a77d390546cff945857e773b6e3a7ae33">fgets3</a> (FILE *fp, char ptr[], int *len)</td></tr>
<tr class="memdesc:a77d390546cff945857e773b6e3a7ae33"><td class="mdescLeft">&#160;</td><td class="mdescRight">smarter fgets <br/></td></tr>
<tr class="separator:a77d390546cff945857e773b6e3a7ae33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3dcaaa3d4f5e5898a4120ab5f4c56bbe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a3dcaaa3d4f5e5898a4120ab5f4c56bbe">read_pdo_data</a> (FILE *file, <a class="el" href="structt__UmbrellaHeader.xhtml">t_UmbrellaHeader</a> *header, int fileno, <a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *win, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bGetMinMax, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *mintmp, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *maxtmp)</td></tr>
<tr class="memdesc:a3dcaaa3d4f5e5898a4120ab5f4c56bbe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read the data columns of and PDO file.  <a href="#a3dcaaa3d4f5e5898a4120ab5f4c56bbe">More...</a><br/></td></tr>
<tr class="separator:a3dcaaa3d4f5e5898a4120ab5f4c56bbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a672008791bef8cd5936323e4f79116ff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a672008791bef8cd5936323e4f79116ff">enforceEqualWeights</a> (<a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *window, int nWindows)</td></tr>
<tr class="memdesc:a672008791bef8cd5936323e4f79116ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set identical weights for all histograms.  <a href="#a672008791bef8cd5936323e4f79116ff">More...</a><br/></td></tr>
<tr class="separator:a672008791bef8cd5936323e4f79116ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32d43a1122485636e72a2ccdcfddf14b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a32d43a1122485636e72a2ccdcfddf14b"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a32d43a1122485636e72a2ccdcfddf14b">tabulated_pot</a> (double dist, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt)</td></tr>
<tr class="memdesc:a32d43a1122485636e72a2ccdcfddf14b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple linear interpolation between two given tabulated points. <br/></td></tr>
<tr class="separator:a32d43a1122485636e72a2ccdcfddf14b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a628ba0656c88094bdb8a7734b62c4b15"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a628ba0656c88094bdb8a7734b62c4b15">setup_acc_wham</a> (double *profile, <a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *window, int nWindows, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt)</td></tr>
<tr class="memdesc:a628ba0656c88094bdb8a7734b62c4b15"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check which bins substiantially contribute (accelerates WHAM)  <a href="#a628ba0656c88094bdb8a7734b62c4b15">More...</a><br/></td></tr>
<tr class="separator:a628ba0656c88094bdb8a7734b62c4b15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07c4ca9b8094fb7e68ef88393c008323"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a07c4ca9b8094fb7e68ef88393c008323"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a07c4ca9b8094fb7e68ef88393c008323">calc_profile</a> (double *profile, <a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *window, int nWindows, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bExact)</td></tr>
<tr class="memdesc:a07c4ca9b8094fb7e68ef88393c008323"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute the PMF (one of the two main WHAM routines) <br/></td></tr>
<tr class="separator:a07c4ca9b8094fb7e68ef88393c008323"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7d2e79946b39b3ab01aa44cd4434090"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad7d2e79946b39b3ab01aa44cd4434090"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#ad7d2e79946b39b3ab01aa44cd4434090">calc_z</a> (double *profile, <a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *window, int nWindows, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bExact)</td></tr>
<tr class="memdesc:ad7d2e79946b39b3ab01aa44cd4434090"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute the free energy offsets z (one of the two main WHAM routines) <br/></td></tr>
<tr class="separator:ad7d2e79946b39b3ab01aa44cd4434090"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7ac66b58aa087979d23ba377048e370"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab7ac66b58aa087979d23ba377048e370"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#ab7ac66b58aa087979d23ba377048e370">symmetrizeProfile</a> (double *profile, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt)</td></tr>
<tr class="memdesc:ab7ac66b58aa087979d23ba377048e370"><td class="mdescLeft">&#160;</td><td class="mdescRight">Make PMF symmetric around 0 (useful e.g. for membranes) <br/></td></tr>
<tr class="separator:ab7ac66b58aa087979d23ba377048e370"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca0454afce5cd15dde691318826543de"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aca0454afce5cd15dde691318826543de"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#aca0454afce5cd15dde691318826543de">prof_normalization_and_unit</a> (double *profile, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt)</td></tr>
<tr class="memdesc:aca0454afce5cd15dde691318826543de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set energy unit (kJ/mol,kT,kCal/mol) and set it to zero at opt-&gt;zProf0. <br/></td></tr>
<tr class="separator:aca0454afce5cd15dde691318826543de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a868e1c1be006aade379c0bade05bf10a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a868e1c1be006aade379c0bade05bf10a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a868e1c1be006aade379c0bade05bf10a">getRandomIntArray</a> (int nPull, int blockLength, int *randomArray, <a class="el" href="namespacegmx.xhtml#a7ea21974bdd8acdfa1c344b0945cff1b">gmx::DefaultRandomEngine</a> *rng)</td></tr>
<tr class="memdesc:a868e1c1be006aade379c0bade05bf10a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Make an array of random integers (used for bootstrapping) <br/></td></tr>
<tr class="separator:a868e1c1be006aade379c0bade05bf10a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab97edb7d1218124daaf4612072434fb4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#ab97edb7d1218124daaf4612072434fb4">copy_pullgrp_to_synthwindow</a> (<a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *synthWindow, <a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *thisWindow, int pullid)</td></tr>
<tr class="memdesc:ab97edb7d1218124daaf4612072434fb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set pull group information of a synthetic histogram.  <a href="#ab97edb7d1218124daaf4612072434fb4">More...</a><br/></td></tr>
<tr class="separator:ab97edb7d1218124daaf4612072434fb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84785e232c25312e8ad02245caf170a4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a84785e232c25312e8ad02245caf170a4">calc_cumulatives</a> (<a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *window, int nWindows, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt, const char *fnhist, const char *xlabel)</td></tr>
<tr class="memdesc:a84785e232c25312e8ad02245caf170a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate cumulative distribution function of of all histograms.  <a href="#a84785e232c25312e8ad02245caf170a4">More...</a><br/></td></tr>
<tr class="separator:a84785e232c25312e8ad02245caf170a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5513d86de92e115d313826314753570"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#ac5513d86de92e115d313826314753570">searchCumulative</a> (double xx[], int n, double x, int *j)</td></tr>
<tr class="memdesc:ac5513d86de92e115d313826314753570"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return j such that xx[j] &lt;= x &lt; xx[j+1].  <a href="#ac5513d86de92e115d313826314753570">More...</a><br/></td></tr>
<tr class="separator:ac5513d86de92e115d313826314753570"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59993243d1b0542dd89cc4d165cdb15b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a59993243d1b0542dd89cc4d165cdb15b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a59993243d1b0542dd89cc4d165cdb15b">create_synthetic_histo</a> (<a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *synthWindow, <a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *thisWindow, int pullid, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt)</td></tr>
<tr class="memdesc:a59993243d1b0542dd89cc4d165cdb15b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Bootstrap new trajectories and thereby generate new (bootstrapped) histograms. <br/></td></tr>
<tr class="separator:a59993243d1b0542dd89cc4d165cdb15b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18d45d00a77b7f5ed057805d1fb874ad"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a18d45d00a77b7f5ed057805d1fb874ad">print_histograms</a> (const char *fnhist, <a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *window, int nWindows, int bs_index, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt, const char *xlabel)</td></tr>
<tr class="memdesc:a18d45d00a77b7f5ed057805d1fb874ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write all histograms to a file.  <a href="#a18d45d00a77b7f5ed057805d1fb874ad">More...</a><br/></td></tr>
<tr class="separator:a18d45d00a77b7f5ed057805d1fb874ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ce618a3c5d4099a3618ec0a43e07589"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9ce618a3c5d4099a3618ec0a43e07589"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a9ce618a3c5d4099a3618ec0a43e07589">func_wham_is_larger</a> (const void *a, const void *b)</td></tr>
<tr class="memdesc:a9ce618a3c5d4099a3618ec0a43e07589"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used for qsort to sort random numbers. <br/></td></tr>
<tr class="separator:a9ce618a3c5d4099a3618ec0a43e07589"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a164aa2ed36c3f8ba41f1b55ce26c1906"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a164aa2ed36c3f8ba41f1b55ce26c1906"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a164aa2ed36c3f8ba41f1b55ce26c1906">setRandomBsWeights</a> (<a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *synthwin, int nAllPull, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt)</td></tr>
<tr class="memdesc:a164aa2ed36c3f8ba41f1b55ce26c1906"><td class="mdescLeft">&#160;</td><td class="mdescRight">Make random weights for histograms for the Bayesian bootstrap of complete histograms) <br/></td></tr>
<tr class="separator:a164aa2ed36c3f8ba41f1b55ce26c1906"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec4234e7938585cb0d447020801b1df0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aec4234e7938585cb0d447020801b1df0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#aec4234e7938585cb0d447020801b1df0">do_bootstrapping</a> (const char *fnres, const char *fnprof, const char *fnhist, const char *xlabel, char *ylabel, double *profile, <a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *window, int nWindows, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt)</td></tr>
<tr class="memdesc:aec4234e7938585cb0d447020801b1df0"><td class="mdescLeft">&#160;</td><td class="mdescRight">The main bootstrapping routine. <br/></td></tr>
<tr class="separator:aec4234e7938585cb0d447020801b1df0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cb32c26446d0bd2230c562a7296fe00"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7cb32c26446d0bd2230c562a7296fe00"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a7cb32c26446d0bd2230c562a7296fe00">whaminFileType</a> (char *fn)</td></tr>
<tr class="memdesc:a7cb32c26446d0bd2230c562a7296fe00"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return type of input file based on file extension (xvg, pdo, or tpr) <br/></td></tr>
<tr class="separator:a7cb32c26446d0bd2230c562a7296fe00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a876b39d31db93ee78365714af3db3658"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a876b39d31db93ee78365714af3db3658"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a876b39d31db93ee78365714af3db3658">read_wham_in</a> (const char *fn, char ***filenamesRet, int *nfilesRet, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt)</td></tr>
<tr class="memdesc:a876b39d31db93ee78365714af3db3658"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read the files names in pdo-files.dat, pullf/x-files.dat, tpr-files.dat. <br/></td></tr>
<tr class="separator:a876b39d31db93ee78365714af3db3658"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69e1b18f7b9fd1c476fe16dcb61334ba"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a69e1b18f7b9fd1c476fe16dcb61334ba"></a>
FILE *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a69e1b18f7b9fd1c476fe16dcb61334ba">open_pdo_pipe</a> (const char *fn, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> *bPipeOpen)</td></tr>
<tr class="memdesc:a69e1b18f7b9fd1c476fe16dcb61334ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Open a file or a pipe to a gzipped file. <br/></td></tr>
<tr class="separator:a69e1b18f7b9fd1c476fe16dcb61334ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02c5e6e26b1db19a2cccb946177d6d33"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a02c5e6e26b1db19a2cccb946177d6d33"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a02c5e6e26b1db19a2cccb946177d6d33">pdo_close_file</a> (FILE *fp)</td></tr>
<tr class="memdesc:a02c5e6e26b1db19a2cccb946177d6d33"><td class="mdescLeft">&#160;</td><td class="mdescRight">Close file or pipe. <br/></td></tr>
<tr class="separator:a02c5e6e26b1db19a2cccb946177d6d33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5113878037538bcaad02438aa4a49629"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5113878037538bcaad02438aa4a49629"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a5113878037538bcaad02438aa4a49629">read_pdo_files</a> (char **fn, int nfiles, <a class="el" href="structt__UmbrellaHeader.xhtml">t_UmbrellaHeader</a> *header, <a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *window, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt)</td></tr>
<tr class="memdesc:a5113878037538bcaad02438aa4a49629"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reading all pdo files. <br/></td></tr>
<tr class="separator:a5113878037538bcaad02438aa4a49629"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a002b49e42605d750fb1c4b72f0e479"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1a002b49e42605d750fb1c4b72f0e479"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a1a002b49e42605d750fb1c4b72f0e479">read_tpr_header</a> (const char *fn, <a class="el" href="structt__UmbrellaHeader.xhtml">t_UmbrellaHeader</a> *header, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt, <a class="el" href="structt__coordselection.xhtml">t_coordselection</a> *coordsel)</td></tr>
<tr class="memdesc:a1a002b49e42605d750fb1c4b72f0e479"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read pull groups from a tpr file (including position, force const, geometry, number of groups) <br/></td></tr>
<tr class="separator:a1a002b49e42605d750fb1c4b72f0e479"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b11f2cdcf1f66aa52131005c0edcced"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8b11f2cdcf1f66aa52131005c0edcced"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a8b11f2cdcf1f66aa52131005c0edcced">dist_ndim</a> (double **dx, int ndim, int line)</td></tr>
<tr class="memdesc:a8b11f2cdcf1f66aa52131005c0edcced"><td class="mdescLeft">&#160;</td><td class="mdescRight">2-norm in a ndim-dimensional space <br/></td></tr>
<tr class="separator:a8b11f2cdcf1f66aa52131005c0edcced"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5eae109ecc5b17bdd342ddbd98469bdd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5eae109ecc5b17bdd342ddbd98469bdd"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a5eae109ecc5b17bdd342ddbd98469bdd">read_pull_xf</a> (const char *fn, <a class="el" href="structt__UmbrellaHeader.xhtml">t_UmbrellaHeader</a> *header, <a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *window, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bGetMinMax, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *mintmp, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *maxtmp, <a class="el" href="structt__coordselection.xhtml">t_coordselection</a> *coordsel)</td></tr>
<tr class="memdesc:a5eae109ecc5b17bdd342ddbd98469bdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read pullx.xvg or pullf.xvg. <br/></td></tr>
<tr class="separator:a5eae109ecc5b17bdd342ddbd98469bdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add18021deb3fd7250502f70d6c614096"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="add18021deb3fd7250502f70d6c614096"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#add18021deb3fd7250502f70d6c614096">read_tpr_pullxf_files</a> (char **fnTprs, char **fnPull, int nfiles, <a class="el" href="structt__UmbrellaHeader.xhtml">t_UmbrellaHeader</a> *header, <a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *window, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt)</td></tr>
<tr class="memdesc:add18021deb3fd7250502f70d6c614096"><td class="mdescLeft">&#160;</td><td class="mdescRight">read pullf-files.dat or pullx-files.dat and tpr-files.dat <br/></td></tr>
<tr class="separator:add18021deb3fd7250502f70d6c614096"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5518dc57c94aa6cc41fd45445c7f4605"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a5518dc57c94aa6cc41fd45445c7f4605">readIntegratedAutocorrelationTimes</a> (<a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *window, int nwins, const char *fn)</td></tr>
<tr class="memdesc:a5518dc57c94aa6cc41fd45445c7f4605"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read integrated autocorrelation times from input file (option -iiact)  <a href="#a5518dc57c94aa6cc41fd45445c7f4605">More...</a><br/></td></tr>
<tr class="separator:a5518dc57c94aa6cc41fd45445c7f4605"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49b253100717ec8d3bccf80f13dd1b5f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a49b253100717ec8d3bccf80f13dd1b5f">smoothIact</a> (<a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *window, int nwins, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt)</td></tr>
<tr class="memdesc:a49b253100717ec8d3bccf80f13dd1b5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Smooth autocorreltion times along the reaction coordinate.  <a href="#a49b253100717ec8d3bccf80f13dd1b5f">More...</a><br/></td></tr>
<tr class="separator:a49b253100717ec8d3bccf80f13dd1b5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a362cda874be5dca3da6cb87a4d51b28d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a362cda874be5dca3da6cb87a4d51b28d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a362cda874be5dca3da6cb87a4d51b28d">calcIntegratedAutocorrelationTimes</a> (<a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *window, int nwins, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt, const char *fn, const char *xlabel)</td></tr>
<tr class="memdesc:a362cda874be5dca3da6cb87a4d51b28d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Try to compute the autocorrelation time for each umbrealla window. <br/></td></tr>
<tr class="separator:a362cda874be5dca3da6cb87a4d51b28d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa23a3cc2eea07c6125f5697dc066694a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa23a3cc2eea07c6125f5697dc066694a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#aa23a3cc2eea07c6125f5697dc066694a">averageSigma</a> (<a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *window, int nwins)</td></tr>
<tr class="memdesc:aa23a3cc2eea07c6125f5697dc066694a"><td class="mdescLeft">&#160;</td><td class="mdescRight">compute average and sigma of each umbrella histogram <br/></td></tr>
<tr class="separator:aa23a3cc2eea07c6125f5697dc066694a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a705bf8cde1b99880d96e4dea9ee30807"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a705bf8cde1b99880d96e4dea9ee30807"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a705bf8cde1b99880d96e4dea9ee30807">computeAverageForce</a> (<a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *window, int nWindows, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt)</td></tr>
<tr class="memdesc:a705bf8cde1b99880d96e4dea9ee30807"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use histograms to compute average force on pull group. <br/></td></tr>
<tr class="separator:a705bf8cde1b99880d96e4dea9ee30807"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70d67fb4f95e0a11cc632c0d31a52bbd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a70d67fb4f95e0a11cc632c0d31a52bbd"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#a70d67fb4f95e0a11cc632c0d31a52bbd">checkReactionCoordinateCovered</a> (<a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *window, int nwins, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt)</td></tr>
<tr class="memdesc:a70d67fb4f95e0a11cc632c0d31a52bbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the complete reaction coordinate is covered by the histograms. <br/></td></tr>
<tr class="separator:a70d67fb4f95e0a11cc632c0d31a52bbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb6439ccf66d32e56f2e8a6598a2466e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#acb6439ccf66d32e56f2e8a6598a2466e">guessPotByIntegration</a> (<a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *window, int nWindows, <a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt, const char *xlabel)</td></tr>
<tr class="memdesc:acb6439ccf66d32e56f2e8a6598a2466e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute initial potential by integrating the average force.  <a href="#acb6439ccf66d32e56f2e8a6598a2466e">More...</a><br/></td></tr>
<tr class="separator:acb6439ccf66d32e56f2e8a6598a2466e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1b8ea1012ec2c95c6de61314d87d781"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af1b8ea1012ec2c95c6de61314d87d781"></a>
static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#af1b8ea1012ec2c95c6de61314d87d781">wordcount</a> (char *ptr)</td></tr>
<tr class="memdesc:af1b8ea1012ec2c95c6de61314d87d781"><td class="mdescLeft">&#160;</td><td class="mdescRight">Count number of words in an line. <br/></td></tr>
<tr class="separator:af1b8ea1012ec2c95c6de61314d87d781"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afafbb5a26dca1288ca288a1bc8fd3c8a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#afafbb5a26dca1288ca288a1bc8fd3c8a">readPullCoordSelection</a> (<a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *opt, char **fnTpr, int nTpr)</td></tr>
<tr class="memdesc:afafbb5a26dca1288ca288a1bc8fd3c8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read input file for pull group selection (option -is)  <a href="#afafbb5a26dca1288ca288a1bc8fd3c8a">More...</a><br/></td></tr>
<tr class="separator:afafbb5a26dca1288ca288a1bc8fd3c8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5de5a1621e5be83f97b4b112ca845ce"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad5de5a1621e5be83f97b4b112ca845ce"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmx__wham_8cpp.xhtml#ad5de5a1621e5be83f97b4b112ca845ce">gmx_wham</a> (int argc, char *argv[])</td></tr>
<tr class="memdesc:ad5de5a1621e5be83f97b4b112ca845ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">The main gmx wham routine. <br/></td></tr>
<tr class="separator:ad5de5a1621e5be83f97b4b112ca845ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a class="anchor" id="ac205be2172292384dd687b5471a87edd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">anonymous enum</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>enum for bootstrapping method </p>
<p>These bootstrap methods are supported:</p>
<ul>
<li>bootstrap complete histograms with continuous weights (Bayesian bootstrap) (bsMethod_BayesianHist)</li>
<li>bootstrap complete histograms (bsMethod_hist)</li>
<li>bootstrap trajectories from given umbrella histograms. This generates new "synthetic" histograms (bsMethod_traj)</li>
<li>bootstrap trajectories from Gaussian with mu/sigma computed from the respective histogram (bsMethod_trajGauss). This gives very similar results compared to bsMethod_traj.</li>
</ul>
<hr/>
<p> FOR MORE DETAILS ON THE BOOTSTRAP METHODS (INCLUDING EXAMPLES), SEE JS Hub, BL de Groot, D van der Spoel g_wham - A free weighted histogram analysis implementation including robust error and autocorrelation estimates, J Chem Theory Comput, 6(12), 3713-3720 (2010) </p>
<hr/>
 
</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a84785e232c25312e8ad02245caf170a4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void calc_cumulatives </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nWindows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *&#160;</td>
          <td class="paramname"><em>opt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>fnhist</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>xlabel</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculate cumulative distribution function of of all histograms. </p>
<p>This allow to create random number sequences which are distributed according to the histograms. Required to generate the "synthetic" histograms for the Bootstrap method </p>

</div>
</div>
<a class="anchor" id="ab97edb7d1218124daaf4612072434fb4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void copy_pullgrp_to_synthwindow </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *&#160;</td>
          <td class="paramname"><em>synthWindow</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *&#160;</td>
          <td class="paramname"><em>thisWindow</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>pullid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set pull group information of a synthetic histogram. </p>
<p>This is used when bootstapping new trajectories and thereby create new histogtrams, but it is not required if we bootstrap complete histograms. </p>

</div>
</div>
<a class="anchor" id="a672008791bef8cd5936323e4f79116ff"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void enforceEqualWeights </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nWindows</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set identical weights for all histograms. </p>
<p>Normally, the weight is given by the number data points in each histogram, together with the autocorrelation time. This can be overwritten by this routine (not recommended). Since we now support autocorrelations, it is better to set an appropriate autocorrelation times instead of using this function. </p>

</div>
</div>
<a class="anchor" id="acb6439ccf66d32e56f2e8a6598a2466e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void guessPotByIntegration </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nWindows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *&#160;</td>
          <td class="paramname"><em>opt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>xlabel</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compute initial potential by integrating the average force. </p>
<p>This speeds up the convergence by roughly a factor of 2 </p>

</div>
</div>
<a class="anchor" id="a18d45d00a77b7f5ed057805d1fb874ad"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void print_histograms </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>fnhist</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nWindows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>bs_index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *&#160;</td>
          <td class="paramname"><em>opt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>xlabel</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Write all histograms to a file. </p>
<p>If bs_index&gt;=0, a number is added to the output file name to allow the ouput of all sets of bootstrapped histograms. </p>

</div>
</div>
<a class="anchor" id="a3dcaaa3d4f5e5898a4120ab5f4c56bbe"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void read_pdo_data </td>
          <td>(</td>
          <td class="paramtype">FILE *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__UmbrellaHeader.xhtml">t_UmbrellaHeader</a> *&#160;</td>
          <td class="paramname"><em>header</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fileno</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *&#160;</td>
          <td class="paramname"><em>win</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *&#160;</td>
          <td class="paramname"><em>opt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bGetMinMax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td>
          <td class="paramname"><em>mintmp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td>
          <td class="paramname"><em>maxtmp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read the data columns of and PDO file. </p>
<p>TO DO: Get rid of the scanf function to avoid the clang warning. At the moment, this warning is avoided by hiding the format string the variable fmtlf. </p>

</div>
</div>
<a class="anchor" id="a5518dc57c94aa6cc41fd45445c7f4605"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void readIntegratedAutocorrelationTimes </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nwins</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>fn</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read integrated autocorrelation times from input file (option -iiact) </p>
<p>Note: Here we consider tau[int] := int_0^inf ACF(t) as the integrated autocorrelation times. The factor <code>g := 1 + 2*tau[int]</code> subsequently enters the uncertainty. </p>

</div>
</div>
<a class="anchor" id="afafbb5a26dca1288ca288a1bc8fd3c8a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void readPullCoordSelection </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *&#160;</td>
          <td class="paramname"><em>opt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char **&#160;</td>
          <td class="paramname"><em>fnTpr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nTpr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read input file for pull group selection (option -is) </p>
<p>TO DO: ptr=fgets(...) is never freed (small memory leak) </p>

</div>
</div>
<a class="anchor" id="ac5513d86de92e115d313826314753570"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void searchCumulative </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xx</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>j</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return j such that xx[j] &lt;= x &lt; xx[j+1]. </p>
<p>This is used to generate a random sequence distributed according to a histogram </p>

</div>
</div>
<a class="anchor" id="a628ba0656c88094bdb8a7734b62c4b15"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void setup_acc_wham </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>profile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nWindows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *&#160;</td>
          <td class="paramname"><em>opt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check which bins substiantially contribute (accelerates WHAM) </p>
<p>Don't worry, that routine does not mean we compute the PMF in limited precision. After rapid convergence (using only substiantal contributions), we always switch to full precision. </p>

</div>
</div>
<a class="anchor" id="a49b253100717ec8d3bccf80f13dd1b5f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void smoothIact </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structt__UmbrellaWindow.xhtml">t_UmbrellaWindow</a> *&#160;</td>
          <td class="paramname"><em>window</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nwins</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__UmbrellaOptions.xhtml">t_UmbrellaOptions</a> *&#160;</td>
          <td class="paramname"><em>opt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Smooth autocorreltion times along the reaction coordinate. </p>
<p>This is useful if the ACT is subject to high uncertainty in case if limited sampling. Note that -in case of limited sampling- the ACT may be severely underestimated. Note: the g=1+2tau are overwritten. If opt-&gt;bAllowReduceIact==FALSE, the ACTs are never reduced, only increased by the smoothing </p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:20:34 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

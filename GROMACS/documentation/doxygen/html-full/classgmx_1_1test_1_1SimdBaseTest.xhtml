<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::test::SimdBaseTest Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="namespacegmx_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml">SimdBaseTest</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1test_1_1SimdBaseTest-members.xhtml">List of all members</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#pro-attribs">Protected Attributes</a>  </div>
  <div class="headertitle">
<div class="title">gmx::test::SimdBaseTest Class Reference<div class="ingroups"><a class="el" href="group__module__simd.xhtml">SIMD intrinsics interface (simd)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/simd/tests/base.h&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for gmx::test::SimdBaseTest:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1test_1_1SimdBaseTest__inherit__graph.svg" width="659" height="103"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Base class for SIMD test fixtures. </p>
<p>This class contains settings that are common for SIMD and SIMD4 tests, and it is thus not used directly for any tests, but derived separately in simd.h and <a class="el" href="simd4_8h.xhtml" title="Declares fixture for testing of SIMD4 functionality. ">simd4.h</a>. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a293b4002e1c6a4e9863c1f50994f694e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml#a293b4002e1c6a4e9863c1f50994f694e">SimdBaseTest</a> ()</td></tr>
<tr class="memdesc:a293b4002e1c6a4e9863c1f50994f694e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize new SIMD test fixture with default tolerances.  <a href="#a293b4002e1c6a4e9863c1f50994f694e">More...</a><br/></td></tr>
<tr class="separator:a293b4002e1c6a4e9863c1f50994f694e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a379ab155d44071bc98d3fd71b3b76449"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a379ab155d44071bc98d3fd71b3b76449"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml#a379ab155d44071bc98d3fd71b3b76449">setUlpTol</a> (std::int64_t newTol)</td></tr>
<tr class="memdesc:a379ab155d44071bc98d3fd71b3b76449"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adjust ulp tolerance from the default 10 (float) or 255 (double). <br/></td></tr>
<tr class="separator:a379ab155d44071bc98d3fd71b3b76449"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba2dcd7ec0563e05aafd6c176fb286c4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml#aba2dcd7ec0563e05aafd6c176fb286c4">setAbsTol</a> (<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> newTol)</td></tr>
<tr class="memdesc:aba2dcd7ec0563e05aafd6c176fb286c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adjust the absolute tolerance from the default 0.  <a href="#aba2dcd7ec0563e05aafd6c176fb286c4">More...</a><br/></td></tr>
<tr class="separator:aba2dcd7ec0563e05aafd6c176fb286c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a668d22ee1cb32b9bdd226f95479124f0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a668d22ee1cb32b9bdd226f95479124f0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml#a668d22ee1cb32b9bdd226f95479124f0">setRange</a> (<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> low, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> high)</td></tr>
<tr class="memdesc:a668d22ee1cb32b9bdd226f95479124f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change math function testing range from the default [1,10]. <br/></td></tr>
<tr class="separator:a668d22ee1cb32b9bdd226f95479124f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga44ad308730db9d832e68ee9864f83c21"><td class="memItemLeft" align="right" valign="top">::testing::AssertionResult&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga44ad308730db9d832e68ee9864f83c21">compareVectorRealUlp</a> (const char *refExpr, const char *tstExpr, const std::vector&lt; <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> &gt; &amp;ref, const std::vector&lt; <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> &gt; &amp;tst)</td></tr>
<tr class="memdesc:ga44ad308730db9d832e68ee9864f83c21"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compare two std::vector&lt;real&gt; for approximate equality.  <a href="group__module__simd.xhtml#ga44ad308730db9d832e68ee9864f83c21">More...</a><br/></td></tr>
<tr class="separator:ga44ad308730db9d832e68ee9864f83c21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22fabd98b32ffe360fa267d8c0e6ac9d"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a22fabd98b32ffe360fa267d8c0e6ac9d"><td class="memTemplItemLeft" align="right" valign="top">::testing::AssertionResult&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml#a22fabd98b32ffe360fa267d8c0e6ac9d">compareVectorEq</a> (const char *refExpr, const char *tstExpr, const std::vector&lt; T &gt; &amp;ref, const std::vector&lt; T &gt; &amp;tst)</td></tr>
<tr class="memdesc:a22fabd98b32ffe360fa267d8c0e6ac9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compare std::vectors for exact equality.  <a href="#a22fabd98b32ffe360fa267d8c0e6ac9d">More...</a><br/></td></tr>
<tr class="separator:a22fabd98b32ffe360fa267d8c0e6ac9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:ga8a2a543330f7b970d26162dcdd99ee01"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga8a2a543330f7b970d26162dcdd99ee01"></a>
static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga8a2a543330f7b970d26162dcdd99ee01">s_nPoints</a> = 10000</td></tr>
<tr class="memdesc:ga8a2a543330f7b970d26162dcdd99ee01"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of test points to use, settable on command line. <br/></td></tr>
<tr class="separator:ga8a2a543330f7b970d26162dcdd99ee01"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a9e2abac54e05356364ecdb0751e8665b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9e2abac54e05356364ecdb0751e8665b"></a>
std::int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml#a9e2abac54e05356364ecdb0751e8665b">ulpTol_</a></td></tr>
<tr class="memdesc:a9e2abac54e05356364ecdb0751e8665b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Current tolerance in units-in-last-position. <br/></td></tr>
<tr class="separator:a9e2abac54e05356364ecdb0751e8665b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67e1769c0ddf3a84103a1cd47f065bae"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a67e1769c0ddf3a84103a1cd47f065bae"></a>
<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml#a67e1769c0ddf3a84103a1cd47f065bae">absTol_</a></td></tr>
<tr class="memdesc:a67e1769c0ddf3a84103a1cd47f065bae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Current absolute tolerance. <br/></td></tr>
<tr class="separator:a67e1769c0ddf3a84103a1cd47f065bae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d70ac319ae213a906f501b0fa63ed34"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9d70ac319ae213a906f501b0fa63ed34"></a>
std::pair&lt; <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml#a9d70ac319ae213a906f501b0fa63ed34">range_</a></td></tr>
<tr class="memdesc:a9d70ac319ae213a906f501b0fa63ed34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Range for math function tests. <br/></td></tr>
<tr class="separator:a9d70ac319ae213a906f501b0fa63ed34"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a293b4002e1c6a4e9863c1f50994f694e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">gmx::test::SimdBaseTest::SimdBaseTest </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialize new SIMD test fixture with default tolerances. </p>
<p>The default absolute tolerance is set to 0, which means the we always check the ulp tolerance by default (passing the absolute tolerance test would otherwise mean we approve the test instantly).</p>
<p>The default ulp tolerance is set based on the target number of bits requested for single or double precision, depending on what the default Gromacs precision is. We add two bits to avoid tests failing due to corner cases where compiler optimization might cause a slight precision loss e.g. for very small numbers.</p>
<p>Most SIMD math functions actually achieve 2-3 ulp accuracy in single, but by being a bit liberal we only catch real errors rather than doing compiler-standard-compliance debugging.</p>
<p>The range is used by derived classes to test math functions. The default test range will be [1,10], which is intentionally conservative so it works with (inverse) square root, division, exponentials, logarithms, and error functions. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a22fabd98b32ffe360fa267d8c0e6ac9d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">::testing::AssertionResult gmx::test::SimdBaseTest::compareVectorEq </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>refExpr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>tstExpr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>ref</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>tst</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Compare std::vectors for exact equality. </p>
<p>The template in this class makes it usable for testing both SIMD floating-point and integers variables, after conversion to vectors. This is an internal implementation routine that will be used by routines in derived child classes that first convert SIMD or SIMD4 variables to std::vector&lt;real&gt;. Do not call it directly.</p>
<p>This routine is designed according to the Google test specs, so the char strings will describe the arguments to the macro.</p>
<p>The comparison is applied to each element, and it returns true if each element in the vector test variable is within the class tolerances of the corresponding reference elements. </p>

</div>
</div>
<a class="anchor" id="aba2dcd7ec0563e05aafd6c176fb286c4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::test::SimdBaseTest::setAbsTol </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>newTol</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adjust the absolute tolerance from the default 0. </p>
<p>If values are closer than the absolute tolerance, the test will pass no matter what their ulp difference is. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/simd/tests/<a class="el" href="base_8h.xhtml">base.h</a></li>
<li>src/gromacs/simd/tests/base.cpp</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:20:48 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::test::anonymous_namespace{simd_floatingpoint_util.cpp}::SimdFloatingpointUtilTest Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="namespacegmx_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02simd__floatingpoint__util_8cpp_03.xhtml">anonymous_namespace{simd_floatingpoint_util.cpp}</a></li><li class="navelem"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02simd__floatingpoint__util_8cpp_03_1_1SimdFloatingpointUtilTest.xhtml">SimdFloatingpointUtilTest</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1test_1_1anonymous__namespace_02simd__floatingpoint__util_8cpp_03_1_1SimdFloatingpointUtilTest-members.xhtml">List of all members</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#pro-static-attribs">Static Protected Attributes</a>  </div>
  <div class="headertitle">
<div class="title">gmx::test::anonymous_namespace{simd_floatingpoint_util.cpp}::SimdFloatingpointUtilTest Class Reference<div class="ingroups"><a class="el" href="group__module__simd.xhtml">SIMD intrinsics interface (simd)</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for gmx::test::anonymous_namespace{simd_floatingpoint_util.cpp}::SimdFloatingpointUtilTest:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1test_1_1anonymous__namespace_02simd__floatingpoint__util_8cpp_03_1_1SimdFloatingpointUtilTest__inherit__graph.svg" width="244" height="216"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for gmx::test::anonymous_namespace{simd_floatingpoint_util.cpp}::SimdFloatingpointUtilTest:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1test_1_1anonymous__namespace_02simd__floatingpoint__util_8cpp_03_1_1SimdFloatingpointUtilTest__coll__graph.svg" width="244" height="216"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Test fixture for higher-level floating-point utility functions. </p>
<p>Inherit from main <a class="el" href="classgmx_1_1test_1_1SimdTest.xhtml" title="Test fixture for SIMD tests. ">SimdTest</a>, add code to generate aligned memory and data. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ae40689229add78d7c7630059f6e3d966"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae40689229add78d7c7630059f6e3d966"></a>
std::vector&lt; int, <br class="typebreak"/>
<a class="el" href="classgmx_1_1AlignedAllocator.xhtml">AlignedAllocator</a>&lt; int &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02simd__floatingpoint__util_8cpp_03_1_1SimdFloatingpointUtilTest.xhtml#ae40689229add78d7c7630059f6e3d966">integerMemory_</a></td></tr>
<tr class="memdesc:ae40689229add78d7c7630059f6e3d966"><td class="mdescLeft">&#160;</td><td class="mdescRight">Aligned integer memory. <br/></td></tr>
<tr class="separator:ae40689229add78d7c7630059f6e3d966"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abce9ff6f66bcd9369724da29e568a98c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abce9ff6f66bcd9369724da29e568a98c"></a>
std::vector&lt; <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>, <br class="typebreak"/>
<a class="el" href="classgmx_1_1AlignedAllocator.xhtml">AlignedAllocator</a>&lt; <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02simd__floatingpoint__util_8cpp_03_1_1SimdFloatingpointUtilTest.xhtml#abce9ff6f66bcd9369724da29e568a98c">realMemory_</a></td></tr>
<tr class="memdesc:abce9ff6f66bcd9369724da29e568a98c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Aligned real memory. <br/></td></tr>
<tr class="separator:abce9ff6f66bcd9369724da29e568a98c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6612284b57d96955e12046d6878d08e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad6612284b57d96955e12046d6878d08e"></a>
int *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02simd__floatingpoint__util_8cpp_03_1_1SimdFloatingpointUtilTest.xhtml#ad6612284b57d96955e12046d6878d08e">offset_</a></td></tr>
<tr class="memdesc:ad6612284b57d96955e12046d6878d08e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer to offset indices, aligned memory. <br/></td></tr>
<tr class="separator:ad6612284b57d96955e12046d6878d08e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6062f6e72de13202586ef364f383a9bc"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6062f6e72de13202586ef364f383a9bc"></a>
<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02simd__floatingpoint__util_8cpp_03_1_1SimdFloatingpointUtilTest.xhtml#a6062f6e72de13202586ef364f383a9bc">val0_</a></td></tr>
<tr class="memdesc:a6062f6e72de13202586ef364f383a9bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer to GMX_SIMD_REAL_WIDTH values, aligned. <br/></td></tr>
<tr class="separator:a6062f6e72de13202586ef364f383a9bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63f8fe50e0e3400481c38b8962511195"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a63f8fe50e0e3400481c38b8962511195"></a>
<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02simd__floatingpoint__util_8cpp_03_1_1SimdFloatingpointUtilTest.xhtml#a63f8fe50e0e3400481c38b8962511195">val1_</a></td></tr>
<tr class="memdesc:a63f8fe50e0e3400481c38b8962511195"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer to GMX_SIMD_REAL_WIDTH values, aligned. <br/></td></tr>
<tr class="separator:a63f8fe50e0e3400481c38b8962511195"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d5dd4a32a5d4df83edfbbe8dd019f60"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4d5dd4a32a5d4df83edfbbe8dd019f60"></a>
<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02simd__floatingpoint__util_8cpp_03_1_1SimdFloatingpointUtilTest.xhtml#a4d5dd4a32a5d4df83edfbbe8dd019f60">val2_</a></td></tr>
<tr class="memdesc:a4d5dd4a32a5d4df83edfbbe8dd019f60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer to GMX_SIMD_REAL_WIDTH values, aligned. <br/></td></tr>
<tr class="separator:a4d5dd4a32a5d4df83edfbbe8dd019f60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1aa2f52c7bc85f30966387746b4d032"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af1aa2f52c7bc85f30966387746b4d032"></a>
<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02simd__floatingpoint__util_8cpp_03_1_1SimdFloatingpointUtilTest.xhtml#af1aa2f52c7bc85f30966387746b4d032">val3_</a></td></tr>
<tr class="memdesc:af1aa2f52c7bc85f30966387746b4d032"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer to GMX_SIMD_REAL_WIDTH values, aligned. <br/></td></tr>
<tr class="separator:af1aa2f52c7bc85f30966387746b4d032"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37baa08ef66f96004bf9efc8d3653fb0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a37baa08ef66f96004bf9efc8d3653fb0"></a>
<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02simd__floatingpoint__util_8cpp_03_1_1SimdFloatingpointUtilTest.xhtml#a37baa08ef66f96004bf9efc8d3653fb0">mem0_</a></td></tr>
<tr class="memdesc:a37baa08ef66f96004bf9efc8d3653fb0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer to aligned memory, s_workMemSize real values. <br/></td></tr>
<tr class="separator:a37baa08ef66f96004bf9efc8d3653fb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd3883828407d2663d8b5e23d9311e88"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abd3883828407d2663d8b5e23d9311e88"></a>
<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02simd__floatingpoint__util_8cpp_03_1_1SimdFloatingpointUtilTest.xhtml#abd3883828407d2663d8b5e23d9311e88">mem1_</a></td></tr>
<tr class="memdesc:abd3883828407d2663d8b5e23d9311e88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer to aligned memory, s_workMemSize real values. <br/></td></tr>
<tr class="separator:abd3883828407d2663d8b5e23d9311e88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classgmx_1_1test_1_1SimdBaseTest"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classgmx_1_1test_1_1SimdBaseTest')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml">gmx::test::SimdBaseTest</a></td></tr>
<tr class="memitem:a9e2abac54e05356364ecdb0751e8665b inherit pro_attribs_classgmx_1_1test_1_1SimdBaseTest"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9e2abac54e05356364ecdb0751e8665b"></a>
std::int64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml#a9e2abac54e05356364ecdb0751e8665b">ulpTol_</a></td></tr>
<tr class="memdesc:a9e2abac54e05356364ecdb0751e8665b inherit pro_attribs_classgmx_1_1test_1_1SimdBaseTest"><td class="mdescLeft">&#160;</td><td class="mdescRight">Current tolerance in units-in-last-position. <br/></td></tr>
<tr class="separator:a9e2abac54e05356364ecdb0751e8665b inherit pro_attribs_classgmx_1_1test_1_1SimdBaseTest"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67e1769c0ddf3a84103a1cd47f065bae inherit pro_attribs_classgmx_1_1test_1_1SimdBaseTest"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a67e1769c0ddf3a84103a1cd47f065bae"></a>
<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml#a67e1769c0ddf3a84103a1cd47f065bae">absTol_</a></td></tr>
<tr class="memdesc:a67e1769c0ddf3a84103a1cd47f065bae inherit pro_attribs_classgmx_1_1test_1_1SimdBaseTest"><td class="mdescLeft">&#160;</td><td class="mdescRight">Current absolute tolerance. <br/></td></tr>
<tr class="separator:a67e1769c0ddf3a84103a1cd47f065bae inherit pro_attribs_classgmx_1_1test_1_1SimdBaseTest"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d70ac319ae213a906f501b0fa63ed34 inherit pro_attribs_classgmx_1_1test_1_1SimdBaseTest"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9d70ac319ae213a906f501b0fa63ed34"></a>
std::pair&lt; <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml#a9d70ac319ae213a906f501b0fa63ed34">range_</a></td></tr>
<tr class="memdesc:a9d70ac319ae213a906f501b0fa63ed34 inherit pro_attribs_classgmx_1_1test_1_1SimdBaseTest"><td class="mdescLeft">&#160;</td><td class="mdescRight">Range for math function tests. <br/></td></tr>
<tr class="separator:a9d70ac319ae213a906f501b0fa63ed34 inherit pro_attribs_classgmx_1_1test_1_1SimdBaseTest"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-static-attribs"></a>
Static Protected Attributes</h2></td></tr>
<tr class="memitem:af3f4dc3a8b51cb1f39859c3dcdf13593"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af3f4dc3a8b51cb1f39859c3dcdf13593"></a>
static const std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02simd__floatingpoint__util_8cpp_03_1_1SimdFloatingpointUtilTest.xhtml#af3f4dc3a8b51cb1f39859c3dcdf13593">s_workMemSize_</a> = 16*3* 4 +4</td></tr>
<tr class="memdesc:af3f4dc3a8b51cb1f39859c3dcdf13593"><td class="mdescLeft">&#160;</td><td class="mdescRight">Size of memory work buffers. <br/></td></tr>
<tr class="separator:af3f4dc3a8b51cb1f39859c3dcdf13593"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_methods_classgmx_1_1test_1_1SimdTest"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classgmx_1_1test_1_1SimdTest')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classgmx_1_1test_1_1SimdTest.xhtml">gmx::test::SimdTest</a></td></tr>
<tr class="memitem:ga001cf162308616c323787bc47a4bb0f3 inherit pub_methods_classgmx_1_1test_1_1SimdTest"><td class="memItemLeft" align="right" valign="top">::testing::AssertionResult&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga001cf162308616c323787bc47a4bb0f3">compareSimdRealUlp</a> (const char *refExpr, const char *tstExpr, const <a class="el" href="namespacegmx.xhtml#a8591d5e5ac6d1bec936a013fdc41b904">SimdReal</a> ref, const <a class="el" href="namespacegmx.xhtml#a8591d5e5ac6d1bec936a013fdc41b904">SimdReal</a> tst)</td></tr>
<tr class="memdesc:ga001cf162308616c323787bc47a4bb0f3 inherit pub_methods_classgmx_1_1test_1_1SimdTest"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compare two real SIMD variables for approximate equality.  <a href="group__module__simd.xhtml#ga001cf162308616c323787bc47a4bb0f3">More...</a><br/></td></tr>
<tr class="separator:ga001cf162308616c323787bc47a4bb0f3 inherit pub_methods_classgmx_1_1test_1_1SimdTest"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac7aae29cb02a7c4535a242edd65914f0 inherit pub_methods_classgmx_1_1test_1_1SimdTest"><td class="memItemLeft" align="right" valign="top">::testing::AssertionResult&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#gac7aae29cb02a7c4535a242edd65914f0">compareSimdRealEq</a> (const char *refExpr, const char *tstExpr, const <a class="el" href="namespacegmx.xhtml#a8591d5e5ac6d1bec936a013fdc41b904">SimdReal</a> ref, const <a class="el" href="namespacegmx.xhtml#a8591d5e5ac6d1bec936a013fdc41b904">SimdReal</a> tst)</td></tr>
<tr class="memdesc:gac7aae29cb02a7c4535a242edd65914f0 inherit pub_methods_classgmx_1_1test_1_1SimdTest"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compare two real SIMD variables for exact equality.  <a href="group__module__simd.xhtml#gac7aae29cb02a7c4535a242edd65914f0">More...</a><br/></td></tr>
<tr class="separator:gac7aae29cb02a7c4535a242edd65914f0 inherit pub_methods_classgmx_1_1test_1_1SimdTest"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4dbe6b2353b0cf3c1db70e3dcb546b7a inherit pub_methods_classgmx_1_1test_1_1SimdTest"><td class="memItemLeft" align="right" valign="top">::testing::AssertionResult&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga4dbe6b2353b0cf3c1db70e3dcb546b7a">compareSimdInt32</a> (const char *refExpr, const char *tstExpr, const <a class="el" href="namespacegmx.xhtml#a6598cea23dd103ce19bff4743279e3bc">SimdInt32</a> ref, const <a class="el" href="namespacegmx.xhtml#a6598cea23dd103ce19bff4743279e3bc">SimdInt32</a> tst)</td></tr>
<tr class="memdesc:ga4dbe6b2353b0cf3c1db70e3dcb546b7a inherit pub_methods_classgmx_1_1test_1_1SimdTest"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compare two 32-bit integer SIMD variables.  <a href="group__module__simd.xhtml#ga4dbe6b2353b0cf3c1db70e3dcb546b7a">More...</a><br/></td></tr>
<tr class="separator:ga4dbe6b2353b0cf3c1db70e3dcb546b7a inherit pub_methods_classgmx_1_1test_1_1SimdTest"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classgmx_1_1test_1_1SimdBaseTest')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml">gmx::test::SimdBaseTest</a></td></tr>
<tr class="memitem:a293b4002e1c6a4e9863c1f50994f694e inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml#a293b4002e1c6a4e9863c1f50994f694e">SimdBaseTest</a> ()</td></tr>
<tr class="memdesc:a293b4002e1c6a4e9863c1f50994f694e inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize new SIMD test fixture with default tolerances.  <a href="#a293b4002e1c6a4e9863c1f50994f694e">More...</a><br/></td></tr>
<tr class="separator:a293b4002e1c6a4e9863c1f50994f694e inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a379ab155d44071bc98d3fd71b3b76449 inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a379ab155d44071bc98d3fd71b3b76449"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml#a379ab155d44071bc98d3fd71b3b76449">setUlpTol</a> (std::int64_t newTol)</td></tr>
<tr class="memdesc:a379ab155d44071bc98d3fd71b3b76449 inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adjust ulp tolerance from the default 10 (float) or 255 (double). <br/></td></tr>
<tr class="separator:a379ab155d44071bc98d3fd71b3b76449 inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba2dcd7ec0563e05aafd6c176fb286c4 inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml#aba2dcd7ec0563e05aafd6c176fb286c4">setAbsTol</a> (<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> newTol)</td></tr>
<tr class="memdesc:aba2dcd7ec0563e05aafd6c176fb286c4 inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adjust the absolute tolerance from the default 0.  <a href="#aba2dcd7ec0563e05aafd6c176fb286c4">More...</a><br/></td></tr>
<tr class="separator:aba2dcd7ec0563e05aafd6c176fb286c4 inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a668d22ee1cb32b9bdd226f95479124f0 inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a668d22ee1cb32b9bdd226f95479124f0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml#a668d22ee1cb32b9bdd226f95479124f0">setRange</a> (<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> low, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> high)</td></tr>
<tr class="memdesc:a668d22ee1cb32b9bdd226f95479124f0 inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change math function testing range from the default [1,10]. <br/></td></tr>
<tr class="separator:a668d22ee1cb32b9bdd226f95479124f0 inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga44ad308730db9d832e68ee9864f83c21 inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="memItemLeft" align="right" valign="top">::testing::AssertionResult&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga44ad308730db9d832e68ee9864f83c21">compareVectorRealUlp</a> (const char *refExpr, const char *tstExpr, const std::vector&lt; <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> &gt; &amp;ref, const std::vector&lt; <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> &gt; &amp;tst)</td></tr>
<tr class="memdesc:ga44ad308730db9d832e68ee9864f83c21 inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compare two std::vector&lt;real&gt; for approximate equality.  <a href="group__module__simd.xhtml#ga44ad308730db9d832e68ee9864f83c21">More...</a><br/></td></tr>
<tr class="separator:ga44ad308730db9d832e68ee9864f83c21 inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22fabd98b32ffe360fa267d8c0e6ac9d inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a22fabd98b32ffe360fa267d8c0e6ac9d inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="memTemplItemLeft" align="right" valign="top">::testing::AssertionResult&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml#a22fabd98b32ffe360fa267d8c0e6ac9d">compareVectorEq</a> (const char *refExpr, const char *tstExpr, const std::vector&lt; T &gt; &amp;ref, const std::vector&lt; T &gt; &amp;tst)</td></tr>
<tr class="memdesc:a22fabd98b32ffe360fa267d8c0e6ac9d inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compare std::vectors for exact equality.  <a href="#a22fabd98b32ffe360fa267d8c0e6ac9d">More...</a><br/></td></tr>
<tr class="separator:a22fabd98b32ffe360fa267d8c0e6ac9d inherit pub_methods_classgmx_1_1test_1_1SimdBaseTest"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_classgmx_1_1test_1_1SimdBaseTest"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_classgmx_1_1test_1_1SimdBaseTest')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="classgmx_1_1test_1_1SimdBaseTest.xhtml">gmx::test::SimdBaseTest</a></td></tr>
<tr class="memitem:ga8a2a543330f7b970d26162dcdd99ee01 inherit pub_static_attribs_classgmx_1_1test_1_1SimdBaseTest"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga8a2a543330f7b970d26162dcdd99ee01"></a>
static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga8a2a543330f7b970d26162dcdd99ee01">s_nPoints</a> = 10000</td></tr>
<tr class="memdesc:ga8a2a543330f7b970d26162dcdd99ee01 inherit pub_static_attribs_classgmx_1_1test_1_1SimdBaseTest"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of test points to use, settable on command line. <br/></td></tr>
<tr class="separator:ga8a2a543330f7b970d26162dcdd99ee01 inherit pub_static_attribs_classgmx_1_1test_1_1SimdBaseTest"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/gromacs/simd/tests/simd_floatingpoint_util.cpp</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:20:48 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

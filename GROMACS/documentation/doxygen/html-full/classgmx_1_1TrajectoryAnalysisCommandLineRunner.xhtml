<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::TrajectoryAnalysisCommandLineRunner Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1TrajectoryAnalysisCommandLineRunner.xhtml">TrajectoryAnalysisCommandLineRunner</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1TrajectoryAnalysisCommandLineRunner-members.xhtml">List of all members</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::TrajectoryAnalysisCommandLineRunner Class Reference<div class="ingroups"><a class="el" href="group__group__publicapi.xhtml">Public API</a> &#124; <a class="el" href="group__module__trajectoryanalysis.xhtml">Framework for Trajectory Analysis (trajectoryanalysis)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/trajectoryanalysis/cmdlinerunner.h&gt;</code></p>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Runner for command-line trajectory analysis tools. </p>
<p>This class provides static methods to implement a command-line analysis program, given a <a class="el" href="classgmx_1_1TrajectoryAnalysisModule.xhtml" title="Base class for trajectory analysis modules. ">TrajectoryAnalysisModule</a> object (or a factory of such). It takes care of common command-line parameters, initializing and evaluating selections, and looping over trajectory frames. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a29b6cede161d6735c9b6c71d10141b3d"><td class="memItemLeft" align="right" valign="top">typedef std::function<br class="typebreak"/>
&lt; <a class="el" href="namespacegmx.xhtml#a832da3c093109c13cc2369de05e02f3b">TrajectoryAnalysisModulePointer</a>()&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TrajectoryAnalysisCommandLineRunner.xhtml#a29b6cede161d6735c9b6c71d10141b3d">ModuleFactoryMethod</a></td></tr>
<tr class="memdesc:a29b6cede161d6735c9b6c71d10141b3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Factory method type for creating a trajectory analysis module.  <a href="#a29b6cede161d6735c9b6c71d10141b3d">More...</a><br/></td></tr>
<tr class="separator:a29b6cede161d6735c9b6c71d10141b3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a12cd1b40ed04cda667f315e2adee3337"><td class="memTemplParams" colspan="2">template&lt;class ModuleType &gt; </td></tr>
<tr class="memitem:a12cd1b40ed04cda667f315e2adee3337"><td class="memTemplItemLeft" align="right" valign="top">static int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classgmx_1_1TrajectoryAnalysisCommandLineRunner.xhtml#a12cd1b40ed04cda667f315e2adee3337">runAsMain</a> (int argc, char *argv[])</td></tr>
<tr class="memdesc:a12cd1b40ed04cda667f315e2adee3337"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements a <a class="el" href="test__selection_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97" title="The main function for the selection testing tool. ">main()</a> method that runs a given module.  <a href="#a12cd1b40ed04cda667f315e2adee3337">More...</a><br/></td></tr>
<tr class="separator:a12cd1b40ed04cda667f315e2adee3337"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d678f11c9fd7a0b958dda6eb768a775"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TrajectoryAnalysisCommandLineRunner.xhtml#a2d678f11c9fd7a0b958dda6eb768a775">runAsMain</a> (int argc, char *argv[], <a class="el" href="classgmx_1_1TrajectoryAnalysisCommandLineRunner.xhtml#a29b6cede161d6735c9b6c71d10141b3d">ModuleFactoryMethod</a> factory)</td></tr>
<tr class="memdesc:a2d678f11c9fd7a0b958dda6eb768a775"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements a <a class="el" href="test__selection_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97" title="The main function for the selection testing tool. ">main()</a> method that runs a given module.  <a href="#a2d678f11c9fd7a0b958dda6eb768a775">More...</a><br/></td></tr>
<tr class="separator:a2d678f11c9fd7a0b958dda6eb768a775"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0549c25021f6f1780a24110cd2991ac"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TrajectoryAnalysisCommandLineRunner.xhtml#ae0549c25021f6f1780a24110cd2991ac">registerModule</a> (<a class="el" href="classgmx_1_1CommandLineModuleManager.xhtml">CommandLineModuleManager</a> *manager, const char *name, const char *description, <a class="el" href="classgmx_1_1TrajectoryAnalysisCommandLineRunner.xhtml#a29b6cede161d6735c9b6c71d10141b3d">ModuleFactoryMethod</a> factory)</td></tr>
<tr class="memdesc:ae0549c25021f6f1780a24110cd2991ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers a command-line module that runs a given module.  <a href="#ae0549c25021f6f1780a24110cd2991ac">More...</a><br/></td></tr>
<tr class="separator:ae0549c25021f6f1780a24110cd2991ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac32355069a35fc79ffeb0c8375a672e7"><td class="memItemLeft" align="right" valign="top">static std::unique_ptr<br class="typebreak"/>
&lt; <a class="el" href="classgmx_1_1ICommandLineOptionsModule.xhtml">ICommandLineOptionsModule</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TrajectoryAnalysisCommandLineRunner.xhtml#ac32355069a35fc79ffeb0c8375a672e7">createModule</a> (<a class="el" href="namespacegmx.xhtml#a832da3c093109c13cc2369de05e02f3b">TrajectoryAnalysisModulePointer</a> module)</td></tr>
<tr class="memdesc:ac32355069a35fc79ffeb0c8375a672e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a command-line module that runs the provided analysis module.  <a href="#ac32355069a35fc79ffeb0c8375a672e7">More...</a><br/></td></tr>
<tr class="separator:ac32355069a35fc79ffeb0c8375a672e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="a29b6cede161d6735c9b6c71d10141b3d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::function&lt;<a class="el" href="namespacegmx.xhtml#a832da3c093109c13cc2369de05e02f3b">TrajectoryAnalysisModulePointer</a>()&gt; <a class="el" href="classgmx_1_1TrajectoryAnalysisCommandLineRunner.xhtml#a29b6cede161d6735c9b6c71d10141b3d">gmx::TrajectoryAnalysisCommandLineRunner::ModuleFactoryMethod</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Factory method type for creating a trajectory analysis module. </p>
<p>This method allows the module creation to be postponed to the point where the module is needed, reducing initialization costs in, e.g., the <code>gmx</code> binary, and simplifying exception handling. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ac32355069a35fc79ffeb0c8375a672e7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt; <a class="el" href="classgmx_1_1ICommandLineOptionsModule.xhtml">ICommandLineOptionsModule</a> &gt; gmx::TrajectoryAnalysisCommandLineRunner::createModule </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacegmx.xhtml#a832da3c093109c13cc2369de05e02f3b">TrajectoryAnalysisModulePointer</a>&#160;</td>
          <td class="paramname"><em>module</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a command-line module that runs the provided analysis module. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">module</td><td>Module to run. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Command-line module that runs the provided analysis module. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory.</td></tr>
  </table>
  </dd>
</dl>
<p>This is mainly provided for testing purposes that want to bypass <a class="el" href="classgmx_1_1CommandLineModuleManager.xhtml" title="Implements a wrapper command-line interface for multiple modules. ">CommandLineModuleManager</a>. </p>

</div>
</div>
<a class="anchor" id="ae0549c25021f6f1780a24110cd2991ac"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::TrajectoryAnalysisCommandLineRunner::registerModule </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1CommandLineModuleManager.xhtml">CommandLineModuleManager</a> *&#160;</td>
          <td class="paramname"><em>manager</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classgmx_1_1TrajectoryAnalysisCommandLineRunner.xhtml#a29b6cede161d6735c9b6c71d10141b3d">ModuleFactoryMethod</a>&#160;</td>
          <td class="paramname"><em>factory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Registers a command-line module that runs a given module. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">manager</td><td>Manager to register the module to. </td></tr>
    <tr><td class="paramname">name</td><td>Name of the module to register. </td></tr>
    <tr><td class="paramname">description</td><td>One-line description for the module to register. </td></tr>
    <tr><td class="paramname">factory</td><td>Function that creates the module on demand.</td></tr>
  </table>
  </dd>
</dl>
<p><code>name</code> and <code>descriptions</code> must be string constants or otherwise stay valid for the duration of the program execution. </p>

</div>
</div>
<a class="anchor" id="a12cd1b40ed04cda667f315e2adee3337"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class ModuleType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int gmx::TrajectoryAnalysisCommandLineRunner::runAsMain </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>argv</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements a <a class="el" href="test__selection_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97" title="The main function for the selection testing tool. ">main()</a> method that runs a given module. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">ModuleType</td><td>Trajectory analysis module. </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">argc</td><td><code>argc</code> passed to <a class="el" href="test__selection_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97" title="The main function for the selection testing tool. ">main()</a>. </td></tr>
    <tr><td class="paramname">argv</td><td><code>argv</code> passed to <a class="el" href="test__selection_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97" title="The main function for the selection testing tool. ">main()</a>.</td></tr>
  </table>
  </dd>
</dl>
<p>This method abstracts away all the logic required to implement a <a class="el" href="test__selection_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97" title="The main function for the selection testing tool. ">main()</a> method in user tools, allowing that to be changed without requiring changes to the tools themselves.</p>
<p><code>ModuleType</code> should be default-constructible and derive from <a class="el" href="classgmx_1_1TrajectoryAnalysisModule.xhtml" title="Base class for trajectory analysis modules. ">TrajectoryAnalysisModule</a>.</p>
<p>Does not throw. All exceptions are caught and handled internally. </p>

</div>
</div>
<a class="anchor" id="a2d678f11c9fd7a0b958dda6eb768a775"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::TrajectoryAnalysisCommandLineRunner::runAsMain </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>argv</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classgmx_1_1TrajectoryAnalysisCommandLineRunner.xhtml#a29b6cede161d6735c9b6c71d10141b3d">ModuleFactoryMethod</a>&#160;</td>
          <td class="paramname"><em>factory</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements a <a class="el" href="test__selection_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97" title="The main function for the selection testing tool. ">main()</a> method that runs a given module. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">argc</td><td><code>argc</code> passed to <a class="el" href="test__selection_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97" title="The main function for the selection testing tool. ">main()</a>. </td></tr>
    <tr><td class="paramname">argv</td><td><code>argv</code> passed to <a class="el" href="test__selection_8cpp.xhtml#a0ddf1224851353fc92bfbff6f499fa97" title="The main function for the selection testing tool. ">main()</a>. </td></tr>
    <tr><td class="paramname">factory</td><td>Function that creates the module on demand.</td></tr>
  </table>
  </dd>
</dl>
<p>Implements the template <a class="el" href="classgmx_1_1TrajectoryAnalysisCommandLineRunner.xhtml#a12cd1b40ed04cda667f315e2adee3337" title="Implements a main() method that runs a given module. ">runAsMain()</a>, but can also be used independently.</p>
<p>Does not throw. All exceptions are caught and handled internally. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/trajectoryanalysis/<a class="el" href="cmdlinerunner_8h.xhtml">cmdlinerunner.h</a></li>
<li>src/gromacs/trajectoryanalysis/<a class="el" href="cmdlinerunner_8cpp.xhtml">cmdlinerunner.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:20:46 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

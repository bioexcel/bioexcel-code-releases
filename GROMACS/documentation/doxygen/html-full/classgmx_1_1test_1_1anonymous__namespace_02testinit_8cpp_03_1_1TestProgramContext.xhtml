<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="namespacegmx_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03.xhtml">anonymous_namespace{testinit.cpp}</a></li><li class="navelem"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext.xhtml">TestProgramContext</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext-members.xhtml">List of all members</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext Class Reference<div class="ingroups"><a class="el" href="group__module__testutils.xhtml">Testing Utilities (testutils)</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext__inherit__graph.svg" width="179" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext__coll__graph.svg" width="179" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Custom program context for test binaries. </p>
<p>This context overrides the <a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext.xhtml#a449de0dbcfc4c1103c1c89b086061bec" title="Returns the installation prefix for GROMACS. ">installationPrefix()</a> implementation to always load data files from the source directory, as the test binaries are never installed. It also support overriding the directory through a command-line option to the test binary. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad5dac6194a35b4fe18b01362c13700d7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext.xhtml#ad5dac6194a35b4fe18b01362c13700d7">TestProgramContext</a> (const <a class="el" href="classgmx_1_1IProgramContext.xhtml">IProgramContext</a> &amp;context)</td></tr>
<tr class="memdesc:ad5dac6194a35b4fe18b01362c13700d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a test program context.  <a href="#ad5dac6194a35b4fe18b01362c13700d7">More...</a><br/></td></tr>
<tr class="separator:ad5dac6194a35b4fe18b01362c13700d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76a19afcbf8836dd80e9cde09269360b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a76a19afcbf8836dd80e9cde09269360b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext.xhtml#a76a19afcbf8836dd80e9cde09269360b">overrideSourceRoot</a> (const std::string &amp;sourceRoot)</td></tr>
<tr class="memdesc:a76a19afcbf8836dd80e9cde09269360b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the source directory root from which to look for data files. <br/></td></tr>
<tr class="separator:a76a19afcbf8836dd80e9cde09269360b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a822088e5e1df12f90828d947a52e57ae"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext.xhtml#a822088e5e1df12f90828d947a52e57ae">programName</a> () const </td></tr>
<tr class="memdesc:a822088e5e1df12f90828d947a52e57ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the binary as it was invoked without any path.  <a href="#a822088e5e1df12f90828d947a52e57ae">More...</a><br/></td></tr>
<tr class="separator:a822088e5e1df12f90828d947a52e57ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8aa372f60d09ab6528fc59d284d21cb2"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext.xhtml#a8aa372f60d09ab6528fc59d284d21cb2">displayName</a> () const </td></tr>
<tr class="memdesc:a8aa372f60d09ab6528fc59d284d21cb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a display name for the program.  <a href="#a8aa372f60d09ab6528fc59d284d21cb2">More...</a><br/></td></tr>
<tr class="separator:a8aa372f60d09ab6528fc59d284d21cb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99dd828839adaa701fd6eadfe4ee46d8"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext.xhtml#a99dd828839adaa701fd6eadfe4ee46d8">fullBinaryPath</a> () const </td></tr>
<tr class="memdesc:a99dd828839adaa701fd6eadfe4ee46d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the full path of the running binary.  <a href="#a99dd828839adaa701fd6eadfe4ee46d8">More...</a><br/></td></tr>
<tr class="separator:a99dd828839adaa701fd6eadfe4ee46d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a449de0dbcfc4c1103c1c89b086061bec"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structgmx_1_1InstallationPrefixInfo.xhtml">InstallationPrefixInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext.xhtml#a449de0dbcfc4c1103c1c89b086061bec">installationPrefix</a> () const </td></tr>
<tr class="memdesc:a449de0dbcfc4c1103c1c89b086061bec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the installation prefix for GROMACS.  <a href="#a449de0dbcfc4c1103c1c89b086061bec">More...</a><br/></td></tr>
<tr class="separator:a449de0dbcfc4c1103c1c89b086061bec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4ffade4d9d27df3873969b34685cb7c"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext.xhtml#ae4ffade4d9d27df3873969b34685cb7c">commandLine</a> () const </td></tr>
<tr class="memdesc:ae4ffade4d9d27df3873969b34685cb7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the full command line used to invoke the binary.  <a href="#ae4ffade4d9d27df3873969b34685cb7c">More...</a><br/></td></tr>
<tr class="separator:ae4ffade4d9d27df3873969b34685cb7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ad5dac6194a35b4fe18b01362c13700d7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext::TestProgramContext </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1IProgramContext.xhtml">IProgramContext</a> &amp;&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializes a test program context. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Current GROMACS program context. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ae4ffade4d9d27df3873969b34685cb7c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext::commandLine </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the full command line used to invoke the binary. </p>
<p>The implementation can provide an empty string if no command line is available. </p>

<p>Implements <a class="el" href="classgmx_1_1IProgramContext.xhtml#a2512c75e34337df80e3a1e994d17a8cc">gmx::IProgramContext</a>.</p>

</div>
</div>
<a class="anchor" id="a8aa372f60d09ab6528fc59d284d21cb2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext::displayName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a display name for the program. </p>
<p>For simple programs, this can equal <a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext.xhtml#a822088e5e1df12f90828d947a52e57ae" title="Returns the name of the binary as it was invoked without any path. ">programName()</a>. For the GROMACS <code>gmx</code> wrapper binary, this includes the name of the module (e.g., <code>gmx angle</code>). This is used only for informational purposes, and there are no constraints on contents, except that it should not be <code>NULL</code>. </p>

<p>Implements <a class="el" href="classgmx_1_1IProgramContext.xhtml#a66ba95d75a6eefd4cc76b677130a48eb">gmx::IProgramContext</a>.</p>

</div>
</div>
<a class="anchor" id="a99dd828839adaa701fd6eadfe4ee46d8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext::fullBinaryPath </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the full path of the running binary. </p>
<p>This is mainly used for informational purposes. There are no constraints on contents, except that it should not be <code>NULL</code>. Currently, this is also used for sanity checks in checkpointing.</p>
<p>The implementation can provide an empty string if the path to the binary is not available. In such a case, the information is not shown. </p>

<p>Implements <a class="el" href="classgmx_1_1IProgramContext.xhtml#afaca282ab5e0bc99c6da555c0c7f4434">gmx::IProgramContext</a>.</p>

</div>
</div>
<a class="anchor" id="a449de0dbcfc4c1103c1c89b086061bec"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structgmx_1_1InstallationPrefixInfo.xhtml">InstallationPrefixInfo</a> gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext::installationPrefix </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the installation prefix for GROMACS. </p>
<p>This path is used to locate the data files that are in <code>share/top/</code> in the source directory. The implementation can provide an empty string if the path is not available; in such a case, functions that require data files may fail.</p>
<p>The returned structure also contains a flag to indicate whether the prefix actually points to the source tree. This is used for tests and to support running binaries directly from the build tree. </p>

<p>Implements <a class="el" href="classgmx_1_1IProgramContext.xhtml#ada732144a05c8faa224b5ad0d904df6f">gmx::IProgramContext</a>.</p>

</div>
</div>
<a class="anchor" id="a822088e5e1df12f90828d947a52e57ae"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext::programName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the name of the binary as it was invoked without any path. </p>
<p>This is typically <code>argv[0]</code> with any leading directory stripped. Currently, this should be a valid file name. </p>

<p>Implements <a class="el" href="classgmx_1_1IProgramContext.xhtml#a26af3ba471321756753297d624c21d0d">gmx::IProgramContext</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/testutils/<a class="el" href="testinit_8cpp.xhtml">testinit.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:20:48 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

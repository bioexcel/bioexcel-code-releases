<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="fft_8h" kind="file">
    <compoundname>fft.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="gmxcomplex_8h" local="yes">gromacs/math/gmxcomplex.h</includes>
    <includes refid="real_8h" local="yes">gromacs/utility/real.h</includes>
    <includedby refid="manyautocorrelation_8h" local="yes">src/gromacs/correlationfunctions/manyautocorrelation.h</includedby>
    <includedby refid="crosscorr_8cpp" local="yes">src/gromacs/correlationfunctions/crosscorr.cpp</includedby>
    <includedby refid="manyautocorrelation_8cpp" local="yes">src/gromacs/correlationfunctions/manyautocorrelation.cpp</includedby>
    <includedby refid="tests_2autocorr_8cpp" local="yes">src/gromacs/correlationfunctions/tests/autocorr.cpp</includedby>
    <includedby refid="parallel__3dfft_8h" local="yes">src/gromacs/fft/parallel_3dfft.h</includedby>
    <includedby refid="fft_8cpp" local="yes">src/gromacs/fft/fft.cpp</includedby>
    <includedby refid="fft5d_8h" local="yes">src/gromacs/fft/fft5d.h</includedby>
    <includedby refid="fft__fftpack_8cpp" local="yes">src/gromacs/fft/fft_fftpack.cpp</includedby>
    <includedby refid="fft__fftw3_8cpp" local="yes">src/gromacs/fft/fft_fftw3.cpp</includedby>
    <includedby refid="fft__mkl_8cpp" local="yes">src/gromacs/fft/fft_mkl.cpp</includedby>
    <includedby refid="parallel__3dfft_8cpp" local="yes">src/gromacs/fft/parallel_3dfft.cpp</includedby>
    <includedby refid="tests_2fft_8cpp" local="yes">src/gromacs/fft/tests/fft.cpp</includedby>
    <includedby refid="gmx__dielectric_8cpp" local="yes">src/gromacs/gmxana/gmx_dielectric.cpp</includedby>
    <includedby refid="gmx__dos_8cpp" local="yes">src/gromacs/gmxana/gmx_dos.cpp</includedby>
    <includedby refid="gmx__velacc_8cpp" local="yes">src/gromacs/gmxana/gmx_velacc.cpp</includedby>
    <includedby refid="powerspect_8cpp" local="yes">src/gromacs/gmxana/powerspect.cpp</includedby>
    <incdepgraph>
      <node id="3652">
        <label>src/gromacs/fft/fft.h</label>
        <link refid="fft.h"/>
        <childnode refid="3653" relation="include">
        </childnode>
        <childnode refid="3654" relation="include">
        </childnode>
      </node>
      <node id="3654">
        <label>gromacs/utility/real.h</label>
        <link refid="real_8h"/>
      </node>
      <node id="3653">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3659">
        <label>src/gromacs/correlationfunctions/crosscorr.cpp</label>
        <link refid="crosscorr_8cpp"/>
      </node>
      <node id="3656">
        <label>src/gromacs/correlationfunctions/manyautocorrelation.h</label>
        <link refid="manyautocorrelation_8h"/>
        <childnode refid="3657" relation="include">
        </childnode>
        <childnode refid="3658" relation="include">
        </childnode>
      </node>
      <node id="3658">
        <label>src/gromacs/correlationfunctions/manyautocorrelation.cpp</label>
        <link refid="manyautocorrelation_8cpp"/>
      </node>
      <node id="3655">
        <label>src/gromacs/fft/fft.h</label>
        <link refid="fft.h"/>
        <childnode refid="3656" relation="include">
        </childnode>
        <childnode refid="3659" relation="include">
        </childnode>
        <childnode refid="3658" relation="include">
        </childnode>
        <childnode refid="3660" relation="include">
        </childnode>
        <childnode refid="3661" relation="include">
        </childnode>
      </node>
      <node id="3660">
        <label>src/gromacs/correlationfunctions/tests/autocorr.cpp</label>
        <link refid="tests_2autocorr_8cpp"/>
      </node>
      <node id="3657">
        <label>src/gromacs/correlationfunctions/autocorr.cpp</label>
        <link refid="autocorr_8cpp"/>
      </node>
      <node id="3661">
        <label>src/gromacs/fft/tests/fft.cpp</label>
        <link refid="tests_2fft_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="fft_8h_1af2aa0b3a5f3a4339ecb2bd67cb8f8302" prot="public" static="no">
        <name>gmx_fft_direction</name>
        <enumvalue id="fft_8h_1af2aa0b3a5f3a4339ecb2bd67cb8f8302a27ed3f7728bda473c6ebe5cb4cd56a3b" prot="public">
          <name>GMX_FFT_FORWARD</name>
          <briefdescription>
<para>Forward complex-to-complex transform. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fft_8h_1af2aa0b3a5f3a4339ecb2bd67cb8f8302a6b7d75766670857ec08e947742ec9ab8" prot="public">
          <name>GMX_FFT_BACKWARD</name>
          <briefdescription>
<para>Backward complex-to-complex transform. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fft_8h_1af2aa0b3a5f3a4339ecb2bd67cb8f8302afbc1997ce0588ee6c73fb576e2264a89" prot="public">
          <name>GMX_FFT_REAL_TO_COMPLEX</name>
          <briefdescription>
<para>Real-to-complex valued FFT. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fft_8h_1af2aa0b3a5f3a4339ecb2bd67cb8f8302ac47b1fb3f7ea2ebabaf3bb3d272400d8" prot="public">
          <name>GMX_FFT_COMPLEX_TO_REAL</name>
          <briefdescription>
<para>Complex-to-real valued FFT. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Specifier for FFT direction. </para>        </briefdescription>
        <detaileddescription>
<para>The definition of the 1D forward transform from input x[] to output y[] is <formula id="0">\[ y_{k} = \sum_{j=0}^{N-1} x_{j} \exp{-i 2 \pi j k /N} \]</formula></para><para>while the corresponding backward transform is</para><para><formula id="1">\[ y_{k} = \sum_{j=0}^{N-1} x_{j} \exp{i 2 \pi j k /N} \]</formula></para><para>A forward-backward transform pair will this result in data scaled by N.</para><para>For complex-to-complex transforms you can only use one of GMX_FFT_FORWARD or GMX_FFT_BACKWARD, and for real-complex transforms you can only use GMX_FFT_REAL_TO_COMPLEX or GMX_FFT_COMPLEX_TO_REAL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="97" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" bodystart="96" bodyend="102"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="fft_8h_1ac4aa41b4b80187da5d55a98e5f63a025" prot="public" static="no">
        <type>struct gmx_fft *</type>
        <definition>typedef struct gmx_fft* gmx_fft_t</definition>
        <argsstring></argsstring>
        <name>gmx_fft_t</name>
        <briefdescription>
<para>Datatype for FFT setup. </para>        </briefdescription>
        <detaileddescription>
<para>The gmx_fft_t type contains all the setup information, e.g. twiddle factors, necessary to perform an FFT. Internally it is mapped to whatever FFT library we are using, or the built-in FFTPACK if no fast external library is available.</para><para>Since some of the libraries (e.g. MKL) store work array data in their handles this datatype should only be used for one thread at a time, i.e. they should allocate one instance each when executing in parallel. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="72" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="fft_8h_1abb8eacde93909419d8bc9d403c6e7612" prot="public" static="no">
        <type>enum <ref refid="fft_8h_1af2aa0b3a5f3a4339ecb2bd67cb8f8302" kindref="member">gmx_fft_direction</ref></type>
        <definition>typedef enum gmx_fft_direction  gmx_fft_direction</definition>
        <argsstring></argsstring>
        <name>gmx_fft_direction</name>
        <briefdescription>
<para>Specifier for FFT direction. </para>        </briefdescription>
        <detaileddescription>
<para>The definition of the 1D forward transform from input x[] to output y[] is <formula id="0">\[ y_{k} = \sum_{j=0}^{N-1} x_{j} \exp{-i 2 \pi j k /N} \]</formula></para><para>while the corresponding backward transform is</para><para><formula id="1">\[ y_{k} = \sum_{j=0}^{N-1} x_{j} \exp{i 2 \pi j k /N} \]</formula></para><para>A forward-backward transform pair will this result in data scaled by N.</para><para>For complex-to-complex transforms you can only use one of GMX_FFT_FORWARD or GMX_FFT_BACKWARD, and for real-complex transforms you can only use GMX_FFT_REAL_TO_COMPLEX or GMX_FFT_COMPLEX_TO_REAL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="fft_8h_1aa6b68fb966512d287910879d38472bb4" prot="public" static="no">
        <type>int</type>
        <definition>typedef int gmx_fft_flag</definition>
        <argsstring></argsstring>
        <name>gmx_fft_flag</name>
        <briefdescription>
<para>Specifier for FFT flags. </para>        </briefdescription>
        <detaileddescription>
<para>Some FFT libraries (FFTW, in particular) can do timings and other tricks to try and optimize the FFT for the current architecture. However, this can also lead to results that differ between consecutive runs with identical input. To avoid this, the conservative flag will attempt to disable such optimization, but there are no guarantees since we cannot control what the FFT libraries do internally. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="115" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="fft_8h_1a101e209573d47cd336784b033f471cb7" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int GMX_FFT_FLAG_NONE</definition>
        <argsstring></argsstring>
        <name>GMX_FFT_FLAG_NONE</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Macro to indicate no special flags for FFT routines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="117" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fft_8h_1aede487da2908124da5efaec178b12539" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int GMX_FFT_FLAG_CONSERVATIVE</definition>
        <argsstring></argsstring>
        <name>GMX_FFT_FLAG_CONSERVATIVE</name>
        <initializer>= (1&lt;&lt;0)</initializer>
        <briefdescription>
<para>Flag to disable FFT optimizations based on timings, see <ref refid="fft_8h_1aa6b68fb966512d287910879d38472bb4" kindref="member">gmx_fft_flag</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="119" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fft_8h_1a9236a69dfa724f4bf45d2940713a12ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_fft_init_1d</definition>
        <argsstring>(gmx_fft_t *fft, int nx, gmx_fft_flag flags)</argsstring>
        <name>gmx_fft_init_1d</name>
        <param>
          <type><ref refid="fft_8h_1ac4aa41b4b80187da5d55a98e5f63a025" kindref="member">gmx_fft_t</ref> *</type>
          <declname>fft</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nx</declname>
        </param>
        <param>
          <type><ref refid="fft_8h_1aa6b68fb966512d287910879d38472bb4" kindref="member">gmx_fft_flag</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Setup a 1-dimensional complex-to-complex transform. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fft</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to opaque Gromacs FFT datatype </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nx</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of transform </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>FFT options</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status - 0 or a standard error message.</para></simplesect>
<simplesect kind="note"><para>Since some of the libraries (e.g. MKL) store work array data in their handles this datatype should only be used for one thread at a time, i.e. you should create one copy per thread when executing in parallel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="134" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft_fftpack.cpp" bodystart="78" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="fft_8h_1ac2b9ba002f1ee0f1caf78468d9bef16b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_fft_init_many_1d</definition>
        <argsstring>(gmx_fft_t *fft, int nx, int howmany, gmx_fft_flag flags)</argsstring>
        <name>gmx_fft_init_many_1d</name>
        <param>
          <type><ref refid="fft_8h_1ac4aa41b4b80187da5d55a98e5f63a025" kindref="member">gmx_fft_t</ref> *</type>
          <declname>fft</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>howmany</declname>
        </param>
        <param>
          <type><ref refid="fft_8h_1aa6b68fb966512d287910879d38472bb4" kindref="member">gmx_fft_flag</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Setup multiple 1-dimensional complex-to-complex transform. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fft</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to opaque Gromacs FFT datatype </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nx</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of transform </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>howmany</parametername>
</parameternamelist>
<parameterdescription>
<para>Howmany 1D FFT </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>FFT options</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status - 0 or a standard error message.</para></simplesect>
<simplesect kind="note"><para>Since some of the libraries (e.g. MKL) store work array data in their handles this datatype should only be used for one thread at a time, i.e. you should create one copy per thread when executing in parallel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="153" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.cpp" bodystart="67" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="fft_8h_1a035cb8cb8a57712aa06abe12736f0ed7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_fft_init_1d_real</definition>
        <argsstring>(gmx_fft_t *fft, int nx, gmx_fft_flag flags)</argsstring>
        <name>gmx_fft_init_1d_real</name>
        <param>
          <type><ref refid="fft_8h_1ac4aa41b4b80187da5d55a98e5f63a025" kindref="member">gmx_fft_t</ref> *</type>
          <declname>fft</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nx</declname>
        </param>
        <param>
          <type><ref refid="fft_8h_1aa6b68fb966512d287910879d38472bb4" kindref="member">gmx_fft_flag</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Setup a 1-dimensional real-to-complex transform. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fft</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to opaque Gromacs FFT datatype </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nx</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of transform in real space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>FFT options</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status - 0 or a standard error message.</para></simplesect>
<simplesect kind="note"><para>Since some of the libraries (e.g. MKL) store work array data in their handles this datatype should only be used for one thread at a time, i.e. you should create one copy per thread when executing in parallel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="172" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft_fftpack.cpp" bodystart="118" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="fft_8h_1aa1ca8ea8453baedb6ed6d6b43ca8fa3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_fft_init_many_1d_real</definition>
        <argsstring>(gmx_fft_t *fft, int nx, int howmany, gmx_fft_flag flags)</argsstring>
        <name>gmx_fft_init_many_1d_real</name>
        <param>
          <type><ref refid="fft_8h_1ac4aa41b4b80187da5d55a98e5f63a025" kindref="member">gmx_fft_t</ref> *</type>
          <declname>fft</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>howmany</declname>
        </param>
        <param>
          <type><ref refid="fft_8h_1aa6b68fb966512d287910879d38472bb4" kindref="member">gmx_fft_flag</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Setup multiple 1-dimensional real-to-complex transform. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fft</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to opaque Gromacs FFT datatype </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nx</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of transform in real space </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>howmany</parametername>
</parameternamelist>
<parameterdescription>
<para>Homany 1D FFTs </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>FFT options</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status - 0 or a standard error message.</para></simplesect>
<simplesect kind="note"><para>Since some of the libraries (e.g. MKL) store work array data in their handles this datatype should only be used for one thread at a time, i.e. you should create one copy per thread when executing in parallel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="191" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.cpp" bodystart="94" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="fft_8h_1a170d1fa6c6a5e48769ecd4a00231e835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_fft_init_2d_real</definition>
        <argsstring>(gmx_fft_t *fft, int nx, int ny, gmx_fft_flag flags)</argsstring>
        <name>gmx_fft_init_2d_real</name>
        <param>
          <type><ref refid="fft_8h_1ac4aa41b4b80187da5d55a98e5f63a025" kindref="member">gmx_fft_t</ref> *</type>
          <declname>fft</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ny</declname>
        </param>
        <param>
          <type><ref refid="fft_8h_1aa6b68fb966512d287910879d38472bb4" kindref="member">gmx_fft_flag</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Setup a 2-dimensional real-to-complex transform. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fft</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to opaque Gromacs FFT datatype </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nx</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of transform in first dimension </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ny</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of transform in second dimension </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>FFT options</para></parameterdescription>
</parameteritem>
</parameterlist>
The normal space is assumed to be real, while the values in frequency space are complex.</para><para><simplesect kind="return"><para>status - 0 or a standard error message.</para></simplesect>
<simplesect kind="note"><para>Since some of the libraries (e.g. MKL) store work array data in their handles this datatype should only be used for one thread at a time, i.e. you should create one copy per thread when executing in parallel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="214" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft_fftpack.cpp" bodystart="156" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="fft_8h_1aecb1a7c6568eb08b82153cade186ad1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_fft_1d</definition>
        <argsstring>(gmx_fft_t setup, enum gmx_fft_direction dir, void *in_data, void *out_data)</argsstring>
        <name>gmx_fft_1d</name>
        <param>
          <type><ref refid="fft_8h_1ac4aa41b4b80187da5d55a98e5f63a025" kindref="member">gmx_fft_t</ref></type>
          <declname>setup</declname>
        </param>
        <param>
          <type>enum <ref refid="fft_8h_1af2aa0b3a5f3a4339ecb2bd67cb8f8302" kindref="member">gmx_fft_direction</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>in_data</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>out_data</declname>
        </param>
        <briefdescription>
<para>Perform a 1-dimensional complex-to-complex transform. </para>        </briefdescription>
        <detaileddescription>
<para>Performs an instance of a transform previously initiated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>setup</parametername>
</parameternamelist>
<parameterdescription>
<para>Setup returned from <ref refid="fft_8h_1a9236a69dfa724f4bf45d2940713a12ec" kindref="member">gmx_fft_init_1d()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Forward or Backward </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Output grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. You can provide the same pointer for in_data and out_data to perform an in-place transform.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, or an error code.</para></simplesect>
<simplesect kind="note"><para>Data pointers are declared as void, to avoid casting pointers depending on your grid type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="239" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft_fftpack.cpp" bodystart="203" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="fft_8h_1ad97413697d5d8199f1309734a792f62d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_fft_many_1d</definition>
        <argsstring>(gmx_fft_t setup, enum gmx_fft_direction dir, void *in_data, void *out_data)</argsstring>
        <name>gmx_fft_many_1d</name>
        <param>
          <type><ref refid="fft_8h_1ac4aa41b4b80187da5d55a98e5f63a025" kindref="member">gmx_fft_t</ref></type>
          <declname>setup</declname>
        </param>
        <param>
          <type>enum <ref refid="fft_8h_1af2aa0b3a5f3a4339ecb2bd67cb8f8302" kindref="member">gmx_fft_direction</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>in_data</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>out_data</declname>
        </param>
        <briefdescription>
<para>Perform many 1-dimensional complex-to-complex transforms. </para>        </briefdescription>
        <detaileddescription>
<para>Performs many instances of a transform previously initiated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>setup</parametername>
</parameternamelist>
<parameterdescription>
<para>Setup returned from <ref refid="fft_8h_1a9236a69dfa724f4bf45d2940713a12ec" kindref="member">gmx_fft_init_1d()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Forward or Backward </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Output grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. You can provide the same pointer for in_data and out_data to perform an in-place transform.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, or an error code.</para></simplesect>
<simplesect kind="note"><para>Data pointers are declared as void, to avoid casting pointers depending on your grid type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="264" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.cpp" bodystart="121" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="fft_8h_1a8eabaf36072e622f59b361e79ed4e9d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_fft_1d_real</definition>
        <argsstring>(gmx_fft_t setup, enum gmx_fft_direction dir, void *in_data, void *out_data)</argsstring>
        <name>gmx_fft_1d_real</name>
        <param>
          <type><ref refid="fft_8h_1ac4aa41b4b80187da5d55a98e5f63a025" kindref="member">gmx_fft_t</ref></type>
          <declname>setup</declname>
        </param>
        <param>
          <type>enum <ref refid="fft_8h_1af2aa0b3a5f3a4339ecb2bd67cb8f8302" kindref="member">gmx_fft_direction</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>in_data</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>out_data</declname>
        </param>
        <briefdescription>
<para>Perform a 1-dimensional real-to-complex transform. </para>        </briefdescription>
        <detaileddescription>
<para>Performs an instance of a transform previously initiated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>setup</parametername>
</parameternamelist>
<parameterdescription>
<para>Setup returned from <ref refid="fft_8h_1a035cb8cb8a57712aa06abe12736f0ed7" kindref="member">gmx_fft_init_1d_real()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Real-to-complex or complex-to-real </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Output grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. You can provide the same pointer for in_data and out_data to perform an in-place transform.</para></parameterdescription>
</parameteritem>
</parameterlist>
If you are doing an in-place transform, the array must be padded up to an even integer length so n/2 complex numbers can fit. Out-of-place arrays should not be padded (although it doesn&apos;t matter in 1d).</para><para><simplesect kind="return"><para>0 on success, or an error code.</para></simplesect>
<simplesect kind="note"><para>Data pointers are declared as void, to avoid casting pointers depending on transform direction. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="293" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft_fftpack.cpp" bodystart="261" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="fft_8h_1ab5640aa9c7e8bb34c41de7adf92bc726" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_fft_many_1d_real</definition>
        <argsstring>(gmx_fft_t setup, enum gmx_fft_direction dir, void *in_data, void *out_data)</argsstring>
        <name>gmx_fft_many_1d_real</name>
        <param>
          <type><ref refid="fft_8h_1ac4aa41b4b80187da5d55a98e5f63a025" kindref="member">gmx_fft_t</ref></type>
          <declname>setup</declname>
        </param>
        <param>
          <type>enum <ref refid="fft_8h_1af2aa0b3a5f3a4339ecb2bd67cb8f8302" kindref="member">gmx_fft_direction</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>in_data</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>out_data</declname>
        </param>
        <briefdescription>
<para>Perform many 1-dimensional real-to-complex transforms. </para>        </briefdescription>
        <detaileddescription>
<para>Performs many instances of a transform previously initiated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>setup</parametername>
</parameternamelist>
<parameterdescription>
<para>Setup returned from <ref refid="fft_8h_1a035cb8cb8a57712aa06abe12736f0ed7" kindref="member">gmx_fft_init_1d_real()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Real-to-complex or complex-to-real </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Output grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. You can provide the same pointer for in_data and out_data to perform an in-place transform.</para></parameterdescription>
</parameteritem>
</parameterlist>
If you are doing an in-place transform, the array must be padded up to an even integer length so n/2 complex numbers can fit. Out-of-place arrays should not be padded (although it doesn&apos;t matter in 1d).</para><para><simplesect kind="return"><para>0 on success, or an error code.</para></simplesect>
<simplesect kind="note"><para>Data pointers are declared as void, to avoid casting pointers depending on transform direction. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="321" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.cpp" bodystart="142" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="fft_8h_1a1876b62ad9f99b1772d14e7e1d84b1b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_fft_2d_real</definition>
        <argsstring>(gmx_fft_t setup, enum gmx_fft_direction dir, void *in_data, void *out_data)</argsstring>
        <name>gmx_fft_2d_real</name>
        <param>
          <type><ref refid="fft_8h_1ac4aa41b4b80187da5d55a98e5f63a025" kindref="member">gmx_fft_t</ref></type>
          <declname>setup</declname>
        </param>
        <param>
          <type>enum <ref refid="fft_8h_1af2aa0b3a5f3a4339ecb2bd67cb8f8302" kindref="member">gmx_fft_direction</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>in_data</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>out_data</declname>
        </param>
        <briefdescription>
<para>Perform a 2-dimensional real-to-complex transform. </para>        </briefdescription>
        <detaileddescription>
<para>Performs an instance of a transform previously initiated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>setup</parametername>
</parameternamelist>
<parameterdescription>
<para>Setup returned from <ref refid="fft_8h_1a035cb8cb8a57712aa06abe12736f0ed7" kindref="member">gmx_fft_init_1d_real()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>Real-to-complex or complex-to-real </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>in_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Output grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. You can provide the same pointer for in_data and out_data to perform an in-place transform.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, or an error code.</para></simplesect>
<simplesect kind="note"><para>If you are doing an in-place transform, the last dimension of the array MUST be padded up to an even integer length so n/2 complex numbers can fit. Thus, if the real grid e.g. has dimension 5*3, you must allocate it as a 5*4 array, where the last element in the second dimension is padding. The complex data will be written to the same array, but since that dimension is 5*2 it will now fill the entire array. Reverse complex-to-real in-place transformation will produce the same sort of padded array.</para></simplesect>
The padding does NOT apply to out-of-place transformation. In that case the input array will simply be 5*3 of real, while the output is 5*2 of complex.</para><para><simplesect kind="note"><para>Data pointers are declared as void, to avoid casting pointers depending on transform direction. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="356" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft_fftpack.cpp" bodystart="354" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="fft_8h_1ae761c85582c682d4821c75d9ae891e6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx_fft_destroy</definition>
        <argsstring>(gmx_fft_t setup)</argsstring>
        <name>gmx_fft_destroy</name>
        <param>
          <type><ref refid="fft_8h_1ac4aa41b4b80187da5d55a98e5f63a025" kindref="member">gmx_fft_t</ref></type>
          <declname>setup</declname>
        </param>
        <briefdescription>
<para>Release an FFT setup structure. </para>        </briefdescription>
        <detaileddescription>
<para>Destroy setup and release all allocated memory.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>setup</parametername>
</parameternamelist>
<parameterdescription>
<para>Setup returned from <ref refid="fft_8h_1a9236a69dfa724f4bf45d2940713a12ec" kindref="member">gmx_fft_init_1d()</ref>, or one of the other initializers. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="370" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft_fftpack.cpp" bodystart="481" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="fft_8h_1a77912d06d42876247642873eb98a523d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx_many_fft_destroy</definition>
        <argsstring>(gmx_fft_t setup)</argsstring>
        <name>gmx_many_fft_destroy</name>
        <param>
          <type><ref refid="fft_8h_1ac4aa41b4b80187da5d55a98e5f63a025" kindref="member">gmx_fft_t</ref></type>
          <declname>setup</declname>
        </param>
        <briefdescription>
<para>Release a many FFT setup structure. </para>        </briefdescription>
        <detaileddescription>
<para>Destroy setup and release all allocated memory.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>setup</parametername>
</parameternamelist>
<parameterdescription>
<para>Setup returned from <ref refid="fft_8h_1a9236a69dfa724f4bf45d2940713a12ec" kindref="member">gmx_fft_init_1d()</ref>, or one of the other initializers. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="381" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.cpp" bodystart="164" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="fft_8h_1a05cf1a5a8427f30bbbc35ccbf89128d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_fft_transpose_2d</definition>
        <argsstring>(t_complex *in_data, t_complex *out_data, int nx, int ny)</argsstring>
        <name>gmx_fft_transpose_2d</name>
        <param>
          <type><ref refid="structt__complex" kindref="compound">t_complex</ref> *</type>
          <declname>in_data</declname>
        </param>
        <param>
          <type><ref refid="structt__complex" kindref="compound">t_complex</ref> *</type>
          <declname>out_data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ny</declname>
        </param>
        <briefdescription>
<para>Transpose 2d complex matrix, in-place or out-of-place. </para>        </briefdescription>
        <detaileddescription>
<para>This routines works when the matrix is non-square, i.e. nx!=ny too, without allocating an entire matrix of work memory, which is important for huge FFT grids.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data, to be transposed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Output, transposed data. If this is identical to in_data, an in-place transpose is performed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nx</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of rows before transpose </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ny</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of columns before transpose</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GMX_SUCCESS, or an error code from gmx_errno.h </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="399" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.cpp" bodystart="179" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="fft_8h_1a3e04a1246fe2cc655a8b9c67a49b88f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx_fft_cleanup</definition>
        <argsstring>()</argsstring>
        <name>gmx_fft_cleanup</name>
        <briefdescription>
<para>Cleanup global data of FFT. </para>        </briefdescription>
        <detaileddescription>
<para>Any plans are invalid after this function. Should be called after all plans have been destroyed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h" line="409" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft_fftpack.cpp" bodystart="494" bodyend="496"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Fast Fourier Transforms. </para>    </briefdescription>
    <detaileddescription>
<para>This file provides an abstract Gromacs interface to Fourier transforms, including multi-dimensional and real-to-complex transforms.</para><para>Internally it is implemented as wrappers to external libraries such as FFTW or the Intel Math Kernel Library, but we also have a built-in version of FFTPACK in case the faster alternatives are unavailable.</para><para>We also provide our own multi-dimensional transform setups even when the underlying library does not support it directly. </para>    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/fft/fft.h"/>
  </compounddef>
</doxygen>

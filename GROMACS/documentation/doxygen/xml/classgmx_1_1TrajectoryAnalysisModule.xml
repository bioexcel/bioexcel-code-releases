<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1TrajectoryAnalysisModule" kind="class" prot="public" abstract="yes">
    <compoundname>gmx::TrajectoryAnalysisModule</compoundname>
    <derivedcompoundref refid="classAnalysisTemplate" prot="public" virt="non-virtual">AnalysisTemplate</derivedcompoundref>
    <derivedcompoundref refid="classanonymous__namespace_02cmdlinerunner_8cpp_03_1_1MockModule" prot="public" virt="non-virtual">anonymous_namespace{cmdlinerunner.cpp}::MockModule</derivedcompoundref>
    <derivedcompoundref refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1Angle" prot="public" virt="non-virtual">gmx::analysismodules::anonymous_namespace{angle.cpp}::Angle</derivedcompoundref>
    <derivedcompoundref refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02distance_8cpp_03_1_1Distance" prot="public" virt="non-virtual">gmx::analysismodules::anonymous_namespace{distance.cpp}::Distance</derivedcompoundref>
    <derivedcompoundref refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02freevolume_8cpp_03_1_1FreeVolume" prot="public" virt="non-virtual">gmx::analysismodules::anonymous_namespace{freevolume.cpp}::FreeVolume</derivedcompoundref>
    <derivedcompoundref refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02pairdist_8cpp_03_1_1PairDistance" prot="public" virt="non-virtual">gmx::analysismodules::anonymous_namespace{pairdist.cpp}::PairDistance</derivedcompoundref>
    <derivedcompoundref refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02rdf_8cpp_03_1_1Rdf" prot="public" virt="non-virtual">gmx::analysismodules::anonymous_namespace{rdf.cpp}::Rdf</derivedcompoundref>
    <derivedcompoundref refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02sasa_8cpp_03_1_1Sasa" prot="public" virt="non-virtual">gmx::analysismodules::anonymous_namespace{sasa.cpp}::Sasa</derivedcompoundref>
    <derivedcompoundref refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02select_8cpp_03_1_1Select" prot="public" virt="non-virtual">gmx::analysismodules::anonymous_namespace{select.cpp}::Select</derivedcompoundref>
    <derivedcompoundref refid="classgmx_1_1SelectionTester" prot="public" virt="non-virtual">gmx::SelectionTester</derivedcompoundref>
    <includes local="no">gromacs/trajectoryanalysis/analysismodule.h</includes>
    <innerclass refid="classgmx_1_1TrajectoryAnalysisModule_1_1Impl" prot="public">gmx::TrajectoryAnalysisModule::Impl</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1TrajectoryAnalysisModule_1a7d1bb529b418a1a0f587a5a5687f0b0d" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1PrivateImplPointer" kindref="compound">PrivateImplPointer</ref>&lt; <ref refid="classgmx_1_1TrajectoryAnalysisModule_1_1Impl" kindref="compound">Impl</ref> &gt;</type>
        <definition>PrivateImplPointer&lt;Impl&gt; gmx::TrajectoryAnalysisModule::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="490" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" bodystart="488" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgmx_1_1TrajectoryAnalysisModule_1aab5ed763e4b63da4601f9b9004b595a9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TrajectoryAnalysisModuleData</definition>
        <argsstring></argsstring>
        <name>TrajectoryAnalysisModuleData</name>
        <briefdescription>
<para>Needed to access the registered analysis data sets. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="495" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1TrajectoryAnalysisModule_1a85fd67cef55f7116dfb6a112914695ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>gmx::TrajectoryAnalysisModule::~TrajectoryAnalysisModule</definition>
        <argsstring>()</argsstring>
        <name>~TrajectoryAnalysisModule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="232" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.cpp" bodystart="276" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TrajectoryAnalysisModule_1aba5990675e980bf746ecd224f814d549" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gmx::TrajectoryAnalysisModule::initOptions</definition>
        <argsstring>(IOptionsContainer *options, TrajectoryAnalysisSettings *settings)=0</argsstring>
        <name>initOptions</name>
        <reimplementedby refid="classAnalysisTemplate_1ac1e17717634942620122ef3a42438765">initOptions</reimplementedby>
        <reimplementedby refid="classgmx_1_1SelectionTester_1af2fab9a5f8b745ed0444f91df7caa8ca">initOptions</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02distance_8cpp_03_1_1Distance_1a8e0c29c05000eb7603a22395a251d5a1">initOptions</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02freevolume_8cpp_03_1_1FreeVolume_1a12b2ce79a040995c71cde43b8509051d">initOptions</reimplementedby>
        <reimplementedby refid="group__module__trajectoryanalysis_1gad8c0ee00a3d160339a967bdc6b3391bc">initOptions</reimplementedby>
        <reimplementedby refid="group__module__trajectoryanalysis_1ga58fe513cbf09acfb3a07e613cebacc35">initOptions</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1Angle_1a1e345348f69292f2936db45466f387ff">initOptions</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02select_8cpp_03_1_1Select_1afbd0d4f7d08e86744704fb6ad359da51">initOptions</reimplementedby>
        <reimplementedby refid="group__module__trajectoryanalysis_1ga34c4a69e301a4a6e720cdb4c2eb6178e">initOptions</reimplementedby>
        <param>
          <type><ref refid="classgmx_1_1IOptionsContainer" kindref="compound">IOptionsContainer</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1TrajectoryAnalysisSettings" kindref="compound">TrajectoryAnalysisSettings</ref> *</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Initializes options understood by the module. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">options</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Options" kindref="compound">Options</ref> object to add the options to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">settings</parametername>
</parameternamelist>
<parameterdescription>
<para>Settings to pass to and from the module.</para></parameterdescription>
</parameteritem>
</parameterlist>
This method is called first after the constructor, and it should add options understood by the module to <computeroutput>options</computeroutput>. Output values from options (including selections) should be stored in member variables.</para><para>In addition to initializing the options, this method can also provide information about the module&apos;s requirements using the <computeroutput>settings</computeroutput> object; see <ref refid="classgmx_1_1TrajectoryAnalysisSettings" kindref="compound">TrajectoryAnalysisSettings</ref> for more details.</para><para>If settings depend on the option values provided by the user, see <ref refid="classgmx_1_1TrajectoryAnalysisModule_1afa3457cc922f1d16c4c19cec740e0442" kindref="member">optionsFinished()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="252" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TrajectoryAnalysisModule_1afa3457cc922f1d16c4c19cec740e0442" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gmx::TrajectoryAnalysisModule::optionsFinished</definition>
        <argsstring>(TrajectoryAnalysisSettings *settings)</argsstring>
        <name>optionsFinished</name>
        <reimplementedby refid="group__module__trajectoryanalysis_1gac634f53069bc0de47c0656b16f0e8304">optionsFinished</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1Angle_1a0122bdf4261ed2150bc1496ba67fd138">optionsFinished</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02select_8cpp_03_1_1Select_1ab5f4db2c86a9d66a6565a965b79824be">optionsFinished</reimplementedby>
        <param>
          <type><ref refid="classgmx_1_1TrajectoryAnalysisSettings" kindref="compound">TrajectoryAnalysisSettings</ref> *</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Called after all option values have been set. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">settings</parametername>
</parameternamelist>
<parameterdescription>
<para>Settings to pass to and from the module.</para></parameterdescription>
</parameteritem>
</parameterlist>
This method is called after option values have been assigned (but interactive selection input has not yet been performed).</para><para>If the module needs to change settings that affect topology loading (can be done using the <computeroutput>settings</computeroutput> object) or selection initialization (can be done using <ref refid="classgmx_1_1SelectionOptionInfo" kindref="compound">SelectionOptionInfo</ref>) based on option values, this method has to be overridden.</para><para>The default implementation does nothing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="269" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.cpp" bodystart="281" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TrajectoryAnalysisModule_1ae5ae73770caad4ff1808c2ca655dad0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gmx::TrajectoryAnalysisModule::initAnalysis</definition>
        <argsstring>(const TrajectoryAnalysisSettings &amp;settings, const TopologyInformation &amp;top)=0</argsstring>
        <name>initAnalysis</name>
        <reimplementedby refid="classAnalysisTemplate_1a9e02b7a948032879e4d172533fca27f4">initAnalysis</reimplementedby>
        <reimplementedby refid="classgmx_1_1SelectionTester_1a11fb8b9be1fcf173a602b949bcfe9847">initAnalysis</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02distance_8cpp_03_1_1Distance_1a2741a30096eb959f823467c952a49f2f">initAnalysis</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02freevolume_8cpp_03_1_1FreeVolume_1ad2fde3459fde84b3a46400a95b2dda11">initAnalysis</reimplementedby>
        <reimplementedby refid="group__module__trajectoryanalysis_1ga7ddd9d3c140a117c13024917328f511f">initAnalysis</reimplementedby>
        <reimplementedby refid="group__module__trajectoryanalysis_1ga68715aa4000c519a0c1f878352be3639">initAnalysis</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1Angle_1a86136c542625f91e7cff0a5e824d473e">initAnalysis</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02select_8cpp_03_1_1Select_1ad5f1d631e4e9dc8bff747debb624d19e">initAnalysis</reimplementedby>
        <reimplementedby refid="group__module__trajectoryanalysis_1ga7917b635ab1e7389ab733f03162df3ae">initAnalysis</reimplementedby>
        <param>
          <type>const <ref refid="classgmx_1_1TrajectoryAnalysisSettings" kindref="compound">TrajectoryAnalysisSettings</ref> &amp;</type>
          <declname>settings</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1TopologyInformation" kindref="compound">TopologyInformation</ref> &amp;</type>
          <declname>top</declname>
        </param>
        <briefdescription>
<para>Initializes the analysis. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">settings</parametername>
</parameternamelist>
<parameterdescription>
<para>Settings to pass to and from the module. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">top</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology information.</para></parameterdescription>
</parameteritem>
</parameterlist>
When this function is called, selections have been initialized based on user input, and a topology has been loaded if provided by the user. For dynamic selections, the selections have been evaluated to the largest possible selection, i.e., the selections passed to <ref refid="classgmx_1_1TrajectoryAnalysisModule_1adc7344d1b635c15320af636657383212" kindref="member">analyzeFrame()</ref> are always a subset of the selections provided here. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="282" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TrajectoryAnalysisModule_1a419a3d7f950f0731a20d6a7fafaa6d05" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gmx::TrajectoryAnalysisModule::initAfterFirstFrame</definition>
        <argsstring>(const TrajectoryAnalysisSettings &amp;settings, const t_trxframe &amp;fr)</argsstring>
        <name>initAfterFirstFrame</name>
        <reimplementedby refid="group__module__trajectoryanalysis_1ga530786214d4998c33eb464e2b19a64bb">initAfterFirstFrame</reimplementedby>
        <param>
          <type>const <ref refid="classgmx_1_1TrajectoryAnalysisSettings" kindref="compound">TrajectoryAnalysisSettings</ref> &amp;</type>
          <declname>settings</declname>
        </param>
        <param>
          <type>const <ref refid="structt__trxframe" kindref="compound">t_trxframe</ref> &amp;</type>
          <declname>fr</declname>
        </param>
        <briefdescription>
<para>Performs additional initialization after reading the first frame. </para>        </briefdescription>
        <detaileddescription>
<para>When this function is called, selections are the same as in <ref refid="classgmx_1_1TrajectoryAnalysisModule_1ae5ae73770caad4ff1808c2ca655dad0e" kindref="member">initAnalysis()</ref>, i.e., they have not been evaluated for the first frame.</para><para>It is necessary to override this method only if the module needs to do initialization for which it requires data from the first frame.</para><para>The default implementation does nothing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="296" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.cpp" bodystart="287" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TrajectoryAnalysisModule_1a6082fcf69bdc3b0a1945ece31437f195" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacegmx_1a6f05f1bbb0c205deb47822bce1f626e6" kindref="member">TrajectoryAnalysisModuleDataPointer</ref></type>
        <definition>TrajectoryAnalysisModuleDataPointer gmx::TrajectoryAnalysisModule::startFrames</definition>
        <argsstring>(const AnalysisDataParallelOptions &amp;opt, const SelectionCollection &amp;selections)</argsstring>
        <name>startFrames</name>
        <reimplementedby refid="group__module__trajectoryanalysis_1ga19f58b765ef288bd67d36a86daeb492a">startFrames</reimplementedby>
        <reimplementedby refid="group__module__trajectoryanalysis_1ga6f642652868d498ad78d81054c8aa4c5">startFrames</reimplementedby>
        <reimplementedby refid="group__module__trajectoryanalysis_1gaef2b22753bc218ea44b7f92b89e9f8af">startFrames</reimplementedby>
        <param>
          <type>const <ref refid="classgmx_1_1AnalysisDataParallelOptions" kindref="compound">AnalysisDataParallelOptions</ref> &amp;</type>
          <declname>opt</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1SelectionCollection" kindref="compound">SelectionCollection</ref> &amp;</type>
          <declname>selections</declname>
        </param>
        <briefdescription>
<para>Starts the analysis of frames. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">opt</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">selections</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame-local selection collection object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Data structure for thread-local data.</para></simplesect>
This function is necessary only for threaded parallelization. It is called once for each thread and should initialize a class that contains any required frame-local data in the returned value. The default implementation creates a basic data structure that holds thread-local data handles for all data objects registered with <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a86b3b5cd87518e988e8b5452b39a3ad1" kindref="member">registerAnalysisDataset()</ref>, as well as the thread-local selection collection. These can be accessed in <ref refid="classgmx_1_1TrajectoryAnalysisModule_1adc7344d1b635c15320af636657383212" kindref="member">analyzeFrame()</ref> using the methods in <ref refid="classgmx_1_1TrajectoryAnalysisModuleData" kindref="compound">TrajectoryAnalysisModuleData</ref>. If other thread-local data is needed, this function should be overridden and it should create an instance of a class derived from <ref refid="classgmx_1_1TrajectoryAnalysisModuleData" kindref="compound">TrajectoryAnalysisModuleData</ref>.</para><para><simplesect kind="see"><para><ref refid="classgmx_1_1TrajectoryAnalysisModuleData" kindref="compound">TrajectoryAnalysisModuleData</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="320" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.cpp" bodystart="295" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TrajectoryAnalysisModule_1adc7344d1b635c15320af636657383212" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gmx::TrajectoryAnalysisModule::analyzeFrame</definition>
        <argsstring>(int frnr, const t_trxframe &amp;fr, t_pbc *pbc, TrajectoryAnalysisModuleData *pdata)=0</argsstring>
        <name>analyzeFrame</name>
        <reimplementedby refid="classAnalysisTemplate_1a113ec08275e9efd12c97e2387cf72115">analyzeFrame</reimplementedby>
        <reimplementedby refid="classgmx_1_1SelectionTester_1a0ad240e686fdc0849c621a85595724db">analyzeFrame</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02distance_8cpp_03_1_1Distance_1aeaa8190c251459ea17be7f3e47376244">analyzeFrame</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02freevolume_8cpp_03_1_1FreeVolume_1a7d7dbf691e4d856c5461258b5a6260b7">analyzeFrame</reimplementedby>
        <reimplementedby refid="group__module__trajectoryanalysis_1ga9097c3a860a20805ea623d34bc21aeb6">analyzeFrame</reimplementedby>
        <reimplementedby refid="group__module__trajectoryanalysis_1ga5334f9e6a192b41fcb597925de850920">analyzeFrame</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1Angle_1a1ccc5aecb9da89d3e4ac63dcc534996f">analyzeFrame</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02select_8cpp_03_1_1Select_1abd83a3b63e6bcc4d0aba86c1b11b3721">analyzeFrame</reimplementedby>
        <reimplementedby refid="group__module__trajectoryanalysis_1gaf1c894303aee5cf5fb37b599e4e03dd0">analyzeFrame</reimplementedby>
        <param>
          <type>int</type>
          <declname>frnr</declname>
        </param>
        <param>
          <type>const <ref refid="structt__trxframe" kindref="compound">t_trxframe</ref> &amp;</type>
          <declname>fr</declname>
        </param>
        <param>
          <type><ref refid="structt__pbc" kindref="compound">t_pbc</ref> *</type>
          <declname>pbc</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1TrajectoryAnalysisModuleData" kindref="compound">TrajectoryAnalysisModuleData</ref> *</type>
          <declname>pdata</declname>
        </param>
        <briefdescription>
<para>Analyzes a single frame. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">frnr</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame number, a zero-based index that uniquely identifies the frame. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fr</parametername>
</parameternamelist>
<parameterdescription>
<para>Current frame. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pbc</parametername>
</parameternamelist>
<parameterdescription>
<para>Periodic boundary conditions for <computeroutput>fr</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Data structure for frame-local data.</para></parameterdescription>
</parameteritem>
</parameterlist>
This method is called once for each frame to be analyzed, and should analyze the positions provided in the selections. Data handles and selections should be obtained from the <computeroutput>pdata</computeroutput> structure.</para><para>For threaded analysis, this method is called asynchronously in different threads to analyze different frames. The <computeroutput>pdata</computeroutput> structure is one of the structures created with <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a6082fcf69bdc3b0a1945ece31437f195" kindref="member">startFrames()</ref>, but no assumptions should be made about which of these data structures is used. It is guaranteed that two instances of <ref refid="classgmx_1_1TrajectoryAnalysisModule_1adc7344d1b635c15320af636657383212" kindref="member">analyzeFrame()</ref> are not running concurrently with the same <computeroutput>pdata</computeroutput> data structure. Any access to data structures not stored in <computeroutput>pdata</computeroutput> should be designed to be thread-safe. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="346" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TrajectoryAnalysisModule_1a9d14bf1683086d3fafdb11e23e003de4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gmx::TrajectoryAnalysisModule::finishFrames</definition>
        <argsstring>(TrajectoryAnalysisModuleData *pdata)</argsstring>
        <name>finishFrames</name>
        <param>
          <type><ref refid="classgmx_1_1TrajectoryAnalysisModuleData" kindref="compound">TrajectoryAnalysisModuleData</ref> *</type>
          <declname>pdata</declname>
        </param>
        <briefdescription>
<para>Finishes the analysis of frames. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Data structure for thread-local data.</para></parameterdescription>
</parameteritem>
</parameterlist>
This method is called once for each call of <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a6082fcf69bdc3b0a1945ece31437f195" kindref="member">startFrames()</ref>, with the data structure returned by the corresponding <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a6082fcf69bdc3b0a1945ece31437f195" kindref="member">startFrames()</ref>. The <computeroutput>pdata</computeroutput> object should be destroyed by the caller after this function has been called.</para><para>You only need to override this method if you need custom operations to combine data from the frame-local data structures to get the final result. In such cases, the data should be aggregated in this function and stored in a member attribute.</para><para>The default implementation does nothing.</para><para><simplesect kind="see"><para><ref refid="classgmx_1_1TrajectoryAnalysisModule_1a6082fcf69bdc3b0a1945ece31437f195" kindref="member">startFrames()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="367" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.cpp" bodystart="303" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TrajectoryAnalysisModule_1a3b9d902a262ba124be565eca5b714e4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gmx::TrajectoryAnalysisModule::finishAnalysis</definition>
        <argsstring>(int nframes)=0</argsstring>
        <name>finishAnalysis</name>
        <reimplementedby refid="classAnalysisTemplate_1ae041eaddc628f03387dab1c217442606">finishAnalysis</reimplementedby>
        <reimplementedby refid="classgmx_1_1SelectionTester_1a1f1e2611ee035fa889240a945202290d">finishAnalysis</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02distance_8cpp_03_1_1Distance_1a05ec5bdafe80f72c527af606ccb0da80">finishAnalysis</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02freevolume_8cpp_03_1_1FreeVolume_1a3713f4d8f17868926c8e97e9d294cbfb">finishAnalysis</reimplementedby>
        <reimplementedby refid="group__module__trajectoryanalysis_1ga90bf8eb2b9451a9ccd5246ebbd826996">finishAnalysis</reimplementedby>
        <reimplementedby refid="group__module__trajectoryanalysis_1ga98f58d0b39eb76e41afcf6d718288179">finishAnalysis</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1Angle_1a3a2d610fed4f670ba89da10517f829ad">finishAnalysis</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02select_8cpp_03_1_1Select_1aa9e394793c7c7a1f546682ea319a8ec5">finishAnalysis</reimplementedby>
        <reimplementedby refid="group__module__trajectoryanalysis_1gae58a22fc3e323131e5a606a0aa7792cb">finishAnalysis</reimplementedby>
        <param>
          <type>int</type>
          <declname>nframes</declname>
        </param>
        <briefdescription>
<para>Postprocesses data after frames have been read. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nframes</parametername>
</parameternamelist>
<parameterdescription>
<para>Total number of frames processed.</para></parameterdescription>
</parameteritem>
</parameterlist>
This function is called after all <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a9d14bf1683086d3fafdb11e23e003de4" kindref="member">finishFrames()</ref> calls have been called. <computeroutput>nframes</computeroutput> will equal the number of calls to <ref refid="classgmx_1_1TrajectoryAnalysisModule_1adc7344d1b635c15320af636657383212" kindref="member">analyzeFrame()</ref> that have occurred. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="379" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TrajectoryAnalysisModule_1a80869a7764274db8e314bf0a1c5858f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gmx::TrajectoryAnalysisModule::writeOutput</definition>
        <argsstring>()=0</argsstring>
        <name>writeOutput</name>
        <reimplementedby refid="classAnalysisTemplate_1a517aacaffbe2754d8700e05d96639edf">writeOutput</reimplementedby>
        <reimplementedby refid="classgmx_1_1SelectionTester_1af168fba89b0fdd8276db06e99bc767a7">writeOutput</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02distance_8cpp_03_1_1Distance_1ad2a343a7289469b479a672f2a9f73992">writeOutput</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02freevolume_8cpp_03_1_1FreeVolume_1a173f95c2e204234d3d67827a25cd34aa">writeOutput</reimplementedby>
        <reimplementedby refid="group__module__trajectoryanalysis_1ga74eddf616882ee7fcfe9e5698dfa95c0">writeOutput</reimplementedby>
        <reimplementedby refid="group__module__trajectoryanalysis_1gab2f89d7a6d2caea0c449ed36fa6bb533">writeOutput</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1Angle_1a276c273a6106bfac492742d09495858d">writeOutput</reimplementedby>
        <reimplementedby refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02select_8cpp_03_1_1Select_1a20ef488ecaf69f020bbc6f37daa8e409">writeOutput</reimplementedby>
        <reimplementedby refid="group__module__trajectoryanalysis_1ga57b0ca1ca5a2372184f451654e2354c8">writeOutput</reimplementedby>
        <briefdescription>
<para>Writes output into files and/or standard output/error. </para>        </briefdescription>
        <detaileddescription>
<para>All output from the module, excluding data written out for each frame during <ref refid="classgmx_1_1TrajectoryAnalysisModule_1adc7344d1b635c15320af636657383212" kindref="member">analyzeFrame()</ref>, should be confined into this function. This function is guaranteed to be called only after <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a3b9d902a262ba124be565eca5b714e4b" kindref="member">finishAnalysis()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="388" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TrajectoryAnalysisModule_1a74565040adba0eba6c8fbe97428d1b92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx::TrajectoryAnalysisModule::datasetCount</definition>
        <argsstring>() const </argsstring>
        <name>datasetCount</name>
        <briefdescription>
<para>Returns the number of datasets provided by the module. </para>        </briefdescription>
        <detaileddescription>
<para>Does not throw. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="395" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.cpp" bodystart="308" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TrajectoryAnalysisModule_1a3d7c1a4bc0a4d6ec6b78553e52a83a11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; std::string &gt; &amp;</type>
        <definition>const std::vector&lt; std::string &gt; &amp; gmx::TrajectoryAnalysisModule::datasetNames</definition>
        <argsstring>() const </argsstring>
        <name>datasetNames</name>
        <briefdescription>
<para>Returns a vector with the names of datasets provided by the module. </para>        </briefdescription>
        <detaileddescription>
<para>Does not throw. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="401" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.cpp" bodystart="314" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TrajectoryAnalysisModule_1a2cd76eb3d565a931cd832d8be1991635" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1AbstractAnalysisData" kindref="compound">AbstractAnalysisData</ref> &amp;</type>
        <definition>AbstractAnalysisData &amp; gmx::TrajectoryAnalysisModule::datasetFromIndex</definition>
        <argsstring>(int index) const </argsstring>
        <name>datasetFromIndex</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns a pointer to the data set <computeroutput>index</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Data set to query for. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the requested data set. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1APIError" kindref="compound">APIError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>index</computeroutput> is not valid.</para></parameterdescription>
</parameteritem>
</parameterlist>
<computeroutput>index</computeroutput> should be &gt;= 0 and &lt; <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a74565040adba0eba6c8fbe97428d1b92" kindref="member">datasetCount()</ref>.</para><para>The return value is not const to allow callers to add modules to the data sets. However, the <ref refid="classgmx_1_1AbstractAnalysisData" kindref="compound">AbstractAnalysisData</ref> interface does not provide any means to alter the data, so the module does not need to care about external modifications. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="416" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.cpp" bodystart="320" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TrajectoryAnalysisModule_1a21d07b72b807b0567c02ead65919d528" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1AbstractAnalysisData" kindref="compound">AbstractAnalysisData</ref> &amp;</type>
        <definition>AbstractAnalysisData &amp; gmx::TrajectoryAnalysisModule::datasetFromName</definition>
        <argsstring>(const char *name) const </argsstring>
        <name>datasetFromName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns a pointer to the data set with name <computeroutput>name</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Data set to query for. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the requested data set. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1APIError" kindref="compound">APIError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>name</computeroutput> is not valid.</para></parameterdescription>
</parameteritem>
</parameterlist>
<computeroutput>name</computeroutput> should be one of the names returned by <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a3d7c1a4bc0a4d6ec6b78553e52a83a11" kindref="member">datasetNames()</ref>.</para><para>The return value is not const to allow callers to add modules to the data sets. However, the <ref refid="classgmx_1_1AbstractAnalysisData" kindref="compound">AbstractAnalysisData</ref> interface does not provide any means to alter the data, so the module does not need to care about external modifications. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="431" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.cpp" bodystart="334" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TrajectoryAnalysisModule_1ad7311431fe3d33d4d59add9bc4c93956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::TrajectoryAnalysisModule::finishFrameSerial</definition>
        <argsstring>(int frameIndex)</argsstring>
        <name>finishFrameSerial</name>
        <param>
          <type>int</type>
          <declname>frameIndex</declname>
        </param>
        <briefdescription>
<para>Processes data in <ref refid="classgmx_1_1AnalysisData" kindref="compound">AnalysisData</ref> objects in serial for each frame. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">frameIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the frame that has been finished.</para></parameterdescription>
</parameteritem>
</parameterlist>
This method is called by the framework in order for each frame, after the analysis for that frame has been finished. These calls always execute in serial and in sequential frame order, even during parallel analysis where multiple <ref refid="classgmx_1_1TrajectoryAnalysisModule_1adc7344d1b635c15320af636657383212" kindref="member">analyzeFrame()</ref> calls may be executing concurrently.</para><para><simplesect kind="see"><para><ref refid="classgmx_1_1AnalysisData_1a54e98fd211473c7cfe750e2b49517d96" kindref="member">AnalysisData::finishFrameSerial()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="445" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.cpp" bodystart="366" bodyend="375"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classgmx_1_1TrajectoryAnalysisModule_1a2023063f2d3978b4d89c90f03fb2a805" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::TrajectoryAnalysisModule::TrajectoryAnalysisModule</definition>
        <argsstring>()</argsstring>
        <name>TrajectoryAnalysisModule</name>
        <briefdescription>
<para>Initializes the dataset registration mechanism. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="453" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.cpp" bodystart="270" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TrajectoryAnalysisModule_1ad946d2af4c8e284ef349f2cd816495bb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::TrajectoryAnalysisModule::registerBasicDataset</definition>
        <argsstring>(AbstractAnalysisData *data, const char *name)</argsstring>
        <name>registerBasicDataset</name>
        <param>
          <type><ref refid="classgmx_1_1AbstractAnalysisData" kindref="compound">AbstractAnalysisData</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Registers a dataset that exports data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data object to register. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name to register the dataset with. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory.</para></parameterdescription>
</parameteritem>
</parameterlist>
Registers <computeroutput>data</computeroutput> as a dataset that provides output from the analysis module. Callers for the module can access the dataset with <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a21d07b72b807b0567c02ead65919d528" kindref="member">datasetFromName()</ref> using <computeroutput>name</computeroutput> as an <ref refid="classgmx_1_1AbstractAnalysisData" kindref="compound">AbstractAnalysisData</ref> object. This allows them to add their own data modules to do extra processing.</para><para><computeroutput>name</computeroutput> must be unique across all calls within the same <ref refid="classgmx_1_1TrajectoryAnalysisModule" kindref="compound">TrajectoryAnalysisModule</ref> instance. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="471" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.cpp" bodystart="345" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TrajectoryAnalysisModule_1a86b3b5cd87518e988e8b5452b39a3ad1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::TrajectoryAnalysisModule::registerAnalysisDataset</definition>
        <argsstring>(AnalysisData *data, const char *name)</argsstring>
        <name>registerAnalysisDataset</name>
        <param>
          <type><ref refid="classgmx_1_1AnalysisData" kindref="compound">AnalysisData</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Registers a parallelized dataset that exports data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1AnalysisData" kindref="compound">AnalysisData</ref> object to register. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name to register the dataset with. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory.</para></parameterdescription>
</parameteritem>
</parameterlist>
This method works as <ref refid="classgmx_1_1TrajectoryAnalysisModule_1ad946d2af4c8e284ef349f2cd816495bb" kindref="member">registerBasicDataset()</ref>, but additionally allows data handles for <computeroutput>data</computeroutput> to be accessed using TrajectoryAnalysisData.</para><para><simplesect kind="see"><para><ref refid="classgmx_1_1TrajectoryAnalysisModule_1ad946d2af4c8e284ef349f2cd816495bb" kindref="member">registerBasicDataset()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="485" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.cpp" bodystart="357" bodyend="363"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for trajectory analysis modules. </para>    </briefdescription>
    <detaileddescription>
<para>Trajectory analysis methods should derive from this class and override the necessary virtual methods to implement initialization (<ref refid="classgmx_1_1TrajectoryAnalysisModule_1aba5990675e980bf746ecd224f814d549" kindref="member">initOptions()</ref>, <ref refid="classgmx_1_1TrajectoryAnalysisModule_1afa3457cc922f1d16c4c19cec740e0442" kindref="member">optionsFinished()</ref>, <ref refid="classgmx_1_1TrajectoryAnalysisModule_1ae5ae73770caad4ff1808c2ca655dad0e" kindref="member">initAnalysis()</ref>, <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a419a3d7f950f0731a20d6a7fafaa6d05" kindref="member">initAfterFirstFrame()</ref>), per-frame analysis (<ref refid="classgmx_1_1TrajectoryAnalysisModule_1adc7344d1b635c15320af636657383212" kindref="member">analyzeFrame()</ref>), and final processing (<ref refid="classgmx_1_1TrajectoryAnalysisModule_1a9d14bf1683086d3fafdb11e23e003de4" kindref="member">finishFrames()</ref>, <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a3b9d902a262ba124be565eca5b714e4b" kindref="member">finishAnalysis()</ref>, <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a80869a7764274db8e314bf0a1c5858f6" kindref="member">writeOutput()</ref>).</para><para>For parallel analysis using threads, only a single object is constructed, but the methods <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a6082fcf69bdc3b0a1945ece31437f195" kindref="member">startFrames()</ref>, <ref refid="classgmx_1_1TrajectoryAnalysisModule_1adc7344d1b635c15320af636657383212" kindref="member">analyzeFrame()</ref> and <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a9d14bf1683086d3fafdb11e23e003de4" kindref="member">finishFrames()</ref> are called in each thread. Frame-local data should be initialized in <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a6082fcf69bdc3b0a1945ece31437f195" kindref="member">startFrames()</ref> and stored in a class derived from <ref refid="classgmx_1_1TrajectoryAnalysisModuleData" kindref="compound">TrajectoryAnalysisModuleData</ref> that is passed to the other methods. The default implementation of <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a6082fcf69bdc3b0a1945ece31437f195" kindref="member">startFrames()</ref> can be used if only data handles and selections need to be thread-local.</para><para>To get the full benefit from this class, <ref refid="group__module__analysisdata" kindref="compound">analysis data objects</ref> and <ref refid="group__module__selection" kindref="compound">selections</ref> should be used in the implementation. See the corresponding modules&apos; documentation for details of how they work.</para><para>Typical way of using <ref refid="classgmx_1_1AnalysisData" kindref="compound">AnalysisData</ref> in derived classes is to have the <ref refid="classgmx_1_1AnalysisData" kindref="compound">AnalysisData</ref> object as a member variable and register it using <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a86b3b5cd87518e988e8b5452b39a3ad1" kindref="member">registerAnalysisDataset()</ref>. Analysis modules are initialized in <ref refid="classgmx_1_1TrajectoryAnalysisModule_1ae5ae73770caad4ff1808c2ca655dad0e" kindref="member">initAnalysis()</ref> and the processing chain is initialized. If any of the modules is required, e.g., for post-processing in <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a3b9d902a262ba124be565eca5b714e4b" kindref="member">finishAnalysis()</ref>, it can be stored in a member variable. To add data to the data object in <ref refid="classgmx_1_1TrajectoryAnalysisModule_1adc7344d1b635c15320af636657383212" kindref="member">analyzeFrame()</ref>, a data handle is obtained using <ref refid="classgmx_1_1TrajectoryAnalysisModuleData_1ae600024eaa634d84157bc7c75c020e97" kindref="member">TrajectoryAnalysisModuleData::dataHandle()</ref>.</para><para>Typical way of using selections in derived classes is to have the required <ref refid="classgmx_1_1Selection" kindref="compound">Selection</ref> objects (or <ref refid="namespacegmx_1ac852a0801cf49723903e23bc77a32163" kindref="member">SelectionList</ref> objects) as member variables, and add the required selection options in <ref refid="classgmx_1_1TrajectoryAnalysisModule_1aba5990675e980bf746ecd224f814d549" kindref="member">initOptions()</ref>. These member variables can be accessed in <ref refid="classgmx_1_1TrajectoryAnalysisModule_1ae5ae73770caad4ff1808c2ca655dad0e" kindref="member">initAnalysis()</ref> to get general information about the selections. In <ref refid="classgmx_1_1TrajectoryAnalysisModule_1adc7344d1b635c15320af636657383212" kindref="member">analyzeFrame()</ref>, these selection objects should not be used directly, but instead <ref refid="classgmx_1_1TrajectoryAnalysisModuleData_1a4e23dbf4cfd2554ac011664b49c1c7e0" kindref="member">TrajectoryAnalysisModuleData::parallelSelection()</ref> should be used to obtain a selection object that works correctly also for parallel analysis.</para><para>Derived classes should use exceptions to indicate errors in the virtual methods. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2629">
        <label>AnalysisTemplate</label>
        <link refid="classAnalysisTemplate"/>
        <childnode refid="2628" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2632">
        <label>gmx::analysismodules::anonymous_namespace{distance.cpp}::Distance</label>
        <link refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02distance_8cpp_03_1_1Distance"/>
        <childnode refid="2628" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2636">
        <label>gmx::analysismodules::anonymous_namespace{sasa.cpp}::Sasa</label>
        <link refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02sasa_8cpp_03_1_1Sasa"/>
        <childnode refid="2628" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2638">
        <label>gmx::SelectionTester</label>
        <link refid="classgmx_1_1SelectionTester"/>
        <childnode refid="2628" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2631">
        <label>gmx::analysismodules::anonymous_namespace{angle.cpp}::Angle</label>
        <link refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1Angle"/>
        <childnode refid="2628" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2633">
        <label>gmx::analysismodules::anonymous_namespace{freevolume.cpp}::FreeVolume</label>
        <link refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02freevolume_8cpp_03_1_1FreeVolume"/>
        <childnode refid="2628" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2630">
        <label>anonymous_namespace{cmdlinerunner.cpp}::MockModule</label>
        <link refid="classanonymous__namespace_02cmdlinerunner_8cpp_03_1_1MockModule"/>
        <childnode refid="2628" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2628">
        <label>gmx::TrajectoryAnalysisModule</label>
        <link refid="classgmx_1_1TrajectoryAnalysisModule"/>
      </node>
      <node id="2635">
        <label>gmx::analysismodules::anonymous_namespace{rdf.cpp}::Rdf</label>
        <link refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02rdf_8cpp_03_1_1Rdf"/>
        <childnode refid="2628" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2637">
        <label>gmx::analysismodules::anonymous_namespace{select.cpp}::Select</label>
        <link refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02select_8cpp_03_1_1Select"/>
        <childnode refid="2628" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2634">
        <label>gmx::analysismodules::anonymous_namespace{pairdist.cpp}::PairDistance</label>
        <link refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02pairdist_8cpp_03_1_1PairDistance"/>
        <childnode refid="2628" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" line="230" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/analysismodule.h" bodystart="229" bodyend="496"/>
    <listofallmembers>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1adc7344d1b635c15320af636657383212" prot="public" virt="pure-virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>analyzeFrame</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1a74565040adba0eba6c8fbe97428d1b92" prot="public" virt="non-virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>datasetCount</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1a2cd76eb3d565a931cd832d8be1991635" prot="public" virt="non-virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>datasetFromIndex</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1a21d07b72b807b0567c02ead65919d528" prot="public" virt="non-virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>datasetFromName</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1a3d7c1a4bc0a4d6ec6b78553e52a83a11" prot="public" virt="non-virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>datasetNames</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1a3b9d902a262ba124be565eca5b714e4b" prot="public" virt="pure-virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>finishAnalysis</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1a9d14bf1683086d3fafdb11e23e003de4" prot="public" virt="virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>finishFrames</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1ad7311431fe3d33d4d59add9bc4c93956" prot="public" virt="non-virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>finishFrameSerial</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1a7d1bb529b418a1a0f587a5a5687f0b0d" prot="private" virt="non-virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>impl_</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1a419a3d7f950f0731a20d6a7fafaa6d05" prot="public" virt="virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>initAfterFirstFrame</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1ae5ae73770caad4ff1808c2ca655dad0e" prot="public" virt="pure-virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>initAnalysis</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1aba5990675e980bf746ecd224f814d549" prot="public" virt="pure-virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>initOptions</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1afa3457cc922f1d16c4c19cec740e0442" prot="public" virt="virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>optionsFinished</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1a86b3b5cd87518e988e8b5452b39a3ad1" prot="protected" virt="non-virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>registerAnalysisDataset</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1ad946d2af4c8e284ef349f2cd816495bb" prot="protected" virt="non-virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>registerBasicDataset</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1a6082fcf69bdc3b0a1945ece31437f195" prot="public" virt="virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>startFrames</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1a2023063f2d3978b4d89c90f03fb2a805" prot="protected" virt="non-virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>TrajectoryAnalysisModule</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1aab5ed763e4b63da4601f9b9004b595a9" prot="private" virt="non-virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>TrajectoryAnalysisModuleData</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1a80869a7764274db8e314bf0a1c5858f6" prot="public" virt="pure-virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>writeOutput</name></member>
      <member refid="classgmx_1_1TrajectoryAnalysisModule_1a85fd67cef55f7116dfb6a112914695ae" prot="public" virt="virtual"><scope>gmx::TrajectoryAnalysisModule</scope><name>~TrajectoryAnalysisModule</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

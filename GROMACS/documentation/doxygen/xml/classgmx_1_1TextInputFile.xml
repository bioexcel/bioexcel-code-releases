<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1TextInputFile" kind="class" prot="public">
    <compoundname>gmx::TextInputFile</compoundname>
    <basecompoundref refid="classgmx_1_1TextInputStream" prot="public" virt="non-virtual">gmx::TextInputStream</basecompoundref>
    <includes local="no">gromacs/utility/filestream.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1TextInputFile_1aa102ffb2aafa46bea3dca771d7a680cd" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1PrivateImplPointer" kindref="compound">PrivateImplPointer</ref>&lt; <ref refid="classgmx_1_1internal_1_1FileStreamImpl" kindref="compound">internal::FileStreamImpl</ref> &gt;</type>
        <definition>PrivateImplPointer&lt;internal::FileStreamImpl&gt; gmx::TextInputFile::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="151" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgmx_1_1TextInputFile_1ae5f5be9ae05aab7b6e3d4cac00425082" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE * gmx::TextInputFile::openRawHandle</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>openRawHandle</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Opens a file and returns a <computeroutput>FILE</computeroutput> handle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> of the file to open. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1FileIOError" kindref="compound">FileIOError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on any I/O error.</para></parameterdescription>
</parameteritem>
</parameterlist>
Instead of returning <computeroutput>NULL</computeroutput> on errors, throws an exception with additional details (including the file name and <computeroutput>errno</computeroutput>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="115" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.cpp" bodystart="192" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextInputFile_1af6e432cb9d290b23d8e20f5e53f45be0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE * gmx::TextInputFile::openRawHandle</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>openRawHandle</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Opens a file and returns a <computeroutput>FILE</computeroutput> handle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> of the file to open. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1FileIOError" kindref="compound">FileIOError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on any I/O error.</para></parameterdescription>
</parameteritem>
</parameterlist>
Instead of returning <computeroutput>NULL</computeroutput> on errors, throws an exception with additional details (including the file name and <computeroutput>errno</computeroutput>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="117" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.cpp" bodystart="205" bodyend="208"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1TextInputFile_1a9cd955df36ec0d94d42708ec2b85e7ea" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::TextInputFile::TextInputFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>TextInputFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Opens a text file as a stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> to the file to open. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1FileIOError" kindref="compound">FileIOError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on any I/O error. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="126" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.cpp" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextInputFile_1a6d7569f14dfef30d6ea1569e2918a73b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::TextInputFile::TextInputFile</definition>
        <argsstring>(FILE *fp)</argsstring>
        <name>TextInputFile</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
<para>Initializes file object from an existing file handle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fp</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1File" kindref="compound">File</ref> handle to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory.</para></parameterdescription>
</parameteritem>
</parameterlist>
The caller is responsible of closing the file; <ref refid="classgmx_1_1TextInputFile_1a170d30bb46507e9260de975b6b09da36" kindref="member">close()</ref> does nothing for an object constructed this way. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="136" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.cpp" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextInputFile_1a80b009b8dc6eab93a16436b56061db68" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>gmx::TextInputFile::~TextInputFile</definition>
        <argsstring>()</argsstring>
        <name>~TextInputFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="137" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.cpp" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextInputFile_1a753aa8cc372fe484a09b9826990ae4bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE * gmx::TextInputFile::handle</definition>
        <argsstring>()</argsstring>
        <name>handle</name>
        <briefdescription>
<para>Returns a raw handle to the input file. </para>        </briefdescription>
        <detaileddescription>
<para>This is provided for interoperability with older C-like code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="144" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.cpp" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextInputFile_1a5feba7c6708ce8ba1a7ba3af63ff77b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool gmx::TextInputFile::readLine</definition>
        <argsstring>(std::string *line)</argsstring>
        <name>readLine</name>
        <reimplements refid="classgmx_1_1TextInputStream_1addd5947a5b6f6065db02467d8f3c5137">readLine</reimplements>
        <param>
          <type>std::string *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Reads a line (with newline included) from the stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">line</parametername>
</parameternamelist>
<parameterdescription>
<para>String to receive the line. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>false</computeroutput> if nothing was read because the stream ended.</para></simplesect>
On error or when <computeroutput>false</computeroutput> is returned, <computeroutput>line</computeroutput> will be empty. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="147" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.cpp" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextInputFile_1a170d30bb46507e9260de975b6b09da36" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gmx::TextInputFile::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <reimplements refid="classgmx_1_1TextInputStream_1ad8b5700fa45d4eb69105238d9fdfaca7">close</reimplements>
        <briefdescription>
<para>Closes the stream. </para>        </briefdescription>
        <detaileddescription>
<para>It is not allowed to read from a stream after it has been closed. See <ref refid="classgmx_1_1TextOutputStream_1a8c624ae9199c3bfd37bc35a1beb7852f" kindref="member">TextOutputStream::close()</ref> for rationale for a <ref refid="classgmx_1_1TextInputFile_1a170d30bb46507e9260de975b6b09da36" kindref="member">close()</ref> method separate from the destructor. For input, failures during close should be rare, but it is clearer to keep the interface symmetric. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="148" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.cpp" bodystart="234" bodyend="237"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Text input stream implementation for reading from a file. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal /> Implementations for the <ref refid="classgmx_1_1TextInputStream" kindref="compound">TextInputStream</ref> methods throw <ref refid="classgmx_1_1FileIOError" kindref="compound">FileIOError</ref> on any I/O error. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2568">
        <label>gmx::TextInputStream</label>
        <link refid="classgmx_1_1TextInputStream"/>
      </node>
      <node id="2567">
        <label>gmx::TextInputFile</label>
        <link refid="classgmx_1_1TextInputFile"/>
        <childnode refid="2568" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2570">
        <label>gmx::TextInputStream</label>
        <link refid="classgmx_1_1TextInputStream"/>
      </node>
      <node id="2569">
        <label>gmx::TextInputFile</label>
        <link refid="classgmx_1_1TextInputFile"/>
        <childnode refid="2570" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="104" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" bodystart="103" bodyend="152"/>
    <listofallmembers>
      <member refid="classgmx_1_1TextInputFile_1a170d30bb46507e9260de975b6b09da36" prot="public" virt="virtual"><scope>gmx::TextInputFile</scope><name>close</name></member>
      <member refid="classgmx_1_1TextInputFile_1a753aa8cc372fe484a09b9826990ae4bc" prot="public" virt="non-virtual"><scope>gmx::TextInputFile</scope><name>handle</name></member>
      <member refid="classgmx_1_1TextInputFile_1aa102ffb2aafa46bea3dca771d7a680cd" prot="private" virt="non-virtual"><scope>gmx::TextInputFile</scope><name>impl_</name></member>
      <member refid="classgmx_1_1TextInputFile_1ae5f5be9ae05aab7b6e3d4cac00425082" prot="public" virt="non-virtual"><scope>gmx::TextInputFile</scope><name>openRawHandle</name></member>
      <member refid="classgmx_1_1TextInputFile_1af6e432cb9d290b23d8e20f5e53f45be0" prot="public" virt="non-virtual"><scope>gmx::TextInputFile</scope><name>openRawHandle</name></member>
      <member refid="classgmx_1_1TextInputFile_1a5feba7c6708ce8ba1a7ba3af63ff77b4" prot="public" virt="virtual"><scope>gmx::TextInputFile</scope><name>readLine</name></member>
      <member refid="classgmx_1_1TextInputFile_1a9cd955df36ec0d94d42708ec2b85e7ea" prot="public" virt="non-virtual"><scope>gmx::TextInputFile</scope><name>TextInputFile</name></member>
      <member refid="classgmx_1_1TextInputFile_1a6d7569f14dfef30d6ea1569e2918a73b" prot="public" virt="non-virtual"><scope>gmx::TextInputFile</scope><name>TextInputFile</name></member>
      <member refid="classgmx_1_1TextInputFile_1a80b009b8dc6eab93a16436b56061db68" prot="public" virt="virtual"><scope>gmx::TextInputFile</scope><name>~TextInputFile</name></member>
      <member refid="classgmx_1_1TextInputStream_1a652e61df91e62468038de5093975d78b" prot="public" virt="virtual"><scope>gmx::TextInputFile</scope><name>~TextInputStream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

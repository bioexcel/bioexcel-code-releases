<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1test_1_1TestFileInputRedirector" kind="class" prot="public">
    <compoundname>gmx::test::TestFileInputRedirector</compoundname>
    <basecompoundref refid="classgmx_1_1IFileInputRedirector" prot="public" virt="non-virtual">gmx::IFileInputRedirector</basecompoundref>
    <includes local="no">testutils/testfileredirector.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestFileInputRedirector_1aa91f6203a937d62e6d63675b1336242b" prot="private" static="no" mutable="no">
        <type><ref refid="parser__internal_8h_1a8553aeb4ef79ad62e90241cf54e221d5" kindref="member">std::set</ref>&lt; std::string &gt;</type>
        <definition>std::set&lt;std::string&gt; gmx::test::TestFileInputRedirector::existingFiles_</definition>
        <argsstring></argsstring>
        <name>existingFiles_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfileredirector.h" line="88" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfileredirector.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileInputRedirector_1a406de6a6938ac8f987ea0683435d5dad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::test::TestFileInputRedirector::TestFileInputRedirector</definition>
        <argsstring>()</argsstring>
        <name>TestFileInputRedirector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfileredirector.h" line="71" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfileredirector.cpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileInputRedirector_1ad60f3ff328615fa45c89d77ffdb777e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>gmx::test::TestFileInputRedirector::~TestFileInputRedirector</definition>
        <argsstring>()</argsstring>
        <name>~TestFileInputRedirector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfileredirector.h" line="72" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfileredirector.cpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileInputRedirector_1a7a1f042ec5b53b86590070b18c4f8dda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::TestFileInputRedirector::addExistingFile</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>addExistingFile</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Marks the provided path as an existing file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory.</para></parameterdescription>
</parameteritem>
</parameterlist>
Further checks for existence of the given path will return <computeroutput>true</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfileredirector.h" line="81" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfileredirector.cpp" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileInputRedirector_1a1bae84a435459aeb48948783528c633b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool gmx::test::TestFileInputRedirector::fileExists</definition>
        <argsstring>(const char *filename, File::NotFoundHandler onNotFound) const </argsstring>
        <name>fileExists</name>
        <reimplements refid="classgmx_1_1IFileInputRedirector_1a86a5419b2179e878db05bbad2d032a55">fileExists</reimplements>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>File::NotFoundHandler</type>
          <declname>onNotFound</declname>
        </param>
        <briefdescription>
<para>Checks whether the provided path exists (and is a file). </para>        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>onNotFound</computeroutput> can be used to influence the behavior on error conditions. Functions to pass as this parameter are provided as members of <ref refid="classgmx_1_1File" kindref="compound">gmx::File</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfileredirector.h" line="84" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfileredirector.cpp" bodystart="78" bodyend="88"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileInputRedirector_1a8270e6d8eed10bd23e6a94e16024e07c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1test_1_1TestFileInputRedirector" kindref="compound">TestFileInputRedirector</ref> &amp;</type>
        <definition>TestFileInputRedirector&amp; gmx::test::TestFileInputRedirector::operator=</definition>
        <argsstring>(const TestFileInputRedirector &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classgmx_1_1test_1_1TestFileInputRedirector" kindref="compound">TestFileInputRedirector</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfileredirector.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileInputRedirector_1aa7a9da4933294399a88e172687608c69" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::test::TestFileInputRedirector::TestFileInputRedirector</definition>
        <argsstring>(const TestFileInputRedirector &amp;)=delete</argsstring>
        <name>TestFileInputRedirector</name>
        <param>
          <type>const <ref refid="classgmx_1_1test_1_1TestFileInputRedirector" kindref="compound">TestFileInputRedirector</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfileredirector.h" line="90" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>In-memory implementation for <ref refid="classgmx_1_1IFileInputRedirector" kindref="compound">IFileInputRedirector</ref> for tests. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal /> By default, this implementation will return <computeroutput>false</computeroutput> for all file existence checks. To return <computeroutput>true</computeroutput> for a specific path, use <ref refid="classgmx_1_1test_1_1TestFileInputRedirector_1a7a1f042ec5b53b86590070b18c4f8dda" kindref="member">addExistingFile()</ref>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2510">
        <label>gmx::IFileInputRedirector</label>
        <link refid="classgmx_1_1IFileInputRedirector"/>
      </node>
      <node id="2509">
        <label>gmx::test::TestFileInputRedirector</label>
        <link refid="classgmx_1_1test_1_1TestFileInputRedirector"/>
        <childnode refid="2510" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2512">
        <label>gmx::IFileInputRedirector</label>
        <link refid="classgmx_1_1IFileInputRedirector"/>
      </node>
      <node id="2511">
        <label>gmx::test::TestFileInputRedirector</label>
        <link refid="classgmx_1_1test_1_1TestFileInputRedirector"/>
        <childnode refid="2512" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfileredirector.h" line="69" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfileredirector.h" bodystart="68" bodyend="91"/>
    <listofallmembers>
      <member refid="classgmx_1_1test_1_1TestFileInputRedirector_1a7a1f042ec5b53b86590070b18c4f8dda" prot="public" virt="non-virtual"><scope>gmx::test::TestFileInputRedirector</scope><name>addExistingFile</name></member>
      <member refid="classgmx_1_1test_1_1TestFileInputRedirector_1aa91f6203a937d62e6d63675b1336242b" prot="private" virt="non-virtual"><scope>gmx::test::TestFileInputRedirector</scope><name>existingFiles_</name></member>
      <member refid="classgmx_1_1test_1_1TestFileInputRedirector_1a1bae84a435459aeb48948783528c633b" prot="public" virt="virtual"><scope>gmx::test::TestFileInputRedirector</scope><name>fileExists</name></member>
      <member refid="classgmx_1_1IFileInputRedirector_1a6dcfbfde4d7b41e49235bf4e16b0a421" prot="public" virt="non-virtual" ambiguityscope="gmx::IFileInputRedirector::"><scope>gmx::test::TestFileInputRedirector</scope><name>fileExists</name></member>
      <member refid="classgmx_1_1test_1_1TestFileInputRedirector_1a8270e6d8eed10bd23e6a94e16024e07c" prot="private" virt="non-virtual"><scope>gmx::test::TestFileInputRedirector</scope><name>operator=</name></member>
      <member refid="classgmx_1_1test_1_1TestFileInputRedirector_1a406de6a6938ac8f987ea0683435d5dad" prot="public" virt="non-virtual"><scope>gmx::test::TestFileInputRedirector</scope><name>TestFileInputRedirector</name></member>
      <member refid="classgmx_1_1test_1_1TestFileInputRedirector_1aa7a9da4933294399a88e172687608c69" prot="private" virt="non-virtual"><scope>gmx::test::TestFileInputRedirector</scope><name>TestFileInputRedirector</name></member>
      <member refid="classgmx_1_1IFileInputRedirector_1a0048ae5e511da8748e42e12a2fb4d228" prot="public" virt="virtual"><scope>gmx::test::TestFileInputRedirector</scope><name>~IFileInputRedirector</name></member>
      <member refid="classgmx_1_1test_1_1TestFileInputRedirector_1ad60f3ff328615fa45c89d77ffdb777e2" prot="public" virt="virtual"><scope>gmx::test::TestFileInputRedirector</scope><name>~TestFileInputRedirector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

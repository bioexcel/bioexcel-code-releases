<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1PrivateImplPointer" kind="class" prot="public">
    <compoundname>gmx::PrivateImplPointer</compoundname>
    <includes local="no">gromacs/utility/classhelpers.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>Impl</declname>
        <defname>Impl</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1PrivateImplPointer_1a32c7b25f5fcc117dd2a2505fbe049ab6" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; gmx::PrivateImplPointer&lt; Impl &gt;::ptr_</definition>
        <argsstring></argsstring>
        <name>ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" line="193" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1PrivateImplPointer_1a7b0e9abeda705d240aacfc227d9d7118" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::PrivateImplPointer&lt; Impl &gt;::PrivateImplPointer</definition>
        <argsstring>(std::nullptr_t)</argsstring>
        <name>PrivateImplPointer</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
<para>Allow implicit initialization from nullptr to support comparison. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" line="153" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1PrivateImplPointer_1a512030e66c85ece1550365a21e3bd2ff" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::PrivateImplPointer&lt; Impl &gt;::PrivateImplPointer</definition>
        <argsstring>(Impl *ptr)</argsstring>
        <name>PrivateImplPointer</name>
        <param>
          <type>Impl *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Initialize with the given implementation class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" line="155" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1PrivateImplPointer_1ab80711212028501a05c882ee2dfc5ff8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::PrivateImplPointer&lt; Impl &gt;::reset</definition>
        <argsstring>(Impl *ptr)</argsstring>
        <name>reset</name>
        <param>
          <type>Impl *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Sets a new implementation class and destructs the previous one. </para>        </briefdescription>
        <detaileddescription>
<para>Needed, e.g., to implement lazily initializable or copy-assignable classes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" line="172" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1PrivateImplPointer_1a4b6e4b115c32e99fc0c133d3056e67b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Impl *</type>
        <definition>Impl* gmx::PrivateImplPointer&lt; Impl &gt;::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
<para>Access the raw pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" line="174" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1PrivateImplPointer_1a40917645eba614a1c2efd18fa9ba01ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Impl *</type>
        <definition>Impl* gmx::PrivateImplPointer&lt; Impl &gt;::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>Access the implementation class as with a raw pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" line="176" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1PrivateImplPointer_1a725d4492ea462a6ab096640361233e15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Impl &amp;</type>
        <definition>Impl&amp; gmx::PrivateImplPointer&lt; Impl &gt;::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Access the implementation class as with a raw pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" line="178" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1PrivateImplPointer_1a8543ac373fc535b8d25b3b614484ba04" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Impl *</type>
        <definition>const Impl* gmx::PrivateImplPointer&lt; Impl &gt;::operator-&gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>Access the implementation class as with a raw pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" line="180" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1PrivateImplPointer_1a3a24aec2250cc1c213055f2037bf8602" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Impl &amp;</type>
        <definition>const Impl&amp; gmx::PrivateImplPointer&lt; Impl &gt;::operator*</definition>
        <argsstring>() const </argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Access the implementation class as with a raw pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" line="182" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1PrivateImplPointer_1ae48f9948b473d895965ff8b7805ec66a" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::PrivateImplPointer&lt; Impl &gt;::operator bool</definition>
        <argsstring>() const </argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Allows testing whether the implementation is initialized. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" line="185" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" bodystart="185" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1PrivateImplPointer_1a994b796b6b95dc8892310d601ca25e46" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::PrivateImplPointer&lt; Impl &gt;::operator==</definition>
        <argsstring>(const PrivateImplPointer &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classgmx_1_1PrivateImplPointer" kindref="compound">PrivateImplPointer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Tests for equality (mainly useful against nullptr). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" line="188" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1PrivateImplPointer_1a6e551bedf1ae2e1c10f67587bcb6ff7d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::PrivateImplPointer&lt; Impl &gt;::operator!=</definition>
        <argsstring>(const PrivateImplPointer &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classgmx_1_1PrivateImplPointer" kindref="compound">PrivateImplPointer</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Tests for inequality (mainly useful against nullptr). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" line="190" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" bodystart="190" bodyend="190"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper class to manage a pointer to a private implementation class. </para>    </briefdescription>
    <detaileddescription>
<para>This helper provides the following benefits (all but the last could also be achieved with std::unique_ptr):<itemizedlist>
<listitem><para>Automatic memory management: the implementation pointer is freed in the destructor automatically. If the destructor is not declared or is defined inline in the header file, a compilation error occurs instead of a memory leak or undefined behavior.</para></listitem><listitem><para>Exception safety in constructors: the implementation pointer is freed correctly even if the constructor of the containing class throws after the implementation class is constructed.</para></listitem><listitem><para>Copy and/or assignment is automatically disallowed if explicit copy constructor and/or assignment operator is not provided.</para></listitem><listitem><para>Compiler helps to manage const-correctness: in const methods, it is not possible to change the implementation class.</para></listitem></itemizedlist>
</para><para>Move construction and assignment are also disallowed, but can be enabled by providing explicit move constructor and/or assignment.</para><para>Intended use: <programlisting><codeline><highlight class="comment">//<sp/>In<sp/>exampleclass.h</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ExampleClass</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExampleClass();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~ExampleClass();<sp/></highlight><highlight class="comment">//<sp/>Must<sp/>not<sp/>be<sp/>defined<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;...&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Impl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrivateImplPointer&lt;Impl&gt;<sp/>impl_;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>exampleclass.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;definition<sp/>of<sp/>ExampleClass::Impl&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ExampleClass::ExampleClass()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>impl_(new<sp/>Impl)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ExampleClass::~ExampleClass()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" line="150" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/classhelpers.h" bodystart="149" bodyend="196"/>
    <listofallmembers>
      <member refid="classgmx_1_1PrivateImplPointer_1a4b6e4b115c32e99fc0c133d3056e67b4" prot="public" virt="non-virtual"><scope>gmx::PrivateImplPointer</scope><name>get</name></member>
      <member refid="classgmx_1_1PrivateImplPointer_1ae48f9948b473d895965ff8b7805ec66a" prot="public" virt="non-virtual"><scope>gmx::PrivateImplPointer</scope><name>operator bool</name></member>
      <member refid="classgmx_1_1PrivateImplPointer_1a6e551bedf1ae2e1c10f67587bcb6ff7d" prot="public" virt="non-virtual"><scope>gmx::PrivateImplPointer</scope><name>operator!=</name></member>
      <member refid="classgmx_1_1PrivateImplPointer_1a725d4492ea462a6ab096640361233e15" prot="public" virt="non-virtual"><scope>gmx::PrivateImplPointer</scope><name>operator*</name></member>
      <member refid="classgmx_1_1PrivateImplPointer_1a3a24aec2250cc1c213055f2037bf8602" prot="public" virt="non-virtual"><scope>gmx::PrivateImplPointer</scope><name>operator*</name></member>
      <member refid="classgmx_1_1PrivateImplPointer_1a40917645eba614a1c2efd18fa9ba01ef" prot="public" virt="non-virtual"><scope>gmx::PrivateImplPointer</scope><name>operator-&gt;</name></member>
      <member refid="classgmx_1_1PrivateImplPointer_1a8543ac373fc535b8d25b3b614484ba04" prot="public" virt="non-virtual"><scope>gmx::PrivateImplPointer</scope><name>operator-&gt;</name></member>
      <member refid="classgmx_1_1PrivateImplPointer_1a994b796b6b95dc8892310d601ca25e46" prot="public" virt="non-virtual"><scope>gmx::PrivateImplPointer</scope><name>operator==</name></member>
      <member refid="classgmx_1_1PrivateImplPointer_1a7b0e9abeda705d240aacfc227d9d7118" prot="public" virt="non-virtual"><scope>gmx::PrivateImplPointer</scope><name>PrivateImplPointer</name></member>
      <member refid="classgmx_1_1PrivateImplPointer_1a512030e66c85ece1550365a21e3bd2ff" prot="public" virt="non-virtual"><scope>gmx::PrivateImplPointer</scope><name>PrivateImplPointer</name></member>
      <member refid="classgmx_1_1PrivateImplPointer_1a32c7b25f5fcc117dd2a2505fbe049ab6" prot="private" virt="non-virtual"><scope>gmx::PrivateImplPointer</scope><name>ptr_</name></member>
      <member refid="classgmx_1_1PrivateImplPointer_1ab80711212028501a05c882ee2dfc5ff8" prot="public" virt="non-virtual"><scope>gmx::PrivateImplPointer</scope><name>reset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

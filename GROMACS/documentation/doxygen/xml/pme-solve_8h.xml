<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="pme-solve_8h" kind="file">
    <compoundname>pme-solve.h</compoundname>
    <includes refid="gmxcomplex_8h" local="yes">gromacs/math/gmxcomplex.h</includes>
    <includes refid="basedefinitions_8h" local="yes">gromacs/utility/basedefinitions.h</includes>
    <includes refid="real_8h" local="yes">gromacs/utility/real.h</includes>
    <includedby refid="pme-solve_8cpp" local="yes">src/gromacs/ewald/pme-solve.cpp</includedby>
    <includedby refid="pme_8cpp" local="yes">src/gromacs/ewald/pme.cpp</includedby>
    <incdepgraph>
      <node id="3408">
        <label>src/gromacs/ewald/pme-solve.h</label>
        <link refid="pme-solve.h"/>
        <childnode refid="3409" relation="include">
        </childnode>
        <childnode refid="3412" relation="include">
        </childnode>
      </node>
      <node id="3410">
        <label>stdint.h</label>
      </node>
      <node id="3412">
        <label>gromacs/utility/real.h</label>
        <link refid="real_8h"/>
      </node>
      <node id="3409">
        <label>gromacs/utility/basedefinitions.h</label>
        <link refid="basedefinitions_8h"/>
        <childnode refid="3410" relation="include">
        </childnode>
        <childnode refid="3411" relation="include">
        </childnode>
      </node>
      <node id="3411">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3413">
        <label>src/gromacs/ewald/pme-solve.h</label>
        <link refid="pme-solve.h"/>
        <childnode refid="3414" relation="include">
        </childnode>
      </node>
      <node id="3414">
        <label>src/gromacs/ewald/pme.cpp</label>
        <link refid="pme_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="pme-solve_8h_1a35035e2c122b3206bd54d392a76986c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_init_all_work</definition>
        <argsstring>(struct pme_solve_work_t **work, int nthread, int nkx)</argsstring>
        <name>pme_init_all_work</name>
        <param>
          <type>struct <ref refid="structpme__solve__work__t" kindref="compound">pme_solve_work_t</ref> **</type>
          <declname>work</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nthread</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nkx</declname>
        </param>
        <briefdescription>
<para>Allocates array of work structures. </para>        </briefdescription>
        <detaileddescription>
<para>Note that work is the address of a pointer allocated by this function. Upon return it will point at an array of work structures. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/ewald/pme-solve.h" line="51" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/ewald/pme-solve.cpp" bodystart="123" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="pme-solve_8h_1acf9cc05f6cd4906f4d9aa0aa630fbed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_free_all_work</definition>
        <argsstring>(struct pme_solve_work_t **work, int nthread)</argsstring>
        <name>pme_free_all_work</name>
        <param>
          <type>struct <ref refid="structpme__solve__work__t" kindref="compound">pme_solve_work_t</ref> **</type>
          <declname>work</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nthread</declname>
        </param>
        <briefdescription>
<para>Frees array of work structures. </para>        </briefdescription>
        <detaileddescription>
<para>Frees work and sets it to NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/ewald/pme-solve.h" line="56" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/ewald/pme-solve.cpp" bodystart="154" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="pme-solve_8h_1a2e2fc250c6e9c142b3720ee44e1b76c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_pme_ener_vir_q</definition>
        <argsstring>(struct pme_solve_work_t *work, int nthread, real *mesh_energy, matrix vir)</argsstring>
        <name>get_pme_ener_vir_q</name>
        <param>
          <type>struct <ref refid="structpme__solve__work__t" kindref="compound">pme_solve_work_t</ref> *</type>
          <declname>work</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nthread</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> *</type>
          <declname>mesh_energy</declname>
        </param>
        <param>
          <type>matrix</type>
          <declname>vir</declname>
        </param>
        <briefdescription>
<para>Get energy and virial for electrostatics. </para>        </briefdescription>
        <detaileddescription>
<para>Note that work is an array of work structures </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/ewald/pme-solve.h" line="62" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/ewald/pme-solve.cpp" bodystart="166" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="pme-solve_8h_1affae83229aafe9106cfecf20130ce40d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_pme_ener_vir_lj</definition>
        <argsstring>(struct pme_solve_work_t *work, int nthread, real *mesh_energy, matrix vir)</argsstring>
        <name>get_pme_ener_vir_lj</name>
        <param>
          <type>struct <ref refid="structpme__solve__work__t" kindref="compound">pme_solve_work_t</ref> *</type>
          <declname>work</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nthread</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> *</type>
          <declname>mesh_energy</declname>
        </param>
        <param>
          <type>matrix</type>
          <declname>vir</declname>
        </param>
        <briefdescription>
<para>Get energy and virial for L-J. </para>        </briefdescription>
        <detaileddescription>
<para>Note that work is an array of work structures </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/ewald/pme-solve.h" line="69" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/ewald/pme-solve.cpp" bodystart="184" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="pme-solve_8h_1a6997607758125119934ea0bcb416c08f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int solve_pme_yzx</definition>
        <argsstring>(struct gmx_pme_t *pme, t_complex *grid, real ewaldcoeff, real vol, gmx_bool bEnerVir, int nthread, int thread)</argsstring>
        <name>solve_pme_yzx</name>
        <param>
          <type>struct gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="structt__complex" kindref="compound">t_complex</ref> *</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>ewaldcoeff</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>vol</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bEnerVir</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nthread</declname>
        </param>
        <param>
          <type>int</type>
          <declname>thread</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/ewald/pme-solve.h" line="72" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/ewald/pme-solve.cpp" bodystart="290" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="pme-solve_8h_1aac86b287958b627c08c28c8af6879b95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int solve_pme_lj_yzx</definition>
        <argsstring>(struct gmx_pme_t *pme, t_complex **grid, gmx_bool bLB, real ewaldcoeff, real vol, gmx_bool bEnerVir, int nthread, int thread)</argsstring>
        <name>solve_pme_lj_yzx</name>
        <param>
          <type>struct gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="structt__complex" kindref="compound">t_complex</ref> **</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bLB</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>ewaldcoeff</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>vol</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bEnerVir</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nthread</declname>
        </param>
        <param>
          <type>int</type>
          <declname>thread</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/ewald/pme-solve.h" line="77" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/ewald/pme-solve.cpp" bodystart="541" bodyend="847"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/ewald/pme-solve.h"/>
  </compounddef>
</doxygen>

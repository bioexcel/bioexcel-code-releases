<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1SimdLoadUDProxyInternal" kind="class" prot="public">
    <compoundname>gmx::SimdLoadUDProxyInternal</compoundname>
    <includes local="no">gromacs/simd/simd.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1SimdLoadUDProxyInternal_1a579a3578775d00b6b2aead4de2a62615" prot="private" static="no" mutable="no">
        <type>const double *const</type>
        <definition>const double* const gmx::SimdLoadUDProxyInternal::m_</definition>
        <argsstring></argsstring>
        <name>m_</name>
        <briefdescription>
<para>The pointer used to load memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="562" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="562" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1SimdLoadUDProxyInternal_1a6918ade2b1925d99e351fff156364dab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::SimdLoadUDProxyInternal::operator double</definition>
        <argsstring>() const </argsstring>
        <name>operator double</name>
        <briefdescription>
<para>Conversion method that will execute load of scalar double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="550" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="550" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SimdLoadUDProxyInternal_1a17491a16c95bc2722e5c0bb553e9df92" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::SimdLoadUDProxyInternal::operator SimdDouble</definition>
        <argsstring>() const </argsstring>
        <name>operator SimdDouble</name>
        <briefdescription>
<para>Conversion method that will execute load of <ref refid="classgmx_1_1SimdDouble" kindref="compound">SimdDouble</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="553" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="553" bodyend="553"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgmx_1_1SimdLoadUDProxyInternal_1ae12b8637eabab1abd3dd74028442fc7e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::SimdLoadUDProxyInternal::SimdLoadUDProxyInternal</definition>
        <argsstring>(const double *m)</argsstring>
        <name>SimdLoadUDProxyInternal</name>
        <param>
          <type>const double *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Private constructor can only be called from <ref refid="namespacegmx_1af6ad160249e7bc4726d93e89407c987e" kindref="member">load()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="557" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="557" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SimdLoadUDProxyInternal_1a04219a6f9e1ca893d4b47c59c0128c1e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1SimdLoadUDProxyInternal" kindref="compound">SimdLoadUDProxyInternal</ref> &amp;</type>
        <definition>SimdLoadUDProxyInternal&amp; gmx::SimdLoadUDProxyInternal::operator=</definition>
        <argsstring>(const SimdLoadUDProxyInternal &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classgmx_1_1SimdLoadUDProxyInternal" kindref="compound">SimdLoadUDProxyInternal</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="564" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SimdLoadUDProxyInternal_1ad4ebfaa48022a7fea523e3930c863890" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::SimdLoadUDProxyInternal::SimdLoadUDProxyInternal</definition>
        <argsstring>(const SimdLoadUDProxyInternal &amp;)=delete</argsstring>
        <name>SimdLoadUDProxyInternal</name>
        <param>
          <type>const <ref refid="classgmx_1_1SimdLoadUDProxyInternal" kindref="compound">SimdLoadUDProxyInternal</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="564" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgmx_1_1SimdLoadUDProxyInternal_1ae50dddc9635a55a477854c890de9d039" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend const <ref refid="classgmx_1_1SimdLoadUDProxyInternal" kindref="compound">SimdLoadUDProxyInternal</ref> gmx_simdcall</type>
        <definition>const SimdLoadUDProxyInternal gmx_simdcall loadU</definition>
        <argsstring>(const double *m)</argsstring>
        <name>loadU</name>
        <param>
          <type>const double *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Load function that returns proxy object for <ref refid="classgmx_1_1SimdDouble" kindref="compound">SimdDouble</ref> and double. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to load memory </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Proxy object that will call the actual load for either <ref refid="classgmx_1_1SimdDouble" kindref="compound">SimdDouble</ref> or double when you assign it and the conversion method is called. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="560" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Proxy object to enable <ref refid="classgmx_1_1SimdLoadUDProxyInternal_1ae50dddc9635a55a477854c890de9d039" kindref="member">loadU()</ref> for SIMD and double types. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal /> This object is returned by the <ref refid="namespacegmx_1af6ad160249e7bc4726d93e89407c987e" kindref="member">load()</ref> function that takes a single pointer to a double. When the result is assigned to either <ref refid="classgmx_1_1SimdDouble" kindref="compound">SimdDouble</ref> or double, the appropriate conversion method will be executed, which in turn calls the correct low-level load function. In pratice this simply means you can use <ref refid="namespacegmx_1af6ad160249e7bc4726d93e89407c987e" kindref="member">load()</ref> regardless for both SIMD and non-SIMD floating point data in templated functions.</para><para>This is an internal class you should never touch or create objects of. The only reason the constructor isn&apos;t private is that the <ref refid="namespacegmx_1af6ad160249e7bc4726d93e89407c987e" kindref="member">load()</ref> function must be static to enable aggressive inlining. </para>    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="547" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="546" bodyend="565"/>
    <listofallmembers>
      <member refid="classgmx_1_1SimdLoadUDProxyInternal_1ae50dddc9635a55a477854c890de9d039" prot="private" virt="non-virtual"><scope>gmx::SimdLoadUDProxyInternal</scope><name>loadU</name></member>
      <member refid="classgmx_1_1SimdLoadUDProxyInternal_1a579a3578775d00b6b2aead4de2a62615" prot="private" virt="non-virtual"><scope>gmx::SimdLoadUDProxyInternal</scope><name>m_</name></member>
      <member refid="classgmx_1_1SimdLoadUDProxyInternal_1a6918ade2b1925d99e351fff156364dab" prot="public" virt="non-virtual"><scope>gmx::SimdLoadUDProxyInternal</scope><name>operator double</name></member>
      <member refid="classgmx_1_1SimdLoadUDProxyInternal_1a17491a16c95bc2722e5c0bb553e9df92" prot="public" virt="non-virtual"><scope>gmx::SimdLoadUDProxyInternal</scope><name>operator SimdDouble</name></member>
      <member refid="classgmx_1_1SimdLoadUDProxyInternal_1a04219a6f9e1ca893d4b47c59c0128c1e" prot="private" virt="non-virtual"><scope>gmx::SimdLoadUDProxyInternal</scope><name>operator=</name></member>
      <member refid="classgmx_1_1SimdLoadUDProxyInternal_1ae12b8637eabab1abd3dd74028442fc7e" prot="private" virt="non-virtual"><scope>gmx::SimdLoadUDProxyInternal</scope><name>SimdLoadUDProxyInternal</name></member>
      <member refid="classgmx_1_1SimdLoadUDProxyInternal_1ad4ebfaa48022a7fea523e3930c863890" prot="private" virt="non-virtual"><scope>gmx::SimdLoadUDProxyInternal</scope><name>SimdLoadUDProxyInternal</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

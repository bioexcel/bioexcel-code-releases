<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="oclutils_8h" kind="file">
    <compoundname>oclutils.h</compoundname>
    <includes local="no">CL/opencl.h</includes>
    <includes local="no">string</includes>
    <includedby refid="ocl__compiler_8h" local="yes">src/gromacs/gpu_utils/ocl_compiler.h</includedby>
    <includedby refid="gpu__utils__ocl_8cpp" local="yes">src/gromacs/gpu_utils/gpu_utils_ocl.cpp</includedby>
    <includedby refid="ocl__caching_8h" local="yes">src/gromacs/gpu_utils/ocl_caching.h</includedby>
    <includedby refid="ocl__compiler_8cpp" local="yes">src/gromacs/gpu_utils/ocl_compiler.cpp</includedby>
    <includedby refid="oclutils_8cpp" local="yes">src/gromacs/gpu_utils/oclutils.cpp</includedby>
    <includedby refid="nbnxn__ocl_8cpp" local="yes">src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl.cpp</includedby>
    <includedby refid="nbnxn__ocl__data__mgmt_8cpp" local="yes">src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_data_mgmt.cpp</includedby>
    <incdepgraph>
      <node id="9149">
        <label>string</label>
      </node>
      <node id="9147">
        <label>src/gromacs/gpu_utils/oclutils.h</label>
        <link refid="oclutils.h"/>
        <childnode refid="9148" relation="include">
        </childnode>
        <childnode refid="9149" relation="include">
        </childnode>
      </node>
      <node id="9148">
        <label>CL/opencl.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9157">
        <label>src/gromacs/gpu_utils/oclutils.cpp</label>
        <link refid="oclutils_8cpp"/>
      </node>
      <node id="9152">
        <label>src/gromacs/gpu_utils/gpu_utils_ocl.cpp</label>
        <link refid="gpu__utils__ocl_8cpp"/>
      </node>
      <node id="9158">
        <label>src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl.cpp</label>
        <link refid="nbnxn__ocl_8cpp"/>
      </node>
      <node id="9154">
        <label>src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_jit_support.cpp</label>
        <link refid="nbnxn__ocl__jit__support_8cpp"/>
      </node>
      <node id="9150">
        <label>src/gromacs/gpu_utils/oclutils.h</label>
        <link refid="oclutils.h"/>
        <childnode refid="9151" relation="include">
        </childnode>
        <childnode refid="9152" relation="include">
        </childnode>
        <childnode refid="9155" relation="include">
        </childnode>
        <childnode refid="9153" relation="include">
        </childnode>
        <childnode refid="9157" relation="include">
        </childnode>
        <childnode refid="9158" relation="include">
        </childnode>
        <childnode refid="9159" relation="include">
        </childnode>
      </node>
      <node id="9156">
        <label>src/gromacs/gpu_utils/ocl_caching.cpp</label>
        <link refid="ocl__caching_8cpp"/>
      </node>
      <node id="9153">
        <label>src/gromacs/gpu_utils/ocl_compiler.cpp</label>
        <link refid="ocl__compiler_8cpp"/>
      </node>
      <node id="9159">
        <label>src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_data_mgmt.cpp</label>
        <link refid="nbnxn__ocl__data__mgmt_8cpp"/>
      </node>
      <node id="9155">
        <label>src/gromacs/gpu_utils/ocl_caching.h</label>
        <link refid="ocl__caching_8h"/>
        <childnode refid="9156" relation="include">
        </childnode>
        <childnode refid="9153" relation="include">
        </childnode>
      </node>
      <node id="9151">
        <label>src/gromacs/gpu_utils/ocl_compiler.h</label>
        <link refid="ocl__compiler_8h"/>
        <childnode refid="9152" relation="include">
        </childnode>
        <childnode refid="9153" relation="include">
        </childnode>
        <childnode refid="9154" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structocl__gpu__id__t" prot="public">ocl_gpu_id_t</innerclass>
    <innerclass refid="structgmx__device__info__t" prot="public">gmx_device_info_t</innerclass>
    <innerclass refid="structgmx__device__runtime__data__t" prot="public">gmx_device_runtime_data_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="oclutils_8h_1a83e58027079a192080c2690ec9918612" prot="public" static="no">
        <name>CL_USE_DEPRECATED_OPENCL_2_0_APIS</name>
        <briefdescription>
<para>Declare to OpenCL SDKs that we intend to use OpenCL API features that were deprecated in 2.0, so that they don&apos;t warn about it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.h" line="47" column="9" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="oclutils_8h_1a10849a150bcdfa716f8adaf20cfaabb7" prot="public" static="no">
        <name>ocl_vendor_id_t</name>
        <enumvalue id="oclutils_8h_1a10849a150bcdfa716f8adaf20cfaabb7aa35718450d43ac9f354798562266989d" prot="public">
          <name>OCL_VENDOR_NVIDIA</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="oclutils_8h_1a10849a150bcdfa716f8adaf20cfaabb7acbb72e34f5b05259f18840b3e2dd3c08" prot="public">
          <name>OCL_VENDOR_AMD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="oclutils_8h_1a10849a150bcdfa716f8adaf20cfaabb7a99ee9c70a65208e27e1d22724bcd0f5a" prot="public">
          <name>OCL_VENDOR_INTEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="oclutils_8h_1a10849a150bcdfa716f8adaf20cfaabb7a1b2da4452d0df24bbd975d90a79ac818" prot="public">
          <name>OCL_VENDOR_UNKNOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>OpenCL vendor IDs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.h" line="57" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.h" bodystart="57" bodyend="62"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="oclutils_8h_1a460c60ba5797695918f337773ee55f79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cl_int</type>
        <definition>cl_int dbg_ocl_kernel_name</definition>
        <argsstring>(const cl_kernel kernel)</argsstring>
        <name>dbg_ocl_kernel_name</name>
        <param>
          <type>const cl_kernel</type>
          <declname>kernel</declname>
        </param>
        <briefdescription>
<para>Prints the name of a kernel function pointer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">kernel</parametername>
</parameternamelist>
<parameterdescription>
<para>OpenCL kernel </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CL_SUCCESS if the operation was successful, an OpenCL error otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.h" line="113" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" bodystart="524" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="oclutils_8h_1aa48c28cd58ca71be57aa185ad9056139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cl_int</type>
        <definition>cl_int dbg_ocl_kernel_name_address</definition>
        <argsstring>(void *kernel)</argsstring>
        <name>dbg_ocl_kernel_name_address</name>
        <param>
          <type>void *</type>
          <declname>kernel</declname>
        </param>
        <briefdescription>
<para>Prints the name of a kernel function pointer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">kernel</parametername>
</parameternamelist>
<parameterdescription>
<para>OpenCL kernel </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>CL_SUCCESS if the operation was successful, an OpenCL error otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.h" line="114" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" bodystart="546" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="oclutils_8h_1aaa350f06928478dd3a9f3939b393363e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ocl_copy_H2D_async</definition>
        <argsstring>(cl_mem d_dest, void *h_src, size_t offset, size_t bytes, cl_command_queue command_queue, cl_event *copy_event)</argsstring>
        <name>ocl_copy_H2D_async</name>
        <param>
          <type>cl_mem</type>
          <declname>d_dest</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>h_src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>cl_command_queue</type>
          <declname>command_queue</declname>
        </param>
        <param>
          <type>cl_event *</type>
          <declname>copy_event</declname>
        </param>
        <briefdescription>
<para>Launches asynchronous host to device memory copy. </para>        </briefdescription>
        <detaileddescription>
<para>If copy_event is not NULL, on return it will contain an event object identifying this particular host to device operation. The event can further be used to queue a wait for this operation or to query profiling information. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.h" line="119" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.cpp" bodystart="95" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="oclutils_8h_1ac7fa62d677b4780005d6ab88268291c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ocl_copy_D2H_async</definition>
        <argsstring>(void *h_dest, cl_mem d_src, size_t offset, size_t bytes, cl_command_queue command_queue, cl_event *copy_event)</argsstring>
        <name>ocl_copy_D2H_async</name>
        <param>
          <type>void *</type>
          <declname>h_dest</declname>
        </param>
        <param>
          <type>cl_mem</type>
          <declname>d_src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>cl_command_queue</type>
          <declname>command_queue</declname>
        </param>
        <param>
          <type>cl_event *</type>
          <declname>copy_event</declname>
        </param>
        <briefdescription>
<para>Launches asynchronous device to host memory copy. </para>        </briefdescription>
        <detaileddescription>
<para>If copy_event is not NULL, on return it will contain an event object identifying this particular host to device operation. The event can further be used to queue a wait for this operation or to query profiling information. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.h" line="125" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.cpp" bodystart="153" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="oclutils_8h_1a00822b72bf41062831ca90707f35aa56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ocl_copy_H2D</definition>
        <argsstring>(cl_mem d_dest, void *h_src, size_t offset, size_t bytes, cl_command_queue command_queue)</argsstring>
        <name>ocl_copy_H2D</name>
        <param>
          <type>cl_mem</type>
          <declname>d_dest</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>h_src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>cl_command_queue</type>
          <declname>command_queue</declname>
        </param>
        <briefdescription>
<para>Launches synchronous host to device memory copy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.h" line="131" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.cpp" bodystart="105" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="oclutils_8h_1a820dcad2db335a788636545ba5769adf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ocl_pmalloc</definition>
        <argsstring>(void **h_ptr, size_t nbytes)</argsstring>
        <name>ocl_pmalloc</name>
        <param>
          <type>void **</type>
          <declname>h_ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
<para>Allocate host memory in malloc style. </para>        </briefdescription>
        <detaileddescription>
<para>Allocate host memory in malloc style.</para><para><xrefsect id="todo_1_todo000019"><xreftitle>Todo</xreftitle><xrefdescription><para>This function should allocate page-locked memory to help reduce D2H and H2D transfer times, similar with pmalloc from pmalloc_cuda.cu.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">h_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer where to store the address of the newly allocated buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nbytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Size in bytes of the buffer to be allocated. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.h" line="136" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.cpp" bodystart="170" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="oclutils_8h_1a44d6e2bc98cadbcb22619668bee73ebe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ocl_pfree</definition>
        <argsstring>(void *h_ptr)</argsstring>
        <name>ocl_pfree</name>
        <param>
          <type>void *</type>
          <declname>h_ptr</declname>
        </param>
        <briefdescription>
<para>Free host memory in malloc style. </para>        </briefdescription>
        <detaileddescription>
<para>Free host memory in malloc style.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">h_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer allocated with ocl_pmalloc that needs to be freed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.h" line="139" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.cpp" bodystart="189" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="oclutils_8h_1a1393b72bfedda92c51c2205085c4c6f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ocl_get_error_string</definition>
        <argsstring>(cl_int error)</argsstring>
        <name>ocl_get_error_string</name>
        <param>
          <type>cl_int</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Convert error code to diagnostic string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.h" line="142" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.cpp" bodystart="200" bodyend="276"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Declare utility routines for OpenCL. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal />  <simplesect kind="author"><para>Anca Hamuraru <ulink url="mailto:anca@streamcomputing.eu">anca@streamcomputing.eu</ulink> </para></simplesect>
</para>    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/gpu_utils/oclutils.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1AnalysisNeighborhood" kind="class" prot="public">
    <compoundname>gmx::AnalysisNeighborhood</compoundname>
    <includes local="no">gromacs/selection/nbsearch.h</includes>
    <innerclass refid="classgmx_1_1AnalysisNeighborhood_1_1Impl" prot="public">gmx::AnalysisNeighborhood::Impl</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classgmx_1_1AnalysisNeighborhood_1a5de52a8b0a7503e848223d313df6a8d5" prot="public" static="no">
        <name>SearchMode</name>
        <enumvalue id="classgmx_1_1AnalysisNeighborhood_1a5de52a8b0a7503e848223d313df6a8d5ade6be6891c10bf7a9b7c5b4cf4d9466b" prot="public">
          <name>eSearchMode_Automatic</name>
          <briefdescription>
<para>Select algorithm based on heuristic efficiency considerations. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1AnalysisNeighborhood_1a5de52a8b0a7503e848223d313df6a8d5a917a1a372369b7b81d613e59d62b4fcd" prot="public">
          <name>eSearchMode_Simple</name>
          <briefdescription>
<para>Use a simple loop over all pairs. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1AnalysisNeighborhood_1a5de52a8b0a7503e848223d313df6a8d5a41c2765d2285723ed8d0e96e9ff8adaf" prot="public">
          <name>eSearchMode_Grid</name>
          <briefdescription>
<para>Use grid-based searching whenever possible. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Searching algorithm to use. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.h" line="224" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.h" bodystart="223" bodyend="231"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1AnalysisNeighborhood_1a8704bb554648e25f00ee518a1302eb6c" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1PrivateImplPointer" kindref="compound">PrivateImplPointer</ref>&lt; <ref refid="classgmx_1_1AnalysisNeighborhood_1_1Impl" kindref="compound">Impl</ref> &gt;</type>
        <definition>PrivateImplPointer&lt;Impl&gt; gmx::AnalysisNeighborhood::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.h" line="312" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1AnalysisNeighborhood_1a252f9ed88c0b00367c066f23a4bfa976" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::AnalysisNeighborhood::AnalysisNeighborhood</definition>
        <argsstring>()</argsstring>
        <name>AnalysisNeighborhood</name>
        <briefdescription>
<para>Creates an uninitialized neighborhood search. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.h" line="234" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.cpp" bodystart="1287" bodyend="1290"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisNeighborhood_1afbf8087f71cc5f19a27b4156a3e3a78c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::AnalysisNeighborhood::~AnalysisNeighborhood</definition>
        <argsstring>()</argsstring>
        <name>~AnalysisNeighborhood</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.h" line="235" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.cpp" bodystart="1292" bodyend="1294"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisNeighborhood_1ac7efef66604d09e0c4e127dbed2533ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::AnalysisNeighborhood::setCutoff</definition>
        <argsstring>(real cutoff)</argsstring>
        <name>setCutoff</name>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>cutoff</declname>
        </param>
        <briefdescription>
<para>Sets cutoff distance for the neighborhood searching. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cutoff</parametername>
</parameternamelist>
<parameterdescription>
<para>Cutoff distance for the search (&lt;=0 stands for no cutoff).</para></parameterdescription>
</parameteritem>
</parameterlist>
Currently, can only be called before the first call to <ref refid="classgmx_1_1AnalysisNeighborhood_1ac11ba1b44a1c777677276f6ec664a82d" kindref="member">initSearch()</ref>. If this method is not called, no cutoff is used in the searches.</para><para>Does not throw. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.h" line="248" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.cpp" bodystart="1296" bodyend="1301"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisNeighborhood_1a18c591047be90232f7c8053b287b6a3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::AnalysisNeighborhood::setXYMode</definition>
        <argsstring>(bool bXY)</argsstring>
        <name>setXYMode</name>
        <param>
          <type>bool</type>
          <declname>bXY</declname>
        </param>
        <briefdescription>
<para>Sets the search to only happen in the XY plane. </para>        </briefdescription>
        <detaileddescription>
<para>Z component of the coordinates is not used in the searching, and returned distances are computed in the XY plane. Only boxes with the third box vector parallel to the Z axis are currently implemented.</para><para>Does not throw. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.h" line="259" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.cpp" bodystart="1303" bodyend="1306"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisNeighborhood_1adfb08fdea5c008a39ea784b4b285b9c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::AnalysisNeighborhood::setTopologyExclusions</definition>
        <argsstring>(const t_blocka *excls)</argsstring>
        <name>setTopologyExclusions</name>
        <param>
          <type>const <ref refid="structt__blocka" kindref="compound">t_blocka</ref> *</type>
          <declname>excls</declname>
        </param>
        <briefdescription>
<para>Sets atom exclusions from a topology. </para>        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>excls</computeroutput> structure specifies the exclusions from test positions to reference positions, i.e., a block starting at <computeroutput>excls-&gt;index[i]</computeroutput> specifies the exclusions for test position <computeroutput>i</computeroutput>, and the indices in <computeroutput>excls-&gt;a</computeroutput> are indices of the reference positions. If <computeroutput>excls-&gt;nr</computeroutput> is smaller than a test position id, then such test positions do not have any exclusions. It is assumed that the indices within a block of indices in <computeroutput>excls-&gt;a</computeroutput> is ascending.</para><para>Does not throw.</para><para><simplesect kind="see"><para><ref refid="classgmx_1_1AnalysisNeighborhoodPositions_1adcfd6421f4daf558464ea8fdbeb0ed6c" kindref="member">AnalysisNeighborhoodPositions::exclusionIds()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.h" line="276" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.cpp" bodystart="1308" bodyend="1313"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisNeighborhood_1afca3d7eab93aa6600f19514fc6d15225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::AnalysisNeighborhood::setMode</definition>
        <argsstring>(SearchMode mode)</argsstring>
        <name>setMode</name>
        <param>
          <type><ref refid="classgmx_1_1AnalysisNeighborhood_1a5de52a8b0a7503e848223d313df6a8d5" kindref="member">SearchMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Sets the algorithm to use for searching. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Search mode to use.</para></parameterdescription>
</parameteritem>
</parameterlist>
Note that if <computeroutput>mode</computeroutput> is <ref refid="classgmx_1_1AnalysisNeighborhood_1a5de52a8b0a7503e848223d313df6a8d5a41c2765d2285723ed8d0e96e9ff8adaf" kindref="member">eSearchMode_Grid</ref>, it is still only a suggestion: grid-based searching may not be possible with the provided input, in which case a simple search is still used. This is mainly useful for testing purposes to force a mode.</para><para>Does not throw. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.h" line="289" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.cpp" bodystart="1315" bodyend="1318"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisNeighborhood_1aba5b7a5d31c4a81791bcde364f3fdbb3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1AnalysisNeighborhood_1a5de52a8b0a7503e848223d313df6a8d5" kindref="member">SearchMode</ref></type>
        <definition>AnalysisNeighborhood::SearchMode gmx::AnalysisNeighborhood::mode</definition>
        <argsstring>() const </argsstring>
        <name>mode</name>
        <briefdescription>
<para>Returns the currently active search mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.h" line="291" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.cpp" bodystart="1320" bodyend="1323"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisNeighborhood_1ac11ba1b44a1c777677276f6ec664a82d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1AnalysisNeighborhoodSearch" kindref="compound">AnalysisNeighborhoodSearch</ref></type>
        <definition>AnalysisNeighborhoodSearch gmx::AnalysisNeighborhood::initSearch</definition>
        <argsstring>(const t_pbc *pbc, const AnalysisNeighborhoodPositions &amp;positions)</argsstring>
        <name>initSearch</name>
        <param>
          <type>const <ref refid="structt__pbc" kindref="compound">t_pbc</ref> *</type>
          <declname>pbc</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1AnalysisNeighborhoodPositions" kindref="compound">AnalysisNeighborhoodPositions</ref> &amp;</type>
          <declname>positions</declname>
        </param>
        <briefdescription>
<para>Initializes neighborhood search for a set of positions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pbc</parametername>
</parameternamelist>
<parameterdescription>
<para>PBC information for the frame. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">positions</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of reference positions to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Search object that can be used to find positions from <computeroutput>x</computeroutput> within the given cutoff. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory.</para></parameterdescription>
</parameteritem>
</parameterlist>
Currently, the input positions cannot use <ref refid="classgmx_1_1AnalysisNeighborhoodPositions_1a2197c3ea9a5929f1a6c9c37985d747a1" kindref="member">AnalysisNeighborhoodPositions::selectSingleFromArray()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.h" line="306" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.cpp" bodystart="1326" bodyend="1333"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Neighborhood searching for analysis tools. </para>    </briefdescription>
    <detaileddescription>
<para>See <ref refid="page_analysisnbsearch" kindref="compound">Neighborhood search for analysis tools</ref> for an overview.</para><para>To use the search, create an object of this type, call <ref refid="classgmx_1_1AnalysisNeighborhood_1ac7efef66604d09e0c4e127dbed2533ea" kindref="member">setCutoff()</ref> to initialize it, and then repeatedly call <ref refid="classgmx_1_1AnalysisNeighborhood_1ac11ba1b44a1c777677276f6ec664a82d" kindref="member">initSearch()</ref> to start a search with different sets of reference positions. For each set of reference positions, use methods in the returned <ref refid="classgmx_1_1AnalysisNeighborhoodSearch" kindref="compound">AnalysisNeighborhoodSearch</ref> to find the reference positions that are within the given cutoff from a provided position.</para><para><ref refid="classgmx_1_1AnalysisNeighborhood_1ac11ba1b44a1c777677276f6ec664a82d" kindref="member">initSearch()</ref> is thread-safe and can be called from multiple threads. Each call returns a different instance of the search object that can be used independently of the others. The returned <ref refid="classgmx_1_1AnalysisNeighborhoodSearch" kindref="compound">AnalysisNeighborhoodSearch</ref> objects are also thread-safe, and can be used concurrently from multiple threads. It is also possible to create multiple concurrent searches within a single thread.</para><para><xrefsect id="todo_1_todo000049"><xreftitle>Todo</xreftitle><xrefdescription><para>Generalize the exclusion machinery to make it easier to use for other cases than atom-atom exclusions from the topology.</para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.h" line="220" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/nbsearch.h" bodystart="219" bodyend="313"/>
    <listofallmembers>
      <member refid="classgmx_1_1AnalysisNeighborhood_1a252f9ed88c0b00367c066f23a4bfa976" prot="public" virt="non-virtual"><scope>gmx::AnalysisNeighborhood</scope><name>AnalysisNeighborhood</name></member>
      <member refid="classgmx_1_1AnalysisNeighborhood_1a5de52a8b0a7503e848223d313df6a8d5ade6be6891c10bf7a9b7c5b4cf4d9466b" prot="public" virt="non-virtual"><scope>gmx::AnalysisNeighborhood</scope><name>eSearchMode_Automatic</name></member>
      <member refid="classgmx_1_1AnalysisNeighborhood_1a5de52a8b0a7503e848223d313df6a8d5a41c2765d2285723ed8d0e96e9ff8adaf" prot="public" virt="non-virtual"><scope>gmx::AnalysisNeighborhood</scope><name>eSearchMode_Grid</name></member>
      <member refid="classgmx_1_1AnalysisNeighborhood_1a5de52a8b0a7503e848223d313df6a8d5a917a1a372369b7b81d613e59d62b4fcd" prot="public" virt="non-virtual"><scope>gmx::AnalysisNeighborhood</scope><name>eSearchMode_Simple</name></member>
      <member refid="classgmx_1_1AnalysisNeighborhood_1a8704bb554648e25f00ee518a1302eb6c" prot="private" virt="non-virtual"><scope>gmx::AnalysisNeighborhood</scope><name>impl_</name></member>
      <member refid="classgmx_1_1AnalysisNeighborhood_1ac11ba1b44a1c777677276f6ec664a82d" prot="public" virt="non-virtual"><scope>gmx::AnalysisNeighborhood</scope><name>initSearch</name></member>
      <member refid="classgmx_1_1AnalysisNeighborhood_1aba5b7a5d31c4a81791bcde364f3fdbb3" prot="public" virt="non-virtual"><scope>gmx::AnalysisNeighborhood</scope><name>mode</name></member>
      <member refid="classgmx_1_1AnalysisNeighborhood_1a5de52a8b0a7503e848223d313df6a8d5" prot="public" virt="non-virtual"><scope>gmx::AnalysisNeighborhood</scope><name>SearchMode</name></member>
      <member refid="classgmx_1_1AnalysisNeighborhood_1ac7efef66604d09e0c4e127dbed2533ea" prot="public" virt="non-virtual"><scope>gmx::AnalysisNeighborhood</scope><name>setCutoff</name></member>
      <member refid="classgmx_1_1AnalysisNeighborhood_1afca3d7eab93aa6600f19514fc6d15225" prot="public" virt="non-virtual"><scope>gmx::AnalysisNeighborhood</scope><name>setMode</name></member>
      <member refid="classgmx_1_1AnalysisNeighborhood_1adfb08fdea5c008a39ea784b4b285b9c2" prot="public" virt="non-virtual"><scope>gmx::AnalysisNeighborhood</scope><name>setTopologyExclusions</name></member>
      <member refid="classgmx_1_1AnalysisNeighborhood_1a18c591047be90232f7c8053b287b6a3b" prot="public" virt="non-virtual"><scope>gmx::AnalysisNeighborhood</scope><name>setXYMode</name></member>
      <member refid="classgmx_1_1AnalysisNeighborhood_1afbf8087f71cc5f19a27b4156a3e3a78c" prot="public" virt="non-virtual"><scope>gmx::AnalysisNeighborhood</scope><name>~AnalysisNeighborhood</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

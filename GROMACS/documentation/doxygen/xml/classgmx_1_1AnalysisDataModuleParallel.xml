<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1AnalysisDataModuleParallel" kind="class" prot="public" abstract="yes">
    <compoundname>gmx::AnalysisDataModuleParallel</compoundname>
    <basecompoundref refid="classgmx_1_1IAnalysisDataModule" prot="public" virt="non-virtual">gmx::IAnalysisDataModule</basecompoundref>
    <derivedcompoundref refid="classgmx_1_1AnalysisDataSimpleHistogramModule" prot="public" virt="non-virtual">gmx::AnalysisDataSimpleHistogramModule</derivedcompoundref>
    <derivedcompoundref refid="classgmx_1_1AnalysisDataWeightedHistogramModule" prot="public" virt="non-virtual">gmx::AnalysisDataWeightedHistogramModule</derivedcompoundref>
    <includes local="no">gromacs/analysisdata/datamodule.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1AnalysisDataModuleParallel_1af6d012cef082a62aface0512f0d2b94d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual gmx::AnalysisDataModuleParallel::~AnalysisDataModuleParallel</definition>
        <argsstring>()</argsstring>
        <name>~AnalysisDataModuleParallel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/datamodule.h" line="273" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/datamodule.h" bodystart="273" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisDataModuleParallel_1a33ca0a5e4edc05591face5316a78a03e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int gmx::AnalysisDataModuleParallel::flags</definition>
        <argsstring>() const =0</argsstring>
        <name>flags</name>
        <reimplements refid="classgmx_1_1IAnalysisDataModule_1afa2983f2300095d7f5eeff11635ce2e9">flags</reimplements>
        <reimplementedby refid="classgmx_1_1AnalysisDataSimpleHistogramModule_1acd6d3e4c5c48dbed47b119891e5e4be4">flags</reimplementedby>
        <reimplementedby refid="classgmx_1_1AnalysisDataWeightedHistogramModule_1a014c474b1932d26d37cd7b36c6c58ab9">flags</reimplementedby>
        <briefdescription>
<para>Returns properties supported by the module. </para>        </briefdescription>
        <detaileddescription>
<para>The return value of this method should not change after the module has been added to a data (this responsibility can, and in most cases must, be delegated to the user of the module).</para><para>The purpose of this method is to remove the need for common checks for data compatibility in the classes that implement the interface. Instead, <ref refid="classgmx_1_1AbstractAnalysisData" kindref="compound">AbstractAnalysisData</ref> performs these checks based on the flags provided.</para><para>Does not throw. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/datamodule.h" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisDataModuleParallel_1a9358c8ad5ca68f870170825024c79c9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool gmx::AnalysisDataModuleParallel::parallelDataStarted</definition>
        <argsstring>(AbstractAnalysisData *data, const AnalysisDataParallelOptions &amp;options)=0</argsstring>
        <name>parallelDataStarted</name>
        <reimplements refid="classgmx_1_1IAnalysisDataModule_1aeca0c095b7f31aec0f58643bed0e0895">parallelDataStarted</reimplements>
        <reimplementedby refid="classgmx_1_1AnalysisDataSimpleHistogramModule_1a940f3659795bd481b9270d52585dccae">parallelDataStarted</reimplementedby>
        <reimplementedby refid="classgmx_1_1AnalysisDataWeightedHistogramModule_1a999025fb3ca712b3e42a658e6bff91d6">parallelDataStarted</reimplementedby>
        <param>
          <type><ref refid="classgmx_1_1AbstractAnalysisData" kindref="compound">AbstractAnalysisData</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1AnalysisDataParallelOptions" kindref="compound">AnalysisDataParallelOptions</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Called (once) for parallel data when the data has been set up. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data object to which the module is added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">options</parametername>
</parameternamelist>
<parameterdescription>
<para>Parallelization properties of the input data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the module can process the input in non-sequential order. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1APIError" kindref="compound">APIError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the provided data is not compatible. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unspecified</parametername>
</parameternamelist>
<parameterdescription>
<para>Can throw any exception required by the implementing class to report errors.</para></parameterdescription>
</parameteritem>
</parameterlist>
This method is called instead of dataStarted() if the input data has the capability to present data in non-sequential order. If the method returns true, then the module accepts this and frame notification methods may be called in that non-sequential order. If the method returns false, then the frame notification methods are called in sequential order, as if dataStarted() had been called.</para><para>See dataStarted() for general information on initializing the data. That applies to this method as well, with the exception that calling <ref refid="classgmx_1_1AbstractAnalysisData_1a99ba2f4072c75c8e56d1e377cb6b5f8c" kindref="member">AbstractAnalysisData::requestStorage()</ref> is currently not very well supported (or rather, accessing the requested storage doesn&apos;t work). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/datamodule.h" line="277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisDataModuleParallel_1a070378d521d782c6e1eb3b8bb89b2586" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gmx::AnalysisDataModuleParallel::frameStarted</definition>
        <argsstring>(const AnalysisDataFrameHeader &amp;frame)=0</argsstring>
        <name>frameStarted</name>
        <reimplements refid="classgmx_1_1IAnalysisDataModule_1a7636ee79c974c9931a40ce197f469000">frameStarted</reimplements>
        <reimplementedby refid="classgmx_1_1AnalysisDataSimpleHistogramModule_1a94f59f953795345f53a1e5dba46b83a8">frameStarted</reimplementedby>
        <reimplementedby refid="classgmx_1_1AnalysisDataWeightedHistogramModule_1acb77d880b0b206c456c4ed7ae47459cb">frameStarted</reimplementedby>
        <param>
          <type>const <ref refid="classgmx_1_1AnalysisDataFrameHeader" kindref="compound">AnalysisDataFrameHeader</ref> &amp;</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
<para>Called at the start of each data frame. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">frame</parametername>
</parameternamelist>
<parameterdescription>
<para>Header information for the frame that is starting. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>unspecified</parametername>
</parameternamelist>
<parameterdescription>
<para>Can throw any exception required by the implementing class to report errors. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/datamodule.h" line="280" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisDataModuleParallel_1a06c9beccc773459c365d002c32fe0183" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gmx::AnalysisDataModuleParallel::pointsAdded</definition>
        <argsstring>(const AnalysisDataPointSetRef &amp;points)=0</argsstring>
        <name>pointsAdded</name>
        <reimplements refid="classgmx_1_1IAnalysisDataModule_1af7097e86905c7133ccfd2242fbca9ad0">pointsAdded</reimplements>
        <reimplementedby refid="classgmx_1_1AnalysisDataSimpleHistogramModule_1a31681e74e3bbc4676785469ba6ace4e6">pointsAdded</reimplementedby>
        <reimplementedby refid="classgmx_1_1AnalysisDataWeightedHistogramModule_1a2c0f968b2ca8d8ad82e4e4ebe1bdf928">pointsAdded</reimplementedby>
        <param>
          <type>const <ref refid="classgmx_1_1AnalysisDataPointSetRef" kindref="compound">AnalysisDataPointSetRef</ref> &amp;</type>
          <declname>points</declname>
        </param>
        <briefdescription>
<para>Called one or more times during each data frame. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">points</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of points added (also provides access to frame-level data). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1APIError" kindref="compound">APIError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the provided data is not compatible. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unspecified</parametername>
</parameternamelist>
<parameterdescription>
<para>Can throw any exception required by the implementing class to report errors.</para></parameterdescription>
</parameteritem>
</parameterlist>
Can be called once or multiple times for a frame. For all data objects currently implemented in the library (and all objects that will use <ref refid="classgmx_1_1AnalysisDataStorage" kindref="compound">AnalysisDataStorage</ref> for internal implementation), it is called exactly once for each frame if the data is not multipoint, but currently this restriction is not enforced. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/datamodule.h" line="281" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisDataModuleParallel_1a19c9d392cb712341f3c66dcf6d6d09fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gmx::AnalysisDataModuleParallel::frameFinished</definition>
        <argsstring>(const AnalysisDataFrameHeader &amp;header)=0</argsstring>
        <name>frameFinished</name>
        <reimplements refid="classgmx_1_1IAnalysisDataModule_1a48084b66729d504226fe97e660e93f0c">frameFinished</reimplements>
        <reimplementedby refid="classgmx_1_1AnalysisDataSimpleHistogramModule_1a89dd9afecf01411af12a16494436521c">frameFinished</reimplementedby>
        <reimplementedby refid="classgmx_1_1AnalysisDataWeightedHistogramModule_1ae7745781a4c63a5c2ce40b7bdc8037a4">frameFinished</reimplementedby>
        <param>
          <type>const <ref refid="classgmx_1_1AnalysisDataFrameHeader" kindref="compound">AnalysisDataFrameHeader</ref> &amp;</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Called when a data frame is finished. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">header</parametername>
</parameternamelist>
<parameterdescription>
<para>Header information for the frame that is ending. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>unspecified</parametername>
</parameternamelist>
<parameterdescription>
<para>Can throw any exception required by the implementing class to report errors. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/datamodule.h" line="282" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisDataModuleParallel_1a48a6a63db19d9b91ea6682d1e2b20e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gmx::AnalysisDataModuleParallel::frameFinishedSerial</definition>
        <argsstring>(int index)=0</argsstring>
        <name>frameFinishedSerial</name>
        <reimplements refid="classgmx_1_1IAnalysisDataModule_1a803d7992f7d0723103c61727f80938bd">frameFinishedSerial</reimplements>
        <reimplementedby refid="classgmx_1_1AnalysisDataSimpleHistogramModule_1a07bd7d38fcf5c95eaff5477dce7249eb">frameFinishedSerial</reimplementedby>
        <reimplementedby refid="classgmx_1_1AnalysisDataWeightedHistogramModule_1afb90d311cf374ad55fa3a7a6d0045ce7">frameFinishedSerial</reimplementedby>
        <param>
          <type>int</type>
          <declname>frameIndex</declname>
        </param>
        <briefdescription>
<para>Called in sequential order for each frame after they are finished. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">frameIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the next finished frame. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>unspecified</parametername>
</parameternamelist>
<parameterdescription>
<para>Can throw any exception required by the implementing class to report errors.</para></parameterdescription>
</parameteritem>
</parameterlist>
This method is called after <ref refid="classgmx_1_1AnalysisDataModuleParallel_1a19c9d392cb712341f3c66dcf6d6d09fb" kindref="member">frameFinished()</ref>, but with an additional constraint that it is always called in serial and with an increasing <computeroutput>frameIndex</computeroutput>. Parallel data modules need this to serialize their data for downsteam serial modules; <ref refid="classgmx_1_1AnalysisDataModuleSerial" kindref="compound">AnalysisDataModuleSerial</ref> provides an empty implementation, as there <ref refid="classgmx_1_1AnalysisDataModuleParallel_1a19c9d392cb712341f3c66dcf6d6d09fb" kindref="member">frameFinished()</ref> can be used for the same purpose. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/datamodule.h" line="283" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisDataModuleParallel_1add45cffa28e066fb29d9bef2a4cbe128" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gmx::AnalysisDataModuleParallel::dataFinished</definition>
        <argsstring>()=0</argsstring>
        <name>dataFinished</name>
        <reimplements refid="classgmx_1_1IAnalysisDataModule_1ab85bf34dcfbd4f5c4be6711c7b07d29c">dataFinished</reimplements>
        <reimplementedby refid="classgmx_1_1AnalysisDataSimpleHistogramModule_1a5cb87fd3ea9968c0cc23d1c164db4f22">dataFinished</reimplementedby>
        <reimplementedby refid="classgmx_1_1AnalysisDataWeightedHistogramModule_1ac7883928adfcfed54892d1d4c5e9746d">dataFinished</reimplementedby>
        <briefdescription>
<para>Called (once) when no more data is available. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>unspecified</parametername>
</parameternamelist>
<parameterdescription>
<para>Can throw any exception required by the implementing class to report errors. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/datamodule.h" line="284" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgmx_1_1AnalysisDataModuleParallel_1a12365f44e680d1bd391209051a2eb4c6" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gmx::AnalysisDataModuleParallel::dataStarted</definition>
        <argsstring>(AbstractAnalysisData *data)</argsstring>
        <name>dataStarted</name>
        <reimplements refid="classgmx_1_1IAnalysisDataModule_1ac77236904b9f2871c38a73e2d150d787">dataStarted</reimplements>
        <param>
          <type><ref refid="classgmx_1_1AbstractAnalysisData" kindref="compound">AbstractAnalysisData</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Called (once) when the data has been set up properly. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data object to which the module is added. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1APIError" kindref="compound">APIError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the provided data is not compatible. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unspecified</parametername>
</parameternamelist>
<parameterdescription>
<para>Can throw any exception required by the implementing class to report errors.</para></parameterdescription>
</parameteritem>
</parameterlist>
When the data is ready, either this method or <ref refid="classgmx_1_1AnalysisDataModuleParallel_1a9358c8ad5ca68f870170825024c79c9f" kindref="member">parallelDataStarted()</ref> is called, depending on the nature of the input data. If this method is called, the input data will always present the frames in sequential order.</para><para>The data to which the module is attached is passed as an argument to provide access to properties of the data for initialization and/or validation. The module can also call <ref refid="classgmx_1_1AbstractAnalysisData_1a99ba2f4072c75c8e56d1e377cb6b5f8c" kindref="member">AbstractAnalysisData::requestStorage()</ref> if needed.</para><para>This is the only place where the module gets access to the data; if properties of the data are required later, the module should store them internally. It is guaranteed that the data properties (column count, whether it&apos;s multipoint) do not change once this method has been called.</para><para>Notice that <computeroutput>data</computeroutput> will be a proxy object if the module is added as a column module, not the data object for which <ref refid="classgmx_1_1AbstractAnalysisData_1a8e6f762df563d577f8a1d34a35273952" kindref="member">AbstractAnalysisData::addColumnModule()</ref> was called. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/datamodule.h" line="287" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/datamodule.cpp" bodystart="59" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Convenience base class for parallel analysis data modules. </para>    </briefdescription>
    <detaileddescription>
<para>Implements the dataStarted() method such that initialization is always done in <ref refid="classgmx_1_1AnalysisDataModuleParallel_1a9358c8ad5ca68f870170825024c79c9f" kindref="member">parallelDataStarted()</ref>. dataStarted() calls are forwarded to <ref refid="classgmx_1_1AnalysisDataModuleParallel_1a9358c8ad5ca68f870170825024c79c9f" kindref="member">parallelDataStarted()</ref> using a dummy serial <ref refid="classgmx_1_1AnalysisDataParallelOptions" kindref="compound">AnalysisDataParallelOptions</ref>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="875">
        <label>gmx::IAnalysisDataModule</label>
        <link refid="classgmx_1_1IAnalysisDataModule"/>
      </node>
      <node id="874">
        <label>gmx::AnalysisDataModuleParallel</label>
        <link refid="classgmx_1_1AnalysisDataModuleParallel"/>
        <childnode refid="875" relation="public-inheritance">
        </childnode>
      </node>
      <node id="877">
        <label>gmx::AnalysisDataWeightedHistogramModule</label>
        <link refid="classgmx_1_1AnalysisDataWeightedHistogramModule"/>
        <childnode refid="874" relation="public-inheritance">
        </childnode>
      </node>
      <node id="876">
        <label>gmx::AnalysisDataSimpleHistogramModule</label>
        <link refid="classgmx_1_1AnalysisDataSimpleHistogramModule"/>
        <childnode refid="874" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="879">
        <label>gmx::IAnalysisDataModule</label>
        <link refid="classgmx_1_1IAnalysisDataModule"/>
      </node>
      <node id="878">
        <label>gmx::AnalysisDataModuleParallel</label>
        <link refid="classgmx_1_1AnalysisDataModuleParallel"/>
        <childnode refid="879" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/datamodule.h" line="271" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/datamodule.h" bodystart="270" bodyend="288"/>
    <listofallmembers>
      <member refid="classgmx_1_1AnalysisDataModuleParallel_1add45cffa28e066fb29d9bef2a4cbe128" prot="public" virt="pure-virtual"><scope>gmx::AnalysisDataModuleParallel</scope><name>dataFinished</name></member>
      <member refid="classgmx_1_1AnalysisDataModuleParallel_1a12365f44e680d1bd391209051a2eb4c6" prot="private" virt="virtual"><scope>gmx::AnalysisDataModuleParallel</scope><name>dataStarted</name></member>
      <member refid="classgmx_1_1IAnalysisDataModule_1a188171eb67bf21e0ea1be21ded6c1c19a36b0114de25d6ec54d086588bd62a5ff" prot="public" virt="non-virtual"><scope>gmx::AnalysisDataModuleParallel</scope><name>efAllowMissing</name></member>
      <member refid="classgmx_1_1IAnalysisDataModule_1a188171eb67bf21e0ea1be21ded6c1c19a1f92109f099701d827d220cd068700f9" prot="public" virt="non-virtual"><scope>gmx::AnalysisDataModuleParallel</scope><name>efAllowMulticolumn</name></member>
      <member refid="classgmx_1_1IAnalysisDataModule_1a188171eb67bf21e0ea1be21ded6c1c19afdae76435f8341cd8a54e542980e6748" prot="public" virt="non-virtual"><scope>gmx::AnalysisDataModuleParallel</scope><name>efAllowMultipleDataSets</name></member>
      <member refid="classgmx_1_1IAnalysisDataModule_1a188171eb67bf21e0ea1be21ded6c1c19aab0a8d917fcd73e2d83b6ccd27d050ef" prot="public" virt="non-virtual"><scope>gmx::AnalysisDataModuleParallel</scope><name>efAllowMultipoint</name></member>
      <member refid="classgmx_1_1IAnalysisDataModule_1a188171eb67bf21e0ea1be21ded6c1c19ae1bb23abbcc827800bcf2966ba9e63a8" prot="public" virt="non-virtual"><scope>gmx::AnalysisDataModuleParallel</scope><name>efOnlyMultipoint</name></member>
      <member refid="classgmx_1_1IAnalysisDataModule_1a188171eb67bf21e0ea1be21ded6c1c19" prot="public" virt="non-virtual"><scope>gmx::AnalysisDataModuleParallel</scope><name>Flag</name></member>
      <member refid="classgmx_1_1AnalysisDataModuleParallel_1a33ca0a5e4edc05591face5316a78a03e" prot="public" virt="pure-virtual"><scope>gmx::AnalysisDataModuleParallel</scope><name>flags</name></member>
      <member refid="classgmx_1_1AnalysisDataModuleParallel_1a19c9d392cb712341f3c66dcf6d6d09fb" prot="public" virt="pure-virtual"><scope>gmx::AnalysisDataModuleParallel</scope><name>frameFinished</name></member>
      <member refid="classgmx_1_1AnalysisDataModuleParallel_1a48a6a63db19d9b91ea6682d1e2b20e7b" prot="public" virt="pure-virtual"><scope>gmx::AnalysisDataModuleParallel</scope><name>frameFinishedSerial</name></member>
      <member refid="classgmx_1_1AnalysisDataModuleParallel_1a070378d521d782c6e1eb3b8bb89b2586" prot="public" virt="pure-virtual"><scope>gmx::AnalysisDataModuleParallel</scope><name>frameStarted</name></member>
      <member refid="classgmx_1_1AnalysisDataModuleParallel_1a9358c8ad5ca68f870170825024c79c9f" prot="public" virt="pure-virtual"><scope>gmx::AnalysisDataModuleParallel</scope><name>parallelDataStarted</name></member>
      <member refid="classgmx_1_1AnalysisDataModuleParallel_1a06c9beccc773459c365d002c32fe0183" prot="public" virt="pure-virtual"><scope>gmx::AnalysisDataModuleParallel</scope><name>pointsAdded</name></member>
      <member refid="classgmx_1_1AnalysisDataModuleParallel_1af6d012cef082a62aface0512f0d2b94d" prot="public" virt="virtual"><scope>gmx::AnalysisDataModuleParallel</scope><name>~AnalysisDataModuleParallel</name></member>
      <member refid="classgmx_1_1IAnalysisDataModule_1afc646d047b4c33d2c330cc5649345454" prot="public" virt="virtual"><scope>gmx::AnalysisDataModuleParallel</scope><name>~IAnalysisDataModule</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1scoped__cptr" kind="class" prot="public">
    <compoundname>gmx::scoped_cptr</compoundname>
    <includes local="no">gromacs/utility/scoped_cptr.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>void </type>
        <declname>D</declname>
        <defname>D</defname>
        <defval><ref refid="namespacegmx_1aa097a11e79b9b187cadef998470f4e54" kindref="member">sfree_wrapper</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1scoped__cptr_1a2254bd7dd124c77b64e22c55312492ad" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* gmx::scoped_cptr&lt; T, D &gt;::ptr_</definition>
        <argsstring></argsstring>
        <name>ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/scoped_cptr.h" line="97" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/scoped_cptr.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1scoped__cptr_1a12e2ff13a4cd978eb4af39b574b9e861" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::scoped_cptr&lt; T, D &gt;::scoped_cptr</definition>
        <argsstring>(T *ptr=NULL)</argsstring>
        <name>scoped_cptr</name>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Initializes a <ref refid="classgmx_1_1scoped__cptr" kindref="compound">scoped_cptr</ref> that frees <computeroutput>ptr</computeroutput> on scope exit. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to use for initialization. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/scoped_cptr.h" line="84" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/scoped_cptr.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1scoped__cptr_1a4c7e931db14d4ff507c5a3f814851206" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::scoped_cptr&lt; T, D &gt;::~scoped_cptr</definition>
        <argsstring>()</argsstring>
        <name>~scoped_cptr</name>
        <briefdescription>
<para>Frees the pointer passed to the constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/scoped_cptr.h" line="86" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/scoped_cptr.h" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1scoped__cptr_1a58e009b0c5e348a88055033c2a2d3dac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* gmx::scoped_cptr&lt; T, D &gt;::get</definition>
        <argsstring>() const </argsstring>
        <name>get</name>
        <briefdescription>
<para>Returns the stored pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/scoped_cptr.h" line="88" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/scoped_cptr.h" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1scoped__cptr_1a1e7bdc14446d533eadb54e88dfc97d32" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::scoped_cptr&lt; T, D &gt;::operator bool</definition>
        <argsstring>() const </argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Check for non-null pointer in boolean context. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/scoped_cptr.h" line="90" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/scoped_cptr.h" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1scoped__cptr_1a658b3977dbcee7476c829290f0830d69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::scoped_cptr&lt; T, D &gt;::reset</definition>
        <argsstring>(T *ptr)</argsstring>
        <name>reset</name>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Sets the pointer and frees previous pointer if necessary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/scoped_cptr.h" line="92" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/scoped_cptr.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1scoped__cptr_1ae54c8b8b74ed4e680e3d876f00101d5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* gmx::scoped_cptr&lt; T, D &gt;::release</definition>
        <argsstring>()</argsstring>
        <name>release</name>
        <briefdescription>
<para>Clears the pointer without freeing the memory, and returns the old value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/scoped_cptr.h" line="94" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/scoped_cptr.h" bodystart="94" bodyend="94"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgmx_1_1scoped__cptr_1a1d69edf27855e332b4c7ed7aad8fb51c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1scoped__cptr" kindref="compound">scoped_cptr</ref> &amp;</type>
        <definition>scoped_cptr&amp; gmx::scoped_cptr&lt; T, D &gt;::operator=</definition>
        <argsstring>(const scoped_cptr &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classgmx_1_1scoped__cptr" kindref="compound">scoped_cptr</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/scoped_cptr.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1scoped__cptr_1a2131c270c26406f7aa3ba313c8cbc645" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::scoped_cptr&lt; T, D &gt;::scoped_cptr</definition>
        <argsstring>(const scoped_cptr &amp;)=delete</argsstring>
        <name>scoped_cptr</name>
        <param>
          <type>const <ref refid="classgmx_1_1scoped__cptr" kindref="compound">scoped_cptr</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/scoped_cptr.h" line="99" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Stripped-down version of scoped_ptr that uses <ref refid="smalloc_8h_1acd9f9223d6d8cad01c8f42a416d3292d" kindref="member">sfree()</ref> or custom deleter. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal /> Currently only implements some operations; other operations can be added if they become necessary. The presence of a <ref refid="classgmx_1_1scoped__cptr_1ae54c8b8b74ed4e680e3d876f00101d5b" kindref="member">release()</ref> method is not strictly according to <computeroutput>scoped_ptr</computeroutput> design, but makes it easier to make existing C code exception-safe, and does not really warrant a separate class for such a purpose.</para><para>This class provides a basic guard/smart pointer for C pointers.</para><para>Methods in this class do not throw. </para>    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/scoped_cptr.h" line="77" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/scoped_cptr.h" bodystart="76" bodyend="100"/>
    <listofallmembers>
      <member refid="classgmx_1_1scoped__cptr_1a58e009b0c5e348a88055033c2a2d3dac" prot="public" virt="non-virtual"><scope>gmx::scoped_cptr</scope><name>get</name></member>
      <member refid="classgmx_1_1scoped__cptr_1a1e7bdc14446d533eadb54e88dfc97d32" prot="public" virt="non-virtual"><scope>gmx::scoped_cptr</scope><name>operator bool</name></member>
      <member refid="classgmx_1_1scoped__cptr_1a1d69edf27855e332b4c7ed7aad8fb51c" prot="private" virt="non-virtual"><scope>gmx::scoped_cptr</scope><name>operator=</name></member>
      <member refid="classgmx_1_1scoped__cptr_1a2254bd7dd124c77b64e22c55312492ad" prot="private" virt="non-virtual"><scope>gmx::scoped_cptr</scope><name>ptr_</name></member>
      <member refid="classgmx_1_1scoped__cptr_1ae54c8b8b74ed4e680e3d876f00101d5b" prot="public" virt="non-virtual"><scope>gmx::scoped_cptr</scope><name>release</name></member>
      <member refid="classgmx_1_1scoped__cptr_1a658b3977dbcee7476c829290f0830d69" prot="public" virt="non-virtual"><scope>gmx::scoped_cptr</scope><name>reset</name></member>
      <member refid="classgmx_1_1scoped__cptr_1a12e2ff13a4cd978eb4af39b574b9e861" prot="public" virt="non-virtual"><scope>gmx::scoped_cptr</scope><name>scoped_cptr</name></member>
      <member refid="classgmx_1_1scoped__cptr_1a2131c270c26406f7aa3ba313c8cbc645" prot="private" virt="non-virtual"><scope>gmx::scoped_cptr</scope><name>scoped_cptr</name></member>
      <member refid="classgmx_1_1scoped__cptr_1a4c7e931db14d4ff507c5a3f814851206" prot="public" virt="non-virtual"><scope>gmx::scoped_cptr</scope><name>~scoped_cptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

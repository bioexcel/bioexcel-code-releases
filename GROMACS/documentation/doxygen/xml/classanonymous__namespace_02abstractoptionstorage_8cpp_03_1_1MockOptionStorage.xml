<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage" kind="class" prot="public">
    <compoundname>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</compoundname>
    <basecompoundref refid="classgmx_1_1OptionStorageTemplate" prot="public" virt="non-virtual">gmx::OptionStorageTemplate&lt; std::string &gt;</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1ac85f7f10f37ab156e863cb8344d7132b" prot="private" static="no" mutable="no">
        <type><ref refid="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionInfo" kindref="compound">MockOptionInfo</ref></type>
        <definition>MockOptionInfo anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage::info_</definition>
        <argsstring></argsstring>
        <name>info_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" line="135" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1acdaf1f476b700987278d2ecce68c7a8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage::MockOptionStorage</definition>
        <argsstring>(const MockOption &amp;settings)</argsstring>
        <name>MockOptionStorage</name>
        <param>
          <type>const <ref refid="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOption" kindref="compound">MockOption</ref> &amp;</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Initializes the storage from option settings. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">settings</parametername>
</parameternamelist>
<parameterdescription>
<para>Storage settings. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" line="93" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" bodystart="163" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1a75bce81df92f4d59bb75ea137c31c461" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage::addDummyValue</definition>
        <argsstring>()</argsstring>
        <name>addDummyValue</name>
        <briefdescription>
<para>Calls addValue(&quot;dummy&quot;) in the base class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" line="98" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1aadfc19fd86f9d182983f968fe2772fc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage::markAsSet</definition>
        <argsstring>()</argsstring>
        <name>markAsSet</name>
        <briefdescription>
<para>Marks the option as set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" line="107" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1a9e6d3e7fff1cf496e867c895ea44fda3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage::addValue</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>addValue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Adds a value to a temporary storage. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to add. A copy is made. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InvalidInputError</parametername>
</parameternamelist>
<parameterdescription>
<para>if the maximum value count has been reached.</para></parameterdescription>
</parameteritem>
</parameterlist>
Derived classes should call this function from the <ref refid="classgmx_1_1OptionStorageTemplate_1a16bc81c18398085c38e2a89de7b99b72" kindref="member">convertValue()</ref> implementation to add converted values to the storage. If the maximum value count has been reached, the value is discarded and an exception is thrown.</para><para>If adding values outside <ref refid="classgmx_1_1OptionStorageTemplate_1a16bc81c18398085c38e2a89de7b99b72" kindref="member">convertValue()</ref> (e.g., to set a custom default value), derived classes should call <ref refid="classgmx_1_1OptionStorageTemplate_1a96507a21540785ce55c5dc0777a9c7e7" kindref="member">clearSet()</ref> before adding values (unless in the constructor) and <ref refid="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1a28156dd7f8f9b90212064cc008457702" kindref="member">commitValues()</ref> once all values are added. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" line="112" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1a28156dd7f8f9b90212064cc008457702" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage::commitValues</definition>
        <argsstring>()</argsstring>
        <name>commitValues</name>
        <briefdescription>
<para>Commits values added with <ref refid="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1a9e6d3e7fff1cf496e867c895ea44fda3" kindref="member">addValue()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory.</para></parameterdescription>
</parameteritem>
</parameterlist>
If this function succeeds, values added with <ref refid="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1a9e6d3e7fff1cf496e867c895ea44fda3" kindref="member">addValue()</ref> since the previous <ref refid="classgmx_1_1OptionStorageTemplate_1a96507a21540785ce55c5dc0777a9c7e7" kindref="member">clearSet()</ref> are added to the storage for the option. Only throws in out-of-memory conditions, and provides the strong exception safety guarantee as long as the copy constructor of <computeroutput>T</computeroutput> does not throw.</para><para>See <ref refid="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1a9e6d3e7fff1cf496e867c895ea44fda3" kindref="member">addValue()</ref> for cases where this method should be used in derived classes.</para><para>Calls <ref refid="classgmx_1_1OptionStorageTemplate_1a5ee640e7f9dfcda26f44882bac46e5da" kindref="member">refreshValues()</ref> and <ref refid="classgmx_1_1OptionStorageTemplate_1a96507a21540785ce55c5dc0777a9c7e7" kindref="member">clearSet()</ref> if it is successful. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" line="117" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1a9ac6e53ba7d30ba504306d7aa9c2f126" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classgmx_1_1OptionInfo" kindref="compound">gmx::OptionInfo</ref> &amp;</type>
        <definition>virtual gmx::OptionInfo&amp; anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage::optionInfo</definition>
        <argsstring>()</argsstring>
        <name>optionInfo</name>
        <reimplements refid="classgmx_1_1AbstractOptionStorage_1a43e2b0b2040bba6ffb81ad242bcf0bf8">optionInfo</reimplements>
        <briefdescription>
<para>Returns an option info object corresponding to this option. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" line="122" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1aa063801d4356733b0c68fa40ff2f6085" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage::typeString</definition>
        <argsstring>() const </argsstring>
        <name>typeString</name>
        <reimplements refid="classgmx_1_1OptionStorageTemplate_1a9d0a3cd45d156c6dbfff5f2018a36fe6">typeString</reimplements>
        <briefdescription>
<para>Returns a short string describing the type of the option. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" line="124" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1a17ed4b17ce83553134cec5e81f652581" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage::formatSingleValue</definition>
        <argsstring>(const std::string &amp;) const </argsstring>
        <name>formatSingleValue</name>
        <reimplements refid="classgmx_1_1OptionStorageTemplate_1aba54f7d43ae5ec873428ba0d56b39b06">formatSingleValue</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Formats a single value as a string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to format. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>value</computeroutput> formatted as a string.</para></simplesect>
The derived class must provide this method to format values a strings. Called by <ref refid="classgmx_1_1OptionStorageTemplate_1ac65e90fe546f98837fa52cf92f8c1e20" kindref="member">formatValue()</ref> to do the actual formatting. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" line="125" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" bodystart="125" bodyend="128"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Mock implementation of an option storage class for unit testing. </para>    </briefdescription>
    <detaileddescription>
<para>Provides facilities for checking that correct methods are called, and for controlling how they add values using the base class methods. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="15">
        <label>gmx::OptionStorageTemplate&lt; std::string &gt;</label>
        <link refid="classgmx_1_1OptionStorageTemplate"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</label>
        <link refid="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>gmx::AbstractOptionStorage</label>
        <link refid="classgmx_1_1AbstractOptionStorage"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="18">
        <label>gmx::OptionStorageTemplate&lt; std::string &gt;</label>
        <link refid="classgmx_1_1OptionStorageTemplate"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</label>
        <link refid="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>gmx::AbstractOptionStorage</label>
        <link refid="classgmx_1_1AbstractOptionStorage"/>
      </node>
    </collaborationgraph>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" line="86" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/tests/abstractoptionstorage.cpp" bodystart="85" bodyend="136"/>
    <listofallmembers>
      <member refid="classgmx_1_1AbstractOptionStorage_1ae18c52f54905be1e947047e514f1ca2b" prot="protected" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>AbstractOptionStorage</name></member>
      <member refid="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1a75bce81df92f4d59bb75ea137c31c461" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>addDummyValue</name></member>
      <member refid="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1a9e6d3e7fff1cf496e867c895ea44fda3" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>addValue</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1a4a52974de7c31160eddbbe7bece745b6" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>appendValue</name></member>
      <member refid="classgmx_1_1OptionStorageTemplate_1ab1d19939ff083d98f546ca96d5a3c34b" prot="protected" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>clear</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1a4d6e0188ddb4972078e16beffb0f697a" prot="protected" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>clearFlag</name></member>
      <member refid="classgmx_1_1OptionStorageTemplate_1a96507a21540785ce55c5dc0777a9c7e7" prot="protected" virt="virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>clearSet</name></member>
      <member refid="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1a28156dd7f8f9b90212064cc008457702" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>commitValues</name></member>
      <member refid="classgmx_1_1OptionStorageTemplate_1a16bc81c18398085c38e2a89de7b99b72" prot="protected" virt="pure-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>convertValue</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1a7bbdfb210f9e7c61225fa6495732370f" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>defaultValueIfSetExists</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1ac7a3e55e341f618132674d12d79d2620" prot="protected" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>DefaultValueIfSetIndex</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1a3c502d185cd3b3e862fda1465478e0e0" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>description</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1ac0ddac0898462d8aae5d55d5c2919963" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>finish</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1a2ea3148553e7b8da30b9b50f17f89a94" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>finishSet</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1a471240a802f212999c63919b3fbbd846" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>formatDefaultValueIfSet</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1adaa5310b634232d6c73f97d8d5ec4a57" prot="public" virt="virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>formatExtraDescription</name></member>
      <member refid="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1a17ed4b17ce83553134cec5e81f652581" prot="public" virt="virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>formatSingleValue</name></member>
      <member refid="classgmx_1_1OptionStorageTemplate_1ac65e90fe546f98837fa52cf92f8c1e20" prot="public" virt="virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>formatValue</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1a432d25fcf4ff2079b3fee2acba70cb9a" prot="protected" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>hasFlag</name></member>
      <member refid="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1ac85f7f10f37ab156e863cb8344d7132b" prot="private" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>info_</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1a29d58d7ea9051fed055bbfb1ba307439" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>isBoolean</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1a88331502f27fa03f609650322045adaf" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>isHidden</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1a01bfa2e153b5733b9930de8344057583" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>isRequired</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1ad2097f0f1c88c6e5549193559287fd45" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>isSet</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1af4f2db7255ecdd4633a7a9fafb508081" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>isVector</name></member>
      <member refid="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1aadfc19fd86f9d182983f968fe2772fc7" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>markAsSet</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1a49d1050263094d215b032f2cc45d4bf2" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>maxValueCount</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1a4b83a1075a05cf7724929d9a327c19d9" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>minValueCount</name></member>
      <member refid="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1acdaf1f476b700987278d2ecce68c7a8e" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>MockOptionStorage</name></member>
      <member refid="classgmx_1_1OptionStorageTemplate_1a331a2ea6e35627d2aef4ff1409492167" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>MyBase</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1ab5f49905072b9517a755e2c6ee136365" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>name</name></member>
      <member refid="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1a9ac6e53ba7d30ba504306d7aa9c2f126" prot="public" virt="virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>optionInfo</name></member>
      <member refid="classgmx_1_1OptionStorageTemplate_1a979a7a8f2176df65f7ba26e52e67da6e" prot="protected" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>OptionStorageTemplate</name></member>
      <member refid="classgmx_1_1OptionStorageTemplate_1ab8f80c3cf8e3c6c45d3e11b5f6795c07" prot="protected" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>OptionStorageTemplate</name></member>
      <member refid="classgmx_1_1OptionStorageTemplate_1a51614d345954174fcd417bf76de828e8" prot="protected" virt="virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>processAll</name></member>
      <member refid="classgmx_1_1OptionStorageTemplate_1a72cf6c7884e6e23e6f71b8dc2dbede40" prot="protected" virt="virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>processSet</name></member>
      <member refid="classgmx_1_1OptionStorageTemplate_1ac2087a4d9de673881807396fe394319c" prot="protected" virt="virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>processSetValues</name></member>
      <member refid="classgmx_1_1OptionStorageTemplate_1a5ee640e7f9dfcda26f44882bac46e5da" prot="protected" virt="virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>refreshValues</name></member>
      <member refid="classgmx_1_1OptionStorageTemplate_1a28ff31e0d6b783b725ad306bc370b73b" prot="protected" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>setDefaultValue</name></member>
      <member refid="classgmx_1_1OptionStorageTemplate_1a36bc6c3a3061abef502856d64799d1dc" prot="protected" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>setDefaultValueIfSet</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1afc92ddb8a068df8a4964377fc3aad290" prot="protected" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>setFlag</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1ab2f4d5f2d169e80a0edcb51cfe180eb4" prot="protected" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>setMaxValueCount</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1a294172ec6d7594bec65903874d0b828a" prot="protected" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>setMinValueCount</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1a18f2d143bce5bfabfee3f4ccc8c7a9d2" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>startSet</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1ade91fa23f548325aa893ad4d179439fd" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>startSource</name></member>
      <member refid="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage_1aa063801d4356733b0c68fa40ff2f6085" prot="public" virt="virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>typeString</name></member>
      <member refid="classgmx_1_1OptionStorageTemplate_1ae63cf6e91d4d1cb3e8cbe4de35058604" prot="public" virt="virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>valueCount</name></member>
      <member refid="classgmx_1_1OptionStorageTemplate_1a58cbf66d644a4d22384f1dab5e6eaa5f" prot="public" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>ValueList</name></member>
      <member refid="classgmx_1_1OptionStorageTemplate_1ad19c6d984aadb90102fa2e7e070d47d0" prot="protected" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>values</name></member>
      <member refid="classgmx_1_1OptionStorageTemplate_1ae51cea8bf9daa3bc29fd95483e4df285" prot="protected" virt="non-virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>values</name></member>
      <member refid="classgmx_1_1AbstractOptionStorage_1a8f862e78ff3e20ae51922db42f5f110b" prot="public" virt="virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>~AbstractOptionStorage</name></member>
      <member refid="classgmx_1_1OptionStorageTemplate_1a500a96ea592652010380b0393c05bb9c" prot="public" virt="virtual"><scope>anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</scope><name>~OptionStorageTemplate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="namespaceanonymous__namespace_02legacymodules_8cpp_03" kind="namespace">
    <compoundname>anonymous_namespace{legacymodules.cpp}</compoundname>
    <innerclass refid="classanonymous__namespace_02legacymodules_8cpp_03_1_1ObsoleteToolModule" prot="public">anonymous_namespace{legacymodules.cpp}::ObsoleteToolModule</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceanonymous__namespace_02legacymodules_8cpp_03_1ad837de64b243a9b30ddb7af6f80f6d9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void anonymous_namespace{legacymodules.cpp}::initSettingsNoNice</definition>
        <argsstring>(gmx::CommandLineModuleSettings *settings)</argsstring>
        <name>initSettingsNoNice</name>
        <param>
          <type><ref refid="classgmx_1_1CommandLineModuleSettings" kindref="compound">gmx::CommandLineModuleSettings</ref> *</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Initializer for a module that defaults to nice level zero. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/programs/legacymodules.cpp" line="117" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/programs/legacymodules.cpp" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="namespaceanonymous__namespace_02legacymodules_8cpp_03_1a14134715ea939917cfc07cb6068cb25b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void anonymous_namespace{legacymodules.cpp}::registerModule</definition>
        <argsstring>(gmx::CommandLineModuleManager *manager, gmx::CommandLineModuleManager::CMainFunction mainFunction, const char *name, const char *shortDescription)</argsstring>
        <name>registerModule</name>
        <param>
          <type><ref refid="classgmx_1_1CommandLineModuleManager" kindref="compound">gmx::CommandLineModuleManager</ref> *</type>
          <declname>manager</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1CommandLineModuleManager_1a94bd50159202f6c90d5625bc00a60d7f" kindref="member">gmx::CommandLineModuleManager::CMainFunction</ref></type>
          <declname>mainFunction</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>shortDescription</declname>
        </param>
        <briefdescription>
<para>Convenience function for creating and registering a module. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">manager</parametername>
</parameternamelist>
<parameterdescription>
<para>Module manager to which to register the module. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mainFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Main function to wrap. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name for the new module. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shortDescription</parametername>
</parameternamelist>
<parameterdescription>
<para>One-line description for the new module. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/programs/legacymodules.cpp" line="130" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/programs/legacymodules.cpp" bodystart="130" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="namespaceanonymous__namespace_02legacymodules_8cpp_03_1ade801ba0a7f131a57d0e7508b9835d48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void anonymous_namespace{legacymodules.cpp}::registerModuleNoNice</definition>
        <argsstring>(gmx::CommandLineModuleManager *manager, gmx::CommandLineModuleManager::CMainFunction mainFunction, const char *name, const char *shortDescription)</argsstring>
        <name>registerModuleNoNice</name>
        <param>
          <type><ref refid="classgmx_1_1CommandLineModuleManager" kindref="compound">gmx::CommandLineModuleManager</ref> *</type>
          <declname>manager</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1CommandLineModuleManager_1a94bd50159202f6c90d5625bc00a60d7f" kindref="member">gmx::CommandLineModuleManager::CMainFunction</ref></type>
          <declname>mainFunction</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>shortDescription</declname>
        </param>
        <briefdescription>
<para>Convenience function for creating and registering a module that defaults to -nice 0. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">manager</parametername>
</parameternamelist>
<parameterdescription>
<para>Module manager to which to register the module. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mainFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Main function to wrap. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name for the new module. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shortDescription</parametername>
</parameternamelist>
<parameterdescription>
<para>One-line description for the new module. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/programs/legacymodules.cpp" line="146" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/programs/legacymodules.cpp" bodystart="146" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="namespaceanonymous__namespace_02legacymodules_8cpp_03_1a2b7bd71a354ee6bb4d05dfd86388b0ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void anonymous_namespace{legacymodules.cpp}::registerObsoleteTool</definition>
        <argsstring>(gmx::CommandLineModuleManager *manager, const char *name)</argsstring>
        <name>registerObsoleteTool</name>
        <param>
          <type><ref refid="classgmx_1_1CommandLineModuleManager" kindref="compound">gmx::CommandLineModuleManager</ref> *</type>
          <declname>manager</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Convenience function for registering a module for an obsolete tool. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">manager</parametername>
</parameternamelist>
<parameterdescription>
<para>Module manager to which to register the module. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name for the obsolete tool. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/programs/legacymodules.cpp" line="160" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/programs/legacymodules.cpp" bodystart="160" bodyend="165"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Registers command-line modules for pre-5.0 binaries. </para>    </briefdescription>
    <detaileddescription>
<internal><para><simplesect kind="author"><para>Teemu Murtola <ulink url="mailto:teemu.murtola@gmail.com">teemu.murtola@gmail.com</ulink> </para></simplesect>
</para></internal>
    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/programs/legacymodules.cpp" line="64" column="1"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="cmdlineinit_8h" kind="file">
    <compoundname>cmdlineinit.h</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">memory</includes>
    <includes refid="cmdlineprogramcontext_8h" local="yes">gromacs/commandline/cmdlineprogramcontext.h</includes>
    <includedby refid="cmdlineinit_8cpp" local="yes">src/gromacs/commandline/cmdlineinit.cpp</includedby>
    <includedby refid="cmdlinemodulemanager_8cpp" local="yes">src/gromacs/commandline/cmdlinemodulemanager.cpp</includedby>
    <includedby refid="commandline_8h" local="yes">src/gromacs/commandline.h</includedby>
    <includedby refid="gmx_8cpp" local="yes">src/programs/gmx.cpp</includedby>
    <includedby refid="testinit_8cpp" local="yes">src/testutils/testinit.cpp</includedby>
    <incdepgraph>
      <node id="1786">
        <label>functional</label>
      </node>
      <node id="1789">
        <label>string</label>
      </node>
      <node id="1792">
        <label>gromacs/utility/programcontext.h</label>
        <link refid="programcontext_8h"/>
      </node>
      <node id="1785">
        <label>src/gromacs/commandline/cmdlineinit.h</label>
        <link refid="cmdlineinit.h"/>
        <childnode refid="1786" relation="include">
        </childnode>
        <childnode refid="1787" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
      </node>
      <node id="1788">
        <label>gromacs/commandline/cmdlineprogramcontext.h</label>
        <link refid="cmdlineprogramcontext_8h"/>
        <childnode refid="1787" relation="include">
        </childnode>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1790" relation="include">
        </childnode>
        <childnode refid="1791" relation="include">
        </childnode>
        <childnode refid="1792" relation="include">
        </childnode>
      </node>
      <node id="1790">
        <label>vector</label>
      </node>
      <node id="1791">
        <label>gromacs/utility/classhelpers.h</label>
        <link refid="classhelpers_8h"/>
        <childnode refid="1787" relation="include">
        </childnode>
      </node>
      <node id="1787">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1796">
        <label>src/gromacs/commandline.h</label>
        <link refid="commandline_8h"/>
      </node>
      <node id="1794">
        <label>src/gromacs/commandline/cmdlineinit.cpp</label>
        <link refid="cmdlineinit_8cpp"/>
      </node>
      <node id="1797">
        <label>src/testutils/testinit.cpp</label>
        <link refid="testinit_8cpp"/>
      </node>
      <node id="1793">
        <label>src/gromacs/commandline/cmdlineinit.h</label>
        <link refid="cmdlineinit.h"/>
        <childnode refid="1794" relation="include">
        </childnode>
        <childnode refid="1795" relation="include">
        </childnode>
        <childnode refid="1796" relation="include">
        </childnode>
        <childnode refid="1797" relation="include">
        </childnode>
      </node>
      <node id="1795">
        <label>src/gromacs/commandline/cmdlinemodulemanager.cpp</label>
        <link refid="cmdlinemodulemanager_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacegmx">gmx</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="cmdlineinit_8h_1aa51379f681880e0cb70a072f7ea5abe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_run_cmain</definition>
        <argsstring>(int argc, char *argv[], int(*mainFunction)(int, char *[]))</argsstring>
        <name>gmx_run_cmain</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int(*)(int, char *[])</type>
          <declname>mainFunction</declname>
        </param>
        <briefdescription>
<para>Implements a <ref refid="test__selection_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main()</ref> method that runs a given C main function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>argc</computeroutput> passed to <ref refid="test__selection_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main()</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>argv</computeroutput> passed to <ref refid="test__selection_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main()</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mainFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="test__selection_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main()</ref>-like method to wrap.</para></parameterdescription>
</parameteritem>
</parameterlist>
This method creates a dummy command line module that does its processing by calling <computeroutput>mainFunction</computeroutput>. It then runs this module as with <ref refid="namespacegmx_1a5a3bc0e66dda7e48091ad129bede7eff" kindref="member">gmx::runCommandLineModule()</ref>. This allows the resulting executable to handle common options and do other common actions (e.g., startup headers) without duplicate code in the main methods.</para><para><computeroutput>mainFunction</computeroutput> should call <ref refid="group__module__commandline_1ga5140c89919960e8e1e218a5b0d881cd5" kindref="member">parse_common_args()</ref> to process its command-line arguments.</para><para>Usage: <programlisting><codeline><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>my_main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;...&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__selection_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cmdlineinit_8cpp_1aa51379f681880e0cb70a072f7ea5abe5" kindref="member">gmx_run_cmain</ref>(argc,<sp/>argv,<sp/>&amp;my_main);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>Does not throw. All exceptions are caught and handled internally. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/commandline/cmdlineinit.h" line="221" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/commandline/cmdlineinit.cpp" bodystart="173" bodyend="176"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Declares functions for initializing the GROMACS library for command line use. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Teemu Murtola <ulink url="mailto:teemu.murtola@gmail.com">teemu.murtola@gmail.com</ulink> </para></simplesect>
</para>    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/commandline/cmdlineinit.h"/>
  </compounddef>
</doxygen>

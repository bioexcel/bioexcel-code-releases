<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1BasicVector" kind="class" prot="public">
    <compoundname>gmx::BasicVector</compoundname>
    <includes local="no">gromacs/math/vectypes.h</includes>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgmx_1_1BasicVector_1a51991cd4e2e76e11d2abf3f916a80a90" prot="public" static="no">
        <type>ValueType</type>
        <definition>typedef ValueType gmx::BasicVector&lt; ValueType &gt;::RawArray[3]</definition>
        <argsstring>[3]</argsstring>
        <name>RawArray</name>
        <briefdescription>
<para>Underlying raw C array type (rvec/dvec/ivec). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" line="92" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1BasicVector_1a4349a0e280e6db832f885dd90b87d29d" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1BasicVector_1a51991cd4e2e76e11d2abf3f916a80a90" kindref="member">RawArray</ref></type>
        <definition>RawArray gmx::BasicVector&lt; ValueType &gt;::x_</definition>
        <argsstring></argsstring>
        <name>x_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" line="134" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1BasicVector_1a0770c51feab30c509deb6d9596222fb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::BasicVector&lt; ValueType &gt;::BasicVector</definition>
        <argsstring>()</argsstring>
        <name>BasicVector</name>
        <briefdescription>
<para>Constructs default (uninitialized) vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" line="95" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BasicVector_1a537d03f84068abce7af6b63290f8841e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::BasicVector&lt; ValueType &gt;::BasicVector</definition>
        <argsstring>(ValueType x, ValueType y, ValueType z)</argsstring>
        <name>BasicVector</name>
        <param>
          <type>ValueType</type>
          <declname>x</declname>
        </param>
        <param>
          <type>ValueType</type>
          <declname>y</declname>
        </param>
        <param>
          <type>ValueType</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Constructs a vector from given values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" line="97" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" bodystart="97" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BasicVector_1a59c820c73b78d45df306861d89a875aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::BasicVector&lt; ValueType &gt;::BasicVector</definition>
        <argsstring>(const RawArray x)</argsstring>
        <name>BasicVector</name>
        <param>
          <type>const <ref refid="classgmx_1_1BasicVector_1a51991cd4e2e76e11d2abf3f916a80a90" kindref="member">RawArray</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Constructs a vector from given values. </para>        </briefdescription>
        <detaileddescription>
<para>This constructor is not explicit to support implicit conversions that allow, e.g., calling <computeroutput>std::vector&lt;RVec&gt;:</computeroutput><computeroutput>:push_back()</computeroutput> directly with an <computeroutput>rvec</computeroutput> parameter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" line="110" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" bodystart="110" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BasicVector_1a8784632c934c63e5086b3447c2ffb598" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ValueType &amp;</type>
        <definition>ValueType&amp; gmx::BasicVector&lt; ValueType &gt;::operator[]</definition>
        <argsstring>(int i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Indexing operator to make the class work as the raw array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" line="117" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BasicVector_1a0748abe56f872c7c606424ff98c490fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ValueType</type>
        <definition>ValueType gmx::BasicVector&lt; ValueType &gt;::operator[]</definition>
        <argsstring>(int i) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Indexing operator to make the class work as the raw array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" line="119" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BasicVector_1a2f0a7a2c08aad4859613b37b33565c2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::BasicVector&lt; ValueType &gt;::operator ValueType *</definition>
        <argsstring>()</argsstring>
        <name>operator ValueType *</name>
        <briefdescription>
<para>Makes <ref refid="classgmx_1_1BasicVector" kindref="compound">BasicVector</ref> usable in contexts where a raw C array is expected. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" line="124" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BasicVector_1a4f8cbd5ac4ea7f014556350611fc33e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::BasicVector&lt; ValueType &gt;::operator const ValueType *</definition>
        <argsstring>() const </argsstring>
        <name>operator const ValueType *</name>
        <briefdescription>
<para>Makes <ref refid="classgmx_1_1BasicVector" kindref="compound">BasicVector</ref> usable in contexts where a raw C array is expected. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" line="126" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BasicVector_1a0497465fe61269494fe10aace9fc1833" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1BasicVector_1a51991cd4e2e76e11d2abf3f916a80a90" kindref="member">RawArray</ref> &amp;</type>
        <definition>RawArray&amp; gmx::BasicVector&lt; ValueType &gt;::as_vec</definition>
        <argsstring>()</argsstring>
        <name>as_vec</name>
        <briefdescription>
<para>Converts to a raw C array where implicit conversion does not work. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" line="129" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BasicVector_1acbdcb05bf4f49f266fba83514fd60297" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classgmx_1_1BasicVector_1a51991cd4e2e76e11d2abf3f916a80a90" kindref="member">RawArray</ref> &amp;</type>
        <definition>const RawArray&amp; gmx::BasicVector&lt; ValueType &gt;::as_vec</definition>
        <argsstring>() const </argsstring>
        <name>as_vec</name>
        <briefdescription>
<para>Converts to a raw C array where implicit conversion does not work. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" line="131" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" bodystart="131" bodyend="131"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>C++ class for 3D vectors. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type</para></parameterdescription>
</parameteritem>
</parameterlist>
This class provides a C++ version of rvec/dvec/ivec that can be put into STL containers etc. It is more or less a drop-in replacement for <computeroutput>rvec</computeroutput> and friends: it can be used in most contexts that accept the equivalent C type. However, there are two cases where explicit conversion is necessary:<itemizedlist>
<listitem><para>An array of these objects needs to be converted with <ref refid="namespacegmx_1a28594b0fbe8151cffa0eb0f3db2a2ce9" kindref="member">as_vec_array()</ref> (or convenience methods like <ref refid="namespacegmx_1ac5e7b50af65a3361901a37364ad0fa8d" kindref="member">as_rvec_array()</ref>).</para></listitem><listitem><para>Passing an RVec as a <computeroutput>const rvec &amp;</computeroutput> parameter to a function needs an explicit call to <ref refid="classgmx_1_1BasicVector_1a0497465fe61269494fe10aace9fc1833" kindref="member">as_vec()</ref>. The implicit conversion should work for this as well, but cppcheck parses the necessary implicit conversion operator incorrectly and MSVC fails to compile code that relies on the implicit conversion, so the explicit method is necessary.</para></listitem></itemizedlist>
</para><para>For the array conversion to work, the compiler should not add any extra alignment/padding in the layout of this class; that this actually works as intended is tested in the unit tests. </para>    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" line="89" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/math/vectypes.h" bodystart="88" bodyend="135"/>
    <listofallmembers>
      <member refid="classgmx_1_1BasicVector_1a0497465fe61269494fe10aace9fc1833" prot="public" virt="non-virtual"><scope>gmx::BasicVector</scope><name>as_vec</name></member>
      <member refid="classgmx_1_1BasicVector_1acbdcb05bf4f49f266fba83514fd60297" prot="public" virt="non-virtual"><scope>gmx::BasicVector</scope><name>as_vec</name></member>
      <member refid="classgmx_1_1BasicVector_1a0770c51feab30c509deb6d9596222fb5" prot="public" virt="non-virtual"><scope>gmx::BasicVector</scope><name>BasicVector</name></member>
      <member refid="classgmx_1_1BasicVector_1a537d03f84068abce7af6b63290f8841e" prot="public" virt="non-virtual"><scope>gmx::BasicVector</scope><name>BasicVector</name></member>
      <member refid="classgmx_1_1BasicVector_1a59c820c73b78d45df306861d89a875aa" prot="public" virt="non-virtual"><scope>gmx::BasicVector</scope><name>BasicVector</name></member>
      <member refid="classgmx_1_1BasicVector_1a4f8cbd5ac4ea7f014556350611fc33e3" prot="public" virt="non-virtual"><scope>gmx::BasicVector</scope><name>operator const ValueType *</name></member>
      <member refid="classgmx_1_1BasicVector_1a2f0a7a2c08aad4859613b37b33565c2b" prot="public" virt="non-virtual"><scope>gmx::BasicVector</scope><name>operator ValueType *</name></member>
      <member refid="classgmx_1_1BasicVector_1a8784632c934c63e5086b3447c2ffb598" prot="public" virt="non-virtual"><scope>gmx::BasicVector</scope><name>operator[]</name></member>
      <member refid="classgmx_1_1BasicVector_1a0748abe56f872c7c606424ff98c490fa" prot="public" virt="non-virtual"><scope>gmx::BasicVector</scope><name>operator[]</name></member>
      <member refid="classgmx_1_1BasicVector_1a51991cd4e2e76e11d2abf3f916a80a90" prot="public" virt="non-virtual"><scope>gmx::BasicVector</scope><name>RawArray</name></member>
      <member refid="classgmx_1_1BasicVector_1a4349a0e280e6db832f885dd90b87d29d" prot="private" virt="non-virtual"><scope>gmx::BasicVector</scope><name>x_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator" kind="class" prot="public">
    <compoundname>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1ab4b5c942cfc8de17e178fd9e3bc4711b" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1ac852a0801cf49723903e23bc77a32163" kindref="member">SelectionList</ref> &amp;</type>
        <definition>const SelectionList&amp; gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator::selections_</definition>
        <argsstring></argsstring>
        <name>selections_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" line="232" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a46dafd0eee01f662c3b60cad4792e7c5" prot="private" static="no" mutable="no">
        <type>const int</type>
        <definition>const int gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator::posCountPerValue_</definition>
        <argsstring></argsstring>
        <name>posCountPerValue_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" line="233" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a4be113d381cc7caf50a44f7ac80dc87e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator::currentSelection_</definition>
        <argsstring></argsstring>
        <name>currentSelection_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" line="234" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a770b049e22f9f45ddfea0b4ee23c4907" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator::nextPosition_</definition>
        <argsstring></argsstring>
        <name>nextPosition_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" line="235" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a68ff953754fcfc2919668e85e5d46ebd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator::AnglePositionIterator</definition>
        <argsstring>(const SelectionList &amp;selections, int posCountPerValue)</argsstring>
        <name>AnglePositionIterator</name>
        <param>
          <type>const <ref refid="namespacegmx_1ac852a0801cf49723903e23bc77a32163" kindref="member">SelectionList</ref> &amp;</type>
          <declname>selections</declname>
        </param>
        <param>
          <type>int</type>
          <declname>posCountPerValue</declname>
        </param>
        <briefdescription>
<para>Creates an iterator to loop over input selection positions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">selections</parametername>
</parameternamelist>
<parameterdescription>
<para>List of selections. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">posCountPerValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of selection positions that constitute a single value for the iteration.</para></parameterdescription>
</parameteritem>
</parameterlist>
If <computeroutput>selections</computeroutput> is empty, and/or <computeroutput>posCountPerValue</computeroutput> is zero, the iterator can still be advanced and <ref refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a95ec6321aeff2758b4dbc3df5c772118" kindref="member">hasValue()</ref>/hasSingleValue() called, but values cannot be accessed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" line="118" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" bodystart="118" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a5771154fd2d9e5d8eba681fe2c5a7728" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator::nextGroup</definition>
        <argsstring>()</argsstring>
        <name>nextGroup</name>
        <briefdescription>
<para>Advances the iterator to the next group of angles. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" line="126" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" bodystart="126" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a8752389cc14338968c6d786567402574" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator::nextValue</definition>
        <argsstring>()</argsstring>
        <name>nextValue</name>
        <briefdescription>
<para>Advances the iterator to the next angle in the current group. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" line="135" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" bodystart="135" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a95ec6321aeff2758b4dbc3df5c772118" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator::hasValue</definition>
        <argsstring>() const </argsstring>
        <name>hasValue</name>
        <briefdescription>
<para>Returns whether this iterator represents any values. </para>        </briefdescription>
        <detaileddescription>
<para>If the return value is <computeroutput>false</computeroutput>, only <ref refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a5771154fd2d9e5d8eba681fe2c5a7728" kindref="member">nextGroup()</ref>, <ref refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a8752389cc14338968c6d786567402574" kindref="member">nextValue()</ref> and <ref refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a95733e0cb2087b2d3b3183ae4bd14694" kindref="member">hasSingleValue()</ref> are allowed to be called. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" line="149" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a95733e0cb2087b2d3b3183ae4bd14694" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator::hasSingleValue</definition>
        <argsstring>() const </argsstring>
        <name>hasSingleValue</name>
        <briefdescription>
<para>Returns whether the current selection only contains a single value. </para>        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>false</computeroutput> if <ref refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a95ec6321aeff2758b4dbc3df5c772118" kindref="member">hasValue()</ref> returns false, which allows cutting some corners in consistency checks. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" line="159" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1ac5d0a86a4b9e5d9d58ebed42a852ea49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator::isDynamic</definition>
        <argsstring>() const </argsstring>
        <name>isDynamic</name>
        <briefdescription>
<para>Returns whether the current selection is dynamic. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" line="164" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a50cfcacb4e4050c5de6103580d5f7646" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator::allValuesConsistentlySelected</definition>
        <argsstring>() const </argsstring>
        <name>allValuesConsistentlySelected</name>
        <briefdescription>
<para>Returns whether positions in the current value are either all selected or all unselected. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" line="172" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" bodystart="172" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a3cc1c0e72ef451a973d12404db484c13" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator::currentValuesSelected</definition>
        <argsstring>() const </argsstring>
        <name>currentValuesSelected</name>
        <briefdescription>
<para>Returns whether positions in the current value are selected. </para>        </briefdescription>
        <detaileddescription>
<para>Only works reliably if <ref refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a50cfcacb4e4050c5de6103580d5f7646" kindref="member">allValuesConsistentlySelected()</ref> returns <computeroutput>true</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" line="194" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a368db6d3268d0b49e34b37d1fefd8c3b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classgmx_1_1Selection" kindref="compound">Selection</ref> &amp;</type>
        <definition>const Selection&amp; gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator::currentSelection</definition>
        <argsstring>() const </argsstring>
        <name>currentSelection</name>
        <briefdescription>
<para>Returns the currently active selection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" line="200" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" bodystart="200" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a47a198326855a692080ca3ea42f4b2b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1SelectionPosition" kindref="compound">SelectionPosition</ref></type>
        <definition>SelectionPosition gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator::currentPosition</definition>
        <argsstring>(int i) const </argsstring>
        <name>currentPosition</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the <computeroutput>i</computeroutput>th position for the current value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" line="207" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a84d9ca525d4ec727f041934e3270f51d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator::getCurrentPositions</definition>
        <argsstring>(rvec x[]) const </argsstring>
        <name>getCurrentPositions</name>
        <param>
          <type>rvec</type>
          <declname>x</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Extracts all coordinates corresponding to the current value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">x</parametername>
</parameternamelist>
<parameterdescription>
<para>Array to which the positions are extracted.</para></parameterdescription>
</parameteritem>
</parameterlist>
<computeroutput>x</computeroutput> should contain at minimum the number of positions per value passed to the constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" line="219" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" bodystart="219" bodyend="229"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a2a7d62f1c8d1a18315e34a2c110bf248" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator" kindref="compound">AnglePositionIterator</ref> &amp;</type>
        <definition>AnglePositionIterator&amp; gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator::operator=</definition>
        <argsstring>(const AnglePositionIterator &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator" kindref="compound">AnglePositionIterator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" line="237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a7daba3652aae3fb51940ed4da2496ad3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator::AnglePositionIterator</definition>
        <argsstring>(const AnglePositionIterator &amp;)=delete</argsstring>
        <name>AnglePositionIterator</name>
        <param>
          <type>const <ref refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator" kindref="compound">AnglePositionIterator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" line="237" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper to encapsulate logic for looping over input selections. </para>    </briefdescription>
    <detaileddescription>
<para>This class provides two-dimensional iteration:<itemizedlist>
<listitem><para>Over <emphasis>angle groups</emphasis>, corresponding to an input selection. If the input selection list contains a single selection, that selection gets used for all angle groups.</para></listitem><listitem><para>Within a group, over <emphasis>values</emphasis>, each consisting of a fixed number of selection positions. If there is only a single value within a selection, that value is returned over and over again. This transparently provides the semantics of using a single selection/vector to compute angles against multiple selections/vectors as described in the tool help text.</para></listitem></itemizedlist>
</para><para>This class isn&apos;t perferctly self-contained and requires the caller to know some of the internals to use it properly, but it serves its purpose for this single analysis tool by simplifying the loops. Some methods have also been tailored to allow the caller to use it a bit more easily. </para>    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" line="105" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/modules/angle.cpp" bodystart="104" bodyend="238"/>
    <listofallmembers>
      <member refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a50cfcacb4e4050c5de6103580d5f7646" prot="public" virt="non-virtual"><scope>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator</scope><name>allValuesConsistentlySelected</name></member>
      <member refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a68ff953754fcfc2919668e85e5d46ebd" prot="public" virt="non-virtual"><scope>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator</scope><name>AnglePositionIterator</name></member>
      <member refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a7daba3652aae3fb51940ed4da2496ad3" prot="private" virt="non-virtual"><scope>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator</scope><name>AnglePositionIterator</name></member>
      <member refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a47a198326855a692080ca3ea42f4b2b0" prot="public" virt="non-virtual"><scope>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator</scope><name>currentPosition</name></member>
      <member refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a368db6d3268d0b49e34b37d1fefd8c3b" prot="public" virt="non-virtual"><scope>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator</scope><name>currentSelection</name></member>
      <member refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a4be113d381cc7caf50a44f7ac80dc87e" prot="private" virt="non-virtual"><scope>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator</scope><name>currentSelection_</name></member>
      <member refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a3cc1c0e72ef451a973d12404db484c13" prot="public" virt="non-virtual"><scope>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator</scope><name>currentValuesSelected</name></member>
      <member refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a84d9ca525d4ec727f041934e3270f51d" prot="public" virt="non-virtual"><scope>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator</scope><name>getCurrentPositions</name></member>
      <member refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a95733e0cb2087b2d3b3183ae4bd14694" prot="public" virt="non-virtual"><scope>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator</scope><name>hasSingleValue</name></member>
      <member refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a95ec6321aeff2758b4dbc3df5c772118" prot="public" virt="non-virtual"><scope>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator</scope><name>hasValue</name></member>
      <member refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1ac5d0a86a4b9e5d9d58ebed42a852ea49" prot="public" virt="non-virtual"><scope>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator</scope><name>isDynamic</name></member>
      <member refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a5771154fd2d9e5d8eba681fe2c5a7728" prot="public" virt="non-virtual"><scope>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator</scope><name>nextGroup</name></member>
      <member refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a770b049e22f9f45ddfea0b4ee23c4907" prot="private" virt="non-virtual"><scope>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator</scope><name>nextPosition_</name></member>
      <member refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a8752389cc14338968c6d786567402574" prot="public" virt="non-virtual"><scope>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator</scope><name>nextValue</name></member>
      <member refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a2a7d62f1c8d1a18315e34a2c110bf248" prot="private" virt="non-virtual"><scope>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator</scope><name>operator=</name></member>
      <member refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1a46dafd0eee01f662c3b60cad4792e7c5" prot="private" virt="non-virtual"><scope>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator</scope><name>posCountPerValue_</name></member>
      <member refid="classgmx_1_1analysismodules_1_1anonymous__namespace_02angle_8cpp_03_1_1AnglePositionIterator_1ab4b5c942cfc8de17e178fd9e3bc4711b" prot="private" virt="non-virtual"><scope>gmx::analysismodules::anonymous_namespace{angle.cpp}::AnglePositionIterator</scope><name>selections_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

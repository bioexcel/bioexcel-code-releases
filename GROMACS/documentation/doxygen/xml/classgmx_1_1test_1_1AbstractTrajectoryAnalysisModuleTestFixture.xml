<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture" kind="class" prot="public" abstract="yes">
    <compoundname>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</compoundname>
    <basecompoundref refid="classgmx_1_1test_1_1CommandLineTestBase" prot="public" virt="non-virtual">gmx::test::CommandLineTestBase</basecompoundref>
    <derivedcompoundref refid="classgmx_1_1test_1_1TrajectoryAnalysisModuleTestFixture" prot="public" virt="non-virtual">gmx::test::TrajectoryAnalysisModuleTestFixture&lt; ModuleInfo &gt;</derivedcompoundref>
    <includes local="no">gromacs/trajectoryanalysis/tests/moduletest.h</includes>
    <innerclass refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1_1Impl" prot="public">gmx::test::AbstractTrajectoryAnalysisModuleTestFixture::Impl</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1a4ec72ce151dd5dd9bae8af298e80ad69" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1PrivateImplPointer" kindref="compound">PrivateImplPointer</ref>&lt; <ref refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1_1Impl" kindref="compound">Impl</ref> &gt;</type>
        <definition>PrivateImplPointer&lt;Impl&gt; gmx::test::AbstractTrajectoryAnalysisModuleTestFixture::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.h" line="184" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1a6b4c778c591542033c57fd22133bd2b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture::AbstractTrajectoryAnalysisModuleTestFixture</definition>
        <argsstring>()</argsstring>
        <name>AbstractTrajectoryAnalysisModuleTestFixture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.h" line="95" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.cpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1a1b070ccccafdb12086b47e2f0f58fbe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture::~AbstractTrajectoryAnalysisModuleTestFixture</definition>
        <argsstring>()</argsstring>
        <name>~AbstractTrajectoryAnalysisModuleTestFixture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.h" line="96" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.cpp" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1aced8b2c4fbcaaf194ea60e43a5c4e8fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::AbstractTrajectoryAnalysisModuleTestFixture::setTopology</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>setTopology</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Sets the topology file to use for the test. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of input topology file.</para></parameterdescription>
</parameteritem>
</parameterlist>
<computeroutput>filename</computeroutput> is interpreted relative to the test input data directory, see getTestDataPath().</para><para>Must be called at most once. Either this method or <ref refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1a245128c5567c863ee63dc35d5aa313c1" kindref="member">setTrajectory()</ref> must be called before <ref refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1ac4259124e2ac0d407fec973b0dca122b" kindref="member">runTest()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.h" line="109" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.cpp" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1a245128c5567c863ee63dc35d5aa313c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::AbstractTrajectoryAnalysisModuleTestFixture::setTrajectory</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>setTrajectory</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Sets the trajectory file to use for the test. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of input trajectory file.</para></parameterdescription>
</parameteritem>
</parameterlist>
<computeroutput>filename</computeroutput> is interpreted relative to the test input data directory, see getTestDataPath().</para><para>Must be called at most once. Either this method or <ref refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1aced8b2c4fbcaaf194ea60e43a5c4e8fb" kindref="member">setTopology()</ref> must be called before <ref refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1ac4259124e2ac0d407fec973b0dca122b" kindref="member">runTest()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.h" line="121" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.cpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1aa829234b28cfdee17069985c59929d71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::AbstractTrajectoryAnalysisModuleTestFixture::includeDataset</definition>
        <argsstring>(const char *name)</argsstring>
        <name>includeDataset</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Includes only specified dataset for the test. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of dataset to include.</para></parameterdescription>
</parameteritem>
</parameterlist>
If this method is not called, all datasets are tested by default. If called once, only the specified dataset is tested. If called more than once, also the additional datasets are tested.</para><para><computeroutput>name</computeroutput> should be one of the names registered for the tested module using <ref refid="classgmx_1_1TrajectoryAnalysisModule_1ad946d2af4c8e284ef349f2cd816495bb" kindref="member">TrajectoryAnalysisModule::registerBasicDataset()</ref> or <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a86b3b5cd87518e988e8b5452b39a3ad1" kindref="member">TrajectoryAnalysisModule::registerAnalysisDataset()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.h" line="135" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.cpp" bodystart="165" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1a4bdb53b62fb4d62baa359b60983cff2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::AbstractTrajectoryAnalysisModuleTestFixture::excludeDataset</definition>
        <argsstring>(const char *name)</argsstring>
        <name>excludeDataset</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Excludes specified dataset from the test. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of dataset to exclude.</para></parameterdescription>
</parameteritem>
</parameterlist>
<computeroutput>name</computeroutput> should be one of the names registered for the tested module using <ref refid="classgmx_1_1TrajectoryAnalysisModule_1ad946d2af4c8e284ef349f2cd816495bb" kindref="member">TrajectoryAnalysisModule::registerBasicDataset()</ref> or <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a86b3b5cd87518e988e8b5452b39a3ad1" kindref="member">TrajectoryAnalysisModule::registerAnalysisDataset()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.h" line="145" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.cpp" bodystart="183" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1a5f03b0934b0704bf367b77b0f4bd1895" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::AbstractTrajectoryAnalysisModuleTestFixture::setDatasetTolerance</definition>
        <argsstring>(const char *name, const FloatingPointTolerance &amp;tolerance)</argsstring>
        <name>setDatasetTolerance</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1test_1_1FloatingPointTolerance" kindref="compound">FloatingPointTolerance</ref> &amp;</type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
<para>Sets a custom tolerance for checking a dataset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of dataset to set the tolerance for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Tolerance used when verifying the data.</para></parameterdescription>
</parameteritem>
</parameterlist>
<computeroutput>name</computeroutput> should be one of the names registered for the tested module using <ref refid="classgmx_1_1TrajectoryAnalysisModule_1ad946d2af4c8e284ef349f2cd816495bb" kindref="member">TrajectoryAnalysisModule::registerBasicDataset()</ref> or <ref refid="classgmx_1_1TrajectoryAnalysisModule_1a86b3b5cd87518e988e8b5452b39a3ad1" kindref="member">TrajectoryAnalysisModule::registerAnalysisDataset()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.h" line="156" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.cpp" bodystart="193" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1ac4259124e2ac0d407fec973b0dca122b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::AbstractTrajectoryAnalysisModuleTestFixture::runTest</definition>
        <argsstring>(const CommandLine &amp;args)</argsstring>
        <name>runTest</name>
        <param>
          <type>const <ref refid="classgmx_1_1test_1_1CommandLine" kindref="compound">CommandLine</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Runs the analysis module with the given additional options. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Options" kindref="compound">Options</ref> to provide to the module.</para></parameterdescription>
</parameteritem>
</parameterlist>
<computeroutput>args</computeroutput> should be formatted as command-line options, and contain the name of the module as the first argument (the latter requirement is for clarity only). They are passed to the module in addition to those specified using other methods in this class.</para><para>All other methods should be called before calling this method.</para><para>Exceptions thrown by the module are caught by this method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.h" line="173" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.cpp" bodystart="204" bodyend="239"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1a8bdf2fd36f25d0683f29bd3c2017220a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacegmx_1a832da3c093109c13cc2369de05e02f3b" kindref="member">TrajectoryAnalysisModulePointer</ref></type>
        <definition>virtual TrajectoryAnalysisModulePointer gmx::test::AbstractTrajectoryAnalysisModuleTestFixture::createModule</definition>
        <argsstring>()=0</argsstring>
        <name>createModule</name>
        <reimplementedby refid="classgmx_1_1test_1_1TrajectoryAnalysisModuleTestFixture_1a105420cfea5ab2140cd61cfee5089e98">createModule</reimplementedby>
        <briefdescription>
<para>Constructs the analysis module to be tested. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.h" line="179" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Test fixture for trajectory analysis modules. </para>    </briefdescription>
    <detaileddescription>
<internal><para>This class implements common logic for all tests for trajectory analysis modules. The tests simply need to specify the type of the module to test, input files and any additional options, names of datasets to test (if not all), and possible output files to explicitly test by calling the different methods in this class. <ref refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1ac4259124e2ac0d407fec973b0dca122b" kindref="member">runTest()</ref> then runs the specified module with the given options and performs all the requested tests against reference data.</para><para>Tests should prefer to test the underlying data sets instead of string comparison on the output files using <ref refid="classgmx_1_1test_1_1CommandLineTestBase_1a30fffeafca8ac47ac67fb2355471765e" kindref="member">setOutputFile()</ref>.</para><para>The actual module to be tested is constructed in the pure virtual <ref refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1a8bdf2fd36f25d0683f29bd3c2017220a" kindref="member">createModule()</ref> method, which should be implemented in a subclass. Typically, the <ref refid="classgmx_1_1test_1_1TrajectoryAnalysisModuleTestFixture" kindref="compound">TrajectoryAnalysisModuleTestFixture</ref> template can be used.</para><para>Any method in this class may throw std::bad_alloc if out of memory.</para><para><xrefsect id="todo_1_todo000065"><xreftitle>Todo</xreftitle><xrefdescription><para>Adding facilities to <ref refid="classgmx_1_1AnalysisData" kindref="compound">AnalysisData</ref> to check whether there are any output modules attached to the data object (directly or indirectly), marking the mocks as output modules, and using these checks in the tools instead of or in addition to the output file presence would be a superior. Also, the full file names should be deducible from the options.</para></xrefdescription></xrefsect></para></internal>
    </detaileddescription>
    <inheritancegraph>
      <node id="2106">
        <label>gmx::test::CommandLineTestBase</label>
        <link refid="classgmx_1_1test_1_1CommandLineTestBase"/>
        <childnode refid="2107" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2105">
        <label>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</label>
        <link refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture"/>
        <childnode refid="2106" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2107">
        <label>Test</label>
      </node>
      <node id="2108">
        <label>gmx::test::TrajectoryAnalysisModuleTestFixture&lt; ModuleInfo &gt;</label>
        <link refid="classgmx_1_1test_1_1TrajectoryAnalysisModuleTestFixture"/>
        <childnode refid="2105" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2110">
        <label>gmx::test::CommandLineTestBase</label>
        <link refid="classgmx_1_1test_1_1CommandLineTestBase"/>
        <childnode refid="2111" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2109">
        <label>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</label>
        <link refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture"/>
        <childnode refid="2110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2111">
        <label>Test</label>
      </node>
    </collaborationgraph>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.h" line="93" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/trajectoryanalysis/tests/moduletest.h" bodystart="92" bodyend="185"/>
    <listofallmembers>
      <member refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1a6b4c778c591542033c57fd22133bd2b9" prot="public" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>AbstractTrajectoryAnalysisModuleTestFixture</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestBase_1a264d07b5eac2f200136e1238268f15fd" prot="public" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>checkOutputFiles</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestBase_1aba2831a576c464327206ea473da28142" prot="public" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>commandLine</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestBase_1a294d6a5fbe5ca3508bb56c6e8994a439" prot="public" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>CommandLineTestBase</name></member>
      <member refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1a8bdf2fd36f25d0683f29bd3c2017220a" prot="protected" virt="pure-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>createModule</name></member>
      <member refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1a4bdb53b62fb4d62baa359b60983cff2a" prot="public" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>excludeDataset</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestBase_1a5899f9f12453f75da2a4af840a1c4b59" prot="public" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>fileManager</name></member>
      <member refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1a4ec72ce151dd5dd9bae8af298e80ad69" prot="private" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>impl_</name></member>
      <member refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1aa829234b28cfdee17069985c59929d71" prot="public" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>includeDataset</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestBase_1a16a7a56e9d9ea0e631bc03deced58b43" prot="public" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>rootChecker</name></member>
      <member refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1ac4259124e2ac0d407fec973b0dca122b" prot="public" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>runTest</name></member>
      <member refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1a5f03b0934b0704bf367b77b0f4bd1895" prot="public" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>setDatasetTolerance</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestBase_1a9793f413202eff2667e40fb157831978" prot="public" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>setInputFile</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestBase_1a469f2bc25eda4b62f1eab637466b2c6c" prot="public" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>setInputFileContents</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestBase_1a79f7d150887aa24f009512699118952b" prot="public" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>setInputFileContents</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestBase_1a30fffeafca8ac47ac67fb2355471765e" prot="public" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>setOutputFile</name></member>
      <member refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1aced8b2c4fbcaaf194ea60e43a5c4e8fb" prot="public" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>setTopology</name></member>
      <member refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1a245128c5567c863ee63dc35d5aa313c1" prot="public" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>setTrajectory</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestBase_1a766fc30c584fd86aca90d6621d24d687" prot="public" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>testWriteHelp</name></member>
      <member refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture_1a1b070ccccafdb12086b47e2f0f58fbe3" prot="public" virt="virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>~AbstractTrajectoryAnalysisModuleTestFixture</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestBase_1a91128fcb6d03e62a5d8a0ba3786cb383" prot="public" virt="non-virtual"><scope>gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</scope><name>~CommandLineTestBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

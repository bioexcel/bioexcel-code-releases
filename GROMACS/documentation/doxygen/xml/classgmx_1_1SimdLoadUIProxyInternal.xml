<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1SimdLoadUIProxyInternal" kind="class" prot="public">
    <compoundname>gmx::SimdLoadUIProxyInternal</compoundname>
    <includes local="no">gromacs/simd/simd.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1SimdLoadUIProxyInternal_1acfc114364c6c2d0578c3d4f593a6efa7" prot="private" static="no" mutable="no">
        <type>const std::int32_t *const</type>
        <definition>const std::int32_t* const gmx::SimdLoadUIProxyInternal::m_</definition>
        <argsstring></argsstring>
        <name>m_</name>
        <briefdescription>
<para>The pointer used to load memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="668" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="668" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1SimdLoadUIProxyInternal_1ab0c43a70f61316fbb60692ae7dbad5a0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::SimdLoadUIProxyInternal::operator std::int32_t</definition>
        <argsstring>() const </argsstring>
        <name>operator std::int32_t</name>
        <briefdescription>
<para>Conversion method that will execute unaligned load of scalar int32. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="652" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="652" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SimdLoadUIProxyInternal_1aaf5ef490f9097774a788c8a4bbf80b80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::SimdLoadUIProxyInternal::operator SimdFInt32</definition>
        <argsstring>() const </argsstring>
        <name>operator SimdFInt32</name>
        <briefdescription>
<para>Conversion method that will execute unaligned load of <ref refid="classgmx_1_1SimdFInt32" kindref="compound">SimdFInt32</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="655" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="655" bodyend="655"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SimdLoadUIProxyInternal_1a16e542b38b19ee895cc6857d3647d100" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::SimdLoadUIProxyInternal::operator SimdDInt32</definition>
        <argsstring>() const </argsstring>
        <name>operator SimdDInt32</name>
        <briefdescription>
<para>Conversion method that will execute unaligned load of <ref refid="classgmx_1_1SimdDInt32" kindref="compound">SimdDInt32</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="659" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="659" bodyend="659"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgmx_1_1SimdLoadUIProxyInternal_1aec5908819e54560a3d7d6d160a5f6c1e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::SimdLoadUIProxyInternal::SimdLoadUIProxyInternal</definition>
        <argsstring>(const std::int32_t *m)</argsstring>
        <name>SimdLoadUIProxyInternal</name>
        <param>
          <type>const std::int32_t *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Private constructor can only be called from <ref refid="classgmx_1_1SimdLoadUIProxyInternal_1aeba679e2111d60602e932452b12d299c" kindref="member">loadU()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="663" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="663" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SimdLoadUIProxyInternal_1a6845c7e63fbee1410f959af0c1d70689" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1SimdLoadUIProxyInternal" kindref="compound">SimdLoadUIProxyInternal</ref> &amp;</type>
        <definition>SimdLoadUIProxyInternal&amp; gmx::SimdLoadUIProxyInternal::operator=</definition>
        <argsstring>(const SimdLoadUIProxyInternal &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classgmx_1_1SimdLoadUIProxyInternal" kindref="compound">SimdLoadUIProxyInternal</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="670" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SimdLoadUIProxyInternal_1a6728210d105ae7c3172a36e9b4c3aa69" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::SimdLoadUIProxyInternal::SimdLoadUIProxyInternal</definition>
        <argsstring>(const SimdLoadUIProxyInternal &amp;)=delete</argsstring>
        <name>SimdLoadUIProxyInternal</name>
        <param>
          <type>const <ref refid="classgmx_1_1SimdLoadUIProxyInternal" kindref="compound">SimdLoadUIProxyInternal</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="670" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgmx_1_1SimdLoadUIProxyInternal_1aeba679e2111d60602e932452b12d299c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend const <ref refid="classgmx_1_1SimdLoadUIProxyInternal" kindref="compound">SimdLoadUIProxyInternal</ref> gmx_simdcall</type>
        <definition>const SimdLoadUIProxyInternal gmx_simdcall loadU</definition>
        <argsstring>(const std::int32_t *m)</argsstring>
        <name>loadU</name>
        <param>
          <type>const std::int32_t *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Integer loadU function (proxy object) for <ref refid="classgmx_1_1SimdFInt32" kindref="compound">SimdFInt32</ref>, SImdDInt32, and int32. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to load memory </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Proxy object that will call the actual load for either <ref refid="classgmx_1_1SimdFInt32" kindref="compound">SimdFInt32</ref> or <ref refid="classgmx_1_1SimdDInt32" kindref="compound">SimdDInt32</ref> when you assign it and the conversion method is called. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="666" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Proxy object - <ref refid="classgmx_1_1SimdLoadUIProxyInternal_1aeba679e2111d60602e932452b12d299c" kindref="member">loadU()</ref> for <ref refid="classgmx_1_1SimdFInt32" kindref="compound">SimdFInt32</ref>, SImdDInt32, and int32. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal />  <libinternal /> This object is returned by the <ref refid="namespacegmx_1af6ad160249e7bc4726d93e89407c987e" kindref="member">load()</ref> function that takes a single pointer to an integer. When the result is assigned to either <ref refid="classgmx_1_1SimdFInt32" kindref="compound">SimdFInt32</ref>, <ref refid="classgmx_1_1SimdDInt32" kindref="compound">SimdDInt32</ref>, or std::int32_t, the appropriate conversion method will be executed, which in turn calls the correct low-level load function. In pratice this simply means you can use <ref refid="namespacegmx_1af6ad160249e7bc4726d93e89407c987e" kindref="member">load()</ref> regardless of the type.</para><para>This is an internal class you should never touch or create objects of. The only reason the constructor isn&apos;t private is that the <ref refid="namespacegmx_1af6ad160249e7bc4726d93e89407c987e" kindref="member">load()</ref> function must be static to enable aggressive inlining. </para>    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="649" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="648" bodyend="671"/>
    <listofallmembers>
      <member refid="classgmx_1_1SimdLoadUIProxyInternal_1aeba679e2111d60602e932452b12d299c" prot="private" virt="non-virtual"><scope>gmx::SimdLoadUIProxyInternal</scope><name>loadU</name></member>
      <member refid="classgmx_1_1SimdLoadUIProxyInternal_1acfc114364c6c2d0578c3d4f593a6efa7" prot="private" virt="non-virtual"><scope>gmx::SimdLoadUIProxyInternal</scope><name>m_</name></member>
      <member refid="classgmx_1_1SimdLoadUIProxyInternal_1a16e542b38b19ee895cc6857d3647d100" prot="public" virt="non-virtual"><scope>gmx::SimdLoadUIProxyInternal</scope><name>operator SimdDInt32</name></member>
      <member refid="classgmx_1_1SimdLoadUIProxyInternal_1aaf5ef490f9097774a788c8a4bbf80b80" prot="public" virt="non-virtual"><scope>gmx::SimdLoadUIProxyInternal</scope><name>operator SimdFInt32</name></member>
      <member refid="classgmx_1_1SimdLoadUIProxyInternal_1ab0c43a70f61316fbb60692ae7dbad5a0" prot="public" virt="non-virtual"><scope>gmx::SimdLoadUIProxyInternal</scope><name>operator std::int32_t</name></member>
      <member refid="classgmx_1_1SimdLoadUIProxyInternal_1a6845c7e63fbee1410f959af0c1d70689" prot="private" virt="non-virtual"><scope>gmx::SimdLoadUIProxyInternal</scope><name>operator=</name></member>
      <member refid="classgmx_1_1SimdLoadUIProxyInternal_1aec5908819e54560a3d7d6d160a5f6c1e" prot="private" virt="non-virtual"><scope>gmx::SimdLoadUIProxyInternal</scope><name>SimdLoadUIProxyInternal</name></member>
      <member refid="classgmx_1_1SimdLoadUIProxyInternal_1a6728210d105ae7c3172a36e9b4c3aa69" prot="private" virt="non-virtual"><scope>gmx::SimdLoadUIProxyInternal</scope><name>SimdLoadUIProxyInternal</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

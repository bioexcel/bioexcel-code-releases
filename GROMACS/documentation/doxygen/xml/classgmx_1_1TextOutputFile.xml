<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1TextOutputFile" kind="class" prot="public">
    <compoundname>gmx::TextOutputFile</compoundname>
    <basecompoundref refid="classgmx_1_1TextOutputStream" prot="public" virt="non-virtual">gmx::TextOutputStream</basecompoundref>
    <includes local="no">gromacs/utility/filestream.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1TextOutputFile_1a68ea4603feefba71243f842c78b35830" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1PrivateImplPointer" kindref="compound">PrivateImplPointer</ref>&lt; <ref refid="classgmx_1_1internal_1_1FileStreamImpl" kindref="compound">internal::FileStreamImpl</ref> &gt;</type>
        <definition>PrivateImplPointer&lt;internal::FileStreamImpl&gt; gmx::TextOutputFile::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="190" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1TextOutputFile_1af705580b51121d439937c2ddfe9500fe" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::TextOutputFile::TextOutputFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>TextOutputFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Opens a text file as a stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> to the file to open. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1FileIOError" kindref="compound">FileIOError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on any I/O error. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="167" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.cpp" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextOutputFile_1a0e335cf9a5243a945dc60fe49aeeb247" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::TextOutputFile::TextOutputFile</definition>
        <argsstring>(FILE *fp)</argsstring>
        <name>TextOutputFile</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
<para>Initializes file object from an existing file handle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fp</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1File" kindref="compound">File</ref> handle to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory.</para></parameterdescription>
</parameteritem>
</parameterlist>
The caller is responsible of closing the file; <ref refid="classgmx_1_1TextOutputFile_1a7666d7379f5f9386549f82ae61c6f26d" kindref="member">close()</ref> does nothing for an object constructed this way. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="169" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.cpp" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextOutputFile_1ad9053d03db92d422b3bae5a25486c00a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>gmx::TextOutputFile::~TextOutputFile</definition>
        <argsstring>()</argsstring>
        <name>~TextOutputFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="170" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.cpp" bodystart="253" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextOutputFile_1a13497c5ea8797cb42af224efd1f80a91" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gmx::TextOutputFile::write</definition>
        <argsstring>(const char *text)</argsstring>
        <name>write</name>
        <reimplements refid="classgmx_1_1TextOutputStream_1a66128af9ca6f3eb947c93f5127c88689">write</reimplements>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Writes a given string to the stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="173" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.cpp" bodystart="257" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextOutputFile_1a7666d7379f5f9386549f82ae61c6f26d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gmx::TextOutputFile::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <reimplements refid="classgmx_1_1TextOutputStream_1a8c624ae9199c3bfd37bc35a1beb7852f">close</reimplements>
        <briefdescription>
<para>Closes the stream. </para>        </briefdescription>
        <detaileddescription>
<para>It is not allowed to write to a stream after it has been closed. A method separate from the destructor is provided such that errors that occur while closing the stream (e.g., when closing the file) can be handled using exceptions. The destructor is not allowed to throw, so code that wants to observe such errors needs to call <ref refid="classgmx_1_1TextOutputFile_1a7666d7379f5f9386549f82ae61c6f26d" kindref="member">close()</ref> after it has finished writing to the stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="174" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.cpp" bodystart="266" bodyend="269"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgmx_1_1TextOutputFile_1af2cf912419f0ae141dcf2eeb53deb4fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1TextOutputFile" kindref="compound">TextOutputFile</ref> &amp;</type>
        <definition>TextOutputFile &amp; gmx::TextOutputFile::standardOutput</definition>
        <argsstring>()</argsstring>
        <name>standardOutput</name>
        <briefdescription>
<para>Returns a stream for accessing <computeroutput>stdout</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory (only on first call). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="181" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.cpp" bodystart="272" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextOutputFile_1ac3e43b3627f99123a2ae96381c6d1582" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1TextOutputFile" kindref="compound">TextOutputFile</ref> &amp;</type>
        <definition>TextOutputFile &amp; gmx::TextOutputFile::standardError</definition>
        <argsstring>()</argsstring>
        <name>standardError</name>
        <briefdescription>
<para>Returns a stream for accessing <computeroutput>stderr</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory (only on first call). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="187" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.cpp" bodystart="279" bodyend="283"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Text output stream implementation for writing to a file. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal /> Implementations for the <ref refid="classgmx_1_1TextOutputStream" kindref="compound">TextOutputStream</ref> methods throw <ref refid="classgmx_1_1FileIOError" kindref="compound">FileIOError</ref> on any I/O error. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2581">
        <label>gmx::TextOutputFile</label>
        <link refid="classgmx_1_1TextOutputFile"/>
        <childnode refid="2582" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2582">
        <label>gmx::TextOutputStream</label>
        <link refid="classgmx_1_1TextOutputStream"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2583">
        <label>gmx::TextOutputFile</label>
        <link refid="classgmx_1_1TextOutputFile"/>
        <childnode refid="2584" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2584">
        <label>gmx::TextOutputStream</label>
        <link refid="classgmx_1_1TextOutputStream"/>
      </node>
    </collaborationgraph>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" line="164" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/filestream.h" bodystart="163" bodyend="191"/>
    <listofallmembers>
      <member refid="classgmx_1_1TextOutputFile_1a7666d7379f5f9386549f82ae61c6f26d" prot="public" virt="virtual"><scope>gmx::TextOutputFile</scope><name>close</name></member>
      <member refid="classgmx_1_1TextOutputFile_1a68ea4603feefba71243f842c78b35830" prot="private" virt="non-virtual"><scope>gmx::TextOutputFile</scope><name>impl_</name></member>
      <member refid="classgmx_1_1TextOutputFile_1ac3e43b3627f99123a2ae96381c6d1582" prot="public" virt="non-virtual"><scope>gmx::TextOutputFile</scope><name>standardError</name></member>
      <member refid="classgmx_1_1TextOutputFile_1af2cf912419f0ae141dcf2eeb53deb4fa" prot="public" virt="non-virtual"><scope>gmx::TextOutputFile</scope><name>standardOutput</name></member>
      <member refid="classgmx_1_1TextOutputFile_1af705580b51121d439937c2ddfe9500fe" prot="public" virt="non-virtual"><scope>gmx::TextOutputFile</scope><name>TextOutputFile</name></member>
      <member refid="classgmx_1_1TextOutputFile_1a0e335cf9a5243a945dc60fe49aeeb247" prot="public" virt="non-virtual"><scope>gmx::TextOutputFile</scope><name>TextOutputFile</name></member>
      <member refid="classgmx_1_1TextOutputFile_1a13497c5ea8797cb42af224efd1f80a91" prot="public" virt="virtual"><scope>gmx::TextOutputFile</scope><name>write</name></member>
      <member refid="classgmx_1_1TextOutputFile_1ad9053d03db92d422b3bae5a25486c00a" prot="public" virt="virtual"><scope>gmx::TextOutputFile</scope><name>~TextOutputFile</name></member>
      <member refid="classgmx_1_1TextOutputStream_1a261f767dff54df115f13107b1a2479d1" prot="public" virt="virtual"><scope>gmx::TextOutputFile</scope><name>~TextOutputStream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

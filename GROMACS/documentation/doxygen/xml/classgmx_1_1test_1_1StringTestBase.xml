<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1test_1_1StringTestBase" kind="class" prot="public">
    <compoundname>gmx::test::StringTestBase</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Test</basecompoundref>
    <derivedcompoundref refid="classanonymous__namespace_02cmdlinehelpwriter_8cpp_03_1_1CommandLineHelpWriterTest" prot="public" virt="non-virtual">anonymous_namespace{cmdlinehelpwriter.cpp}::CommandLineHelpWriterTest</derivedcompoundref>
    <derivedcompoundref refid="classanonymous__namespace_02confio_8cpp_03_1_1StructureIORoundtripTest" prot="public" virt="non-virtual">anonymous_namespace{confio.cpp}::StructureIORoundtripTest</derivedcompoundref>
    <derivedcompoundref refid="classanonymous__namespace_02helpformat_8cpp_03_1_1TextTableFormatterTest" prot="public" virt="non-virtual">anonymous_namespace{helpformat.cpp}::TextTableFormatterTest</derivedcompoundref>
    <derivedcompoundref refid="classanonymous__namespace_02helpmanager_8cpp_03_1_1HelpTestBase" prot="public" virt="non-virtual">anonymous_namespace{helpmanager.cpp}::HelpTestBase</derivedcompoundref>
    <derivedcompoundref refid="classanonymous__namespace_02helpwritercontext_8cpp_03_1_1HelpWriterContextTest" prot="public" virt="non-virtual">anonymous_namespace{helpwritercontext.cpp}::HelpWriterContextTest</derivedcompoundref>
    <derivedcompoundref refid="classanonymous__namespace_02textwriter_8cpp_03_1_1TextWriterTest" prot="public" virt="non-virtual">anonymous_namespace{textwriter.cpp}::TextWriterTest</derivedcompoundref>
    <derivedcompoundref refid="classgmx_1_1test_1_1CommandLineModuleManagerTestBase" prot="public" virt="non-virtual">gmx::test::CommandLineModuleManagerTestBase</derivedcompoundref>
    <includes local="no">testutils/stringtest.h</includes>
    <innerclass refid="classgmx_1_1test_1_1StringTestBase_1_1Impl" prot="public">gmx::test::StringTestBase::Impl</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1test_1_1StringTestBase_1a85eb49cf6c69bcaf98bb2302aa5e818a" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1PrivateImplPointer" kindref="compound">PrivateImplPointer</ref>&lt; <ref refid="classgmx_1_1test_1_1StringTestBase_1_1Impl" kindref="compound">Impl</ref> &gt;</type>
        <definition>PrivateImplPointer&lt;Impl&gt; gmx::test::StringTestBase::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/stringtest.h" line="125" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/stringtest.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgmx_1_1test_1_1StringTestBase_1a210ca295f0d6373a29d10d4ac1ebf033" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::StringTestBase::checkText</definition>
        <argsstring>(TestReferenceChecker *checker, const std::string &amp;text, const char *id)</argsstring>
        <name>checkText</name>
        <param>
          <type><ref refid="classgmx_1_1test_1_1TestReferenceChecker" kindref="compound">TestReferenceChecker</ref> *</type>
          <declname>checker</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Checks a block of text. </para>        </briefdescription>
        <detaileddescription>
<para>This static method is provided for code that does not derive from <ref refid="classgmx_1_1test_1_1StringTestBase" kindref="compound">StringTestBase</ref> to use the same functionality, e.g., implementing the <computeroutput>-stdout</computeroutput> option. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/stringtest.h" line="81" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/stringtest.cpp" bodystart="95" bodyend="107"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1test_1_1StringTestBase_1af833cba6e1f68d0111208b3818efb0b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::test::StringTestBase::StringTestBase</definition>
        <argsstring>()</argsstring>
        <name>StringTestBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/stringtest.h" line="84" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/stringtest.cpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1StringTestBase_1ad2373c4842345122e5f0c931f25553d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::test::StringTestBase::~StringTestBase</definition>
        <argsstring>()</argsstring>
        <name>~StringTestBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/stringtest.h" line="85" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/stringtest.cpp" bodystart="114" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1StringTestBase_1a2d4aa9337d64971715800e1e512973ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1test_1_1TestReferenceChecker" kindref="compound">TestReferenceChecker</ref> &amp;</type>
        <definition>TestReferenceChecker &amp; gmx::test::StringTestBase::checker</definition>
        <argsstring>()</argsstring>
        <name>checker</name>
        <briefdescription>
<para>Returns the root checker for this test&apos;s reference data. </para>        </briefdescription>
        <detaileddescription>
<para>Can be used to perform custom checks against reference data (e.g., if the test needs to check some other values than plain strings. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/stringtest.h" line="93" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/stringtest.cpp" bodystart="119" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1StringTestBase_1ac27b306db6617cb199172c9a581cafc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::StringTestBase::checkText</definition>
        <argsstring>(const std::string &amp;text, const char *id)</argsstring>
        <name>checkText</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Checks a string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">text</parametername>
</parameternamelist>
<parameterdescription>
<para>String to check. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique (within a single test) id for the string. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/stringtest.h" line="101" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/stringtest.cpp" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1StringTestBase_1a7385252da411d966f11163e845f3e3b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::StringTestBase::checkFileContents</definition>
        <argsstring>(const std::string &amp;filename, const char *id)</argsstring>
        <name>checkFileContents</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Checks contents of a file as a single string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file to check. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique (within a single test) id for the string.</para></parameterdescription>
</parameteritem>
</parameterlist>
Provided for convenience. Reads the contents of <computeroutput>filename</computeroutput> into a single string and calls <ref refid="classgmx_1_1test_1_1StringTestBase_1a210ca295f0d6373a29d10d4ac1ebf033" kindref="member">checkText()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/stringtest.h" line="111" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/stringtest.cpp" bodystart="135" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1StringTestBase_1a8b3437f342c706554f02d1bf754f72e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::StringTestBase::testFilesEqual</definition>
        <argsstring>(const std::string &amp;refFilename, const std::string &amp;testFilename)</argsstring>
        <name>testFilesEqual</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>refFilename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>testFilename</declname>
        </param>
        <briefdescription>
<para>Tests that contents of two files are equal. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">refFilename</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1File" kindref="compound">File</ref> with the expected contents. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">testFilename</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1File" kindref="compound">File</ref> with the contents to be tested. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/stringtest.h" line="119" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/stringtest.cpp" bodystart="142" bodyend="152"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Test fixture for tests that check string formatting. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal /> For development, tests that use this fixture as their base can be run with a &apos;-stdout&apos; command-line option to print out the tested strings to stdout. If this flag is not given, they check the strings using the XML reference framework (see <ref refid="classgmx_1_1test_1_1TestReferenceData" kindref="compound">TestReferenceData</ref>). </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2475">
        <label>anonymous_namespace{cmdlinehelpwriter.cpp}::CommandLineHelpWriterTest</label>
        <link refid="classanonymous__namespace_02cmdlinehelpwriter_8cpp_03_1_1CommandLineHelpWriterTest"/>
        <childnode refid="2473" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2473">
        <label>gmx::test::StringTestBase</label>
        <link refid="classgmx_1_1test_1_1StringTestBase"/>
        <childnode refid="2474" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2481">
        <label>anonymous_namespace{textwriter.cpp}::TextWriterTest</label>
        <link refid="classanonymous__namespace_02textwriter_8cpp_03_1_1TextWriterTest"/>
        <childnode refid="2473" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2477">
        <label>anonymous_namespace{helpformat.cpp}::TextTableFormatterTest</label>
        <link refid="classanonymous__namespace_02helpformat_8cpp_03_1_1TextTableFormatterTest"/>
        <childnode refid="2473" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2480">
        <label>anonymous_namespace{helpwritercontext.cpp}::HelpWriterContextTest</label>
        <link refid="classanonymous__namespace_02helpwritercontext_8cpp_03_1_1HelpWriterContextTest"/>
        <childnode refid="2473" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2474">
        <label>Test</label>
      </node>
      <node id="2482">
        <label>gmx::test::CommandLineModuleManagerTestBase</label>
        <link refid="classgmx_1_1test_1_1CommandLineModuleManagerTestBase"/>
        <childnode refid="2473" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2478">
        <label>anonymous_namespace{helpmanager.cpp}::HelpTestBase</label>
        <link refid="classanonymous__namespace_02helpmanager_8cpp_03_1_1HelpTestBase"/>
        <childnode refid="2473" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2476">
        <label>anonymous_namespace{confio.cpp}::StructureIORoundtripTest</label>
        <link refid="classanonymous__namespace_02confio_8cpp_03_1_1StructureIORoundtripTest"/>
        <childnode refid="2473" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2479">
        <label>anonymous_namespace{helpmanager.cpp}::HelpTopicFormattingTest</label>
        <link refid="classanonymous__namespace_02helpmanager_8cpp_03_1_1HelpTopicFormattingTest"/>
        <childnode refid="2478" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2483">
        <label>gmx::test::StringTestBase</label>
        <link refid="classgmx_1_1test_1_1StringTestBase"/>
        <childnode refid="2484" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2484">
        <label>Test</label>
      </node>
    </collaborationgraph>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/stringtest.h" line="72" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/stringtest.h" bodystart="71" bodyend="126"/>
    <listofallmembers>
      <member refid="classgmx_1_1test_1_1StringTestBase_1a2d4aa9337d64971715800e1e512973ca" prot="public" virt="non-virtual"><scope>gmx::test::StringTestBase</scope><name>checker</name></member>
      <member refid="classgmx_1_1test_1_1StringTestBase_1a7385252da411d966f11163e845f3e3b9" prot="public" virt="non-virtual"><scope>gmx::test::StringTestBase</scope><name>checkFileContents</name></member>
      <member refid="classgmx_1_1test_1_1StringTestBase_1a210ca295f0d6373a29d10d4ac1ebf033" prot="public" virt="non-virtual"><scope>gmx::test::StringTestBase</scope><name>checkText</name></member>
      <member refid="classgmx_1_1test_1_1StringTestBase_1ac27b306db6617cb199172c9a581cafc0" prot="public" virt="non-virtual"><scope>gmx::test::StringTestBase</scope><name>checkText</name></member>
      <member refid="classgmx_1_1test_1_1StringTestBase_1a85eb49cf6c69bcaf98bb2302aa5e818a" prot="private" virt="non-virtual"><scope>gmx::test::StringTestBase</scope><name>impl_</name></member>
      <member refid="classgmx_1_1test_1_1StringTestBase_1af833cba6e1f68d0111208b3818efb0b5" prot="public" virt="non-virtual"><scope>gmx::test::StringTestBase</scope><name>StringTestBase</name></member>
      <member refid="classgmx_1_1test_1_1StringTestBase_1a8b3437f342c706554f02d1bf754f72e6" prot="public" virt="non-virtual"><scope>gmx::test::StringTestBase</scope><name>testFilesEqual</name></member>
      <member refid="classgmx_1_1test_1_1StringTestBase_1ad2373c4842345122e5f0c931f25553d3" prot="public" virt="non-virtual"><scope>gmx::test::StringTestBase</scope><name>~StringTestBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

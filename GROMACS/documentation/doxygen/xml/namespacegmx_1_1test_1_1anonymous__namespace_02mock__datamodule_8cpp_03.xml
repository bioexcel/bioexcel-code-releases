<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="namespacegmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03" kind="namespace">
    <compoundname>gmx::test::anonymous_namespace{mock_datamodule.cpp}</compoundname>
    <innerclass refid="classgmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03_1_1StaticDataFrameHeaderChecker" prot="public">gmx::test::anonymous_namespace{mock_datamodule.cpp}::StaticDataFrameHeaderChecker</innerclass>
    <innerclass refid="classgmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03_1_1StaticDataPointsChecker" prot="public">gmx::test::anonymous_namespace{mock_datamodule.cpp}::StaticDataPointsChecker</innerclass>
    <innerclass refid="classgmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03_1_1DataStorageRequester" prot="public">gmx::test::anonymous_namespace{mock_datamodule.cpp}::DataStorageRequester</innerclass>
    <innerclass refid="classgmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03_1_1StaticDataPointsStorageChecker" prot="public">gmx::test::anonymous_namespace{mock_datamodule.cpp}::StaticDataPointsStorageChecker</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__module__analysisdata_1gac450133dc0602bd18aaf78fe3ee4f534" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::anonymous_namespace{mock_datamodule.cpp}::checkReferenceDataPoint</definition>
        <argsstring>(TestReferenceChecker *checker, const AnalysisDataValue &amp;value)</argsstring>
        <name>checkReferenceDataPoint</name>
        <param>
          <type><ref refid="classgmx_1_1test_1_1TestReferenceChecker" kindref="compound">TestReferenceChecker</ref> *</type>
          <declname>checker</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1AnalysisDataValue" kindref="compound">AnalysisDataValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Checks a single <ref refid="classgmx_1_1AnalysisDataValue" kindref="compound">AnalysisDataValue</ref>. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/tests/mock_datamodule.cpp" line="143" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/tests/mock_datamodule.cpp" bodystart="143" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03_1acb37ca8f35691f1f4b77b4db3d0e401e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::anonymous_namespace{mock_datamodule.cpp}::checkHeader</definition>
        <argsstring>(const AnalysisDataFrameHeader &amp;header, const AnalysisDataTestInputFrame &amp;refFrame)</argsstring>
        <name>checkHeader</name>
        <param>
          <type>const <ref refid="classgmx_1_1AnalysisDataFrameHeader" kindref="compound">AnalysisDataFrameHeader</ref> &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1test_1_1AnalysisDataTestInputFrame" kindref="compound">AnalysisDataTestInputFrame</ref> &amp;</type>
          <declname>refFrame</declname>
        </param>
        <briefdescription>
<para>Helper function for checking the data frame header against static data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">header</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame header to check. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">refFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to check against. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/tests/mock_datamodule.cpp" line="251" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/tests/mock_datamodule.cpp" bodystart="251" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03_1a16fa5ace5064efe66fbcb2b0fd018fec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::anonymous_namespace{mock_datamodule.cpp}::checkPoints</definition>
        <argsstring>(const AnalysisDataPointSetRef &amp;points, const AnalysisDataTestInputPointSet &amp;refPoints, int columnOffset)</argsstring>
        <name>checkPoints</name>
        <param>
          <type>const <ref refid="classgmx_1_1AnalysisDataPointSetRef" kindref="compound">AnalysisDataPointSetRef</ref> &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1test_1_1AnalysisDataTestInputPointSet" kindref="compound">AnalysisDataTestInputPointSet</ref> &amp;</type>
          <declname>refPoints</declname>
        </param>
        <param>
          <type>int</type>
          <declname>columnOffset</declname>
        </param>
        <briefdescription>
<para>Helper function for checking a point set against static data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">points</parametername>
</parameternamelist>
<parameterdescription>
<para>Point set to check. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">refPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to check against. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">columnOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset of first column of <computeroutput>points</computeroutput> in <computeroutput>refPoints</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/tests/mock_datamodule.cpp" line="266" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/tests/mock_datamodule.cpp" bodystart="266" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03_1a12c94937d1b66aa12c1f1e34affe5866" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::anonymous_namespace{mock_datamodule.cpp}::checkFrame</definition>
        <argsstring>(const AnalysisDataFrameRef &amp;frame, const AnalysisDataTestInputFrame &amp;refFrame)</argsstring>
        <name>checkFrame</name>
        <param>
          <type>const <ref refid="classgmx_1_1AnalysisDataFrameRef" kindref="compound">AnalysisDataFrameRef</ref> &amp;</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1test_1_1AnalysisDataTestInputFrame" kindref="compound">AnalysisDataTestInputFrame</ref> &amp;</type>
          <declname>refFrame</declname>
        </param>
        <briefdescription>
<para>Helper function for checking a full frame against static data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">frame</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame to check. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">refFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to check against. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/tests/mock_datamodule.cpp" line="288" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/tests/mock_datamodule.cpp" bodystart="288" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03_1af28295ce309b9070b327b91a54324e4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::anonymous_namespace{mock_datamodule.cpp}::setSerialExpectationForParallelDataStarted</definition>
        <argsstring>(MockAnalysisDataModule *mock)</argsstring>
        <name>setSerialExpectationForParallelDataStarted</name>
        <param>
          <type><ref refid="classgmx_1_1test_1_1MockAnalysisDataModule" kindref="compound">MockAnalysisDataModule</ref> *</type>
          <declname>mock</declname>
        </param>
        <briefdescription>
<para>Sets the mock object expectation to mimick <ref refid="classgmx_1_1AnalysisDataModuleSerial" kindref="compound">AnalysisDataModuleSerial</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Makes <ref refid="classgmx_1_1IAnalysisDataModule_1aeca0c095b7f31aec0f58643bed0e0895" kindref="member">MockAnalysisDataModule::parallelDataStarted()</ref> behave as if the mock object was an <ref refid="classgmx_1_1AnalysisDataModuleSerial" kindref="compound">AnalysisDataModuleSerial</ref> object: forward the call to <ref refid="classgmx_1_1IAnalysisDataModule_1ac77236904b9f2871c38a73e2d150d787" kindref="member">MockAnalysisDataModule::dataStarted()</ref> and return false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/tests/mock_datamodule.cpp" line="491" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/tests/mock_datamodule.cpp" bodystart="491" bodyend="503"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/analysisdata/tests/mock_datamodule.cpp" line="136" column="1"/>
  </compounddef>
</doxygen>

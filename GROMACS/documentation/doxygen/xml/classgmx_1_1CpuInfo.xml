<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1CpuInfo" kind="class" prot="public">
    <compoundname>gmx::CpuInfo</compoundname>
    <includes local="no">gromacs/hardware/cpuinfo.h</includes>
    <innerclass refid="structgmx_1_1CpuInfo_1_1LogicalProcessor" prot="public">gmx::CpuInfo::LogicalProcessor</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classgmx_1_1CpuInfo_1a07f2b126c9ee81ac1577b49b18b0bed6" prot="public" static="no">
        <name>SupportLevel</name>
        <enumvalue id="classgmx_1_1CpuInfo_1a07f2b126c9ee81ac1577b49b18b0bed6a6adf97f83acf6453d4a6a4b1070f3754" prot="public">
          <name>None</name>
          <briefdescription>
<para>No cpu information whatsoever. Sorry. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1a07f2b126c9ee81ac1577b49b18b0bed6a49ee3087348e8d44e1feda1917443987" prot="public">
          <name>Name</name>
          <briefdescription>
<para>Only vendor and/or brand is set. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1a07f2b126c9ee81ac1577b49b18b0bed6a98f770b0af18ca763421bac22b4b6805" prot="public">
          <name>Features</name>
          <briefdescription>
<para>Some features are set. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1a07f2b126c9ee81ac1577b49b18b0bed6a2f383312b87b618f0681cfac44b93986" prot="public">
          <name>LogicalProcessorInfo</name>
          <briefdescription>
<para>Everything includling logical processor information. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Amount of cpu information present (incremental) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="73" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="72" bodyend="78"/>
      </memberdef>
      <memberdef kind="enum" id="classgmx_1_1CpuInfo_1acd7ff27553f3ff9fd1037c30c21a24f1" prot="public" static="no">
        <name>Vendor</name>
        <enumvalue id="classgmx_1_1CpuInfo_1acd7ff27553f3ff9fd1037c30c21a24f1a88183b946cc5f0e8c96b2e66e1c74a7e" prot="public">
          <name>Unknown</name>
          <briefdescription>
<para>Unidentified. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1acd7ff27553f3ff9fd1037c30c21a24f1aff97a9fdede09eaf6e1c8ec9f6a61dd5" prot="public">
          <name>Intel</name>
          <briefdescription>
<para>GenuineIntel. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1acd7ff27553f3ff9fd1037c30c21a24f1abfd16f84e6b719aba6717bf2f3eb3580" prot="public">
          <name>Amd</name>
          <briefdescription>
<para>AuthenticAMD. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1acd7ff27553f3ff9fd1037c30c21a24f1a053f42c6bae3432cae270ea978f7e638" prot="public">
          <name>Fujitsu</name>
          <briefdescription>
<para>Only works on Linux (parsed from /proc/cpuinfo) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1acd7ff27553f3ff9fd1037c30c21a24f1a2dccacb26bd19bf713f7d065a306229e" prot="public">
          <name>Ibm</name>
          <briefdescription>
<para>Only works on Linux (parsed from /proc/cpuinfo) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1acd7ff27553f3ff9fd1037c30c21a24f1a551c5c03a1a91f2cf90e0d9a9b6dd378" prot="public">
          <name>Arm</name>
          <briefdescription>
<para>Only works on Linux (parsed from /proc/cpuinfo) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Processor/system vendors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="82" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="81" bodyend="89"/>
      </memberdef>
      <memberdef kind="enum" id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085" prot="public" static="no">
        <name>Feature</name>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a0d138a86051272055953df9b1a56872e" prot="public">
          <name>X86_Aes</name>
          <briefdescription>
<para>x86 advanced encryption standard accel. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a071206e4a4e867fee896403d65419863" prot="public">
          <name>X86_Apic</name>
          <briefdescription>
<para>APIC support. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a9201c4bc942aaeba69216cfc973795b6" prot="public">
          <name>X86_Avx</name>
          <briefdescription>
<para>Advanced vector extensions. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085ac8da3ebc9d442eba3f2cb90fbca92140" prot="public">
          <name>X86_Avx2</name>
          <briefdescription>
<para>AVX2 including gather support (not used yet) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a619ab63a46143613adbd8daee7485231" prot="public">
          <name>X86_Avx512F</name>
          <briefdescription>
<para>Foundation AVX-512 instructions. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a74f6992d7201d1bbdc6c25d18cc85416" prot="public">
          <name>X86_Avx512PF</name>
          <briefdescription>
<para>Extended gather/scatter for AVX-512. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a10ee5f603b4ed2b9b4085e0afb62b5da" prot="public">
          <name>X86_Avx512ER</name>
          <briefdescription>
<para>AVX-512 exponential and recpirocal extensions. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a900fa09c24bc40a71355a8e6dc3aa7d1" prot="public">
          <name>X86_Avx512CD</name>
          <briefdescription>
<para>Memory conflict-detection for AVX-512. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a4f7cb08ab39bdafd8d2e1f2bb11abfd8" prot="public">
          <name>X86_Avx512BW</name>
          <briefdescription>
<para>AVX-512 byte and word instructions. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085af8f88553fa1b527102d16d8a8e724bf1" prot="public">
          <name>X86_Avx512VL</name>
          <briefdescription>
<para>AVX-512 vector length extensions. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085adafed2abaca7dff8caecf78072cb9704" prot="public">
          <name>X86_Clfsh</name>
          <briefdescription>
<para>Supports CLFLUSH instruction. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a44506875c976ba9716009971c1bc6567" prot="public">
          <name>X86_Cmov</name>
          <briefdescription>
<para>Conditional move insn support. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085aa392980a334b221a0f4f40607058577d" prot="public">
          <name>X86_Cx8</name>
          <briefdescription>
<para>Supports CMPXCHG8B (8-byte compare-exchange) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a921f8402563841e04dd1e8622bfeecf5" prot="public">
          <name>X86_Cx16</name>
          <briefdescription>
<para>Supports CMPXCHG16B (16-byte compare-exchg) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a13f293efc198f60a31b20f443bc935b9" prot="public">
          <name>X86_F16C</name>
          <briefdescription>
<para>Supports 16-bit FP conversion instructions. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a82f30ad030ef5cd14dc4d91984fce03d" prot="public">
          <name>X86_Fma</name>
          <briefdescription>
<para>Fused-multiply add support (mainly for AVX) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a71a5ab4543516a04bc954a07f99ebfd2" prot="public">
          <name>X86_Fma4</name>
          <briefdescription>
<para>4-operand FMA, only on AMD for now </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085ad9df15f08b5667e8b999f60e95137d78" prot="public">
          <name>X86_Hle</name>
          <briefdescription>
<para>Hardware lock elision. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a76ea69e22e627edc24a70e335df1d7a0" prot="public">
          <name>X86_Htt</name>
          <briefdescription>
<para>Hyper-Threading supported (but maybe not enabled) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a35c4355e86a2e33267d46a6ebc5c9906" prot="public">
          <name>X86_Lahf</name>
          <briefdescription>
<para>LAHF/SAHF support in 64 bits. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a520aed512a570be087cd8a7c6cf6a926" prot="public">
          <name>X86_MisalignSse</name>
          <briefdescription>
<para>Support for misaligned SSE data instructions. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a7627a54ec9966e3226779556f0653a4c" prot="public">
          <name>X86_Mmx</name>
          <briefdescription>
<para>MMX registers and instructions. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085acaf35c0a6493de9d77dc0f4b3680b072" prot="public">
          <name>X86_Msr</name>
          <briefdescription>
<para>Supports Intel model-specific-registers. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a1dcec5837a29029049f21388f970ed48" prot="public">
          <name>X86_NonstopTsc</name>
          <briefdescription>
<para>Invariant TSC (constant rate in ACPI states) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085aa77596aacbea945a695442d095e1ee53" prot="public">
          <name>X86_Pcid</name>
          <briefdescription>
<para>Process context identifier support. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085add0efb676d4796487524feb823e3416b" prot="public">
          <name>X86_Pclmuldq</name>
          <briefdescription>
<para>Carry-less 64-bit multiplication supported. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a4a0a80facdd07994113c1bdaa1560f7f" prot="public">
          <name>X86_Pdcm</name>
          <briefdescription>
<para>Perfmon and Debug Capability. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a73f13ae04efb21da4143d18a84a01cc7" prot="public">
          <name>X86_PDPE1GB</name>
          <briefdescription>
<para>Support for 1GB pages. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085ad97abe04647a1dba0dd50f0e7a2145f7" prot="public">
          <name>X86_Popcnt</name>
          <briefdescription>
<para>Supports the POPCNT (population count) insn. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085ae43ffb4f13cf5239ca5522071cb32e85" prot="public">
          <name>X86_Pse</name>
          <briefdescription>
<para>Supports 4MB-pages (page size extension) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a3fabeeec6f2e0d4134981fe4fd3ec710" prot="public">
          <name>X86_Rdrnd</name>
          <briefdescription>
<para>RDRAND high-quality hardware random numbers. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085acc5a519130c205d30f7d41689aa7a140" prot="public">
          <name>X86_Rdtscp</name>
          <briefdescription>
<para>Serializing rdtscp instruction available. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085aa8706e3a27bbab29c1cb05b43bac21e4" prot="public">
          <name>X86_Rtm</name>
          <briefdescription>
<para>Restricted transactional memory. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a69685eb53ac571e7b7ea18a12714b7d3" prot="public">
          <name>X86_Sha</name>
          <briefdescription>
<para>Intel SHA extensions. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a5c496843e02651870c195534b19d9bbb" prot="public">
          <name>X86_Sse2</name>
          <briefdescription>
<para>SSE 2. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a93420513168f5d10cbf43b2f70c83c55" prot="public">
          <name>X86_Sse3</name>
          <briefdescription>
<para>SSE 3. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a5a2abf6095b30083630ca35bbd587a41" prot="public">
          <name>X86_Sse4A</name>
          <briefdescription>
<para>SSE 4A. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a64005555216b2f63787c06918e0b4936" prot="public">
          <name>X86_Sse4_1</name>
          <briefdescription>
<para>SSE 4.1. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085ad0fb62d46bb58abe6f3513c76acea8e5" prot="public">
          <name>X86_Sse4_2</name>
          <briefdescription>
<para>SSE 4.2. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085ad4545dd151e880caad8fbea1b1dec4fb" prot="public">
          <name>X86_Ssse3</name>
          <briefdescription>
<para>Supplemental SSE3. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a8dbb6aa4adfa58b68f0b3f73f86c8d66" prot="public">
          <name>X86_Tdt</name>
          <briefdescription>
<para>TSC deadline timer. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a989a30e1e6bb3404e573c901f20e9cb8" prot="public">
          <name>X86_X2Apic</name>
          <briefdescription>
<para>Extended xAPIC Support. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a40ec3631821d41959a5479d86f4b033b" prot="public">
          <name>X86_Xop</name>
          <briefdescription>
<para>AMD extended instructions, only AMD for now. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085adb2c254e64bf7eed5a729529fa188099" prot="public">
          <name>Arm_Neon</name>
          <briefdescription>
<para>32-bit ARM NEON </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a3a0da0d018906725c11b5ddbb0ce76d8" prot="public">
          <name>Arm_NeonAsimd</name>
          <briefdescription>
<para>64-bit ARM AArch64 Advanced SIMD </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a55faf6b41cccf6249fa75a088a0dd988" prot="public">
          <name>Ibm_Qpx</name>
          <briefdescription>
<para>IBM QPX SIMD (BlueGene/Q and later) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a3f9726bfb19d56f774360782846dc77f" prot="public">
          <name>Ibm_Vmx</name>
          <briefdescription>
<para>IBM VMX SIMD (Altivec on Power6 and later) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085ae2817429950760b6f888ba6a8446fbf5" prot="public">
          <name>Ibm_Vsx</name>
          <briefdescription>
<para>IBM VSX SIMD (Power7 and later) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085a069e00567050f3e5b804844ed7155bdd" prot="public">
          <name>Fujitsu_HpcAce</name>
          <briefdescription>
<para>Fujitsu Sparc64 HPC-ACE. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>List of CPU features. </para>        </briefdescription>
        <detaileddescription>
<para>These values can be used as arguments to the <ref refid="classgmx_1_1CpuInfo_1a68473a23cf8cb3f8cf3a481402e939d4" kindref="member">feature()</ref> method to check whether a specific feature was found on the CPU we are running on. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="98" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="97" bodyend="148"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1CpuInfo_1ad078289dd33271620c08dd0c590b1fe8" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1CpuInfo_1a07f2b126c9ee81ac1577b49b18b0bed6" kindref="member">SupportLevel</ref></type>
        <definition>SupportLevel gmx::CpuInfo::supportLevel_</definition>
        <argsstring></argsstring>
        <name>supportLevel_</name>
        <briefdescription>
<para>Available cpuinfo information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="271" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1CpuInfo_1a134ad157402b3f252be54373304ebabc" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1CpuInfo_1acd7ff27553f3ff9fd1037c30c21a24f1" kindref="member">Vendor</ref></type>
        <definition>Vendor gmx::CpuInfo::vendor_</definition>
        <argsstring></argsstring>
        <name>vendor_</name>
        <briefdescription>
<para>Value of vendor for current cpu. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="272" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1CpuInfo_1a89959b9b37763a550ce5579f66e06a3f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string gmx::CpuInfo::brandString_</definition>
        <argsstring></argsstring>
        <name>brandString_</name>
        <briefdescription>
<para>Text description of cpu. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="273" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1CpuInfo_1ac1c0ca9a985efa8825fc804642c390b5" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int gmx::CpuInfo::family_</definition>
        <argsstring></argsstring>
        <name>family_</name>
        <briefdescription>
<para>Major version of current cpu. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="274" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1CpuInfo_1a79a8445bbc5ff81e7742146e9f5eb00d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int gmx::CpuInfo::model_</definition>
        <argsstring></argsstring>
        <name>model_</name>
        <briefdescription>
<para>Middle version of current cpu. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="275" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1CpuInfo_1a35162512a3ac01a411bb5b8fd7be2d5f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int gmx::CpuInfo::stepping_</definition>
        <argsstring></argsstring>
        <name>stepping_</name>
        <briefdescription>
<para>Minor version of current cpu. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="276" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1CpuInfo_1ac86578215ee74713a6291ced613f55e3" prot="private" static="no" mutable="no">
        <type><ref refid="parser__internal_8h_1a8553aeb4ef79ad62e90241cf54e221d5" kindref="member">std::set</ref>&lt; <ref refid="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085" kindref="member">Feature</ref> &gt;</type>
        <definition>std::set&lt;Feature&gt; gmx::CpuInfo::features_</definition>
        <argsstring></argsstring>
        <name>features_</name>
        <briefdescription>
<para>Set of features supported on this cpu. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="277" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1CpuInfo_1a4e0d38014093283c68ea616ac8e4fc97" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structgmx_1_1CpuInfo_1_1LogicalProcessor" kindref="compound">LogicalProcessor</ref> &gt;</type>
        <definition>std::vector&lt;LogicalProcessor&gt; gmx::CpuInfo::logicalProcessors_</definition>
        <argsstring></argsstring>
        <name>logicalProcessors_</name>
        <briefdescription>
<para>Simple logical processor topology. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="278" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classgmx_1_1CpuInfo_1a8058c961c28590f0a5df32107230ee31" prot="private" static="yes" mutable="no">
        <type>const std::map&lt; <ref refid="classgmx_1_1CpuInfo_1acd7ff27553f3ff9fd1037c30c21a24f1" kindref="member">Vendor</ref>, std::string &gt;</type>
        <definition>const std::map&lt; CpuInfo::Vendor, std::string &gt; gmx::CpuInfo::s_vendorStrings_</definition>
        <argsstring></argsstring>
        <name>s_vendorStrings_</name>
        <initializer>=
{
    { <ref refid="classgmx_1_1CpuInfo_1acd7ff27553f3ff9fd1037c30c21a24f1a88183b946cc5f0e8c96b2e66e1c74a7e" kindref="member">CpuInfo::Vendor::Unknown</ref>, &quot;Unknown <ref refid="classgmx_1_1CpuInfo_1a19c499f283dc39a8e3b4d6e3dd911520" kindref="member">vendor</ref>&quot;                  },
    { CpuInfo::Vendor::Intel, &quot;Intel&quot;                             },
    { CpuInfo::Vendor::Amd, &quot;AMD&quot;                                 },
    { CpuInfo::Vendor::Fujitsu, &quot;Fujitsu&quot;                         },
    { CpuInfo::Vendor::Ibm, &quot;IBM&quot;                                 },
    { CpuInfo::Vendor::Arm, &quot;ARM&quot;                                 }
}</initializer>
        <briefdescription>
<para>Text description of each vendor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="279" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1CpuInfo_1a9f04b70a902acf950114e8a6272b6a59" prot="private" static="yes" mutable="no">
        <type>const std::map&lt; <ref refid="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085" kindref="member">Feature</ref>, std::string &gt;</type>
        <definition>const std::map&lt; CpuInfo::Feature, std::string &gt; gmx::CpuInfo::s_featureStrings_</definition>
        <argsstring></argsstring>
        <name>s_featureStrings_</name>
        <briefdescription>
<para>Text description of each feature. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="280" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgmx_1_1CpuInfo_1ab39e3eb5227a07cf048b337c47f77c97" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1CpuInfo" kindref="compound">CpuInfo</ref></type>
        <definition>CpuInfo gmx::CpuInfo::detect</definition>
        <argsstring>()</argsstring>
        <name>detect</name>
        <briefdescription>
<para>Perform detection and construct a <ref refid="classgmx_1_1CpuInfo" kindref="compound">CpuInfo</ref> class from the results. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The detection should generally be performed again in different contexts. This might seem like overkill, but there are systems (e.g. Arm) where processors can go completely offline during deep sleep, so at least in theory it is good to have a possibility of forcing re-detection if necessary. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="167" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.cpp" bodystart="871" bodyend="921"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1CpuInfo_1a079886c45c54ded9ded21833d27a4ef1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>static const std::string&amp; gmx::CpuInfo::featureString</definition>
        <argsstring>(Feature f)</argsstring>
        <name>featureString</name>
        <param>
          <type><ref refid="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085" kindref="member">Feature</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>String description of a specific feature. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::out_of_range</parametername>
</parameternamelist>
<parameterdescription>
<para>if the feature is not present in the internal map of feature names. This can only happen if we extend the enum type but forget to add the string with the feature name. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="232" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="232" bodyend="235"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1CpuInfo_1a50b527cc547502fe4b703c528fdbb6f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1CpuInfo_1a07f2b126c9ee81ac1577b49b18b0bed6" kindref="member">SupportLevel</ref></type>
        <definition>SupportLevel gmx::CpuInfo::supportLevel</definition>
        <argsstring>() const </argsstring>
        <name>supportLevel</name>
        <briefdescription>
<para>Check what cpu information is available. </para>        </briefdescription>
        <detaileddescription>
<para>The amount of cpu information that can be detected depends on the OS, compiler, and CPU, and on non-x86 platforms it can be fragile. Before basing decisions on the output or warning the user about optimizations, you want to check whether it was possible to detect the information you need. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="178" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1CpuInfo_1a19c499f283dc39a8e3b4d6e3dd911520" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1CpuInfo_1acd7ff27553f3ff9fd1037c30c21a24f1" kindref="member">Vendor</ref></type>
        <definition>Vendor gmx::CpuInfo::vendor</definition>
        <argsstring>() const </argsstring>
        <name>vendor</name>
        <briefdescription>
<para>Enumerated value for vendor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="182" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1CpuInfo_1ad5bf0aad0888b920737d38699ac5d829" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; gmx::CpuInfo::vendorString</definition>
        <argsstring>() const </argsstring>
        <name>vendorString</name>
        <briefdescription>
<para>String description of vendor: </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::out_of_range</parametername>
</parameternamelist>
<parameterdescription>
<para>if the vendor is not present in the internal map of vendor names. This can only happen if we extend the enum type but forget to add the string with the vendor name. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="191" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1CpuInfo_1aec25713bfa5fabb29713dc07afa2dbc0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; gmx::CpuInfo::brandString</definition>
        <argsstring>() const </argsstring>
        <name>brandString</name>
        <briefdescription>
<para>String description of processor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="198" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1CpuInfo_1afe07cc294da22b77685fcb64de24cb30" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int gmx::CpuInfo::family</definition>
        <argsstring>() const </argsstring>
        <name>family</name>
        <briefdescription>
<para>Major version/generation of the processor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="202" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="202" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1CpuInfo_1af1c64698d32d6559637c68357ba11627" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int gmx::CpuInfo::model</definition>
        <argsstring>() const </argsstring>
        <name>model</name>
        <briefdescription>
<para>Middle version of the processor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="206" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1CpuInfo_1ad9fafbcebb7acf547b4a67b57281ebf4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int gmx::CpuInfo::stepping</definition>
        <argsstring>() const </argsstring>
        <name>stepping</name>
        <briefdescription>
<para>Minor version of the processor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="210" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1CpuInfo_1a68473a23cf8cb3f8cf3a481402e939d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::CpuInfo::feature</definition>
        <argsstring>(Feature f) const </argsstring>
        <name>feature</name>
        <param>
          <type><ref refid="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085" kindref="member">Feature</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Check for availability of specific feature. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>feature to query support for</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the feature is available, otherwise false. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="219" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="219" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1CpuInfo_1a9de4ec264a1d0987ccdf221a5a438215" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="parser__internal_8h_1a8553aeb4ef79ad62e90241cf54e221d5" kindref="member">std::set</ref>&lt; <ref refid="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085" kindref="member">Feature</ref> &gt; &amp;</type>
        <definition>const std::set&lt;Feature&gt;&amp; gmx::CpuInfo::featureSet</definition>
        <argsstring>() const </argsstring>
        <name>featureSet</name>
        <briefdescription>
<para>Set of all supported features on this processor. </para>        </briefdescription>
        <detaileddescription>
<para>This is only intended for logfiles, debugging or similar output when we need a full list of all the features available on the CPU. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="243" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1CpuInfo_1ade1e6559a5912267e7e80d9ebdeb03eb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="structgmx_1_1CpuInfo_1_1LogicalProcessor" kindref="compound">LogicalProcessor</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;LogicalProcessor&gt;&amp; gmx::CpuInfo::logicalProcessors</definition>
        <argsstring>() const </argsstring>
        <name>logicalProcessors</name>
        <briefdescription>
<para>Reference to processing unit topology. </para>        </briefdescription>
        <detaileddescription>
<para>Only a few systems (x86) provide logical processor information in cpuinfo. This method returns a reference to a vector, whose length will either be zero (if topology information is not available) or the number of enabled processing units, as defined by the operating system. In the latter case, each entry will contain information about the relative rank in the core and socket of this hardware thread.</para><para>This is only meant to be use as a fallback implementation for our <ref refid="classgmx_1_1HardwareTopology" kindref="compound">HardwareTopology</ref> class; any user code that needs access to hardware topology information should use that class instead.</para><para><simplesect kind="note"><para>For clarity, it is likely better to use the <ref refid="classgmx_1_1CpuInfo_1a50b527cc547502fe4b703c528fdbb6f7" kindref="member">supportLevel()</ref> method to check if this information is available rather than relying on the length of the vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="266" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="266" bodyend="266"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgmx_1_1CpuInfo_1a2ee08a3e52f181c4a4b18c7e1b2f01c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::CpuInfo::CpuInfo</definition>
        <argsstring>()</argsstring>
        <name>CpuInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="269" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.cpp" bodystart="924" bodyend="928"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Detect CPU capabilities and basic logical processor info. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal />  This class provides a lot of information about x86 CPUs, and some very limited information about other hardware. The logical processor information is only available on x86, and is used as a fallback implementation in the <ref refid="classgmx_1_1HardwareTopology" kindref="compound">HardwareTopology</ref> class. If you actually need information about the hardware topology, use the much more general implementation in the <ref refid="classgmx_1_1HardwareTopology" kindref="compound">HardwareTopology</ref> class instead, since that will both be more portable and contain more information. </para>    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" line="67" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/hardware/cpuinfo.h" bodystart="66" bodyend="281"/>
    <listofallmembers>
      <member refid="classgmx_1_1CpuInfo_1aec25713bfa5fabb29713dc07afa2dbc0" prot="public" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>brandString</name></member>
      <member refid="classgmx_1_1CpuInfo_1a89959b9b37763a550ce5579f66e06a3f" prot="private" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>brandString_</name></member>
      <member refid="classgmx_1_1CpuInfo_1a2ee08a3e52f181c4a4b18c7e1b2f01c7" prot="private" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>CpuInfo</name></member>
      <member refid="classgmx_1_1CpuInfo_1ab39e3eb5227a07cf048b337c47f77c97" prot="public" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>detect</name></member>
      <member refid="classgmx_1_1CpuInfo_1afe07cc294da22b77685fcb64de24cb30" prot="public" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>family</name></member>
      <member refid="classgmx_1_1CpuInfo_1ac1c0ca9a985efa8825fc804642c390b5" prot="private" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>family_</name></member>
      <member refid="classgmx_1_1CpuInfo_1a68473a23cf8cb3f8cf3a481402e939d4" prot="public" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>feature</name></member>
      <member refid="classgmx_1_1CpuInfo_1ac8981fb299411577dccba90b335a9085" prot="public" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>Feature</name></member>
      <member refid="classgmx_1_1CpuInfo_1ac86578215ee74713a6291ced613f55e3" prot="private" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>features_</name></member>
      <member refid="classgmx_1_1CpuInfo_1a9de4ec264a1d0987ccdf221a5a438215" prot="public" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>featureSet</name></member>
      <member refid="classgmx_1_1CpuInfo_1a079886c45c54ded9ded21833d27a4ef1" prot="public" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>featureString</name></member>
      <member refid="classgmx_1_1CpuInfo_1ade1e6559a5912267e7e80d9ebdeb03eb" prot="public" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>logicalProcessors</name></member>
      <member refid="classgmx_1_1CpuInfo_1a4e0d38014093283c68ea616ac8e4fc97" prot="private" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>logicalProcessors_</name></member>
      <member refid="classgmx_1_1CpuInfo_1af1c64698d32d6559637c68357ba11627" prot="public" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>model</name></member>
      <member refid="classgmx_1_1CpuInfo_1a79a8445bbc5ff81e7742146e9f5eb00d" prot="private" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>model_</name></member>
      <member refid="classgmx_1_1CpuInfo_1a9f04b70a902acf950114e8a6272b6a59" prot="private" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>s_featureStrings_</name></member>
      <member refid="classgmx_1_1CpuInfo_1a8058c961c28590f0a5df32107230ee31" prot="private" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>s_vendorStrings_</name></member>
      <member refid="classgmx_1_1CpuInfo_1ad9fafbcebb7acf547b4a67b57281ebf4" prot="public" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>stepping</name></member>
      <member refid="classgmx_1_1CpuInfo_1a35162512a3ac01a411bb5b8fd7be2d5f" prot="private" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>stepping_</name></member>
      <member refid="classgmx_1_1CpuInfo_1a50b527cc547502fe4b703c528fdbb6f7" prot="public" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>supportLevel</name></member>
      <member refid="classgmx_1_1CpuInfo_1a07f2b126c9ee81ac1577b49b18b0bed6" prot="public" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>SupportLevel</name></member>
      <member refid="classgmx_1_1CpuInfo_1ad078289dd33271620c08dd0c590b1fe8" prot="private" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>supportLevel_</name></member>
      <member refid="classgmx_1_1CpuInfo_1acd7ff27553f3ff9fd1037c30c21a24f1" prot="public" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>Vendor</name></member>
      <member refid="classgmx_1_1CpuInfo_1a19c499f283dc39a8e3b4d6e3dd911520" prot="public" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>vendor</name></member>
      <member refid="classgmx_1_1CpuInfo_1a134ad157402b3f252be54373304ebabc" prot="private" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>vendor_</name></member>
      <member refid="classgmx_1_1CpuInfo_1ad5bf0aad0888b920737d38699ac5d829" prot="public" virt="non-virtual"><scope>gmx::CpuInfo</scope><name>vendorString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

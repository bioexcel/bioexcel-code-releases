<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1ArrayRef" kind="class" prot="public">
    <compoundname>gmx::ArrayRef</compoundname>
    <includes local="no">gromacs/utility/arrayref.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1a830f66ddf148488309fe6de17574eaa7" prot="public" static="no">
        <type>T</type>
        <definition>typedef T gmx::ArrayRef&lt; T &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
<para>Type of values stored in the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="106" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1a12524b640e7173078bb983a450022346" prot="public" static="no">
        <type>size_t</type>
        <definition>typedef size_t gmx::ArrayRef&lt; T &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
<para>Type for representing size of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="108" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1a8895b8b6139fe648d37ea4e7e6bab050" prot="public" static="no">
        <type>ptrdiff_t</type>
        <definition>typedef ptrdiff_t gmx::ArrayRef&lt; T &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
<para>Type for representing difference between two container indices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="110" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1aa523e3e573d94dfb5f1c72b884c4174b" prot="public" static="no">
        <type>const T &amp;</type>
        <definition>typedef const T&amp; gmx::ArrayRef&lt; T &gt;::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
<para>Const reference to a container element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="112" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1a813d9d7b5e1974c2062e990e096aca62" prot="public" static="no">
        <type>const T *</type>
        <definition>typedef const T* gmx::ArrayRef&lt; T &gt;::const_pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
<para>Const pointer to a container element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="114" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1adf23600a1fe8cb879fe29ee366f6bb9d" prot="public" static="no">
        <type>const T *</type>
        <definition>typedef const T* gmx::ArrayRef&lt; T &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
<para>Const iterator type for the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="116" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1aaa7f6ef205b5793ab33635f887e9f0bb" prot="public" static="no">
        <type>T &amp;</type>
        <definition>typedef T&amp; gmx::ArrayRef&lt; T &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
<para>Reference to a container element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="118" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1a7d3b7bcef0b244efc5d3da2fe2278390" prot="public" static="no">
        <type>T *</type>
        <definition>typedef T* gmx::ArrayRef&lt; T &gt;::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
<para>Pointer to a container element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="120" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1a4340dee5b6fad7c05e609f156ea54958" prot="public" static="no">
        <type>T *</type>
        <definition>typedef T* gmx::ArrayRef&lt; T &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
<para>Iterator type for the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="122" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1a0a3dbf927d466898190de4a40584e96a" prot="public" static="no">
        <type>std::reverse_iterator&lt; <ref refid="classgmx_1_1ArrayRef_1a4340dee5b6fad7c05e609f156ea54958" kindref="member">iterator</ref> &gt;</type>
        <definition>typedef std::reverse_iterator&lt;iterator&gt; gmx::ArrayRef&lt; T &gt;::reverse_iterator</definition>
        <argsstring></argsstring>
        <name>reverse_iterator</name>
        <briefdescription>
<para>Standard reverse iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="124" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1af942afb4b73e5d3071f8d55e0a820595" prot="public" static="no">
        <type>std::reverse_iterator&lt; <ref refid="classgmx_1_1ArrayRef_1adf23600a1fe8cb879fe29ee366f6bb9d" kindref="member">const_iterator</ref> &gt;</type>
        <definition>typedef std::reverse_iterator&lt;const_iterator&gt; gmx::ArrayRef&lt; T &gt;::const_reverse_iterator</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <briefdescription>
<para>Standard reverse iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="126" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1ArrayRef_1a0526d023b3ebecdded53563aaefd2fe3" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1ArrayRef_1a7d3b7bcef0b244efc5d3da2fe2278390" kindref="member">pointer</ref></type>
        <definition>pointer gmx::ArrayRef&lt; T &gt;::begin_</definition>
        <argsstring></argsstring>
        <name>begin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="320" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1ArrayRef_1a95003c0bc87c2a0db30f98c9fd36aaef" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1ArrayRef_1a7d3b7bcef0b244efc5d3da2fe2278390" kindref="member">pointer</ref></type>
        <definition>pointer gmx::ArrayRef&lt; T &gt;::end_</definition>
        <argsstring></argsstring>
        <name>end_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="321" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1abf5e09153e9a95b182f90e82444cad55" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>&lt; <ref refid="classgmx_1_1ArrayRef_1a830f66ddf148488309fe6de17574eaa7" kindref="member">value_type</ref> &gt;</type>
        <definition>static ArrayRef&lt;value_type&gt; gmx::ArrayRef&lt; T &gt;::fromPointers</definition>
        <argsstring>(value_type *begin, value_type *end)</argsstring>
        <name>fromPointers</name>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef_1a830f66ddf148488309fe6de17574eaa7" kindref="member">value_type</ref> *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef_1a830f66ddf148488309fe6de17574eaa7" kindref="member">value_type</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Constructs a reference to a particular range from two pointers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the beginning of a range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the end of a range.</para></parameterdescription>
</parameteritem>
</parameterlist>
Passed pointers must remain valid for the lifetime of this object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="137" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a5cf1cefcaeda1d24c43308d6717d2c40" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>&lt; <ref refid="classgmx_1_1ArrayRef_1a830f66ddf148488309fe6de17574eaa7" kindref="member">value_type</ref> &gt;</type>
        <definition>static ArrayRef&lt;value_type&gt; gmx::ArrayRef&lt; T &gt;::fromArray</definition>
        <argsstring>(value_type *begin, size_t size)</argsstring>
        <name>fromArray</name>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef_1a830f66ddf148488309fe6de17574eaa7" kindref="member">value_type</ref> *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Constructs a reference to an array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the beginning of the array. May be NULL if <computeroutput>size</computeroutput> is zero. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in the array.</para></parameterdescription>
</parameteritem>
</parameterlist>
Passed pointer must remain valid for the lifetime of this object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="151" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1accf9f5830325528c5aad24f877b20e82" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>&lt; <ref refid="classgmx_1_1ArrayRef_1a830f66ddf148488309fe6de17574eaa7" kindref="member">value_type</ref> &gt;</type>
        <definition>static ArrayRef&lt;value_type&gt; gmx::ArrayRef&lt; T &gt;::fromVector</definition>
        <argsstring>(typename std::vector&lt; value_type &gt;::iterator begin, typename std::vector&lt; value_type &gt;::iterator end)</argsstring>
        <name>fromVector</name>
        <param>
          <type>typename std::vector&lt; <ref refid="classgmx_1_1ArrayRef_1a830f66ddf148488309fe6de17574eaa7" kindref="member">value_type</ref> &gt;::<ref refid="classgmx_1_1ArrayRef_1a4340dee5b6fad7c05e609f156ea54958" kindref="member">iterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type>typename std::vector&lt; <ref refid="classgmx_1_1ArrayRef_1a830f66ddf148488309fe6de17574eaa7" kindref="member">value_type</ref> &gt;::<ref refid="classgmx_1_1ArrayRef_1a4340dee5b6fad7c05e609f156ea54958" kindref="member">iterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Constructs a reference to a particular range in a std::vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator to the beginning of a range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator to the end of a range.</para></parameterdescription>
</parameteritem>
</parameterlist>
The referenced vector must remain valid and not be reallocated for the lifetime of this object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="165" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="165" bodyend="171"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1ad114f59f4d3ab734ba5460ead18a110e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::ArrayRef&lt; T &gt;::ArrayRef</definition>
        <argsstring>()</argsstring>
        <name>ArrayRef</name>
        <briefdescription>
<para>Constructs an empty reference. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="176" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a1d71d8ba14566b55336d666b3666684c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::ArrayRef&lt; T &gt;::ArrayRef</definition>
        <argsstring>(const EmptyArrayRef &amp;)</argsstring>
        <name>ArrayRef</name>
        <param>
          <type>const <ref refid="structgmx_1_1EmptyArrayRef" kindref="compound">EmptyArrayRef</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Constructs an empty reference. </para>        </briefdescription>
        <detaileddescription>
<para>This is provided for convenience, such that <ref refid="structgmx_1_1EmptyArrayRef" kindref="compound">EmptyArrayRef</ref> can be used to initialize any <ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>, without specifying the template type. It is not explicit to enable that usage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="184" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1aed10da86fd23acfb22a64c7c6699a5e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::ArrayRef&lt; T &gt;::ArrayRef</definition>
        <argsstring>(pointer begin, pointer end)</argsstring>
        <name>ArrayRef</name>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef_1a7d3b7bcef0b244efc5d3da2fe2278390" kindref="member">pointer</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef_1a7d3b7bcef0b244efc5d3da2fe2278390" kindref="member">pointer</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Constructs a reference to a particular range. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the beginning of a range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the end of a range.</para></parameterdescription>
</parameteritem>
</parameterlist>
Passed pointers must remain valid for the lifetime of this object.</para><para><simplesect kind="note"><para>For clarity, use the non-member function arrayRefFromPointers instead. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="196" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="196" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1aec0cec46b6d877523cd518b0d06d0f6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::ArrayRef&lt; T &gt;::ArrayRef</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;v)</argsstring>
        <name>ArrayRef</name>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Constructs a reference to a whole vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">v</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to reference.</para></parameterdescription>
</parameteritem>
</parameterlist>
Passed vector must remain valid and not be reallocated for the lifetime of this object.</para><para>This constructor is not explicit to allow directly passing std::vector to a method that takes <ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="212" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="212" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a15d06553caf3bfa83ff170eb36c9b191" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1a4340dee5b6fad7c05e609f156ea54958" kindref="member">iterator</ref></type>
        <definition>iterator gmx::ArrayRef&lt; T &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns an iterator to the beginning of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="248" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="248" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a872d5362680ee5a85b161f5a53a1e39b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1adf23600a1fe8cb879fe29ee366f6bb9d" kindref="member">const_iterator</ref></type>
        <definition>const_iterator gmx::ArrayRef&lt; T &gt;::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns an iterator to the beginning of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="250" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="250" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a4e59e2f04a3a426aa910b8aa716ee67e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1a4340dee5b6fad7c05e609f156ea54958" kindref="member">iterator</ref></type>
        <definition>iterator gmx::ArrayRef&lt; T &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns an iterator to the end of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="252" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="252" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1aa12a14310d61bf5ca27e9ea218bef23a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1adf23600a1fe8cb879fe29ee366f6bb9d" kindref="member">const_iterator</ref></type>
        <definition>const_iterator gmx::ArrayRef&lt; T &gt;::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns an iterator to the end of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="254" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="254" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1afaa41909f88101b82f0610d7b492171b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1a0a3dbf927d466898190de4a40584e96a" kindref="member">reverse_iterator</ref></type>
        <definition>reverse_iterator gmx::ArrayRef&lt; T &gt;::rbegin</definition>
        <argsstring>()</argsstring>
        <name>rbegin</name>
        <briefdescription>
<para>Returns an iterator to the reverse beginning of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="256" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="256" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a0737f909186ce4a199b937be3e2794a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1af942afb4b73e5d3071f8d55e0a820595" kindref="member">const_reverse_iterator</ref></type>
        <definition>const_reverse_iterator gmx::ArrayRef&lt; T &gt;::rbegin</definition>
        <argsstring>() const </argsstring>
        <name>rbegin</name>
        <briefdescription>
<para>Returns an iterator to the reverse beginning of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="258" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="258" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a1d57c07bec3e301b5ec7cbf3ec19e9a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1a0a3dbf927d466898190de4a40584e96a" kindref="member">reverse_iterator</ref></type>
        <definition>reverse_iterator gmx::ArrayRef&lt; T &gt;::rend</definition>
        <argsstring>()</argsstring>
        <name>rend</name>
        <briefdescription>
<para>Returns an iterator to the reverse end of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="260" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="260" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a516bbdf9ce75c685ad7568c509cf8388" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1af942afb4b73e5d3071f8d55e0a820595" kindref="member">const_reverse_iterator</ref></type>
        <definition>const_reverse_iterator gmx::ArrayRef&lt; T &gt;::rend</definition>
        <argsstring>() const </argsstring>
        <name>rend</name>
        <briefdescription>
<para>Returns an iterator to the reverse end of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="262" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="262" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a064803b42a30e450dba3e20cc16b87d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1a12524b640e7173078bb983a450022346" kindref="member">size_type</ref></type>
        <definition>size_type gmx::ArrayRef&lt; T &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the size of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="265" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="265" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1aa8f4798e07e54a2ceb053ccd1f8ad65e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1a12524b640e7173078bb983a450022346" kindref="member">size_type</ref></type>
        <definition>size_type gmx::ArrayRef&lt; T &gt;::capacity</definition>
        <argsstring>() const </argsstring>
        <name>capacity</name>
        <briefdescription>
<para>Identical to <ref refid="classgmx_1_1ArrayRef_1a064803b42a30e450dba3e20cc16b87d8" kindref="member">size()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="267" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="267" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a556df99ffcf4512ae8be245d6af788bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::ArrayRef&lt; T &gt;::empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
<para>Whether the container is empty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="269" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="269" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a9203fd688b18f5236d86912be09d8329" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1aaa7f6ef205b5793ab33635f887e9f0bb" kindref="member">reference</ref></type>
        <definition>reference gmx::ArrayRef&lt; T &gt;::operator[]</definition>
        <argsstring>(size_type n)</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef_1a12524b640e7173078bb983a450022346" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Access container element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="272" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="272" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a577b0173266f433cf33d58972cd4c15e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1aa523e3e573d94dfb5f1c72b884c4174b" kindref="member">const_reference</ref></type>
        <definition>const_reference gmx::ArrayRef&lt; T &gt;::operator[]</definition>
        <argsstring>(size_type n) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef_1a12524b640e7173078bb983a450022346" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Access container element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="274" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="274" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a21bc0894381c49082d9d3857121fbc2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1aaa7f6ef205b5793ab33635f887e9f0bb" kindref="member">reference</ref></type>
        <definition>reference gmx::ArrayRef&lt; T &gt;::at</definition>
        <argsstring>(size_type n)</argsstring>
        <name>at</name>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef_1a12524b640e7173078bb983a450022346" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Access container element (throws on out-of-range error). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="276" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="276" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a5426ff4aec6003dea630abaf226a807b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1aa523e3e573d94dfb5f1c72b884c4174b" kindref="member">const_reference</ref></type>
        <definition>const_reference gmx::ArrayRef&lt; T &gt;::at</definition>
        <argsstring>(size_type n) const </argsstring>
        <name>at</name>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef_1a12524b640e7173078bb983a450022346" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Access container element (throws on out-of-range error). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="285" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="285" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1aedf1f9b7fe5265b531d9c54a2363b651" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1aaa7f6ef205b5793ab33635f887e9f0bb" kindref="member">reference</ref></type>
        <definition>reference gmx::ArrayRef&lt; T &gt;::front</definition>
        <argsstring>()</argsstring>
        <name>front</name>
        <briefdescription>
<para>Returns the first element in the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="294" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="294" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a1e76a4a2dba52a899bf5ef1b01966795" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1aa523e3e573d94dfb5f1c72b884c4174b" kindref="member">const_reference</ref></type>
        <definition>const_reference gmx::ArrayRef&lt; T &gt;::front</definition>
        <argsstring>() const </argsstring>
        <name>front</name>
        <briefdescription>
<para>Returns the first element in the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="296" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="296" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1acff2beca746bc2e58db3e4757e91b94f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1aaa7f6ef205b5793ab33635f887e9f0bb" kindref="member">reference</ref></type>
        <definition>reference gmx::ArrayRef&lt; T &gt;::back</definition>
        <argsstring>()</argsstring>
        <name>back</name>
        <briefdescription>
<para>Returns the last element in the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="298" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="298" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a43dbe6d5929f3b4d90d11f039c59b046" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1aa523e3e573d94dfb5f1c72b884c4174b" kindref="member">const_reference</ref></type>
        <definition>const_reference gmx::ArrayRef&lt; T &gt;::back</definition>
        <argsstring>() const </argsstring>
        <name>back</name>
        <briefdescription>
<para>Returns the last element in the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="300" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="300" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1ab4f339d0bb60d5ed1a9773224ace093b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1a7d3b7bcef0b244efc5d3da2fe2278390" kindref="member">pointer</ref></type>
        <definition>pointer gmx::ArrayRef&lt; T &gt;::data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
<para>Returns a raw pointer to the contents of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="303" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="303" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a6837e04c0da3d479df17e463f5ec50bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1a813d9d7b5e1974c2062e990e096aca62" kindref="member">const_pointer</ref></type>
        <definition>const_pointer gmx::ArrayRef&lt; T &gt;::data</definition>
        <argsstring>() const </argsstring>
        <name>data</name>
        <briefdescription>
<para>Returns a raw pointer to the contents of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="305" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="305" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a6b0d543799e64b307d4832545e16f6f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::ArrayRef&lt; T &gt;::swap</definition>
        <argsstring>(ArrayRef&lt; T &gt; &amp;other)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Swaps referenced memory with the other object. </para>        </briefdescription>
        <detaileddescription>
<para>The actual memory areas are not modified, only the references are swapped. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="313" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="313" bodyend="317"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1ae905f4ab01235b08d30643a050e76413" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>&lt; T &gt;</type>
        <definition>ArrayRef&lt; T &gt; arrayRefFromPointers</definition>
        <argsstring>(T *begin, T *end)</argsstring>
        <name>arrayRefFromPointers</name>
        <param>
          <type>T *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Constructs a reference to a particular range from two pointers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the beginning of a range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the end of a range.</para></parameterdescription>
</parameteritem>
</parameterlist>
Passed pointers must remain valid for the lifetime of this object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="532" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="532" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a24928de2a6e2169edd97fc08e557cf95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>&lt; T &gt;</type>
        <definition>ArrayRef&lt; T &gt; arrayRefFromArray</definition>
        <argsstring>(T *begin, size_t size)</argsstring>
        <name>arrayRefFromArray</name>
        <param>
          <type>T *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Constructs a reference to an array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the beginning of the array. May be NULL if <computeroutput>size</computeroutput> is zero. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in the array.</para></parameterdescription>
</parameteritem>
</parameterlist>
Passed pointer must remain valid for the lifetime of this object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="539" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="539" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a106ca53d78cc08713430fd845afe8096" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>&lt; T &gt;</type>
        <definition>ArrayRef&lt; T &gt; arrayRefFromVector</definition>
        <argsstring>(typename std::vector&lt; T &gt;::iterator begin, typename std::vector&lt; T &gt;::iterator end)</argsstring>
        <name>arrayRefFromVector</name>
        <param>
          <type>typename std::vector&lt; T &gt;::<ref refid="classgmx_1_1ArrayRef_1a4340dee5b6fad7c05e609f156ea54958" kindref="member">iterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type>typename std::vector&lt; T &gt;::<ref refid="classgmx_1_1ArrayRef_1a4340dee5b6fad7c05e609f156ea54958" kindref="member">iterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Constructs a reference to a particular range in a std::vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator to the beginning of a range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator to the end of a range.</para></parameterdescription>
</parameteritem>
</parameterlist>
The referenced vector must remain valid and not be reallocated for the lifetime of this object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="546" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="546" bodyend="550"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>STL-like container for an interface to a C array (or part of a std::vector). </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type of elements.</para></parameterdescription>
</parameteritem>
</parameterlist>
This class provides an interface similar to <computeroutput>std::vector&lt;T&gt;</computeroutput>, with the following main differences:<itemizedlist>
<listitem><para>This class does not have its own storage. Instead, it references an existing array of values (either a C-style array or part of an existing std::vector&lt;T&gt;).</para></listitem><listitem><para>It is only possible to modify the values themselves through <ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>; it is not possible to add or remove values.</para></listitem><listitem><para>Copying objects of this type is cheap, and the copies behave identically to the original object: the copy references the same set of values.</para></listitem></itemizedlist>
</para><para>This class is useful for writing wrappers that expose a different view of the internal data stored as a single vector/array.</para><para>Methods in this class do not throw, except where indicated.</para><para>Note that due to a Doxygen limitation, the constructor that takes a C array whose size is known at compile time does not appear in the documentation.</para><para><xrefsect id="todo_1_todo000066"><xreftitle>Todo</xreftitle><xrefdescription><para>This class is not complete. At least, it should be possible to convert an <ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref> to a <ref refid="classgmx_1_1ConstArrayRef" kindref="compound">ConstArrayRef</ref>. There are likely also methods missing (not required for current usage).</para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/mdlib/simulationsignal.h" line="70" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/mdlib/simulationsignal.h" bodystart="70" bodyend="-1"/>
    <listofallmembers>
      <member refid="classgmx_1_1ArrayRef_1ad114f59f4d3ab734ba5460ead18a110e" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>ArrayRef</name></member>
      <member refid="classgmx_1_1ArrayRef_1a1d71d8ba14566b55336d666b3666684c" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>ArrayRef</name></member>
      <member refid="classgmx_1_1ArrayRef_1aed10da86fd23acfb22a64c7c6699a5e3" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>ArrayRef</name></member>
      <member refid="classgmx_1_1ArrayRef_1aec0cec46b6d877523cd518b0d06d0f6e" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>ArrayRef</name></member>
      <member refid="classgmx_1_1ArrayRef_1a24928de2a6e2169edd97fc08e557cf95" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>arrayRefFromArray</name></member>
      <member refid="classgmx_1_1ArrayRef_1ae905f4ab01235b08d30643a050e76413" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>arrayRefFromPointers</name></member>
      <member refid="classgmx_1_1ArrayRef_1a106ca53d78cc08713430fd845afe8096" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>arrayRefFromVector</name></member>
      <member refid="classgmx_1_1ArrayRef_1a21bc0894381c49082d9d3857121fbc2a" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>at</name></member>
      <member refid="classgmx_1_1ArrayRef_1a5426ff4aec6003dea630abaf226a807b" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>at</name></member>
      <member refid="classgmx_1_1ArrayRef_1acff2beca746bc2e58db3e4757e91b94f" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>back</name></member>
      <member refid="classgmx_1_1ArrayRef_1a43dbe6d5929f3b4d90d11f039c59b046" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>back</name></member>
      <member refid="classgmx_1_1ArrayRef_1a15d06553caf3bfa83ff170eb36c9b191" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>begin</name></member>
      <member refid="classgmx_1_1ArrayRef_1a872d5362680ee5a85b161f5a53a1e39b" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>begin</name></member>
      <member refid="classgmx_1_1ArrayRef_1a0526d023b3ebecdded53563aaefd2fe3" prot="private" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>begin_</name></member>
      <member refid="classgmx_1_1ArrayRef_1aa8f4798e07e54a2ceb053ccd1f8ad65e" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>capacity</name></member>
      <member refid="classgmx_1_1ArrayRef_1adf23600a1fe8cb879fe29ee366f6bb9d" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>const_iterator</name></member>
      <member refid="classgmx_1_1ArrayRef_1a813d9d7b5e1974c2062e990e096aca62" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>const_pointer</name></member>
      <member refid="classgmx_1_1ArrayRef_1aa523e3e573d94dfb5f1c72b884c4174b" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>const_reference</name></member>
      <member refid="classgmx_1_1ArrayRef_1af942afb4b73e5d3071f8d55e0a820595" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>const_reverse_iterator</name></member>
      <member refid="classgmx_1_1ArrayRef_1ab4f339d0bb60d5ed1a9773224ace093b" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>data</name></member>
      <member refid="classgmx_1_1ArrayRef_1a6837e04c0da3d479df17e463f5ec50bd" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>data</name></member>
      <member refid="classgmx_1_1ArrayRef_1a8895b8b6139fe648d37ea4e7e6bab050" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>difference_type</name></member>
      <member refid="classgmx_1_1ArrayRef_1a556df99ffcf4512ae8be245d6af788bf" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>empty</name></member>
      <member refid="classgmx_1_1ArrayRef_1a4e59e2f04a3a426aa910b8aa716ee67e" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>end</name></member>
      <member refid="classgmx_1_1ArrayRef_1aa12a14310d61bf5ca27e9ea218bef23a" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>end</name></member>
      <member refid="classgmx_1_1ArrayRef_1a95003c0bc87c2a0db30f98c9fd36aaef" prot="private" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>end_</name></member>
      <member refid="classgmx_1_1ArrayRef_1a5cf1cefcaeda1d24c43308d6717d2c40" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>fromArray</name></member>
      <member refid="classgmx_1_1ArrayRef_1abf5e09153e9a95b182f90e82444cad55" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>fromPointers</name></member>
      <member refid="classgmx_1_1ArrayRef_1accf9f5830325528c5aad24f877b20e82" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>fromVector</name></member>
      <member refid="classgmx_1_1ArrayRef_1aedf1f9b7fe5265b531d9c54a2363b651" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>front</name></member>
      <member refid="classgmx_1_1ArrayRef_1a1e76a4a2dba52a899bf5ef1b01966795" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>front</name></member>
      <member refid="classgmx_1_1ArrayRef_1a4340dee5b6fad7c05e609f156ea54958" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>iterator</name></member>
      <member refid="classgmx_1_1ArrayRef_1a9203fd688b18f5236d86912be09d8329" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>operator[]</name></member>
      <member refid="classgmx_1_1ArrayRef_1a577b0173266f433cf33d58972cd4c15e" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>operator[]</name></member>
      <member refid="classgmx_1_1ArrayRef_1a7d3b7bcef0b244efc5d3da2fe2278390" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>pointer</name></member>
      <member refid="classgmx_1_1ArrayRef_1afaa41909f88101b82f0610d7b492171b" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>rbegin</name></member>
      <member refid="classgmx_1_1ArrayRef_1a0737f909186ce4a199b937be3e2794a7" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>rbegin</name></member>
      <member refid="classgmx_1_1ArrayRef_1aaa7f6ef205b5793ab33635f887e9f0bb" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>reference</name></member>
      <member refid="classgmx_1_1ArrayRef_1a1d57c07bec3e301b5ec7cbf3ec19e9a2" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>rend</name></member>
      <member refid="classgmx_1_1ArrayRef_1a516bbdf9ce75c685ad7568c509cf8388" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>rend</name></member>
      <member refid="classgmx_1_1ArrayRef_1a0a3dbf927d466898190de4a40584e96a" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>reverse_iterator</name></member>
      <member refid="classgmx_1_1ArrayRef_1a064803b42a30e450dba3e20cc16b87d8" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>size</name></member>
      <member refid="classgmx_1_1ArrayRef_1a12524b640e7173078bb983a450022346" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>size_type</name></member>
      <member refid="classgmx_1_1ArrayRef_1a6b0d543799e64b307d4832545e16f6f7" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>swap</name></member>
      <member refid="classgmx_1_1ArrayRef_1a830f66ddf148488309fe6de17574eaa7" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="cstringutil_8h" kind="file">
    <compoundname>cstringutil.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="basedefinitions_8h" local="yes">gromacs/utility/basedefinitions.h</includes>
    <includedby refid="gmxfio_8h" local="yes">src/gromacs/fileio/gmxfio.h</includedby>
    <includedby refid="filenm_8cpp" local="yes">src/gromacs/commandline/filenm.cpp</includedby>
    <includedby refid="pargs_8cpp" local="yes">src/gromacs/commandline/pargs.cpp</includedby>
    <includedby refid="viewit_8cpp" local="yes">src/gromacs/commandline/viewit.cpp</includedby>
    <includedby refid="domdec_8cpp" local="yes">src/gromacs/domdec/domdec.cpp</includedby>
    <includedby refid="domdec__topology_8cpp" local="yes">src/gromacs/domdec/domdec_topology.cpp</includedby>
    <includedby refid="edsam_8cpp" local="yes">src/gromacs/essentialdynamics/edsam.cpp</includedby>
    <includedby refid="pme-load-balancing_8cpp" local="yes">src/gromacs/ewald/pme-load-balancing.cpp</includedby>
    <includedby refid="checkpoint_8cpp" local="yes">src/gromacs/fileio/checkpoint.cpp</includedby>
    <includedby refid="confio_8cpp" local="yes">src/gromacs/fileio/confio.cpp</includedby>
    <includedby refid="espio_8cpp" local="yes">src/gromacs/fileio/espio.cpp</includedby>
    <includedby refid="filetypes_8cpp" local="yes">src/gromacs/fileio/filetypes.cpp</includedby>
    <includedby refid="g96io_8cpp" local="yes">src/gromacs/fileio/g96io.cpp</includedby>
    <includedby refid="groio_8cpp" local="yes">src/gromacs/fileio/groio.cpp</includedby>
    <includedby refid="matio_8cpp" local="yes">src/gromacs/fileio/matio.cpp</includedby>
    <includedby refid="pdbio_8cpp" local="yes">src/gromacs/fileio/pdbio.cpp</includedby>
    <includedby refid="readinp_8cpp" local="yes">src/gromacs/fileio/readinp.cpp</includedby>
    <includedby refid="tests_2confio_8cpp" local="yes">src/gromacs/fileio/tests/confio.cpp</includedby>
    <includedby refid="tpxio_8cpp" local="yes">src/gromacs/fileio/tpxio.cpp</includedby>
    <includedby refid="warninp_8cpp" local="yes">src/gromacs/fileio/warninp.cpp</includedby>
    <includedby refid="xvgr_8cpp" local="yes">src/gromacs/fileio/xvgr.cpp</includedby>
    <includedby refid="gmx__anadock_8cpp" local="yes">src/gromacs/gmxana/gmx_anadock.cpp</includedby>
    <includedby refid="gmx__anaeig_8cpp" local="yes">src/gromacs/gmxana/gmx_anaeig.cpp</includedby>
    <includedby refid="gmx__bar_8cpp" local="yes">src/gromacs/gmxana/gmx_bar.cpp</includedby>
    <includedby refid="gmx__chi_8cpp" local="yes">src/gromacs/gmxana/gmx_chi.cpp</includedby>
    <includedby refid="gmx__cluster_8cpp" local="yes">src/gromacs/gmxana/gmx_cluster.cpp</includedby>
    <includedby refid="gmx__clustsize_8cpp" local="yes">src/gromacs/gmxana/gmx_clustsize.cpp</includedby>
    <includedby refid="gmx__confrms_8cpp" local="yes">src/gromacs/gmxana/gmx_confrms.cpp</includedby>
    <includedby refid="gmx__covar_8cpp" local="yes">src/gromacs/gmxana/gmx_covar.cpp</includedby>
    <includedby refid="gmx__current_8cpp" local="yes">src/gromacs/gmxana/gmx_current.cpp</includedby>
    <includedby refid="gmx__density_8cpp" local="yes">src/gromacs/gmxana/gmx_density.cpp</includedby>
    <includedby refid="gmx__densmap_8cpp" local="yes">src/gromacs/gmxana/gmx_densmap.cpp</includedby>
    <includedby refid="gmx__densorder_8cpp" local="yes">src/gromacs/gmxana/gmx_densorder.cpp</includedby>
    <includedby refid="gmx__dipoles_8cpp" local="yes">src/gromacs/gmxana/gmx_dipoles.cpp</includedby>
    <includedby refid="gmx__do__dssp_8cpp" local="yes">src/gromacs/gmxana/gmx_do_dssp.cpp</includedby>
    <includedby refid="gmx__editconf_8cpp" local="yes">src/gromacs/gmxana/gmx_editconf.cpp</includedby>
    <includedby refid="gmx__eneconv_8cpp" local="yes">src/gromacs/gmxana/gmx_eneconv.cpp</includedby>
    <includedby refid="gmx__enemat_8cpp" local="yes">src/gromacs/gmxana/gmx_enemat.cpp</includedby>
    <includedby refid="gmx__energy_8cpp" local="yes">src/gromacs/gmxana/gmx_energy.cpp</includedby>
    <includedby refid="gmx__genion_8cpp" local="yes">src/gromacs/gmxana/gmx_genion.cpp</includedby>
    <includedby refid="gmx__genpr_8cpp" local="yes">src/gromacs/gmxana/gmx_genpr.cpp</includedby>
    <includedby refid="gmx__hbond_8cpp" local="yes">src/gromacs/gmxana/gmx_hbond.cpp</includedby>
    <includedby refid="gmx__hydorder_8cpp" local="yes">src/gromacs/gmxana/gmx_hydorder.cpp</includedby>
    <includedby refid="gmx__make__edi_8cpp" local="yes">src/gromacs/gmxana/gmx_make_edi.cpp</includedby>
    <includedby refid="gmx__make__ndx_8cpp" local="yes">src/gromacs/gmxana/gmx_make_ndx.cpp</includedby>
    <includedby refid="gmx__mdmat_8cpp" local="yes">src/gromacs/gmxana/gmx_mdmat.cpp</includedby>
    <includedby refid="gmx__mindist_8cpp" local="yes">src/gromacs/gmxana/gmx_mindist.cpp</includedby>
    <includedby refid="gmx__mk__angndx_8cpp" local="yes">src/gromacs/gmxana/gmx_mk_angndx.cpp</includedby>
    <includedby refid="gmx__morph_8cpp" local="yes">src/gromacs/gmxana/gmx_morph.cpp</includedby>
    <includedby refid="gmx__nmens_8cpp" local="yes">src/gromacs/gmxana/gmx_nmens.cpp</includedby>
    <includedby refid="gmx__nmtraj_8cpp" local="yes">src/gromacs/gmxana/gmx_nmtraj.cpp</includedby>
    <includedby refid="gmx__order_8cpp" local="yes">src/gromacs/gmxana/gmx_order.cpp</includedby>
    <includedby refid="gmx__polystat_8cpp" local="yes">src/gromacs/gmxana/gmx_polystat.cpp</includedby>
    <includedby refid="gmx__potential_8cpp" local="yes">src/gromacs/gmxana/gmx_potential.cpp</includedby>
    <includedby refid="gmx__principal_8cpp" local="yes">src/gromacs/gmxana/gmx_principal.cpp</includedby>
    <includedby refid="gmx__rmsdist_8cpp" local="yes">src/gromacs/gmxana/gmx_rmsdist.cpp</includedby>
    <includedby refid="gmx__rmsf_8cpp" local="yes">src/gromacs/gmxana/gmx_rmsf.cpp</includedby>
    <includedby refid="gmx__saltbr_8cpp" local="yes">src/gromacs/gmxana/gmx_saltbr.cpp</includedby>
    <includedby refid="gmx__sans_8cpp" local="yes">src/gromacs/gmxana/gmx_sans.cpp</includedby>
    <includedby refid="gmx__sorient_8cpp" local="yes">src/gromacs/gmxana/gmx_sorient.cpp</includedby>
    <includedby refid="gmx__spatial_8cpp" local="yes">src/gromacs/gmxana/gmx_spatial.cpp</includedby>
    <includedby refid="gmx__spol_8cpp" local="yes">src/gromacs/gmxana/gmx_spol.cpp</includedby>
    <includedby refid="gmx__traj_8cpp" local="yes">src/gromacs/gmxana/gmx_traj.cpp</includedby>
    <includedby refid="gmx__tune__pme_8cpp" local="yes">src/gromacs/gmxana/gmx_tune_pme.cpp</includedby>
    <includedby refid="gmx__vanhove_8cpp" local="yes">src/gromacs/gmxana/gmx_vanhove.cpp</includedby>
    <includedby refid="gmx__wham_8cpp" local="yes">src/gromacs/gmxana/gmx_wham.cpp</includedby>
    <includedby refid="gmx__wheel_8cpp" local="yes">src/gromacs/gmxana/gmx_wheel.cpp</includedby>
    <includedby refid="gmx__xpm2ps_8cpp" local="yes">src/gromacs/gmxana/gmx_xpm2ps.cpp</includedby>
    <includedby refid="nrama_8cpp" local="yes">src/gromacs/gmxana/nrama.cpp</includedby>
    <includedby refid="nsfactor_8cpp" local="yes">src/gromacs/gmxana/nsfactor.cpp</includedby>
    <includedby refid="sfactor_8cpp" local="yes">src/gromacs/gmxana/sfactor.cpp</includedby>
    <includedby refid="network_8cpp" local="yes">src/gromacs/gmxlib/network.cpp</includedby>
    <includedby refid="nb__kernel_8cpp" local="yes">src/gromacs/gmxlib/nonbonded/nb_kernel.cpp</includedby>
    <includedby refid="nonbonded_8cpp" local="yes">src/gromacs/gmxlib/nonbonded/nonbonded.cpp</includedby>
    <includedby refid="add__par_8cpp" local="yes">src/gromacs/gmxpreprocess/add_par.cpp</includedby>
    <includedby refid="fflibutil_8cpp" local="yes">src/gromacs/gmxpreprocess/fflibutil.cpp</includedby>
    <includedby refid="gen__ad_8cpp" local="yes">src/gromacs/gmxpreprocess/gen_ad.cpp</includedby>
    <includedby refid="gen__vsite_8cpp" local="yes">src/gromacs/gmxpreprocess/gen_vsite.cpp</includedby>
    <includedby refid="genconf_8cpp" local="yes">src/gromacs/gmxpreprocess/genconf.cpp</includedby>
    <includedby refid="genhydro_8cpp" local="yes">src/gromacs/gmxpreprocess/genhydro.cpp</includedby>
    <includedby refid="gmxcpp_8cpp" local="yes">src/gromacs/gmxpreprocess/gmxcpp.cpp</includedby>
    <includedby refid="gpp__bond__atomtype_8cpp" local="yes">src/gromacs/gmxpreprocess/gpp_bond_atomtype.cpp</includedby>
    <includedby refid="gromacs_2gmxpreprocess_2grompp_8cpp" local="yes">src/gromacs/gmxpreprocess/grompp.cpp</includedby>
    <includedby refid="h__db_8cpp" local="yes">src/gromacs/gmxpreprocess/h_db.cpp</includedby>
    <includedby refid="hackblock_8cpp" local="yes">src/gromacs/gmxpreprocess/hackblock.cpp</includedby>
    <includedby refid="hizzie_8cpp" local="yes">src/gromacs/gmxpreprocess/hizzie.cpp</includedby>
    <includedby refid="insert-molecules_8cpp" local="yes">src/gromacs/gmxpreprocess/insert-molecules.cpp</includedby>
    <includedby refid="nm2type_8cpp" local="yes">src/gromacs/gmxpreprocess/nm2type.cpp</includedby>
    <includedby refid="pdb2gmx_8cpp" local="yes">src/gromacs/gmxpreprocess/pdb2gmx.cpp</includedby>
    <includedby refid="pdb2top_8cpp" local="yes">src/gromacs/gmxpreprocess/pdb2top.cpp</includedby>
    <includedby refid="pgutil_8cpp" local="yes">src/gromacs/gmxpreprocess/pgutil.cpp</includedby>
    <includedby refid="read-conformation_8cpp" local="yes">src/gromacs/gmxpreprocess/read-conformation.cpp</includedby>
    <includedby refid="readir_8cpp" local="yes">src/gromacs/gmxpreprocess/readir.cpp</includedby>
    <includedby refid="readpull_8cpp" local="yes">src/gromacs/gmxpreprocess/readpull.cpp</includedby>
    <includedby refid="readrot_8cpp" local="yes">src/gromacs/gmxpreprocess/readrot.cpp</includedby>
    <includedby refid="resall_8cpp" local="yes">src/gromacs/gmxpreprocess/resall.cpp</includedby>
    <includedby refid="solvate_8cpp" local="yes">src/gromacs/gmxpreprocess/solvate.cpp</includedby>
    <includedby refid="specbond_8cpp" local="yes">src/gromacs/gmxpreprocess/specbond.cpp</includedby>
    <includedby refid="ter__db_8cpp" local="yes">src/gromacs/gmxpreprocess/ter_db.cpp</includedby>
    <includedby refid="tomorse_8cpp" local="yes">src/gromacs/gmxpreprocess/tomorse.cpp</includedby>
    <includedby refid="topdirs_8cpp" local="yes">src/gromacs/gmxpreprocess/topdirs.cpp</includedby>
    <includedby refid="topio_8cpp" local="yes">src/gromacs/gmxpreprocess/topio.cpp</includedby>
    <includedby refid="toppush_8cpp" local="yes">src/gromacs/gmxpreprocess/toppush.cpp</includedby>
    <includedby refid="vsite__parm_8cpp" local="yes">src/gromacs/gmxpreprocess/vsite_parm.cpp</includedby>
    <includedby refid="x2top_8cpp" local="yes">src/gromacs/gmxpreprocess/x2top.cpp</includedby>
    <includedby refid="xlate_8cpp" local="yes">src/gromacs/gmxpreprocess/xlate.cpp</includedby>
    <includedby refid="gpu__utils__ocl_8cpp" local="yes">src/gromacs/gpu_utils/gpu_utils_ocl.cpp</includedby>
    <includedby refid="ocl__compiler_8cpp" local="yes">src/gromacs/gpu_utils/ocl_compiler.cpp</includedby>
    <includedby refid="detecthardware_8cpp" local="yes">src/gromacs/hardware/detecthardware.cpp</includedby>
    <includedby refid="units_8cpp" local="yes">src/gromacs/math/units.cpp</includedby>
    <includedby refid="clincs_8cpp" local="yes">src/gromacs/mdlib/clincs.cpp</includedby>
    <includedby refid="coupling_8cpp" local="yes">src/gromacs/mdlib/coupling.cpp</includedby>
    <includedby refid="ebin_8cpp" local="yes">src/gromacs/mdlib/ebin.cpp</includedby>
    <includedby refid="force_8cpp" local="yes">src/gromacs/mdlib/force.cpp</includedby>
    <includedby refid="forcerec_8cpp" local="yes">src/gromacs/mdlib/forcerec.cpp</includedby>
    <includedby refid="gmx__omp__nthreads_8cpp" local="yes">src/gromacs/mdlib/gmx_omp_nthreads.cpp</includedby>
    <includedby refid="main_8cpp" local="yes">src/gromacs/mdlib/main.cpp</includedby>
    <includedby refid="md__support_8cpp" local="yes">src/gromacs/mdlib/md_support.cpp</includedby>
    <includedby refid="minimize_8cpp" local="yes">src/gromacs/mdlib/minimize.cpp</includedby>
    <includedby refid="nbnxn__ocl_8cpp" local="yes">src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl.cpp</includedby>
    <includedby refid="nbnxn__ocl__data__mgmt_8cpp" local="yes">src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_data_mgmt.cpp</includedby>
    <includedby refid="nbnxn__ocl__jit__support_8cpp" local="yes">src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_jit_support.cpp</includedby>
    <includedby refid="shellfc_8cpp" local="yes">src/gromacs/mdlib/shellfc.cpp</includedby>
    <includedby refid="sim__util_8cpp" local="yes">src/gromacs/mdlib/sim_util.cpp</includedby>
    <includedby refid="tpi_8cpp" local="yes">src/gromacs/mdlib/tpi.cpp</includedby>
    <includedby refid="wall_8cpp" local="yes">src/gromacs/mdlib/wall.cpp</includedby>
    <includedby refid="threadaffinity_8cpp" local="yes">src/gromacs/mdrunutility/threadaffinity.cpp</includedby>
    <includedby refid="inputrec_8cpp" local="yes">src/gromacs/mdtypes/inputrec.cpp</includedby>
    <includedby refid="basicoptions_8cpp" local="yes">src/gromacs/options/basicoptions.cpp</includedby>
    <includedby refid="pull_8cpp" local="yes">src/gromacs/pulling/pull.cpp</includedby>
    <includedby refid="params_8cpp" local="yes">src/gromacs/selection/params.cpp</includedby>
    <includedby refid="parsetree_8cpp" local="yes">src/gromacs/selection/parsetree.cpp</includedby>
    <includedby refid="scanner__internal_8cpp" local="yes">src/gromacs/selection/scanner_internal.cpp</includedby>
    <includedby refid="selmethod_8cpp" local="yes">src/gromacs/selection/selmethod.cpp</includedby>
    <includedby refid="sm__keywords_8cpp" local="yes">src/gromacs/selection/sm_keywords.cpp</includedby>
    <includedby refid="sm__position_8cpp" local="yes">src/gromacs/selection/sm_position.cpp</includedby>
    <includedby refid="toputils_8cpp" local="yes">src/gromacs/selection/tests/toputils.cpp</includedby>
    <includedby refid="gromacs_2swap_2swapcoords_8cpp" local="yes">src/gromacs/swap/swapcoords.cpp</includedby>
    <includedby refid="forcetable_8cpp" local="yes">src/gromacs/tables/forcetable.cpp</includedby>
    <includedby refid="wallcycle_8cpp" local="yes">src/gromacs/timing/wallcycle.cpp</includedby>
    <includedby refid="compare_8cpp" local="yes">src/gromacs/tools/compare.cpp</includedby>
    <includedby refid="convert__tpr_8cpp" local="yes">src/gromacs/tools/convert_tpr.cpp</includedby>
    <includedby refid="atomprop_8cpp" local="yes">src/gromacs/topology/atomprop.cpp</includedby>
    <includedby refid="index_8cpp" local="yes">src/gromacs/topology/index.cpp</includedby>
    <includedby refid="residuetypes_8cpp" local="yes">src/gromacs/topology/residuetypes.cpp</includedby>
    <includedby refid="symtab_8cpp" local="yes">src/gromacs/topology/symtab.cpp</includedby>
    <includedby refid="runnercommon_8cpp" local="yes">src/gromacs/trajectoryanalysis/runnercommon.cpp</includedby>
    <includedby refid="basenetwork_8cpp" local="yes">src/gromacs/utility/basenetwork.cpp</includedby>
    <includedby refid="cstringutil_8cpp" local="yes">src/gromacs/utility/cstringutil.cpp</includedby>
    <includedby refid="fatalerror_8cpp" local="yes">src/gromacs/utility/fatalerror.cpp</includedby>
    <includedby refid="futil_8cpp" local="yes">src/gromacs/utility/futil.cpp</includedby>
    <includedby refid="gmxomp_8cpp" local="yes">src/gromacs/utility/gmxomp.cpp</includedby>
    <includedby refid="pleasecite_8cpp" local="yes">src/gromacs/utility/pleasecite.cpp</includedby>
    <includedby refid="strdb_8cpp" local="yes">src/gromacs/utility/strdb.cpp</includedby>
    <includedby refid="txtdump_8cpp" local="yes">src/gromacs/utility/txtdump.cpp</includedby>
    <includedby refid="md_8cpp" local="yes">src/programs/mdrun/md.cpp</includedby>
    <includedby refid="membed_8cpp" local="yes">src/programs/mdrun/membed.cpp</includedby>
    <includedby refid="runner_8cpp" local="yes">src/programs/mdrun/runner.cpp</includedby>
    <includedby refid="buttons_8cpp" local="yes">src/programs/view/buttons.cpp</includedby>
    <includedby refid="dialogs_8cpp" local="yes">src/programs/view/dialogs.cpp</includedby>
    <includedby refid="fgrid_8cpp" local="yes">src/programs/view/fgrid.cpp</includedby>
    <includedby refid="filter_8cpp" local="yes">src/programs/view/filter.cpp</includedby>
    <includedby refid="manager_8cpp" local="yes">src/programs/view/manager.cpp</includedby>
    <includedby refid="x11_8cpp" local="yes">src/programs/view/x11.cpp</includedby>
    <includedby refid="xdlg_8cpp" local="yes">src/programs/view/xdlg.cpp</includedby>
    <includedby refid="xdlghi_8cpp" local="yes">src/programs/view/xdlghi.cpp</includedby>
    <includedby refid="xdlgitem_8cpp" local="yes">src/programs/view/xdlgitem.cpp</includedby>
    <includedby refid="xutil_8cpp" local="yes">src/programs/view/xutil.cpp</includedby>
    <incdepgraph>
      <node id="22191">
        <label>stdint.h</label>
      </node>
      <node id="22188">
        <label>src/gromacs/utility/cstringutil.h</label>
        <link refid="cstringutil.h"/>
        <childnode refid="22189" relation="include">
        </childnode>
        <childnode refid="22190" relation="include">
        </childnode>
      </node>
      <node id="22190">
        <label>gromacs/utility/basedefinitions.h</label>
        <link refid="basedefinitions_8h"/>
        <childnode refid="22191" relation="include">
        </childnode>
        <childnode refid="22192" relation="include">
        </childnode>
      </node>
      <node id="22189">
        <label>stdio.h</label>
      </node>
      <node id="22192">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="22214">
        <label>src/gromacs/trajectoryanalysis/runnercommon.cpp</label>
        <link refid="runnercommon_8cpp"/>
      </node>
      <node id="22200">
        <label>src/gromacs/mdlib/minimize.cpp</label>
        <link refid="minimize_8cpp"/>
      </node>
      <node id="22197">
        <label>src/gromacs/gmxana/gmx_wham.cpp</label>
        <link refid="gmx__wham_8cpp"/>
      </node>
      <node id="22195">
        <label>src/gromacs/ewald/pme-load-balancing.cpp</label>
        <link refid="pme-load-balancing_8cpp"/>
      </node>
      <node id="22213">
        <label>src/gromacs/swap/swapcoords.cpp</label>
        <link refid="gromacs_2swap_2swapcoords_8cpp"/>
      </node>
      <node id="22193">
        <label>src/gromacs/utility/cstringutil.h</label>
        <link refid="cstringutil.h"/>
        <childnode refid="22194" relation="include">
        </childnode>
        <childnode refid="22195" relation="include">
        </childnode>
        <childnode refid="22196" relation="include">
        </childnode>
        <childnode refid="22197" relation="include">
        </childnode>
        <childnode refid="22198" relation="include">
        </childnode>
        <childnode refid="22199" relation="include">
        </childnode>
        <childnode refid="22200" relation="include">
        </childnode>
        <childnode refid="22201" relation="include">
        </childnode>
        <childnode refid="22202" relation="include">
        </childnode>
        <childnode refid="22203" relation="include">
        </childnode>
        <childnode refid="22204" relation="include">
        </childnode>
        <childnode refid="22205" relation="include">
        </childnode>
        <childnode refid="22206" relation="include">
        </childnode>
        <childnode refid="22207" relation="include">
        </childnode>
        <childnode refid="22208" relation="include">
        </childnode>
        <childnode refid="22209" relation="include">
        </childnode>
        <childnode refid="22210" relation="include">
        </childnode>
        <childnode refid="22211" relation="include">
        </childnode>
        <childnode refid="22212" relation="include">
        </childnode>
        <childnode refid="22213" relation="include">
        </childnode>
        <childnode refid="22214" relation="include">
        </childnode>
        <childnode refid="22215" relation="include">
        </childnode>
        <childnode refid="22216" relation="include">
        </childnode>
      </node>
      <node id="22198">
        <label>src/gromacs/gpu_utils/gpu_utils_ocl.cpp</label>
        <link refid="gpu__utils__ocl_8cpp"/>
      </node>
      <node id="22201">
        <label>src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl.cpp</label>
        <link refid="nbnxn__ocl_8cpp"/>
      </node>
      <node id="22216">
        <label>src/programs/mdrun/runner.cpp</label>
        <link refid="runner_8cpp"/>
      </node>
      <node id="22196">
        <label>src/gromacs/fileio/tests/confio.cpp</label>
        <link refid="tests_2confio_8cpp"/>
      </node>
      <node id="22203">
        <label>src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_jit_support.cpp</label>
        <link refid="nbnxn__ocl__jit__support_8cpp"/>
      </node>
      <node id="22211">
        <label>src/gromacs/selection/sm_position.cpp</label>
        <link refid="sm__position_8cpp"/>
      </node>
      <node id="22207">
        <label>src/gromacs/selection/parsetree.cpp</label>
        <link refid="parsetree_8cpp"/>
      </node>
      <node id="22208">
        <label>src/gromacs/selection/scanner_internal.cpp</label>
        <link refid="scanner__internal_8cpp"/>
      </node>
      <node id="22199">
        <label>src/gromacs/gpu_utils/ocl_compiler.cpp</label>
        <link refid="ocl__compiler_8cpp"/>
      </node>
      <node id="22202">
        <label>src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_data_mgmt.cpp</label>
        <link refid="nbnxn__ocl__data__mgmt_8cpp"/>
      </node>
      <node id="22204">
        <label>src/gromacs/mdlib/tpi.cpp</label>
        <link refid="tpi_8cpp"/>
      </node>
      <node id="22194">
        <label>src/gromacs/domdec/domdec_topology.cpp</label>
        <link refid="domdec__topology_8cpp"/>
      </node>
      <node id="22209">
        <label>src/gromacs/selection/selmethod.cpp</label>
        <link refid="selmethod_8cpp"/>
      </node>
      <node id="22210">
        <label>src/gromacs/selection/sm_keywords.cpp</label>
        <link refid="sm__keywords_8cpp"/>
      </node>
      <node id="22206">
        <label>src/gromacs/selection/params.cpp</label>
        <link refid="params_8cpp"/>
      </node>
      <node id="22205">
        <label>src/gromacs/options/basicoptions.cpp</label>
        <link refid="basicoptions_8cpp"/>
      </node>
      <node id="22212">
        <label>src/gromacs/selection/tests/toputils.cpp</label>
        <link refid="toputils_8cpp"/>
      </node>
      <node id="22215">
        <label>src/gromacs/utility/gmxomp.cpp</label>
        <link refid="gmxomp_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="cstringutil_8h_1ab711666ad09d7f6c0b91576525ea158e" prot="public" static="no">
        <name>CONTINUE</name>
        <initializer>&apos;\\&apos;</initializer>
        <briefdescription>
<para>Continuation character. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="58" column="9" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cstringutil_8h_1a15be34a1d7b93d10f581b60833afca7a" prot="public" static="no">
        <name>COMMENTSIGN</name>
        <initializer>&apos;;&apos;</initializer>
        <briefdescription>
<para>Comment sign to use. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="60" column="9" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cstringutil_8h_1a278cf415676752815cfb411cb0b32802" prot="public" static="no">
        <name>STRLEN</name>
        <initializer>4096</initializer>
        <briefdescription>
<para>Standard size for char* string buffers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="62" column="9" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cstringutil_8h_1a21836ee214b24d91bf3911c0d99f707b" prot="public" static="no">
        <name>GMX_NO_WCMATCH</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Return value for <ref refid="cstringutil_8h_1ae5242279c5f96040a36162574dc97d0c" kindref="member">gmx_wcmatch()</ref> when there is no match. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="127" column="9" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cstringutil_8h_1a7a96d5cf3819b5488f13881771adbb60" prot="public" static="no">
        <name>STEPSTRSIZE</name>
        <initializer>22</initializer>
        <briefdescription>
<para>Minimum size of buffer to pass to <ref refid="cstringutil_8h_1a3cb3397e019fa79f20ec3cfcfb4c81f3" kindref="member">gmx_step_str()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="183" column="9" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cstringutil_8h_1a929ed36fc580abd4984ae5500adbf9c3" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int gmx_string_hash_init</definition>
        <argsstring></argsstring>
        <name>gmx_string_hash_init</name>
        <briefdescription>
<para>Magic hash initialization number from Dan J. </para>        </briefdescription>
        <detaileddescription>
<para>Bernstein. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="131" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="330" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cstringutil_8h_1ac103ab2c7ce56d62340d2f351142ccab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int continuing</definition>
        <argsstring>(char *s)</argsstring>
        <name>continuing</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Strip trailing spaces and if s ends with a <ref refid="cstringutil_8h_1ab711666ad09d7f6c0b91576525ea158e" kindref="member">CONTINUE</ref> remove that too. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>TRUE if s ends with a CONTINUE, FALSE otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="69" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="59" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1a11c0d58b9af1c15dbc58f04c3b1667dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* fgets2</definition>
        <argsstring>(char *s, int n, FILE *stream)</argsstring>
        <name>fgets2</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Reads a line from a stream. </para>        </briefdescription>
        <detaileddescription>
<para>This routine reads a string from stream of max length n, including \0 and zero terminated, without newlines. <computeroutput>s</computeroutput> should be long enough (&gt;= <computeroutput>n</computeroutput>) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="78" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="79" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1a4371bd7d8210d09a110b9642b42b7e7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void strip_comment</definition>
        <argsstring>(char *line)</argsstring>
        <name>strip_comment</name>
        <param>
          <type>char *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Remove portion of a line after a <ref refid="cstringutil_8h_1a15be34a1d7b93d10f581b60833afca7a" kindref="member">COMMENTSIGN</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="81" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="109" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1a74173c7afe5600452edf4956ae58bbe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void upstring</definition>
        <argsstring>(char *str)</argsstring>
        <name>upstring</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Make a string uppercase. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="84" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="125" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1a1d9ff13ca6fbfeed019ff8459a2d7b27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ltrim</definition>
        <argsstring>(char *str)</argsstring>
        <name>ltrim</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Remove leading whitespace from a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="87" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="135" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1a36c31afc53e5a1e87177eff988d6d17e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtrim</definition>
        <argsstring>(char *str)</argsstring>
        <name>rtrim</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Remove trailing whitespace from a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="90" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="159" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1a60ea663401e86ca2a60a29e76c716679" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void trim</definition>
        <argsstring>(char *str)</argsstring>
        <name>trim</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Remove leading and trailing whitespace from a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="93" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="176" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1a075edcfe0f6dfd4ca5e15770d19c2709" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nice_header</definition>
        <argsstring>(FILE *out, const char *fn)</argsstring>
        <name>nice_header</name>
        <param>
          <type>FILE *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
<para>Prints creation time stamp and user information into a file as comments. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="96" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="182" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1ac088a6356a03b85a516823c77e8bf594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_strcasecmp_min</definition>
        <argsstring>(const char *str1, const char *str2)</argsstring>
        <name>gmx_strcasecmp_min</name>
        <param>
          <type>const char *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str2</declname>
        </param>
        <briefdescription>
<para>Version of <ref refid="cstringutil_8h_1a6b201e0b9f999f296778a437ac6249d4" kindref="member">gmx_strcasecmp()</ref> that also ignores &apos;-&apos; and &apos;_&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="99" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="204" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1aa2ea251cda429a6f437ee9c5a5746590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_strncasecmp_min</definition>
        <argsstring>(const char *str1, const char *str2, int n)</argsstring>
        <name>gmx_strncasecmp_min</name>
        <param>
          <type>const char *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Version of <ref refid="cstringutil_8h_1ab7c80209718acf9845ef30405b612d25" kindref="member">gmx_strncasecmp()</ref> that also ignores &apos;-&apos; and &apos;_&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="101" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="230" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1a6b201e0b9f999f296778a437ac6249d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_strcasecmp</definition>
        <argsstring>(const char *str1, const char *str2)</argsstring>
        <name>gmx_strcasecmp</name>
        <param>
          <type>const char *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str2</declname>
        </param>
        <briefdescription>
<para>Case-insensitive strcmp(). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="104" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="259" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1ab7c80209718acf9845ef30405b612d25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_strncasecmp</definition>
        <argsstring>(const char *str1, const char *str2, int n)</argsstring>
        <name>gmx_strncasecmp</name>
        <param>
          <type>const char *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Case-insensitive strncmp(). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="106" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="276" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1a94be9cd5076011714476c26badc7d250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gmx_strdup</definition>
        <argsstring>(const char *src)</argsstring>
        <name>gmx_strdup</name>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Creates a duplicate of <computeroutput>src</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="109" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="299" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1a2a892337fcde247de2e1f1ac5b414d0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gmx_strndup</definition>
        <argsstring>(const char *src, int n)</argsstring>
        <name>gmx_strndup</name>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Duplicates first <computeroutput>n</computeroutput> characters of <computeroutput>src</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="111" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="310" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1ae5242279c5f96040a36162574dc97d0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_wcmatch</definition>
        <argsstring>(const char *pattern, const char *str)</argsstring>
        <name>gmx_wcmatch</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Pattern matching with wildcards. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>Pattern to match against. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>String to match. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on match, GMX_NO_WCMATCH if there is no match.</para></simplesect>
Matches <computeroutput>str</computeroutput> against <computeroutput>pattern</computeroutput>, which may contain * and ? wildcards. All other characters are matched literally. Currently, it is not possible to match literal * or ?. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="124" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="361" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1a8f29e4714f3618996df11a09fbdf820e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int gmx_string_fullhash_func</definition>
        <argsstring>(const char *s, unsigned int hash_init)</argsstring>
        <name>gmx_string_fullhash_func</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>hash_init</declname>
        </param>
        <briefdescription>
<para>Return a hash of the string according to Dan J. Bernsteins algorithm. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>String to calculate hash for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hash_init</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial (or previous) hash value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Updated hash value (hash_init combined with string hash).</para></simplesect>
On the first invocation for a new string, use the constant gmx_string_hash_init for the second argument. If you want to create a hash corresponding to several concatenated strings, provide the returned hash value as hash_init for the second string, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="146" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="334" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1a7551c37dbac76a247a4305b3bea52f0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int gmx_string_hash_func</definition>
        <argsstring>(const char *s, unsigned int hash_init)</argsstring>
        <name>gmx_string_hash_func</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>hash_init</declname>
        </param>
        <briefdescription>
<para>Return a hash of the string according to Dan J. Bernsteins algorithm. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>String to calculate hash for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hash_init</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial (or previous) hash value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Updated hash value (hash_init combined with string hash).</para></simplesect>
Identical to gmx_string_fullhash_func, except that this routine only uses characters for which isalnum(c) is true, and all characters are converted to upper case. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="160" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="346" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1a78512fb6ca46ef3528c91480dfcfba2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* wrap_lines</definition>
        <argsstring>(const char *buf, int line_width, int indent, gmx_bool bIndentFirst)</argsstring>
        <name>wrap_lines</name>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bIndentFirst</declname>
        </param>
        <briefdescription>
<para>Wraps lines, optionally indenting lines. </para>        </briefdescription>
        <detaileddescription>
<para>Wraps lines at <computeroutput>linewidth</computeroutput>, indenting all following lines by <computeroutput>indent</computeroutput> spaces. A temp buffer is allocated and returned, which can be disposed of if no longer needed. If <computeroutput>bIndentFirst</computeroutput> is FALSE, then the first line will not be indented, only the lines that are created due to wapping. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="171" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="425" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1ae4477abec400b014f38cc5389835f742" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gmx_int64_t</type>
        <definition>gmx_int64_t str_to_int64_t</definition>
        <argsstring>(const char *str, char **endptr)</argsstring>
        <name>str_to_int64_t</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>endptr</declname>
        </param>
        <briefdescription>
<para>Convert a string to gmx_int64_t. </para>        </briefdescription>
        <detaileddescription>
<para>This method works as the standard library function strtol(), except that it does not support different bases. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="180" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="529" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1a3cb3397e019fa79f20ec3cfcfb4c81f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gmx_step_str</definition>
        <argsstring>(gmx_int64_t i, char *buf)</argsstring>
        <name>gmx_step_str</name>
        <param>
          <type>gmx_int64_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Prints a gmx_int64_t value in buf and returns the pointer to buf. </para>        </briefdescription>
        <detaileddescription>
<para>buf should be large enough to contain i: STEPSTRSIZE (22) chars. When multiple gmx_int64_t values are printed in the same printf call, be sure to call gmx_step_str with different buffers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="192" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="538" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1a6e9036486ecc3db7965717c1263d2196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parse_digits_from_plain_string</definition>
        <argsstring>(const char *digitstring, int *ndigits, int **digitlist)</argsstring>
        <name>parse_digits_from_plain_string</name>
        <param>
          <type>const char *</type>
          <declname>digitstring</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ndigits</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>digitlist</declname>
        </param>
        <briefdescription>
<para>Construct an array of digits found in the input string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">digitstring</parametername>
</parameternamelist>
<parameterdescription>
<para>String that must contain only digits </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ndigits</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of return array with the values of the digits </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">digitlist</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of digits found in digitstring. Allocated by this function with size *ndigits. Calling code is responsible for deallocation.</para></parameterdescription>
</parameteritem>
</parameterlist>
If digitstring is NULL, then ndigits is set to zero and digitlist to NULL. If digitstring contains a non-digit character, a fatal error results. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="207" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="564" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1a84e7306c4b152ca09f9cf8b892217bd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parse_digits_from_csv_string</definition>
        <argsstring>(const char *digitstring, int *ndigits, int **digitlist)</argsstring>
        <name>parse_digits_from_csv_string</name>
        <param>
          <type>const char *</type>
          <declname>digitstring</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ndigits</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>digitlist</declname>
        </param>
        <briefdescription>
<para>Construct an array of digits from a comma separated input string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">digitstring</parametername>
</parameternamelist>
<parameterdescription>
<para>String that must contain only digits and commas </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ndigits</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of return array with the values of the digits </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">digitlist</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of digits found in digitstring. Allocated by this function with size *ndigits. Calling code is responsible for deallocation.</para></parameterdescription>
</parameteritem>
</parameterlist>
If digitstring is NULL, then ndigits is set to zero and digitlist to NULL. If digitstring contains a non digit-or-comma character, a fatal error results. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="222" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="590" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8h_1a993d674a5511831a274d989927423cb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parse_digits_from_string</definition>
        <argsstring>(const char *digitstring, int *ndigits, int **digitlist)</argsstring>
        <name>parse_digits_from_string</name>
        <param>
          <type>const char *</type>
          <declname>digitstring</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ndigits</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>digitlist</declname>
        </param>
        <briefdescription>
<para>Construct an array of digits an input string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">digitstring</parametername>
</parameternamelist>
<parameterdescription>
<para>String that must contain only digits, or only digits and commas </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ndigits</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of return array with the values of the digits </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">digitlist</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of digits found in digitstring. Allocated by this function with size *ndigits. Calling code is responsible for deallocation. If digitstring is NULL, then ndigits is set to zero and digitlist to NULL. If digitstring contains a non digit-or-comma character, a fatal error results. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h" line="238" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="544" bodyend="562"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generic C string handling functions. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.h"/>
  </compounddef>
</doxygen>

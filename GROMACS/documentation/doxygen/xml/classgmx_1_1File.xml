<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1File" kind="class" prot="public">
    <compoundname>gmx::File</compoundname>
    <innerclass refid="structgmx_1_1File_1_1NotFoundInfo" prot="public">gmx::File::NotFoundInfo</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgmx_1_1File_1a233a2c49b35fcb1b76a25c3321a1e462" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* gmx::File::NotFoundHandler)(const NotFoundInfo &amp;info)</definition>
        <argsstring>)(const NotFoundInfo &amp;info)</argsstring>
        <name>NotFoundHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/path.h" line="121" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/path.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgmx_1_1File_1ab4ec34383c388ca41447a2a99ab32d49" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::File::returnFalseOnError</definition>
        <argsstring>(const NotFoundInfo &amp;info)</argsstring>
        <name>returnFalseOnError</name>
        <param>
          <type>const <ref refid="structgmx_1_1File_1_1NotFoundInfo" kindref="compound">NotFoundInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/path.h" line="117" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/path.cpp" bodystart="457" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1File_1ad23389c512bded5ecfbf07e29fd2c94a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::File::throwOnError</definition>
        <argsstring>(const NotFoundInfo &amp;info)</argsstring>
        <name>throwOnError</name>
        <param>
          <type>const <ref refid="structgmx_1_1File_1_1NotFoundInfo" kindref="compound">NotFoundInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/path.h" line="118" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/path.cpp" bodystart="461" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1File_1ab452ad9fab9f9349057167c14d454ec3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::File::throwOnNotFound</definition>
        <argsstring>(const NotFoundInfo &amp;info)</argsstring>
        <name>throwOnNotFound</name>
        <param>
          <type>const <ref refid="structgmx_1_1File_1_1NotFoundInfo" kindref="compound">NotFoundInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/path.h" line="119" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/path.cpp" bodystart="472" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1File_1a9a5101c3ad3cb3f1837c3c2e0522c711" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::File::exists</definition>
        <argsstring>(const char *filename, NotFoundHandler onNotFound)</argsstring>
        <name>exists</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>NotFoundHandler</type>
          <declname>onNotFound</declname>
        </param>
        <briefdescription>
<para>Checks whether a file exists and is a regular file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> to the file to check. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">onNotFound</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to call when the file does not exists or there is an error accessing it. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>filename</computeroutput> exists and is accessible.</para></simplesect>
Does not throw, unless onNotFound throws. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/path.h" line="133" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/path.cpp" bodystart="482" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1File_1aaa40fbe7dfb4ec04954e3760b7937a3e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::File::exists</definition>
        <argsstring>(const std::string &amp;filename, NotFoundHandler onNotFound)</argsstring>
        <name>exists</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>NotFoundHandler</type>
          <declname>onNotFound</declname>
        </param>
        <briefdescription>
<para>Checks whether a file exists and is a regular file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> to the file to check. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">onNotFound</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to call when the file does not exists or there is an error accessing it. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>filename</computeroutput> exists and is accessible.</para></simplesect>
Does not throw, unless onNotFound throws. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/path.h" line="135" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/path.cpp" bodystart="525" bodyend="528"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgmx_1_1File_1a8f5c4b282b12ecb0bf3183eaad54e58f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::File::File</definition>
        <argsstring>()</argsstring>
        <name>File</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/path.h" line="140" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/path.h" line="99" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/path.h" bodystart="98" bodyend="141"/>
    <listofallmembers>
      <member refid="classgmx_1_1File_1a9a5101c3ad3cb3f1837c3c2e0522c711" prot="public" virt="non-virtual"><scope>gmx::File</scope><name>exists</name></member>
      <member refid="classgmx_1_1File_1aaa40fbe7dfb4ec04954e3760b7937a3e" prot="public" virt="non-virtual"><scope>gmx::File</scope><name>exists</name></member>
      <member refid="classgmx_1_1File_1a8f5c4b282b12ecb0bf3183eaad54e58f" prot="private" virt="non-virtual"><scope>gmx::File</scope><name>File</name></member>
      <member refid="classgmx_1_1File_1a233a2c49b35fcb1b76a25c3321a1e462" prot="public" virt="non-virtual"><scope>gmx::File</scope><name>NotFoundHandler</name></member>
      <member refid="classgmx_1_1File_1ab4ec34383c388ca41447a2a99ab32d49" prot="public" virt="non-virtual"><scope>gmx::File</scope><name>returnFalseOnError</name></member>
      <member refid="classgmx_1_1File_1ad23389c512bded5ecfbf07e29fd2c94a" prot="public" virt="non-virtual"><scope>gmx::File</scope><name>throwOnError</name></member>
      <member refid="classgmx_1_1File_1ab452ad9fab9f9349057167c14d454ec3" prot="public" virt="non-virtual"><scope>gmx::File</scope><name>throwOnNotFound</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

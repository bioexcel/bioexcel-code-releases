<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTest" kind="class" prot="public">
    <compoundname>anonymous_namespace{nbsearch.cpp}::NeighborhoodSearchTest</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Test</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTest_1a2a37c61a86220d3abd2b245f4163ef55" prot="public" static="no" mutable="no">
        <type><ref refid="classgmx_1_1AnalysisNeighborhood" kindref="compound">gmx::AnalysisNeighborhood</ref></type>
        <definition>gmx::AnalysisNeighborhood anonymous_namespace{nbsearch.cpp}::NeighborhoodSearchTest::nb_</definition>
        <argsstring></argsstring>
        <name>nb_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/tests/nbsearch.cpp" line="430" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/tests/nbsearch.cpp" bodystart="430" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTest_1a2b1ed79ff4c11d0a901d1c98cabbd565" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void anonymous_namespace{nbsearch.cpp}::NeighborhoodSearchTest::testIsWithin</definition>
        <argsstring>(gmx::AnalysisNeighborhoodSearch *search, const NeighborhoodSearchTestData &amp;data)</argsstring>
        <name>testIsWithin</name>
        <param>
          <type><ref refid="classgmx_1_1AnalysisNeighborhoodSearch" kindref="compound">gmx::AnalysisNeighborhoodSearch</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type>const <ref refid="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTestData" kindref="compound">NeighborhoodSearchTestData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/tests/nbsearch.cpp" line="412" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/tests/nbsearch.cpp" bodystart="433" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTest_1a044060a4ed13d4f8511793c65bcc3379" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void anonymous_namespace{nbsearch.cpp}::NeighborhoodSearchTest::testMinimumDistance</definition>
        <argsstring>(gmx::AnalysisNeighborhoodSearch *search, const NeighborhoodSearchTestData &amp;data)</argsstring>
        <name>testMinimumDistance</name>
        <param>
          <type><ref refid="classgmx_1_1AnalysisNeighborhoodSearch" kindref="compound">gmx::AnalysisNeighborhoodSearch</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type>const <ref refid="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTestData" kindref="compound">NeighborhoodSearchTestData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/tests/nbsearch.cpp" line="414" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/tests/nbsearch.cpp" bodystart="446" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTest_1a12602feca2a8d7af808139b4f34abe2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void anonymous_namespace{nbsearch.cpp}::NeighborhoodSearchTest::testNearestPoint</definition>
        <argsstring>(gmx::AnalysisNeighborhoodSearch *search, const NeighborhoodSearchTestData &amp;data)</argsstring>
        <name>testNearestPoint</name>
        <param>
          <type><ref refid="classgmx_1_1AnalysisNeighborhoodSearch" kindref="compound">gmx::AnalysisNeighborhoodSearch</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type>const <ref refid="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTestData" kindref="compound">NeighborhoodSearchTestData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/tests/nbsearch.cpp" line="416" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/tests/nbsearch.cpp" bodystart="459" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTest_1af8f1bd4b668422f37cb1f80af53a67e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void anonymous_namespace{nbsearch.cpp}::NeighborhoodSearchTest::testPairSearch</definition>
        <argsstring>(gmx::AnalysisNeighborhoodSearch *search, const NeighborhoodSearchTestData &amp;data)</argsstring>
        <name>testPairSearch</name>
        <param>
          <type><ref refid="classgmx_1_1AnalysisNeighborhoodSearch" kindref="compound">gmx::AnalysisNeighborhoodSearch</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type>const <ref refid="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTestData" kindref="compound">NeighborhoodSearchTestData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/tests/nbsearch.cpp" line="418" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/tests/nbsearch.cpp" bodystart="517" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTest_1a4c025b73e1a8233dc8f8083da8d979fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void anonymous_namespace{nbsearch.cpp}::NeighborhoodSearchTest::testPairSearchIndexed</definition>
        <argsstring>(gmx::AnalysisNeighborhood *nb, const NeighborhoodSearchTestData &amp;data, gmx_uint64_t seed)</argsstring>
        <name>testPairSearchIndexed</name>
        <param>
          <type><ref refid="classgmx_1_1AnalysisNeighborhood" kindref="compound">gmx::AnalysisNeighborhood</ref> *</type>
          <declname>nb</declname>
        </param>
        <param>
          <type>const <ref refid="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTestData" kindref="compound">NeighborhoodSearchTestData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>gmx_uint64_t</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/tests/nbsearch.cpp" line="420" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/tests/nbsearch.cpp" bodystart="525" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTest_1ae9c6f3c1622150a16477a754af60d2f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void anonymous_namespace{nbsearch.cpp}::NeighborhoodSearchTest::testPairSearchFull</definition>
        <argsstring>(gmx::AnalysisNeighborhoodSearch *search, const NeighborhoodSearchTestData &amp;data, const gmx::AnalysisNeighborhoodPositions &amp;pos, const t_blocka *excls, const gmx::ConstArrayRef&lt; int &gt; &amp;refIndices, const gmx::ConstArrayRef&lt; int &gt; &amp;testIndices)</argsstring>
        <name>testPairSearchFull</name>
        <param>
          <type><ref refid="classgmx_1_1AnalysisNeighborhoodSearch" kindref="compound">gmx::AnalysisNeighborhoodSearch</ref> *</type>
          <declname>search</declname>
        </param>
        <param>
          <type>const <ref refid="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTestData" kindref="compound">NeighborhoodSearchTestData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1AnalysisNeighborhoodPositions" kindref="compound">gmx::AnalysisNeighborhoodPositions</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="structt__blocka" kindref="compound">t_blocka</ref> *</type>
          <declname>excls</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1ConstArrayRef" kindref="compound">gmx::ConstArrayRef</ref>&lt; int &gt; &amp;</type>
          <declname>refIndices</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1ConstArrayRef" kindref="compound">gmx::ConstArrayRef</ref>&lt; int &gt; &amp;</type>
          <declname>testIndices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/tests/nbsearch.cpp" line="423" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/tests/nbsearch.cpp" bodystart="539" bodyend="700"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="287">
        <label>anonymous_namespace{nbsearch.cpp}::NeighborhoodSearchTest</label>
        <link refid="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTest"/>
        <childnode refid="288" relation="public-inheritance">
        </childnode>
      </node>
      <node id="288">
        <label>Test</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="291">
        <label>gmx::AnalysisNeighborhood</label>
        <link refid="classgmx_1_1AnalysisNeighborhood"/>
      </node>
      <node id="289">
        <label>anonymous_namespace{nbsearch.cpp}::NeighborhoodSearchTest</label>
        <link refid="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTest"/>
        <childnode refid="290" relation="public-inheritance">
        </childnode>
        <childnode refid="291" relation="usage">
          <edgelabel>nb_</edgelabel>
        </childnode>
      </node>
      <node id="290">
        <label>Test</label>
      </node>
    </collaborationgraph>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/tests/nbsearch.cpp" line="410" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/tests/nbsearch.cpp" bodystart="409" bodyend="431"/>
    <listofallmembers>
      <member refid="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTest_1a2a37c61a86220d3abd2b245f4163ef55" prot="public" virt="non-virtual"><scope>anonymous_namespace{nbsearch.cpp}::NeighborhoodSearchTest</scope><name>nb_</name></member>
      <member refid="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTest_1a2b1ed79ff4c11d0a901d1c98cabbd565" prot="public" virt="non-virtual"><scope>anonymous_namespace{nbsearch.cpp}::NeighborhoodSearchTest</scope><name>testIsWithin</name></member>
      <member refid="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTest_1a044060a4ed13d4f8511793c65bcc3379" prot="public" virt="non-virtual"><scope>anonymous_namespace{nbsearch.cpp}::NeighborhoodSearchTest</scope><name>testMinimumDistance</name></member>
      <member refid="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTest_1a12602feca2a8d7af808139b4f34abe2d" prot="public" virt="non-virtual"><scope>anonymous_namespace{nbsearch.cpp}::NeighborhoodSearchTest</scope><name>testNearestPoint</name></member>
      <member refid="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTest_1af8f1bd4b668422f37cb1f80af53a67e0" prot="public" virt="non-virtual"><scope>anonymous_namespace{nbsearch.cpp}::NeighborhoodSearchTest</scope><name>testPairSearch</name></member>
      <member refid="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTest_1ae9c6f3c1622150a16477a754af60d2f5" prot="public" virt="non-virtual"><scope>anonymous_namespace{nbsearch.cpp}::NeighborhoodSearchTest</scope><name>testPairSearchFull</name></member>
      <member refid="classanonymous__namespace_02nbsearch_8cpp_03_1_1NeighborhoodSearchTest_1a4c025b73e1a8233dc8f8083da8d979fc" prot="public" virt="non-virtual"><scope>anonymous_namespace{nbsearch.cpp}::NeighborhoodSearchTest</scope><name>testPairSearchIndexed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

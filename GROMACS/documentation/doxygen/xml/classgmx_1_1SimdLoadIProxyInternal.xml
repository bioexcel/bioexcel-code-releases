<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1SimdLoadIProxyInternal" kind="class" prot="public">
    <compoundname>gmx::SimdLoadIProxyInternal</compoundname>
    <includes local="no">gromacs/simd/simd.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1SimdLoadIProxyInternal_1a31543b1286f612eef2c98273a49a20d8" prot="private" static="no" mutable="no">
        <type>const std::int32_t *const</type>
        <definition>const std::int32_t* const gmx::SimdLoadIProxyInternal::m_</definition>
        <argsstring></argsstring>
        <name>m_</name>
        <briefdescription>
<para>The pointer used to load memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="619" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="619" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1SimdLoadIProxyInternal_1a841599a4c44396779ff8dca9067de1e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::SimdLoadIProxyInternal::operator std::int32_t</definition>
        <argsstring>() const </argsstring>
        <name>operator std::int32_t</name>
        <briefdescription>
<para>Conversion method that will execute load of scalar int32. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="603" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="603" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SimdLoadIProxyInternal_1a6243d9ba86a694b29ea2bcff557650e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::SimdLoadIProxyInternal::operator SimdFInt32</definition>
        <argsstring>() const </argsstring>
        <name>operator SimdFInt32</name>
        <briefdescription>
<para>Conversion method that will execute load of <ref refid="classgmx_1_1SimdFInt32" kindref="compound">SimdFInt32</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="606" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="606" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SimdLoadIProxyInternal_1ad6e89d4b7ad564ef46c97893fcfdbaa6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::SimdLoadIProxyInternal::operator SimdDInt32</definition>
        <argsstring>() const </argsstring>
        <name>operator SimdDInt32</name>
        <briefdescription>
<para>Conversion method that will execute load of <ref refid="classgmx_1_1SimdDInt32" kindref="compound">SimdDInt32</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="610" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="610" bodyend="610"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgmx_1_1SimdLoadIProxyInternal_1aafac64eb639d82a27875cb1c7c63c049" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::SimdLoadIProxyInternal::SimdLoadIProxyInternal</definition>
        <argsstring>(const std::int32_t *m)</argsstring>
        <name>SimdLoadIProxyInternal</name>
        <param>
          <type>const std::int32_t *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Private constructor can only be called from <ref refid="classgmx_1_1SimdLoadIProxyInternal_1ab10e51a54f00093643c3968e7a20c725" kindref="member">load()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="614" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="614" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SimdLoadIProxyInternal_1a69bc51cf5ea19afab9bef2eedbbb56f2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1SimdLoadIProxyInternal" kindref="compound">SimdLoadIProxyInternal</ref> &amp;</type>
        <definition>SimdLoadIProxyInternal&amp; gmx::SimdLoadIProxyInternal::operator=</definition>
        <argsstring>(const SimdLoadIProxyInternal &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classgmx_1_1SimdLoadIProxyInternal" kindref="compound">SimdLoadIProxyInternal</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="621" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SimdLoadIProxyInternal_1a442746b6474bdb131678926dff259acc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::SimdLoadIProxyInternal::SimdLoadIProxyInternal</definition>
        <argsstring>(const SimdLoadIProxyInternal &amp;)=delete</argsstring>
        <name>SimdLoadIProxyInternal</name>
        <param>
          <type>const <ref refid="classgmx_1_1SimdLoadIProxyInternal" kindref="compound">SimdLoadIProxyInternal</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="621" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgmx_1_1SimdLoadIProxyInternal_1ab10e51a54f00093643c3968e7a20c725" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend const <ref refid="classgmx_1_1SimdLoadIProxyInternal" kindref="compound">SimdLoadIProxyInternal</ref> gmx_simdcall</type>
        <definition>const SimdLoadIProxyInternal gmx_simdcall load</definition>
        <argsstring>(const std::int32_t *m)</argsstring>
        <name>load</name>
        <param>
          <type>const std::int32_t *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Integer load function (proxy object) for <ref refid="classgmx_1_1SimdFInt32" kindref="compound">SimdFInt32</ref>, SImdDInt32, and int32. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to load memory </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Proxy object that will call the actual load for either <ref refid="classgmx_1_1SimdFInt32" kindref="compound">SimdFInt32</ref> or <ref refid="classgmx_1_1SimdDInt32" kindref="compound">SimdDInt32</ref> when you assign it and the conversion method is called. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="617" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Proxy object <ref refid="classgmx_1_1SimdLoadIProxyInternal_1ab10e51a54f00093643c3968e7a20c725" kindref="member">load()</ref> for <ref refid="classgmx_1_1SimdFInt32" kindref="compound">SimdFInt32</ref>, SImdDInt32, and int32. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal /> This object is returned by the <ref refid="classgmx_1_1SimdLoadIProxyInternal_1ab10e51a54f00093643c3968e7a20c725" kindref="member">load()</ref> function that takes a single pointer to an integer. When the result is assigned to either <ref refid="classgmx_1_1SimdFInt32" kindref="compound">SimdFInt32</ref>, <ref refid="classgmx_1_1SimdDInt32" kindref="compound">SimdDInt32</ref>, or std::int32_t, the appropriate conversion method will be executed, which in turn calls the correct low-level load function. In pratice this simply means you can use <ref refid="classgmx_1_1SimdLoadIProxyInternal_1ab10e51a54f00093643c3968e7a20c725" kindref="member">load()</ref> regardless of the type.</para><para>This is an internal class you should never touch or create objects of. The only reason the constructor isn&apos;t private is that the <ref refid="classgmx_1_1SimdLoadIProxyInternal_1ab10e51a54f00093643c3968e7a20c725" kindref="member">load()</ref> function must be static to enable aggressive inlining. </para>    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="600" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="599" bodyend="622"/>
    <listofallmembers>
      <member refid="classgmx_1_1SimdLoadIProxyInternal_1ab10e51a54f00093643c3968e7a20c725" prot="private" virt="non-virtual"><scope>gmx::SimdLoadIProxyInternal</scope><name>load</name></member>
      <member refid="classgmx_1_1SimdLoadIProxyInternal_1a31543b1286f612eef2c98273a49a20d8" prot="private" virt="non-virtual"><scope>gmx::SimdLoadIProxyInternal</scope><name>m_</name></member>
      <member refid="classgmx_1_1SimdLoadIProxyInternal_1ad6e89d4b7ad564ef46c97893fcfdbaa6" prot="public" virt="non-virtual"><scope>gmx::SimdLoadIProxyInternal</scope><name>operator SimdDInt32</name></member>
      <member refid="classgmx_1_1SimdLoadIProxyInternal_1a6243d9ba86a694b29ea2bcff557650e9" prot="public" virt="non-virtual"><scope>gmx::SimdLoadIProxyInternal</scope><name>operator SimdFInt32</name></member>
      <member refid="classgmx_1_1SimdLoadIProxyInternal_1a841599a4c44396779ff8dca9067de1e5" prot="public" virt="non-virtual"><scope>gmx::SimdLoadIProxyInternal</scope><name>operator std::int32_t</name></member>
      <member refid="classgmx_1_1SimdLoadIProxyInternal_1a69bc51cf5ea19afab9bef2eedbbb56f2" prot="private" virt="non-virtual"><scope>gmx::SimdLoadIProxyInternal</scope><name>operator=</name></member>
      <member refid="classgmx_1_1SimdLoadIProxyInternal_1aafac64eb639d82a27875cb1c7c63c049" prot="private" virt="non-virtual"><scope>gmx::SimdLoadIProxyInternal</scope><name>SimdLoadIProxyInternal</name></member>
      <member refid="classgmx_1_1SimdLoadIProxyInternal_1a442746b6474bdb131678926dff259acc" prot="private" virt="non-virtual"><scope>gmx::SimdLoadIProxyInternal</scope><name>SimdLoadIProxyInternal</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="nbnxn__ocl__jit__support_8cpp" kind="file">
    <compoundname>nbnxn_ocl_jit_support.cpp</compoundname>
    <includes refid="gmxpre_8h" local="yes">gmxpre.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">cassert</includes>
    <includes local="no">string</includes>
    <includes refid="gpu__utils_8h" local="yes">gromacs/gpu_utils/gpu_utils.h</includes>
    <includes refid="ocl__compiler_8h" local="yes">gromacs/gpu_utils/ocl_compiler.h</includes>
    <includes refid="nbnxn__consts_8h" local="yes">gromacs/mdlib/nbnxn_consts.h</includes>
    <includes refid="nbnxn__gpu_8h" local="yes">gromacs/mdlib/nbnxn_gpu.h</includes>
    <includes refid="nbnxn__gpu__jit__support_8h" local="yes">gromacs/mdlib/nbnxn_gpu_jit_support.h</includes>
    <includes refid="interaction__const_8h" local="yes">gromacs/mdtypes/interaction_const.h</includes>
    <includes refid="md__enums_8h" local="yes">gromacs/mdtypes/md_enums.h</includes>
    <includes refid="ishift_8h" local="yes">gromacs/pbcutil/ishift.h</includes>
    <includes refid="cstringutil_8h" local="yes">gromacs/utility/cstringutil.h</includes>
    <includes refid="exceptions_8h" local="yes">gromacs/utility/exceptions.h</includes>
    <includes refid="fatalerror_8h" local="yes">gromacs/utility/fatalerror.h</includes>
    <includes refid="stringutil_8h" local="yes">gromacs/utility/stringutil.h</includes>
    <includes refid="nbnxn__ocl__types_8h" local="yes">nbnxn_ocl_types.h</includes>
    <incdepgraph>
      <node id="12179">
        <label>gromacs/utility/stringutil.h</label>
        <link refid="stringutil_8h"/>
        <childnode refid="12180" relation="include">
        </childnode>
        <childnode refid="12152" relation="include">
        </childnode>
        <childnode refid="12173" relation="include">
        </childnode>
      </node>
      <node id="12178">
        <label>stdarg.h</label>
      </node>
      <node id="12175">
        <label>gromacs/utility/current_function.h</label>
        <link refid="current__function_8h"/>
      </node>
      <node id="12161">
        <label>gromacs/mdlib/nbnxn_gpu.h</label>
        <link refid="nbnxn__gpu_8h"/>
        <childnode refid="12155" relation="include">
        </childnode>
        <childnode refid="12162" relation="include">
        </childnode>
      </node>
      <node id="12177">
        <label>gromacs/utility/fatalerror.h</label>
        <link refid="fatalerror_8h"/>
        <childnode refid="12178" relation="include">
        </childnode>
        <childnode refid="12166" relation="include">
        </childnode>
        <childnode refid="12155" relation="include">
        </childnode>
      </node>
      <node id="12156">
        <label>stdint.h</label>
      </node>
      <node id="12150">
        <label>stdlib.h</label>
      </node>
      <node id="12181">
        <label>nbnxn_ocl_types.h</label>
        <link refid="nbnxn__ocl__types_8h"/>
        <childnode refid="12160" relation="include">
        </childnode>
        <childnode refid="12162" relation="include">
        </childnode>
      </node>
      <node id="12149">
        <label>gmxpre.h</label>
        <link refid="gmxpre_8h"/>
      </node>
      <node id="12165">
        <label>gromacs/utility/cstringutil.h</label>
        <link refid="cstringutil_8h"/>
        <childnode refid="12166" relation="include">
        </childnode>
        <childnode refid="12155" relation="include">
        </childnode>
      </node>
      <node id="12151">
        <label>cassert</label>
      </node>
      <node id="12152">
        <label>string</label>
      </node>
      <node id="12148">
        <label>src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_jit_support.cpp</label>
        <link refid="nbnxn_ocl_jit_support.cpp"/>
        <childnode refid="12149" relation="include">
        </childnode>
        <childnode refid="12150" relation="include">
        </childnode>
        <childnode refid="12151" relation="include">
        </childnode>
        <childnode refid="12152" relation="include">
        </childnode>
        <childnode refid="12153" relation="include">
        </childnode>
        <childnode refid="12158" relation="include">
        </childnode>
        <childnode refid="12161" relation="include">
        </childnode>
        <childnode refid="12163" relation="include">
        </childnode>
        <childnode refid="12164" relation="include">
        </childnode>
        <childnode refid="12165" relation="include">
        </childnode>
        <childnode refid="12167" relation="include">
        </childnode>
        <childnode refid="12177" relation="include">
        </childnode>
        <childnode refid="12179" relation="include">
        </childnode>
        <childnode refid="12181" relation="include">
        </childnode>
      </node>
      <node id="12169">
        <label>exception</label>
      </node>
      <node id="12159">
        <label>gromacs/gpu_utils/oclutils.h</label>
        <link refid="oclutils_8h"/>
        <childnode refid="12160" relation="include">
        </childnode>
        <childnode refid="12152" relation="include">
        </childnode>
      </node>
      <node id="12167">
        <label>gromacs/utility/exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="12154" relation="include">
        </childnode>
        <childnode refid="12168" relation="include">
        </childnode>
        <childnode refid="12169" relation="include">
        </childnode>
        <childnode refid="12170" relation="include">
        </childnode>
        <childnode refid="12152" relation="include">
        </childnode>
        <childnode refid="12171" relation="include">
        </childnode>
        <childnode refid="12172" relation="include">
        </childnode>
        <childnode refid="12173" relation="include">
        </childnode>
        <childnode refid="12155" relation="include">
        </childnode>
        <childnode refid="12174" relation="include">
        </childnode>
        <childnode refid="12175" relation="include">
        </childnode>
        <childnode refid="12176" relation="include">
        </childnode>
      </node>
      <node id="12162">
        <label>gromacs/utility/real.h</label>
        <link refid="real_8h"/>
      </node>
      <node id="12160">
        <label>CL/opencl.h</label>
      </node>
      <node id="12154">
        <label>cstdio</label>
      </node>
      <node id="12176">
        <label>gromacs/utility/gmxassert.h</label>
        <link refid="gmxassert_8h"/>
        <childnode refid="12155" relation="include">
        </childnode>
        <childnode refid="12175" relation="include">
        </childnode>
      </node>
      <node id="12153">
        <label>gromacs/gpu_utils/gpu_utils.h</label>
        <link refid="gpu__utils_8h"/>
        <childnode refid="12154" relation="include">
        </childnode>
        <childnode refid="12155" relation="include">
        </childnode>
      </node>
      <node id="12173">
        <label>vector</label>
      </node>
      <node id="12174">
        <label>gromacs/utility/classhelpers.h</label>
        <link refid="classhelpers_8h"/>
        <childnode refid="12170" relation="include">
        </childnode>
      </node>
      <node id="12168">
        <label>cstdlib</label>
      </node>
      <node id="12164">
        <label>gromacs/mdtypes/md_enums.h</label>
        <link refid="md__enums_8h"/>
        <childnode refid="12155" relation="include">
        </childnode>
      </node>
      <node id="12155">
        <label>gromacs/utility/basedefinitions.h</label>
        <link refid="basedefinitions_8h"/>
        <childnode refid="12156" relation="include">
        </childnode>
        <childnode refid="12157" relation="include">
        </childnode>
      </node>
      <node id="12171">
        <label>type_traits</label>
      </node>
      <node id="12158">
        <label>gromacs/gpu_utils/ocl_compiler.h</label>
        <link refid="ocl__compiler_8h"/>
        <childnode refid="12152" relation="include">
        </childnode>
        <childnode refid="12159" relation="include">
        </childnode>
      </node>
      <node id="12163">
        <label>gromacs/mdlib/nbnxn_gpu_jit_support.h</label>
        <link refid="nbnxn__gpu__jit__support_8h"/>
        <childnode refid="12155" relation="include">
        </childnode>
      </node>
      <node id="12166">
        <label>stdio.h</label>
      </node>
      <node id="12180">
        <label>cstring</label>
      </node>
      <node id="12170">
        <label>memory</label>
      </node>
      <node id="12157">
        <label>inttypes.h</label>
      </node>
      <node id="12172">
        <label>typeindex</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="nbnxn__ocl__jit__support_8cpp_1a2081852b26ed8dcc7e358068e2ba18c9" prot="public" static="no">
        <name>STRINGIFY_PARAM</name>
        <param><defname>c</defname></param>
        <initializer>#c</initializer>
        <briefdescription>
<para>Stringifies the input argument. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_jit_support.cpp" line="67" column="9" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_jit_support.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nbnxn__ocl__jit__support_8cpp_1a1df34b8297a5120b690c52293824bcfe" prot="public" static="no">
        <name>STRINGIFY_MACRO</name>
        <param><defname>c</defname></param>
        <initializer><ref refid="nbnxn__ocl__jit__support_8cpp_1a2081852b26ed8dcc7e358068e2ba18c9" kindref="member">STRINGIFY_PARAM</ref>(c)</initializer>
        <briefdescription>
<para>Stringifies the result of expansion of a macro argument. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_jit_support.cpp" line="71" column="9" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_jit_support.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="nbnxn__ocl__jit__support_8cpp_1ae41b791756c8ab687d4d39b4dcba9c12" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* kernel_electrostatic_family_definitions[]</definition>
        <argsstring>[]</argsstring>
        <name>kernel_electrostatic_family_definitions</name>
        <initializer>=
{
    &quot; -DEL_CUTOFF -DEELNAME=_ElecCut&quot;,
    &quot; -DEL_RF -DEELNAME=_ElecRF&quot;,
    &quot; -DEL_EWALD_TAB -DEELNAME=_ElecEwQSTab&quot;,
    &quot; -DEL_EWALD_TAB -DVDW_CUTOFF_CHECK -DEELNAME=_ElecEwQSTabTwinCut&quot;,
    &quot; -DEL_EWALD_ANA -DEELNAME=_ElecEw&quot;,
    &quot; -DEL_EWALD_ANA -DVDW_CUTOFF_CHECK -DEELNAME=_ElecEwTwinCut&quot;
}</initializer>
        <briefdescription>
<para>Array of the defines needed to generate a specific eel flavour. </para>        </briefdescription>
        <detaileddescription>
<para>The twin-cutoff entries are not normally used, because those setups are not available to the user. FastGen takes care of generating both single- and twin-cutoff versions because PME tuning might need both. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_jit_support.cpp" line="79" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_jit_support.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nbnxn__ocl__jit__support_8cpp_1ae5c456d8e7239f987792abc3ac41540c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* kernel_VdW_family_definitions[]</definition>
        <argsstring>[]</argsstring>
        <name>kernel_VdW_family_definitions</name>
        <initializer>=
{
    &quot; -DVDWNAME=_VdwLJ&quot;,
    &quot; -DLJ_COMB_GEOM -DVDWNAME=_VdwLJCombGeom&quot;,
    &quot; -DLJ_COMB_LB  -DVDWNAME=_VdwLJCombLB&quot;,
    &quot; -DLJ_FORCE_SWITCH -DVDWNAME=_VdwLJFsw&quot;,
    &quot; -DLJ_POT_SWITCH -DVDWNAME=_VdwLJPsw&quot;,
    &quot; -DLJ_EWALD_COMB_GEOM -DVDWNAME=_VdwLJEwCombGeom&quot;,
    &quot; -DLJ_EWALD_COMB_LB -DVDWNAME=_VdwLJEwCombLB&quot;
}</initializer>
        <briefdescription>
<para>Array of the defines needed to generate a specific vdw flavour. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_jit_support.cpp" line="91" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_jit_support.cpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nbnxn__ocl__jit__support_8cpp_1a386cab6b67deda1db7d1f522ea3403d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string makeDefinesForKernelTypes</definition>
        <argsstring>(bool bFastGen, int eeltype, int vdwtype)</argsstring>
        <name>makeDefinesForKernelTypes</name>
        <param>
          <type>bool</type>
          <declname>bFastGen</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eeltype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vdwtype</declname>
        </param>
        <briefdescription>
<para>Returns a string with the compiler defines required to avoid all flavour generation. </para>        </briefdescription>
        <detaileddescription>
<para>For example if flavour eelOclRF with evdwOclFSWITCH, the output will be such that the corresponding kernel flavour is generated: -DGMX_OCL_FASTGEN (will replace flavour generator nbnxn_ocl_kernels.clh with nbnxn_ocl_kernels_fastgen.clh) -DEL_RF (The eelOclRF flavour) -DEELNAME=_ElecRF (The first part of the generated kernel name ) -DLJ_EWALD_COMB_GEOM (The evdwOclFSWITCH flavour) -DVDWNAME=_VdwLJEwCombGeom (The second part of the generated kernel name )</para><para>prune/energy are still generated as originally. It is only the the flavour-level that has changed, so that only the required flavour for the simulation is compiled.</para><para>If eeltype is single-range Ewald, then we need to add the twin-cutoff flavour kernels to the JIT, because PME tuning might need it. This path sets -DGMX_OCL_FASTGEN_ADD_TWINCUT, which triggers the use of nbnxn_ocl_kernels_fastgen_add_twincut.clh. This hard-codes the generation of extra kernels that have the same base flavour, and add the required -DVDW_CUTOFF_CHECK and &quot;TwinCut&quot; to the kernel name.</para><para>If FastGen is not active, then nothing needs to be returned. The JIT defaults to compiling all kernel flavours.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bFastGen</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether FastGen should be used </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eeltype</parametername>
</parameternamelist>
<parameterdescription>
<para>Electrostatics kernel flavour for FastGen </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">vdwtype</parametername>
</parameternamelist>
<parameterdescription>
<para>VDW kernel flavour for FastGen </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String with the defines if FastGen is active</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_jit_support.cpp" line="134" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_jit_support.cpp" bodystart="134" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="nbnxn__ocl__jit__support_8cpp_1a6577fa6745e24d7e83da05b28bb5d571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nbnxn_gpu_compile_kernels</definition>
        <argsstring>(gmx_nbnxn_ocl_t *nb)</argsstring>
        <name>nbnxn_gpu_compile_kernels</name>
        <param>
          <type><ref refid="structgmx__nbnxn__ocl__t" kindref="compound">gmx_nbnxn_ocl_t</ref> *</type>
          <declname>nb</declname>
        </param>
        <briefdescription>
<para>Compiles nbnxn kernels for OpenCL GPU given by <computeroutput>mygpu</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>With OpenCL, a call to this function must precede <ref refid="nbnxn__gpu__data__mgmt_8h_1ad4917e597062ef67e989709aa38b9659" kindref="member">nbnxn_gpu_init()</ref>.</para><para>Doing bFastGen means only the requested kernels are compiled, significantly reducing the total compilation time. If false, all OpenCL kernels are compiled.</para><para>A fatal error results if compilation fails.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">nb</parametername>
</parameternamelist>
<parameterdescription>
<para>Manages OpenCL non-bonded calculations; compiled kernels returned in dev_info members</para></parameterdescription>
</parameteritem>
</parameterlist>
Does not throw </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_jit_support.cpp" line="177" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_jit_support.cpp" bodystart="177" bodyend="233"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines functions that support JIT compilation (e.g. for OpenCL) </para>    </briefdescription>
    <detaileddescription>
<internal><para><simplesect kind="author"><para>Dimitrios Karkoulis <ulink url="mailto:dimitris.karkoulis@gmail.com">dimitris.karkoulis@gmail.com</ulink> </para><simplesectsep/><para>Mark Abraham <ulink url="mailto:mark.j.abraham@gmail.com">mark.j.abraham@gmail.com</ulink> </para></simplesect>
</para></internal>
    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_jit_support.cpp"/>
  </compounddef>
</doxygen>

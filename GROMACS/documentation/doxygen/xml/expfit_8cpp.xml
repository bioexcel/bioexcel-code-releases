<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="expfit_8cpp" kind="file">
    <compoundname>expfit.cpp</compoundname>
    <includes refid="gmxpre_8h" local="yes">gmxpre.h</includes>
    <includes refid="expfit_8h" local="yes">expfit.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">cmath</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">lmstruct.h</includes>
    <includes refid="integrate_8h" local="yes">gromacs/correlationfunctions/integrate.h</includes>
    <includes refid="xvgr_8h" local="yes">gromacs/fileio/xvgr.h</includes>
    <includes refid="functions_8h" local="yes">gromacs/math/functions.h</includes>
    <includes refid="vec_8h" local="yes">gromacs/math/vec.h</includes>
    <includes refid="fatalerror_8h" local="yes">gromacs/utility/fatalerror.h</includes>
    <includes refid="futil_8h" local="yes">gromacs/utility/futil.h</includes>
    <includes refid="gmxassert_8h" local="yes">gromacs/utility/gmxassert.h</includes>
    <includes refid="real_8h" local="yes">gromacs/utility/real.h</includes>
    <includes refid="smalloc_8h" local="yes">gromacs/utility/smalloc.h</includes>
    <includes refid="gmx__lmcurve_8h" local="yes">gmx_lmcurve.h</includes>
    <incdepgraph>
      <node id="2531">
        <label>stdarg.h</label>
      </node>
      <node id="2535">
        <label>gromacs/utility/current_function.h</label>
        <link refid="current__function_8h"/>
      </node>
      <node id="2528">
        <label>gromacs/math/functions.h</label>
        <link refid="functions_8h"/>
        <childnode refid="2523" relation="include">
        </childnode>
        <childnode refid="2529" relation="include">
        </childnode>
        <childnode refid="2521" relation="include">
        </childnode>
      </node>
      <node id="2529">
        <label>cstdint</label>
      </node>
      <node id="2536">
        <label>gromacs/utility/smalloc.h</label>
        <link refid="smalloc_8h"/>
        <childnode refid="2537" relation="include">
        </childnode>
        <childnode refid="2518" relation="include">
        </childnode>
      </node>
      <node id="2530">
        <label>gromacs/utility/fatalerror.h</label>
        <link refid="fatalerror_8h"/>
        <childnode refid="2531" relation="include">
        </childnode>
        <childnode refid="2527" relation="include">
        </childnode>
        <childnode refid="2518" relation="include">
        </childnode>
      </node>
      <node id="2519">
        <label>stdint.h</label>
      </node>
      <node id="2517">
        <label>expfit.h</label>
        <link refid="expfit_8h"/>
        <childnode refid="2518" relation="include">
        </childnode>
        <childnode refid="2521" relation="include">
        </childnode>
      </node>
      <node id="2525">
        <label>lmstruct.h</label>
      </node>
      <node id="2516">
        <label>gmxpre.h</label>
        <link refid="gmxpre_8h"/>
      </node>
      <node id="2523">
        <label>cmath</label>
      </node>
      <node id="2515">
        <label>src/gromacs/correlationfunctions/expfit.cpp</label>
        <link refid="expfit.cpp"/>
        <childnode refid="2516" relation="include">
        </childnode>
        <childnode refid="2517" relation="include">
        </childnode>
        <childnode refid="2522" relation="include">
        </childnode>
        <childnode refid="2523" relation="include">
        </childnode>
        <childnode refid="2524" relation="include">
        </childnode>
        <childnode refid="2525" relation="include">
        </childnode>
        <childnode refid="2526" relation="include">
        </childnode>
        <childnode refid="2528" relation="include">
        </childnode>
        <childnode refid="2530" relation="include">
        </childnode>
        <childnode refid="2532" relation="include">
        </childnode>
        <childnode refid="2534" relation="include">
        </childnode>
        <childnode refid="2521" relation="include">
        </childnode>
        <childnode refid="2536" relation="include">
        </childnode>
        <childnode refid="2538" relation="include">
        </childnode>
      </node>
      <node id="2537">
        <label>stddef.h</label>
      </node>
      <node id="2533">
        <label>limits.h</label>
      </node>
      <node id="2521">
        <label>gromacs/utility/real.h</label>
        <link refid="real_8h"/>
      </node>
      <node id="2522">
        <label>string.h</label>
      </node>
      <node id="2534">
        <label>gromacs/utility/gmxassert.h</label>
        <link refid="gmxassert_8h"/>
        <childnode refid="2518" relation="include">
        </childnode>
        <childnode refid="2535" relation="include">
        </childnode>
      </node>
      <node id="2526">
        <label>gromacs/correlationfunctions/integrate.h</label>
        <link refid="integrate_8h"/>
        <childnode refid="2527" relation="include">
        </childnode>
        <childnode refid="2521" relation="include">
        </childnode>
      </node>
      <node id="2532">
        <label>gromacs/utility/futil.h</label>
        <link refid="futil_8h"/>
        <childnode refid="2533" relation="include">
        </childnode>
        <childnode refid="2527" relation="include">
        </childnode>
        <childnode refid="2518" relation="include">
        </childnode>
      </node>
      <node id="2518">
        <label>gromacs/utility/basedefinitions.h</label>
        <link refid="basedefinitions_8h"/>
        <childnode refid="2519" relation="include">
        </childnode>
        <childnode refid="2520" relation="include">
        </childnode>
      </node>
      <node id="2538">
        <label>gmx_lmcurve.h</label>
        <link refid="gmx__lmcurve_8h"/>
        <childnode refid="2525" relation="include">
        </childnode>
      </node>
      <node id="2524">
        <label>algorithm</label>
      </node>
      <node id="2527">
        <label>stdio.h</label>
      </node>
      <node id="2520">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="expfit_8cpp_1a387b8b27f28e3018e2f1d96bbb75cc3d" prot="public" static="no">
        <type>double(*</type>
        <definition>typedef double(* t_lmcurve)(double x, const double *a)</definition>
        <argsstring>)(double x, const double *a)</argsstring>
        <name>t_lmcurve</name>
        <briefdescription>
<para>function type for passing to fitting routine </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="398" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="398" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="expfit_8cpp_1a0381a3f406e1b936be009fb50c833804" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int nfp_ffn[effnNR]</definition>
        <argsstring>[effnNR]</argsstring>
        <name>nfp_ffn</name>
        <initializer>= { 0, 1, 2, 3, 5, 7, 9, 2, 4, 3, 6 }</initializer>
        <briefdescription>
<para>Number of parameters for each fitting function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="70" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="expfit_8cpp_1a8c5348612f872710564767a5d1a0332e" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* s_ffn[effnNR+2]</definition>
        <argsstring>[effnNR+2]</argsstring>
        <name>s_ffn</name>
        <initializer>= {
    NULL, &quot;none&quot;, &quot;exp&quot;, &quot;aexp&quot;, &quot;exp_exp&quot;,
    &quot;exp5&quot;, &quot;exp7&quot;, &quot;exp9&quot;,
    NULL, NULL, NULL, NULL, NULL
}</initializer>
        <briefdescription>
<para>Short name of each function type. This is exported for now in order to use when calling parse_common_args. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="77" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="expfit_8cpp_1a740d0a52199e66c0e9b00f92e894293a" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* longs_ffn[effnNR]</definition>
        <argsstring>[effnNR]</argsstring>
        <name>longs_ffn</name>
        <initializer>= {
    &quot;no fit&quot;,
    &quot;y = exp(-x/|a0|)&quot;,
    &quot;y = a1 exp(-x/|a0|)&quot;,
    &quot;y = a1 exp(-x/|a0|) + (1-a1) exp(-x/(|a2|)), a2 &gt; a0 &gt; 0&quot;,
    &quot;y = a0 exp(-x/|a1|) +  a2 exp(-x/|a3|) + a4, a3 &gt;= a1&quot;,
    &quot;y = a0 exp(-x/|a1|) +  a2 exp(-x/|a3|) + a4 exp(-x/|a5|) + a6, a5 &gt;= a3 &gt;= a1&quot;,
    &quot;y = a0 exp(-x/|a1|) +  a2 exp(-x/|a3|) + a4 exp(-x/|a5|) + a6 exp(-x/|a7|) + a8, a7 &gt;= a5 &gt;= a3 &gt;= a1&quot;,
    &quot;y = exp(-v) (cosh(wv) + 1/w sinh(wv)), v = x/(2 a0), w = sqrt(1 - a1)&quot;,
    &quot;y = 1/2*(a0+a1) - 1/2*(a0-a1)*erf( (x-a2) /a3^2)&quot;,
    &quot;y = a1 *2*a0*((exp(-x/a0)-1)*(a0/x)+1)+(1-a1)*2*a2*((exp(-x/a2)-1)*(a2/x)+1)&quot;,
    &quot;y = (1-a0)*cos(x*a1)*exp(-(x/a2)^a3) + a0*exp(-(x/a4)^a5)&quot;
}</initializer>
        <briefdescription>
<para>Long description for each fitting function type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="84" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="expfit_8cpp_1a06026c9343ea8ff3591390995f1b2158" prot="public" static="no" mutable="no">
        <type><ref refid="expfit_8cpp_1a387b8b27f28e3018e2f1d96bbb75cc3d" kindref="member">t_lmcurve</ref></type>
        <definition>t_lmcurve lmcurves[effnNR+1]</definition>
        <argsstring>[effnNR+1]</argsstring>
        <name>lmcurves</name>
        <initializer>= {
    <ref refid="expfit_8cpp_1a4ac3e99f76d0174254384e354f4bedd2" kindref="member">lmc_exp_one_parm</ref>, <ref refid="expfit_8cpp_1a4ac3e99f76d0174254384e354f4bedd2" kindref="member">lmc_exp_one_parm</ref>, <ref refid="expfit_8cpp_1ad66884edf75e04320f3582ea964bc308" kindref="member">lmc_exp_two_parm</ref>,
    <ref refid="expfit_8cpp_1a19ec7c3d892fe2465148ad4f96e8828c" kindref="member">lmc_exp_exp</ref>,      <ref refid="expfit_8cpp_1a820ce3881e566aaacf844e6c186ffbdf" kindref="member">lmc_exp_5_parm</ref>,   <ref refid="expfit_8cpp_1a37ccaa07967f4b4e54f3a440b2e93932" kindref="member">lmc_exp_7_parm</ref>,
    <ref refid="expfit_8cpp_1a2f4ac9f1d41c9f671406477cbc8e0947" kindref="member">lmc_exp_9_parm</ref>,
    <ref refid="expfit_8cpp_1a8913f15b4dae1a635117107dedd1b033" kindref="member">lmc_vac_2_parm</ref>,   <ref refid="expfit_8cpp_1ac3f73c128d077680c37f2deebc929f92" kindref="member">lmc_erffit</ref>,  <ref refid="expfit_8cpp_1a9806be64773ad64b46c6df69ffd0fca0" kindref="member">lmc_errest_3_parm</ref>, <ref refid="expfit_8cpp_1af6a1f07dff0447c6961c4abce29be7a4" kindref="member">lmc_pres_6_parm</ref>
}</initializer>
        <briefdescription>
<para>array of fitting functions corresponding to the pre-defined types </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="401" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="401" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="expfit_8cpp_1a116cccea41845ea588fc00c5dc0f7dce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int effnNparams</definition>
        <argsstring>(int effn)</argsstring>
        <name>effnNparams</name>
        <param>
          <type>int</type>
          <declname>effn</declname>
        </param>
        <briefdescription>
<para>Returns number of function parameters associated with a fitting function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">effn</parametername>
</parameternamelist>
<parameterdescription>
<para>Index </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number or -1 if index out of range </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="98" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="98" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1ae3f046b3f2286043e6c447498703f126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* effnDescription</definition>
        <argsstring>(int effn)</argsstring>
        <name>effnDescription</name>
        <param>
          <type>int</type>
          <declname>effn</declname>
        </param>
        <briefdescription>
<para>Returns description corresponding to the enum above, or NULL if out of range. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">effn</parametername>
</parameternamelist>
<parameterdescription>
<para>Index </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Description or NULL </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="110" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="110" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1a7f2f7deddf6696f3eebe0f5605808b63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sffn2effn</definition>
        <argsstring>(const char **sffn)</argsstring>
        <name>sffn2effn</name>
        <param>
          <type>const char **</type>
          <declname>sffn</declname>
        </param>
        <briefdescription>
<para>Returns corresponding to the selected enum option in sffn. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sffn</parametername>
</parameternamelist>
<parameterdescription>
<para>Two dimensional string array coming from parse_common_args </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the ffn enum </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="122" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="122" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1a5ecc8ac1a3e2b6ce4bd41592d584ec5c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double myexp</definition>
        <argsstring>(double x, double A, double tau)</argsstring>
        <name>myexp</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>A</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tau</declname>
        </param>
        <briefdescription>
<para>Compute exponential function A exp(-x/tau) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="139" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="139" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1ac3f73c128d077680c37f2deebc929f92" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double lmc_erffit</definition>
        <argsstring>(double x, const double *a)</argsstring>
        <name>lmc_erffit</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Compute y=(a0+a1)/2-(a0-a1)/2*erf((x-a2)/a3^2) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="149" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="149" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1a4f061218008fe0f7c1b7fb7bd7c5e44b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double safe_exp</definition>
        <argsstring>(double x)</argsstring>
        <name>safe_exp</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Exponent function that prevents overflow. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="175" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="175" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1a77cdc89d8216490859461a4384c5c37a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double safe_expm1</definition>
        <argsstring>(double x)</argsstring>
        <name>safe_expm1</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Exponent minus 1 function that prevents overflow. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="194" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="194" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1a4ac3e99f76d0174254384e354f4bedd2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double lmc_exp_one_parm</definition>
        <argsstring>(double x, const double *a)</argsstring>
        <name>lmc_exp_one_parm</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Compute y = exp(-x/|a0|) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="213" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1ad66884edf75e04320f3582ea964bc308" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double lmc_exp_two_parm</definition>
        <argsstring>(double x, const double *a)</argsstring>
        <name>lmc_exp_two_parm</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Compute y = a1 exp(-x/|a0|) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="219" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1a19ec7c3d892fe2465148ad4f96e8828c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double lmc_exp_exp</definition>
        <argsstring>(double x, const double *a)</argsstring>
        <name>lmc_exp_exp</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Compute y = a1 exp(-x/|a0|) + (1-a1) exp(-x/|a2|) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="225" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="225" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1a820ce3881e566aaacf844e6c186ffbdf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double lmc_exp_5_parm</definition>
        <argsstring>(double x, const double *a)</argsstring>
        <name>lmc_exp_5_parm</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Compute y = a0 exp(-x/|a1|) + a2 exp(-x/(|a1|+|a3|)) + a4. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="235" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="235" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1a37ccaa07967f4b4e54f3a440b2e93932" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double lmc_exp_7_parm</definition>
        <argsstring>(double x, const double *a)</argsstring>
        <name>lmc_exp_7_parm</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Compute 7 parameter exponential function value. </para>        </briefdescription>
        <detaileddescription>
<para>Compute y = a0 exp(-x/|a1|) + a2 exp(-x/(|a1|+|a3|)) + a4 exp(-x/(|a1|+|a3|+|a5|)) + a6 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="249" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="249" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1a2f4ac9f1d41c9f671406477cbc8e0947" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double lmc_exp_9_parm</definition>
        <argsstring>(double x, const double *a)</argsstring>
        <name>lmc_exp_9_parm</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Compute 9 parameter exponential function value. </para>        </briefdescription>
        <detaileddescription>
<para>Compute y = a0 exp(-x/|a1|) + a2 exp(-x/(|a1|+|a3|)) + a4 exp(-x/(|a1|+|a3|+|a5|)) + a6 exp(-x/(|a1|+|a3|+|a5|+|a7|)) + a8 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="268" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="268" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1af6a1f07dff0447c6961c4abce29be7a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double lmc_pres_6_parm</definition>
        <argsstring>(double x, const double *a)</argsstring>
        <name>lmc_pres_6_parm</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Compute y = (1-a0)*exp(-(x/|a2|)^|a3|)*cos(x*|a1|) + a0*exp(-(x/|a4|)^|a5|) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="286" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="286" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1a8913f15b4dae1a635117107dedd1b033" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double lmc_vac_2_parm</definition>
        <argsstring>(double x, const double *a)</argsstring>
        <name>lmc_vac_2_parm</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Compute vac function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="310" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="310" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1a9806be64773ad64b46c6df69ffd0fca0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double lmc_errest_3_parm</definition>
        <argsstring>(double x, const double *a)</argsstring>
        <name>lmc_errest_3_parm</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Compute error estimate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="358" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="358" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1a22c8e7646cd3811775f2a02a66799964" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double fit_function</definition>
        <argsstring>(const int eFitFn, const double parm[], const double x)</argsstring>
        <name>fit_function</name>
        <param>
          <type>const int</type>
          <declname>eFitFn</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>parm</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Returns the value of fit function eFitFn at x. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">eFitFn</parametername>
</parameternamelist>
<parameterdescription>
<para>the index to the fitting function (0 .. effnNR) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">parm</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of parameters, the length of which depends on eFitFn </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of x </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the fit </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="408" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="408" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1a337e411b7f26c8fc8148d95bc0459c75" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
        <definition>static gmx_bool lmfit_exp</definition>
        <argsstring>(int nfit, const double x[], const double y[], const double dy[], double parm[], gmx_bool bVerbose, int eFitFn, int nfix)</argsstring>
        <name>lmfit_exp</name>
        <param>
          <type>int</type>
          <declname>nfit</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>x</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const double</type>
          <declname>y</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const double</type>
          <declname>dy</declname>
          <array>[]</array>
        </param>
        <param>
          <type>double</type>
          <declname>parm</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bVerbose</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eFitFn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nfix</declname>
        </param>
        <briefdescription>
<para>lmfit_exp supports fitting of different functions </para>        </briefdescription>
        <detaileddescription>
<para>This routine calls the Levenberg-Marquardt non-linear fitting routine for fitting a data set with errors to a target function. Fitting routines included in gromacs in src/external/lmfit. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="425" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="425" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1af5a14b4d792f8dcb34d3b24cfa7fcf28" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void initiate_fit_params</definition>
        <argsstring>(int eFitFn, double params[])</argsstring>
        <name>initiate_fit_params</name>
        <param>
          <type>int</type>
          <declname>eFitFn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>params</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Ensure the fitting parameters are well-behaved. </para>        </briefdescription>
        <detaileddescription>
<para>In order to make sure that fitting behaves according to the constraint that time constants are positive and increasing we enforce this here by setting all time constants to their absolute value and by adding e.g. |a_0| to |a_2|. This is done in conjunction with the fitting functions themselves. When there are multiple time constants we make sure that the successive time constants are at least double the previous ones and during fitting we enforce the they remain larger. It may very well help the convergence of the fitting routine. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="529" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="529" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1ac49f5dfe7d1124d4afa2345a065c0e0a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void extract_fit_params</definition>
        <argsstring>(int eFitFn, double params[])</argsstring>
        <name>extract_fit_params</name>
        <param>
          <type>int</type>
          <declname>eFitFn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>params</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Process the fitting parameters to get output parameters. </para>        </briefdescription>
        <detaileddescription>
<para>See comment at the previous function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="602" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="602" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1ad0d5c84278351b2f9cbb82c034012de5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void print_chi2_params</definition>
        <argsstring>(FILE *fp, const int eFitFn, const double fitparms[], const char *label, const int nfitpnts, const double x[], const double y[])</argsstring>
        <name>print_chi2_params</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>eFitFn</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>fitparms</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>nfitpnts</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>x</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const double</type>
          <declname>y</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Print chi-squared value and the parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="671" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="671" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1a0c46c22dccbf0e6e468166d2b88c69d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>real do_lmfit</definition>
        <argsstring>(int ndata, real c1[], real sig[], real dt, real *x0, real begintimefit, real endtimefit, const gmx_output_env_t *oenv, gmx_bool bVerbose, int eFitFn, double fitparms[], int fix, const char *fn_fitted)</argsstring>
        <name>do_lmfit</name>
        <param>
          <type>int</type>
          <declname>ndata</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>c1</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>sig</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>dt</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> *</type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>begintimefit</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>endtimefit</declname>
        </param>
        <param>
          <type>const <ref refid="structgmx__output__env__t" kindref="compound">gmx_output_env_t</ref> *</type>
          <declname>oenv</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bVerbose</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eFitFn</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fitparms</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>fix</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fn_fitted</declname>
        </param>
        <briefdescription>
<para>Use Levenberg-Marquardt method to fit to a nfitparm parameter exponential or to a transverse current autocorrelation function. </para>        </briefdescription>
        <detaileddescription>
<para>If x == NULL, the timestep dt will be used to create a time axis. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ndata</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of data points </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c1</parametername>
</parameternamelist>
<parameterdescription>
<para>The data points </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sig</parametername>
</parameternamelist>
<parameterdescription>
<para>The standard deviation in the points (can be NULL) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>The time step </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x0</parametername>
</parameternamelist>
<parameterdescription>
<para>The X-axis (may be NULL, see above) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">begintimefit</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting time for fitting </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">endtimefit</parametername>
</parameternamelist>
<parameterdescription>
<para>Ending time for fitting </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">oenv</parametername>
</parameternamelist>
<parameterdescription>
<para>Output formatting information </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bVerbose</parametername>
</parameternamelist>
<parameterdescription>
<para>Should the routine write to console? </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">eFitFn</parametername>
</parameternamelist>
<parameterdescription>
<para>Fitting function (0 .. effnNR) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">fitparms[]</parametername>
</parameternamelist>
<parameterdescription>
<para>Fitting parameters, see printed manual for a detailed description. Note that in all implemented cases the parameters corresponding to time constants will be generated with increasing values. Such input parameters should therefore be provided in increasing order. If this is not the case or if subsequent time parameters differ by less than a factor of 2, they will be modified to ensure tau_i+1 &gt;= 2 tau_i. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fix</parametername>
</parameternamelist>
<parameterdescription>
<para>Constrains fit parameter i at it&apos;s starting value, when the i&apos;th bit of fix is set. This works only when the N last parameters are fixed but not when a parameter somewhere in the middle needs to be fixed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fn_fitted</parametername>
</parameternamelist>
<parameterdescription>
<para>If not NULL file to print the data and fitted curve to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>integral. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="696" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="696" bodyend="841"/>
      </memberdef>
      <memberdef kind="function" id="expfit_8cpp_1a560ea7d97277b9e0576776ec695fb9b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>real fit_acf</definition>
        <argsstring>(int ncorr, int fitfn, const gmx_output_env_t *oenv, gmx_bool bVerbose, real tbeginfit, real tendfit, real dt, real c1[], real *fit)</argsstring>
        <name>fit_acf</name>
        <param>
          <type>int</type>
          <declname>ncorr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fitfn</declname>
        </param>
        <param>
          <type>const <ref refid="structgmx__output__env__t" kindref="compound">gmx_output_env_t</ref> *</type>
          <declname>oenv</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bVerbose</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>tbeginfit</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>tendfit</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>dt</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>c1</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> *</type>
          <declname>fit</declname>
        </param>
        <briefdescription>
<para>Fit an autocorrelation function to a pre-defined functional form. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000012"><xreftitle>Todo</xreftitle><xrefdescription><para>check parameters </para></xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ncorr</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fitfn</parametername>
</parameternamelist>
<parameterdescription>
<para>Fitting function (0 .. effnNR) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">oenv</parametername>
</parameternamelist>
<parameterdescription>
<para>Output formatting information </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bVerbose</parametername>
</parameternamelist>
<parameterdescription>
<para>Should the routine write to console? </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tbeginfit</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting time for fitting </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">tendfit</parametername>
</parameternamelist>
<parameterdescription>
<para>Ending time for fitting </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>The time step </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c1</parametername>
</parameternamelist>
<parameterdescription>
<para>The data points </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">fit</parametername>
</parameternamelist>
<parameterdescription>
<para>The fitting parameters </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the integral over the autocorrelation function? </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" line="843" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp" bodystart="843" bodyend="979"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements routine for fitting a data set to a curve. </para>    </briefdescription>
    <detaileddescription>
<internal><para><simplesect kind="author"><para>David van der Spoel <ulink url="mailto:david.vanderspoel@icm.uu.se">david.vanderspoel@icm.uu.se</ulink> </para></simplesect>
</para></internal>
    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/correlationfunctions/expfit.cpp"/>
  </compounddef>
</doxygen>

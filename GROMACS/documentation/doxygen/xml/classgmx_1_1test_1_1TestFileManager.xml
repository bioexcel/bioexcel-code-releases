<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1test_1_1TestFileManager" kind="class" prot="public">
    <compoundname>gmx::test::TestFileManager</compoundname>
    <includes local="no">testutils/testfilemanager.h</includes>
    <innerclass refid="classgmx_1_1test_1_1TestFileManager_1_1Impl" prot="public">gmx::test::TestFileManager::Impl</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestFileManager_1a2a8b5ea757e3488afa05f61bfe3ad703" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1PrivateImplPointer" kindref="compound">PrivateImplPointer</ref>&lt; <ref refid="classgmx_1_1test_1_1TestFileManager_1_1Impl" kindref="compound">Impl</ref> &gt;</type>
        <definition>PrivateImplPointer&lt;Impl&gt; gmx::test::TestFileManager::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.h" line="216" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileManager_1af42f5bc9e13682a94806d028a01c7ae5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::test::TestFileManager::TestFileManager</definition>
        <argsstring>()</argsstring>
        <name>TestFileManager</name>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.h" line="92" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.cpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileManager_1afdd0bab216769aedc691708083aaa740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::test::TestFileManager::~TestFileManager</definition>
        <argsstring>()</argsstring>
        <name>~TestFileManager</name>
        <briefdescription>
<para>Frees internal storage and deletes any accessed file paths. </para>        </briefdescription>
        <detaileddescription>
<para>Any errors (e.g., missing files) encountered while deleting the files are ignored. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.h" line="99" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.cpp" bodystart="148" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileManager_1a4a9b9c46f816658654f5531f8a05a47e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gmx::test::TestFileManager::getTemporaryFilePath</definition>
        <argsstring>(const char *suffix)</argsstring>
        <name>getTemporaryFilePath</name>
        <param>
          <type>const char *</type>
          <declname>suffix</declname>
        </param>
        <briefdescription>
<para>Creates a name for a temporary file within a single unit test. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">suffix</parametername>
</parameternamelist>
<parameterdescription>
<para>Suffix to add to the file name (should contain an extension if one is desired). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Temporary file name that includes the test name and <computeroutput>suffix</computeroutput>.</para></simplesect>
This method should only be called from within a Google Test test. Two calls with the same <computeroutput>suffix</computeroutput> return the same string within the same test. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.h" line="113" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.cpp" bodystart="156" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileManager_1afd73ff15ea24970e081639af67fec059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gmx::test::TestFileManager::getTemporaryFilePath</definition>
        <argsstring>(const std::string &amp;suffix)</argsstring>
        <name>getTemporaryFilePath</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>suffix</declname>
        </param>
        <briefdescription>
<para>Creates a name for a temporary file within a single unit test. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">suffix</parametername>
</parameternamelist>
<parameterdescription>
<para>Suffix to add to the file name (should contain an extension if one is desired). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Temporary file name that includes the test name and <computeroutput>suffix</computeroutput>.</para></simplesect>
This method should only be called from within a Google Test test. Two calls with the same <computeroutput>suffix</computeroutput> return the same string within the same test. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.h" line="115" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.cpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileManager_1ac1fe16409ae2f5db17190a06758e9b56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * gmx::test::TestFileManager::getOutputTempDirectory</definition>
        <argsstring>() const </argsstring>
        <name>getOutputTempDirectory</name>
        <briefdescription>
<para>Returns the path to the output temporary directory for tests which use this <ref refid="classgmx_1_1test_1_1TestFileManager" kindref="compound">TestFileManager</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> to output temporary directory </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.h" line="122" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.cpp" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileManager_1a5d7d861a2dd997ec65e149daf750de74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::TestFileManager::setOutputTempDirectory</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>setOutputTempDirectory</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Sets the output temporary directory for tests which use this <ref refid="classgmx_1_1test_1_1TestFileManager" kindref="compound">TestFileManager</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> at which test should write temporary files</para></parameterdescription>
</parameteritem>
</parameterlist>
<computeroutput>path</computeroutput> must name an existing directory. An internal copy of path is made. The caller is responsible for holding a valid mutex on the object before calling this member function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.h" line="134" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.cpp" bodystart="236" bodyend="243"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileManager_1aa985dc970268e09c7eaa50c682a138ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gmx::test::TestFileManager::getTestSpecificFileNameRoot</definition>
        <argsstring>()</argsstring>
        <name>getTestSpecificFileNameRoot</name>
        <briefdescription>
<para>Creates a file name root for use within a single unit test. </para>        </briefdescription>
        <detaileddescription>
<para>This method should only be called from within a Google Test test. Uses the Google Test test fixture and test case name to construct a string that is unique over all tests. Intended to produce distinct names for files that may be stored in the same directory for multiple tests. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.h" line="147" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.cpp" bodystart="175" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileManager_1a83b3a3d617c81c0c65ae6f5143e3aee1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gmx::test::TestFileManager::getTestSpecificFileName</definition>
        <argsstring>(const char *suffix)</argsstring>
        <name>getTestSpecificFileName</name>
        <param>
          <type>const char *</type>
          <declname>suffix</declname>
        </param>
        <briefdescription>
<para>Creates a file name for use within a single unit test. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">suffix</parametername>
</parameternamelist>
<parameterdescription>
<para>Suffix to add to the file name (should contain an extension if one is desired). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classgmx_1_1File" kindref="compound">File</ref> name that includes the test name and <computeroutput>suffix</computeroutput>.</para></simplesect>
This method should only be called from within a Google Test test. Two calls with the same <computeroutput>suffix</computeroutput> return the same string within the same test. Intended to produce distinct names for files that may be stored in the same directory for multiple tests. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.h" line="163" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.cpp" bodystart="185" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileManager_1ad9e9b159c4047c0d9560a0f752f2e3a1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gmx::test::TestFileManager::getInputFilePath</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>getInputFilePath</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Returns the path to a test input file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Relative path/filename to a test input file. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> to <computeroutput>filename</computeroutput> under the test input data directory. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.h" line="171" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.cpp" bodystart="196" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileManager_1a0a40fc254124c8dd4d2a7b1d52af9b4e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * gmx::test::TestFileManager::getInputDataDirectory</definition>
        <argsstring>()</argsstring>
        <name>getInputDataDirectory</name>
        <briefdescription>
<para>Returns the path to the test input directory. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> to input data directory for the test executable. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.h" line="178" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.cpp" bodystart="201" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileManager_1a76d100991d58fe45d13ec202e6c816b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::TestFileManager::setInputDataDirectory</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>setInputDataDirectory</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Sets the test input directory. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> from which test input data is looked up from.</para></parameterdescription>
</parameteritem>
</parameterlist>
<computeroutput>path</computeroutput> must name an existing directory.</para><para>This function is automatically called by <ref refid="unittest__main_8cpp" kindref="compound">unittest_main.cpp</ref> through <ref refid="group__module__testutils_1ga5b50a220f4fd9b9fdafd4fd6fab83bbe" kindref="member">initTestUtils()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.h" line="190" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.cpp" bodystart="218" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileManager_1a5626f43e5699ac6cdbd787ee3a202e74" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * gmx::test::TestFileManager::getGlobalOutputTempDirectory</definition>
        <argsstring>()</argsstring>
        <name>getGlobalOutputTempDirectory</name>
        <briefdescription>
<para>Returns the path to the global test output temporary directory for future <ref refid="classgmx_1_1test_1_1TestFileManager" kindref="compound">TestFileManager</ref> objects. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> to default output temporary directory for the test executable. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.h" line="197" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.cpp" bodystart="207" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestFileManager_1abac43900213cb72137e6a973f80f0e81" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::TestFileManager::setGlobalOutputTempDirectory</definition>
        <argsstring>(const char *path)</argsstring>
        <name>setGlobalOutputTempDirectory</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Sets the default global test output temporary directory for future <ref refid="classgmx_1_1test_1_1TestFileManager" kindref="compound">TestFileManager</ref> objects. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> at which tests should write temporary files</para></parameterdescription>
</parameteritem>
</parameterlist>
<computeroutput>path</computeroutput> must name an existing directory.</para><para>This function is automatically called by <ref refid="unittest__main_8cpp" kindref="compound">unittest_main.cpp</ref> through <ref refid="group__module__testutils_1ga5b50a220f4fd9b9fdafd4fd6fab83bbe" kindref="member">initTestUtils()</ref>. Test fixtures should call <ref refid="classgmx_1_1test_1_1TestFileManager_1a5d7d861a2dd997ec65e149daf750de74" kindref="member">setOutputTempDirectory()</ref>, rather than change the global state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.h" line="211" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.cpp" bodystart="227" bodyend="234"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper for tests that need input and output files. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal /> To be used as a member in a test fixture class, this class provides <ref refid="classgmx_1_1test_1_1TestFileManager_1a4a9b9c46f816658654f5531f8a05a47e" kindref="member">getTemporaryFilePath()</ref> method that returns a path for creating file names for temporary files. The returned path contains the name of the running test, making it unique across tests. Additionally, this class takes care of removing any temporary files (i.e., all paths returned by <ref refid="classgmx_1_1test_1_1TestFileManager_1a4a9b9c46f816658654f5531f8a05a47e" kindref="member">getTemporaryFilePath()</ref>) at test teardown (i.e., when the <ref refid="classgmx_1_1test_1_1TestFileManager" kindref="compound">TestFileManager</ref> is destructed).</para><para>In addition, class-level static accessors provide means to access data files that are located in the test source directory. This is used to provide input files for the tests, and also to store test reference data persistently (see <ref refid="classgmx_1_1test_1_1TestReferenceData" kindref="compound">TestReferenceData</ref>).</para><para>Note that <ref refid="classgmx_1_1test_1_1TestFileManager_1a76d100991d58fe45d13ec202e6c816b7" kindref="member">setInputDataDirectory()</ref> and <ref refid="classgmx_1_1test_1_1TestFileManager_1abac43900213cb72137e6a973f80f0e81" kindref="member">setGlobalOutputTempDirectory()</ref> must be called in setup code, before creating any objects of this class that are used for accessing the paths for these respective directories. Code in tests should avoid calling <ref refid="classgmx_1_1test_1_1TestFileManager_1abac43900213cb72137e6a973f80f0e81" kindref="member">setGlobalOutputTempDirectory()</ref>, and instead instantiate an object and use <ref refid="classgmx_1_1test_1_1TestFileManager_1a5d7d861a2dd997ec65e149daf750de74" kindref="member">setOutputTempDirectory()</ref>, so that the global state is not changed. </para>    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.h" line="89" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/testutils/testfilemanager.h" bodystart="88" bodyend="217"/>
    <listofallmembers>
      <member refid="classgmx_1_1test_1_1TestFileManager_1a5626f43e5699ac6cdbd787ee3a202e74" prot="public" virt="non-virtual"><scope>gmx::test::TestFileManager</scope><name>getGlobalOutputTempDirectory</name></member>
      <member refid="classgmx_1_1test_1_1TestFileManager_1a0a40fc254124c8dd4d2a7b1d52af9b4e" prot="public" virt="non-virtual"><scope>gmx::test::TestFileManager</scope><name>getInputDataDirectory</name></member>
      <member refid="classgmx_1_1test_1_1TestFileManager_1ad9e9b159c4047c0d9560a0f752f2e3a1" prot="public" virt="non-virtual"><scope>gmx::test::TestFileManager</scope><name>getInputFilePath</name></member>
      <member refid="classgmx_1_1test_1_1TestFileManager_1ac1fe16409ae2f5db17190a06758e9b56" prot="public" virt="non-virtual"><scope>gmx::test::TestFileManager</scope><name>getOutputTempDirectory</name></member>
      <member refid="classgmx_1_1test_1_1TestFileManager_1a4a9b9c46f816658654f5531f8a05a47e" prot="public" virt="non-virtual"><scope>gmx::test::TestFileManager</scope><name>getTemporaryFilePath</name></member>
      <member refid="classgmx_1_1test_1_1TestFileManager_1afd73ff15ea24970e081639af67fec059" prot="public" virt="non-virtual"><scope>gmx::test::TestFileManager</scope><name>getTemporaryFilePath</name></member>
      <member refid="classgmx_1_1test_1_1TestFileManager_1a83b3a3d617c81c0c65ae6f5143e3aee1" prot="public" virt="non-virtual"><scope>gmx::test::TestFileManager</scope><name>getTestSpecificFileName</name></member>
      <member refid="classgmx_1_1test_1_1TestFileManager_1aa985dc970268e09c7eaa50c682a138ac" prot="public" virt="non-virtual"><scope>gmx::test::TestFileManager</scope><name>getTestSpecificFileNameRoot</name></member>
      <member refid="classgmx_1_1test_1_1TestFileManager_1a2a8b5ea757e3488afa05f61bfe3ad703" prot="private" virt="non-virtual"><scope>gmx::test::TestFileManager</scope><name>impl_</name></member>
      <member refid="classgmx_1_1test_1_1TestFileManager_1abac43900213cb72137e6a973f80f0e81" prot="public" virt="non-virtual"><scope>gmx::test::TestFileManager</scope><name>setGlobalOutputTempDirectory</name></member>
      <member refid="classgmx_1_1test_1_1TestFileManager_1a76d100991d58fe45d13ec202e6c816b7" prot="public" virt="non-virtual"><scope>gmx::test::TestFileManager</scope><name>setInputDataDirectory</name></member>
      <member refid="classgmx_1_1test_1_1TestFileManager_1a5d7d861a2dd997ec65e149daf750de74" prot="public" virt="non-virtual"><scope>gmx::test::TestFileManager</scope><name>setOutputTempDirectory</name></member>
      <member refid="classgmx_1_1test_1_1TestFileManager_1af42f5bc9e13682a94806d028a01c7ae5" prot="public" virt="non-virtual"><scope>gmx::test::TestFileManager</scope><name>TestFileManager</name></member>
      <member refid="classgmx_1_1test_1_1TestFileManager_1afdd0bab216769aedc691708083aaa740" prot="public" virt="non-virtual"><scope>gmx::test::TestFileManager</scope><name>~TestFileManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

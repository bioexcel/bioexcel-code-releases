<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1ConstArrayRef" kind="class" prot="public">
    <compoundname>gmx::ConstArrayRef</compoundname>
    <includes local="no">gromacs/utility/arrayref.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgmx_1_1ConstArrayRef_1a7228c51415cdc1c7fe72fc78c538764d" prot="public" static="no">
        <type>T</type>
        <definition>typedef T gmx::ConstArrayRef&lt; T &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
<para>Type of values stored in the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="358" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ConstArrayRef_1ab65b495b02224ce68b3b5f829cadbe94" prot="public" static="no">
        <type>size_t</type>
        <definition>typedef size_t gmx::ConstArrayRef&lt; T &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
<para>Type for representing size of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="360" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ConstArrayRef_1a7cfbd58b26bf60dbe47c22e7a9c19305" prot="public" static="no">
        <type>ptrdiff_t</type>
        <definition>typedef ptrdiff_t gmx::ConstArrayRef&lt; T &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
<para>Type for representing difference between two container indices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="362" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ConstArrayRef_1af7ce1a3107fd084590eb1320959b0e45" prot="public" static="no">
        <type>const T &amp;</type>
        <definition>typedef const T&amp; gmx::ConstArrayRef&lt; T &gt;::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
<para>Const reference to a container element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="364" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ConstArrayRef_1ac2d5e28a2608c447c7db4af0f265cf77" prot="public" static="no">
        <type>const T *</type>
        <definition>typedef const T* gmx::ConstArrayRef&lt; T &gt;::const_pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
<para>Const pointer to a container element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="366" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ConstArrayRef_1a84f4516890c6ee6ff191ff39dbb01059" prot="public" static="no">
        <type>const T *</type>
        <definition>typedef const T* gmx::ConstArrayRef&lt; T &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
<para>Const iterator type for the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="368" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ConstArrayRef_1abda55908237c041fdec0a56abec39a89" prot="public" static="no">
        <type><ref refid="classgmx_1_1ConstArrayRef_1af7ce1a3107fd084590eb1320959b0e45" kindref="member">const_reference</ref></type>
        <definition>typedef const_reference gmx::ConstArrayRef&lt; T &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
<para>Equal to <emphasis>const_reference</emphasis> since changes are not allowed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="370" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ConstArrayRef_1a20fea3aa62ecc554ef222c8804a1b545" prot="public" static="no">
        <type><ref refid="classgmx_1_1ConstArrayRef_1ac2d5e28a2608c447c7db4af0f265cf77" kindref="member">const_pointer</ref></type>
        <definition>typedef const_pointer gmx::ConstArrayRef&lt; T &gt;::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
<para>Equal to <emphasis>const_pointer</emphasis> since changes are not allowed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="372" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ConstArrayRef_1a2f3714a3b40e08afc90e64239474fd73" prot="public" static="no">
        <type><ref refid="classgmx_1_1ConstArrayRef_1a84f4516890c6ee6ff191ff39dbb01059" kindref="member">const_iterator</ref></type>
        <definition>typedef const_iterator gmx::ConstArrayRef&lt; T &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
<para>Equal to <emphasis>const_iterator</emphasis> since changes are not allowed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="374" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ConstArrayRef_1a94318d6e769661f6d7bb903ee1b07ced" prot="public" static="no">
        <type>std::reverse_iterator&lt; <ref refid="classgmx_1_1ConstArrayRef_1a2f3714a3b40e08afc90e64239474fd73" kindref="member">iterator</ref> &gt;</type>
        <definition>typedef std::reverse_iterator&lt;iterator&gt; gmx::ConstArrayRef&lt; T &gt;::reverse_iterator</definition>
        <argsstring></argsstring>
        <name>reverse_iterator</name>
        <briefdescription>
<para>Standard reverse iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="376" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ConstArrayRef_1ae338d5cac94e9fb07cfe2b449b465ed8" prot="public" static="no">
        <type>std::reverse_iterator&lt; <ref refid="classgmx_1_1ConstArrayRef_1a84f4516890c6ee6ff191ff39dbb01059" kindref="member">const_iterator</ref> &gt;</type>
        <definition>typedef std::reverse_iterator&lt;const_iterator&gt; gmx::ConstArrayRef&lt; T &gt;::const_reverse_iterator</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <briefdescription>
<para>Standard reverse iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="378" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1ConstArrayRef_1a3191d2c22cf54fd22884dd0c93fbe74b" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1ConstArrayRef_1ac2d5e28a2608c447c7db4af0f265cf77" kindref="member">const_pointer</ref></type>
        <definition>const_pointer gmx::ConstArrayRef&lt; T &gt;::begin_</definition>
        <argsstring></argsstring>
        <name>begin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="524" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1ConstArrayRef_1a6f48124f73c45d24c62cccada2556291" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1ConstArrayRef_1ac2d5e28a2608c447c7db4af0f265cf77" kindref="member">const_pointer</ref></type>
        <definition>const_pointer gmx::ConstArrayRef&lt; T &gt;::end_</definition>
        <argsstring></argsstring>
        <name>end_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="525" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="525" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1a7a6e390d671ad2ded46609e53ee5026f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ConstArrayRef" kindref="compound">ConstArrayRef</ref>&lt; <ref refid="classgmx_1_1ConstArrayRef_1a7228c51415cdc1c7fe72fc78c538764d" kindref="member">value_type</ref> &gt;</type>
        <definition>static ConstArrayRef&lt;value_type&gt; gmx::ConstArrayRef&lt; T &gt;::fromPointers</definition>
        <argsstring>(const value_type *begin, const value_type *end)</argsstring>
        <name>fromPointers</name>
        <param>
          <type>const <ref refid="classgmx_1_1ConstArrayRef_1a7228c51415cdc1c7fe72fc78c538764d" kindref="member">value_type</ref> *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1ConstArrayRef_1a7228c51415cdc1c7fe72fc78c538764d" kindref="member">value_type</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Constructs a reference to a particular range from two pointers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the beginning of a range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the end of a range.</para></parameterdescription>
</parameteritem>
</parameterlist>
Passed pointers must remain valid for the lifetime of this object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="382" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="382" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1aabb9e2826c456cdf9f4f07f49f39e8e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ConstArrayRef" kindref="compound">ConstArrayRef</ref>&lt; <ref refid="classgmx_1_1ConstArrayRef_1a7228c51415cdc1c7fe72fc78c538764d" kindref="member">value_type</ref> &gt;</type>
        <definition>static ConstArrayRef&lt;value_type&gt; gmx::ConstArrayRef&lt; T &gt;::fromArray</definition>
        <argsstring>(const value_type *begin, size_t size)</argsstring>
        <name>fromArray</name>
        <param>
          <type>const <ref refid="classgmx_1_1ConstArrayRef_1a7228c51415cdc1c7fe72fc78c538764d" kindref="member">value_type</ref> *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Constructs a reference to an array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the beginning of the array. May be NULL if <computeroutput>size</computeroutput> is zero. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in the array.</para></parameterdescription>
</parameteritem>
</parameterlist>
Passed pointer must remain valid for the lifetime of this object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="388" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="388" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1aab2d7ef962fdc3b1a78c9799e86b3f5d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ConstArrayRef" kindref="compound">ConstArrayRef</ref>&lt; <ref refid="classgmx_1_1ConstArrayRef_1a7228c51415cdc1c7fe72fc78c538764d" kindref="member">value_type</ref> &gt;</type>
        <definition>static ConstArrayRef&lt;value_type&gt; gmx::ConstArrayRef&lt; T &gt;::fromVector</definition>
        <argsstring>(typename std::vector&lt; value_type &gt;::const_iterator begin, typename std::vector&lt; value_type &gt;::const_iterator end)</argsstring>
        <name>fromVector</name>
        <param>
          <type>typename std::vector&lt; <ref refid="classgmx_1_1ConstArrayRef_1a7228c51415cdc1c7fe72fc78c538764d" kindref="member">value_type</ref> &gt;::<ref refid="classgmx_1_1ConstArrayRef_1a84f4516890c6ee6ff191ff39dbb01059" kindref="member">const_iterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type>typename std::vector&lt; <ref refid="classgmx_1_1ConstArrayRef_1a7228c51415cdc1c7fe72fc78c538764d" kindref="member">value_type</ref> &gt;::<ref refid="classgmx_1_1ConstArrayRef_1a84f4516890c6ee6ff191ff39dbb01059" kindref="member">const_iterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Constructs a reference to a particular range in a std::vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator to the beginning of a range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator to the end of a range.</para></parameterdescription>
</parameteritem>
</parameterlist>
The referenced vector must remain valid and not be reallocated for the lifetime of this object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="394" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="394" bodyend="400"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1a01f08a3b4455b11f645efe5ac2d09ce5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::ConstArrayRef&lt; T &gt;::ConstArrayRef</definition>
        <argsstring>()</argsstring>
        <name>ConstArrayRef</name>
        <briefdescription>
<para>Constructs an empty reference. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="405" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="405" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1a9029dcd01fc825ae9c941294a2f103a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::ConstArrayRef&lt; T &gt;::ConstArrayRef</definition>
        <argsstring>(const EmptyArrayRef &amp;)</argsstring>
        <name>ConstArrayRef</name>
        <param>
          <type>const <ref refid="structgmx_1_1EmptyArrayRef" kindref="compound">EmptyArrayRef</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Constructs an empty reference. </para>        </briefdescription>
        <detaileddescription>
<para>This is provided for convenience, such that <ref refid="structgmx_1_1EmptyArrayRef" kindref="compound">EmptyArrayRef</ref> can be used to initialize any Const <ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>, without specifying the template type. It is not explicit to enable that usage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="413" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="413" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1ad227a7380cfbd0d87c55f4ec08d7f977" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::ConstArrayRef&lt; T &gt;::ConstArrayRef</definition>
        <argsstring>(const_pointer begin, const_pointer end)</argsstring>
        <name>ConstArrayRef</name>
        <param>
          <type><ref refid="classgmx_1_1ConstArrayRef_1ac2d5e28a2608c447c7db4af0f265cf77" kindref="member">const_pointer</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1ConstArrayRef_1ac2d5e28a2608c447c7db4af0f265cf77" kindref="member">const_pointer</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Constructs a reference to a particular range. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the beginning of a range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the end of a range.</para></parameterdescription>
</parameteritem>
</parameterlist>
Passed pointers must remain valid for the lifetime of this object.</para><para><simplesect kind="note"><para>For clarity, use the non-member function constArrayRefFromPointers instead. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="425" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="425" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1a0d44dd6b7f5fece5f038734019d069b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::ConstArrayRef&lt; T &gt;::ConstArrayRef</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;v)</argsstring>
        <name>ConstArrayRef</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Constructs a reference to a whole vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">v</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to reference.</para></parameterdescription>
</parameteritem>
</parameterlist>
Passed vector must remain valid and not be reallocated for the lifetime of this object.</para><para>This constructor is not explicit to allow directly passing std::vector to a method that takes <ref refid="classgmx_1_1ConstArrayRef" kindref="compound">ConstArrayRef</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="441" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="441" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1a1ca5882192dcebda0bb2c3024d1413c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ConstArrayRef_1a84f4516890c6ee6ff191ff39dbb01059" kindref="member">const_iterator</ref></type>
        <definition>const_iterator gmx::ConstArrayRef&lt; T &gt;::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns an iterator to the beginning of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="477" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="477" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1af777df53fed30c67c35c55b8c8b234d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ConstArrayRef_1a84f4516890c6ee6ff191ff39dbb01059" kindref="member">const_iterator</ref></type>
        <definition>const_iterator gmx::ConstArrayRef&lt; T &gt;::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns an iterator to the end of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="479" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="479" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1a3000bdd333dd6ed7dd3a548d397f2441" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ConstArrayRef_1ae338d5cac94e9fb07cfe2b449b465ed8" kindref="member">const_reverse_iterator</ref></type>
        <definition>const_reverse_iterator gmx::ConstArrayRef&lt; T &gt;::rbegin</definition>
        <argsstring>() const </argsstring>
        <name>rbegin</name>
        <briefdescription>
<para>Returns an iterator to the reverse beginning of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="481" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="481" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1a8527eeb6897e444c8ac03267e11febb4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ConstArrayRef_1ae338d5cac94e9fb07cfe2b449b465ed8" kindref="member">const_reverse_iterator</ref></type>
        <definition>const_reverse_iterator gmx::ConstArrayRef&lt; T &gt;::rend</definition>
        <argsstring>() const </argsstring>
        <name>rend</name>
        <briefdescription>
<para>Returns an iterator to the reverse end of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="483" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="483" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1aa6aba63c734c119a3aa56f237ad0f333" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ConstArrayRef_1ab65b495b02224ce68b3b5f829cadbe94" kindref="member">size_type</ref></type>
        <definition>size_type gmx::ConstArrayRef&lt; T &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the size of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="486" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="486" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1a3e8574c37fd76ef28cba58a65cc92091" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ConstArrayRef_1ab65b495b02224ce68b3b5f829cadbe94" kindref="member">size_type</ref></type>
        <definition>size_type gmx::ConstArrayRef&lt; T &gt;::capacity</definition>
        <argsstring>() const </argsstring>
        <name>capacity</name>
        <briefdescription>
<para>Identical to <ref refid="classgmx_1_1ConstArrayRef_1aa6aba63c734c119a3aa56f237ad0f333" kindref="member">size()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="488" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="488" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1a6725da3326326993a278e983a1f14848" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::ConstArrayRef&lt; T &gt;::empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
<para>Whether the container is empty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="490" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="490" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1a15095526acd621cfc61aceb373851ece" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ConstArrayRef_1af7ce1a3107fd084590eb1320959b0e45" kindref="member">const_reference</ref></type>
        <definition>const_reference gmx::ConstArrayRef&lt; T &gt;::operator[]</definition>
        <argsstring>(size_type n) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="classgmx_1_1ConstArrayRef_1ab65b495b02224ce68b3b5f829cadbe94" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Access container element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="493" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="493" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1aa3402f1b3da1034e68c27f3edbea1d17" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ConstArrayRef_1af7ce1a3107fd084590eb1320959b0e45" kindref="member">const_reference</ref></type>
        <definition>const_reference gmx::ConstArrayRef&lt; T &gt;::at</definition>
        <argsstring>(size_type n) const </argsstring>
        <name>at</name>
        <param>
          <type><ref refid="classgmx_1_1ConstArrayRef_1ab65b495b02224ce68b3b5f829cadbe94" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Access container element (throws on out-of-range error). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="495" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="495" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1a06200ac1eee9f56b26894f23ae76767b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ConstArrayRef_1af7ce1a3107fd084590eb1320959b0e45" kindref="member">const_reference</ref></type>
        <definition>const_reference gmx::ConstArrayRef&lt; T &gt;::front</definition>
        <argsstring>() const </argsstring>
        <name>front</name>
        <briefdescription>
<para>Returns the first element in the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="504" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="504" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1affc80cbb4e05d3827c2541d18ddd62f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ConstArrayRef_1af7ce1a3107fd084590eb1320959b0e45" kindref="member">const_reference</ref></type>
        <definition>const_reference gmx::ConstArrayRef&lt; T &gt;::back</definition>
        <argsstring>() const </argsstring>
        <name>back</name>
        <briefdescription>
<para>Returns the last element in the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="506" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="506" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1af7caa66d9d847bd452b520d7e8e8aa5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ConstArrayRef_1ac2d5e28a2608c447c7db4af0f265cf77" kindref="member">const_pointer</ref></type>
        <definition>const_pointer gmx::ConstArrayRef&lt; T &gt;::data</definition>
        <argsstring>() const </argsstring>
        <name>data</name>
        <briefdescription>
<para>Returns a raw pointer to the contents of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="509" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="509" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1af9c00ef92094cc2a1f725f64b8dec471" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::ConstArrayRef&lt; T &gt;::swap</definition>
        <argsstring>(ConstArrayRef&lt; T &gt; &amp;other)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classgmx_1_1ConstArrayRef" kindref="compound">ConstArrayRef</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Swaps referenced memory with the other object. </para>        </briefdescription>
        <detaileddescription>
<para>The actual memory areas are not modified, only the references are swapped. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="517" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="517" bodyend="521"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1a50ee12f2bdc2f09edc898fb1749d30e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classgmx_1_1ConstArrayRef" kindref="compound">ConstArrayRef</ref>&lt; T &gt;</type>
        <definition>ConstArrayRef&lt; T &gt; constArrayRefFromPointers</definition>
        <argsstring>(const T *begin, const T *end)</argsstring>
        <name>constArrayRefFromPointers</name>
        <param>
          <type>const T *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const T *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Constructs a reference to a particular range from two pointers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the beginning of a range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the end of a range.</para></parameterdescription>
</parameteritem>
</parameterlist>
Passed pointers must remain valid for the lifetime of this object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="556" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="556" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1a166d990cb222e245882df676209ebfa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classgmx_1_1ConstArrayRef" kindref="compound">ConstArrayRef</ref>&lt; T &gt;</type>
        <definition>ConstArrayRef&lt; T &gt; constArrayRefFromArray</definition>
        <argsstring>(const T *begin, size_t size)</argsstring>
        <name>constArrayRefFromArray</name>
        <param>
          <type>const T *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Constructs a reference to an array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the beginning of the array. May be NULL if <computeroutput>size</computeroutput> is zero. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in the array.</para></parameterdescription>
</parameteritem>
</parameterlist>
Passed pointer must remain valid for the lifetime of this object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="563" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="563" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ConstArrayRef_1adaf3ee38ea2a4fa96217ea650453c89b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classgmx_1_1ConstArrayRef" kindref="compound">ConstArrayRef</ref>&lt; T &gt;</type>
        <definition>ConstArrayRef&lt; T &gt; constArrayRefFromVector</definition>
        <argsstring>(typename std::vector&lt; T &gt;::const_iterator begin, typename std::vector&lt; T &gt;::const_iterator end)</argsstring>
        <name>constArrayRefFromVector</name>
        <param>
          <type>typename std::vector&lt; T &gt;::<ref refid="classgmx_1_1ConstArrayRef_1a84f4516890c6ee6ff191ff39dbb01059" kindref="member">const_iterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type>typename std::vector&lt; T &gt;::<ref refid="classgmx_1_1ConstArrayRef_1a84f4516890c6ee6ff191ff39dbb01059" kindref="member">const_iterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Constructs a reference to a particular range in a std::vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator to the beginning of a range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator to the end of a range.</para></parameterdescription>
</parameteritem>
</parameterlist>
The referenced vector must remain valid and not be reallocated for the lifetime of this object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" line="570" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/arrayref.h" bodystart="570" bodyend="574"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>STL-like container for non-mutable interface to a C array (or part of a std::vector). </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type of elements.</para></parameterdescription>
</parameteritem>
</parameterlist>
This class provides an interface similar to <computeroutput>std::vector&lt;T&gt;</computeroutput>, with the following main differences:<itemizedlist>
<listitem><para>This class does not have its own storage. Instead, it references an existing array of values (either a C-style array or part of an existing std::vector&lt;T&gt;).</para></listitem><listitem><para>Only const methods are provided to access the stored values. It is not possible to alter the referenced array.</para></listitem><listitem><para>Copying objects of this type is cheap, and the copies behave identically to the original object: the copy references the same set of values.</para></listitem></itemizedlist>
</para><para>This class is useful for writing wrappers that expose a different view of the internal data stored as a single vector/array.</para><para>Methods in this class do not throw, except where indicated.</para><para>Note that due to a Doxygen limitation, the constructor that takes a C array whose size is known at compile time does not appear in the documentation. </para>    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/commandline/cmdlinehelpwriter.h" line="56" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/commandline/cmdlinehelpwriter.h" bodystart="56" bodyend="-1"/>
    <listofallmembers>
      <member refid="classgmx_1_1ConstArrayRef_1aa3402f1b3da1034e68c27f3edbea1d17" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>at</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1affc80cbb4e05d3827c2541d18ddd62f3" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>back</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a1ca5882192dcebda0bb2c3024d1413c1" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>begin</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a3191d2c22cf54fd22884dd0c93fbe74b" prot="private" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>begin_</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a3e8574c37fd76ef28cba58a65cc92091" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>capacity</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a84f4516890c6ee6ff191ff39dbb01059" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>const_iterator</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1ac2d5e28a2608c447c7db4af0f265cf77" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>const_pointer</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1af7ce1a3107fd084590eb1320959b0e45" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>const_reference</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1ae338d5cac94e9fb07cfe2b449b465ed8" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>const_reverse_iterator</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a01f08a3b4455b11f645efe5ac2d09ce5" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>ConstArrayRef</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a9029dcd01fc825ae9c941294a2f103a2" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>ConstArrayRef</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1ad227a7380cfbd0d87c55f4ec08d7f977" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>ConstArrayRef</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a0d44dd6b7f5fece5f038734019d069b9" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>ConstArrayRef</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a166d990cb222e245882df676209ebfa0" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>constArrayRefFromArray</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a50ee12f2bdc2f09edc898fb1749d30e0" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>constArrayRefFromPointers</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1adaf3ee38ea2a4fa96217ea650453c89b" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>constArrayRefFromVector</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1af7caa66d9d847bd452b520d7e8e8aa5c" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>data</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a7cfbd58b26bf60dbe47c22e7a9c19305" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>difference_type</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a6725da3326326993a278e983a1f14848" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>empty</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1af777df53fed30c67c35c55b8c8b234d3" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>end</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a6f48124f73c45d24c62cccada2556291" prot="private" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>end_</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1aabb9e2826c456cdf9f4f07f49f39e8e6" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>fromArray</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a7a6e390d671ad2ded46609e53ee5026f" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>fromPointers</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1aab2d7ef962fdc3b1a78c9799e86b3f5d" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>fromVector</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a06200ac1eee9f56b26894f23ae76767b" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>front</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a2f3714a3b40e08afc90e64239474fd73" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>iterator</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a15095526acd621cfc61aceb373851ece" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>operator[]</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a20fea3aa62ecc554ef222c8804a1b545" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>pointer</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a3000bdd333dd6ed7dd3a548d397f2441" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>rbegin</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1abda55908237c041fdec0a56abec39a89" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>reference</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a8527eeb6897e444c8ac03267e11febb4" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>rend</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a94318d6e769661f6d7bb903ee1b07ced" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>reverse_iterator</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1aa6aba63c734c119a3aa56f237ad0f333" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>size</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1ab65b495b02224ce68b3b5f829cadbe94" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>size_type</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1af9c00ef92094cc2a1f725f64b8dec471" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>swap</name></member>
      <member refid="classgmx_1_1ConstArrayRef_1a7228c51415cdc1c7fe72fc78c538764d" prot="public" virt="non-virtual"><scope>gmx::ConstArrayRef</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

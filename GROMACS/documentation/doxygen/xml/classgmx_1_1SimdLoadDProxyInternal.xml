<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1SimdLoadDProxyInternal" kind="class" prot="public">
    <compoundname>gmx::SimdLoadDProxyInternal</compoundname>
    <includes local="no">gromacs/simd/simd.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1SimdLoadDProxyInternal_1ad7a61a2098bf3e55d6c01aeb75c19f42" prot="private" static="no" mutable="no">
        <type>const double *const</type>
        <definition>const double* const gmx::SimdLoadDProxyInternal::m_</definition>
        <argsstring></argsstring>
        <name>m_</name>
        <briefdescription>
<para>The pointer used to load memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="509" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="509" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1SimdLoadDProxyInternal_1a4ad41d3c2a8769cdb681f8bfe8f505db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::SimdLoadDProxyInternal::operator double</definition>
        <argsstring>() const </argsstring>
        <name>operator double</name>
        <briefdescription>
<para>Conversion method that will execute load of scalar double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="497" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="497" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SimdLoadDProxyInternal_1ab9f3e39d42a256a2fa2160767f1ec393" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::SimdLoadDProxyInternal::operator SimdDouble</definition>
        <argsstring>() const </argsstring>
        <name>operator SimdDouble</name>
        <briefdescription>
<para>Conversion method that will execute load of <ref refid="classgmx_1_1SimdDouble" kindref="compound">SimdDouble</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="500" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="500" bodyend="500"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgmx_1_1SimdLoadDProxyInternal_1a239ac3fb2cf34cbfd03961bd46031df5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::SimdLoadDProxyInternal::SimdLoadDProxyInternal</definition>
        <argsstring>(const double *m)</argsstring>
        <name>SimdLoadDProxyInternal</name>
        <param>
          <type>const double *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Private constructor can only be called from <ref refid="classgmx_1_1SimdLoadDProxyInternal_1a2123f67dbb7dae230e409c3150dfd4b9" kindref="member">load()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="504" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="504" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SimdLoadDProxyInternal_1ae746c462b018a4ed022ab34c54e3fe6f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1SimdLoadDProxyInternal" kindref="compound">SimdLoadDProxyInternal</ref> &amp;</type>
        <definition>SimdLoadDProxyInternal&amp; gmx::SimdLoadDProxyInternal::operator=</definition>
        <argsstring>(const SimdLoadDProxyInternal &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classgmx_1_1SimdLoadDProxyInternal" kindref="compound">SimdLoadDProxyInternal</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="511" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SimdLoadDProxyInternal_1ab22280d169cbc81912966ccef6348d4b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::SimdLoadDProxyInternal::SimdLoadDProxyInternal</definition>
        <argsstring>(const SimdLoadDProxyInternal &amp;)=delete</argsstring>
        <name>SimdLoadDProxyInternal</name>
        <param>
          <type>const <ref refid="classgmx_1_1SimdLoadDProxyInternal" kindref="compound">SimdLoadDProxyInternal</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="511" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgmx_1_1SimdLoadDProxyInternal_1a2123f67dbb7dae230e409c3150dfd4b9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend const <ref refid="classgmx_1_1SimdLoadDProxyInternal" kindref="compound">SimdLoadDProxyInternal</ref> gmx_simdcall</type>
        <definition>const SimdLoadDProxyInternal gmx_simdcall load</definition>
        <argsstring>(const double *m)</argsstring>
        <name>load</name>
        <param>
          <type>const double *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Load function that returns proxy object for <ref refid="classgmx_1_1SimdDouble" kindref="compound">SimdDouble</ref> and double. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to load memory </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Proxy object that will call the actual load for either <ref refid="classgmx_1_1SimdDouble" kindref="compound">SimdDouble</ref> or double when you assign it and the conversion method is called. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="507" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Proxy object to enable <ref refid="classgmx_1_1SimdLoadDProxyInternal_1a2123f67dbb7dae230e409c3150dfd4b9" kindref="member">load()</ref> for SIMD and double types. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal /> This object is returned by the <ref refid="classgmx_1_1SimdLoadDProxyInternal_1a2123f67dbb7dae230e409c3150dfd4b9" kindref="member">load()</ref> function that takes a single pointer to a double. When the result is assigned to either <ref refid="classgmx_1_1SimdDouble" kindref="compound">SimdDouble</ref> or double, the appropriate conversion method will be executed, which in turn calls the correct low-level load function. In pratice this simply means you can use <ref refid="classgmx_1_1SimdLoadDProxyInternal_1a2123f67dbb7dae230e409c3150dfd4b9" kindref="member">load()</ref> regardless for both SIMD and non-SIMD floating point data in templated functions.</para><para>This is an internal class you should never touch or create objects of. The only reason the constructor isn&apos;t private is that the <ref refid="classgmx_1_1SimdLoadDProxyInternal_1a2123f67dbb7dae230e409c3150dfd4b9" kindref="member">load()</ref> function must be static to enable aggressive inlining. </para>    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" line="494" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/simd/simd.h" bodystart="493" bodyend="512"/>
    <listofallmembers>
      <member refid="classgmx_1_1SimdLoadDProxyInternal_1a2123f67dbb7dae230e409c3150dfd4b9" prot="private" virt="non-virtual"><scope>gmx::SimdLoadDProxyInternal</scope><name>load</name></member>
      <member refid="classgmx_1_1SimdLoadDProxyInternal_1ad7a61a2098bf3e55d6c01aeb75c19f42" prot="private" virt="non-virtual"><scope>gmx::SimdLoadDProxyInternal</scope><name>m_</name></member>
      <member refid="classgmx_1_1SimdLoadDProxyInternal_1a4ad41d3c2a8769cdb681f8bfe8f505db" prot="public" virt="non-virtual"><scope>gmx::SimdLoadDProxyInternal</scope><name>operator double</name></member>
      <member refid="classgmx_1_1SimdLoadDProxyInternal_1ab9f3e39d42a256a2fa2160767f1ec393" prot="public" virt="non-virtual"><scope>gmx::SimdLoadDProxyInternal</scope><name>operator SimdDouble</name></member>
      <member refid="classgmx_1_1SimdLoadDProxyInternal_1ae746c462b018a4ed022ab34c54e3fe6f" prot="private" virt="non-virtual"><scope>gmx::SimdLoadDProxyInternal</scope><name>operator=</name></member>
      <member refid="classgmx_1_1SimdLoadDProxyInternal_1a239ac3fb2cf34cbfd03961bd46031df5" prot="private" virt="non-virtual"><scope>gmx::SimdLoadDProxyInternal</scope><name>SimdLoadDProxyInternal</name></member>
      <member refid="classgmx_1_1SimdLoadDProxyInternal_1ab22280d169cbc81912966ccef6348d4b" prot="private" virt="non-virtual"><scope>gmx::SimdLoadDProxyInternal</scope><name>SimdLoadDProxyInternal</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

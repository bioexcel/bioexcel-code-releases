<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="group__module__selection" kind="group">
    <compoundname>module_selection</compoundname>
    <title>Parsing and Evaluation of Analysis Selections (selection)</title>
    <innerfile refid="centerofmass_8cpp">centerofmass.cpp</innerfile>
    <innerfile refid="centerofmass_8h">centerofmass.h</innerfile>
    <innerfile refid="compiler_8cpp">compiler.cpp</innerfile>
    <innerfile refid="compiler_8h">compiler.h</innerfile>
    <innerfile refid="evaluate_8cpp">evaluate.cpp</innerfile>
    <innerfile refid="evaluate_8h">evaluate.h</innerfile>
    <innerfile refid="indexutil_8cpp">indexutil.cpp</innerfile>
    <innerfile refid="indexutil_8h">indexutil.h</innerfile>
    <innerfile refid="keywords_8h">keywords.h</innerfile>
    <innerfile refid="mempool_8cpp">mempool.cpp</innerfile>
    <innerfile refid="mempool_8h">mempool.h</innerfile>
    <innerfile refid="nbsearch_8cpp">nbsearch.cpp</innerfile>
    <innerfile refid="nbsearch_8h">nbsearch.h</innerfile>
    <innerfile refid="params_8cpp">params.cpp</innerfile>
    <innerfile refid="parser__internal_8h">parser_internal.h</innerfile>
    <innerfile refid="parsetree_8cpp">parsetree.cpp</innerfile>
    <innerfile refid="parsetree_8h">parsetree.h</innerfile>
    <innerfile refid="poscalc_8cpp">poscalc.cpp</innerfile>
    <innerfile refid="poscalc_8h">poscalc.h</innerfile>
    <innerfile refid="position_8cpp">position.cpp</innerfile>
    <innerfile refid="position_8h">position.h</innerfile>
    <innerfile refid="scanner_8h">scanner.h</innerfile>
    <innerfile refid="scanner__internal_8cpp">scanner_internal.cpp</innerfile>
    <innerfile refid="scanner__internal_8h">scanner_internal.h</innerfile>
    <innerfile refid="selection_8cpp">selection.cpp</innerfile>
    <innerfile refid="selection_2selection_8h">selection.h</innerfile>
    <innerfile refid="selectioncollection-impl_8h">selectioncollection-impl.h</innerfile>
    <innerfile refid="selectioncollection_8cpp">selectioncollection.cpp</innerfile>
    <innerfile refid="selectioncollection_8h">selectioncollection.h</innerfile>
    <innerfile refid="selectionenums_8h">selectionenums.h</innerfile>
    <innerfile refid="selectionfileoption_8h">selectionfileoption.h</innerfile>
    <innerfile refid="selectionfileoptionstorage_8h">selectionfileoptionstorage.h</innerfile>
    <innerfile refid="selectionoption_8cpp">selectionoption.cpp</innerfile>
    <innerfile refid="selectionoption_8h">selectionoption.h</innerfile>
    <innerfile refid="selectionoptionbehavior_8cpp">selectionoptionbehavior.cpp</innerfile>
    <innerfile refid="selectionoptionbehavior_8h">selectionoptionbehavior.h</innerfile>
    <innerfile refid="selectionoptionmanager_8cpp">selectionoptionmanager.cpp</innerfile>
    <innerfile refid="selectionoptionmanager_8h">selectionoptionmanager.h</innerfile>
    <innerfile refid="selectionoptionstorage_8h">selectionoptionstorage.h</innerfile>
    <innerfile refid="selelem_8cpp">selelem.cpp</innerfile>
    <innerfile refid="selelem_8h">selelem.h</innerfile>
    <innerfile refid="selhelp_8cpp">selhelp.cpp</innerfile>
    <innerfile refid="selhelp_8h">selhelp.h</innerfile>
    <innerfile refid="selmethod_8cpp">selmethod.cpp</innerfile>
    <innerfile refid="selmethod_8h">selmethod.h</innerfile>
    <innerfile refid="selparam_8h">selparam.h</innerfile>
    <innerfile refid="selvalue_8cpp">selvalue.cpp</innerfile>
    <innerfile refid="selvalue_8h">selvalue.h</innerfile>
    <innerfile refid="sm__compare_8cpp">sm_compare.cpp</innerfile>
    <innerfile refid="sm__distance_8cpp">sm_distance.cpp</innerfile>
    <innerfile refid="sm__insolidangle_8cpp">sm_insolidangle.cpp</innerfile>
    <innerfile refid="sm__keywords_8cpp">sm_keywords.cpp</innerfile>
    <innerfile refid="sm__merge_8cpp">sm_merge.cpp</innerfile>
    <innerfile refid="sm__permute_8cpp">sm_permute.cpp</innerfile>
    <innerfile refid="sm__position_8cpp">sm_position.cpp</innerfile>
    <innerfile refid="sm__same_8cpp">sm_same.cpp</innerfile>
    <innerfile refid="sm__simple_8cpp">sm_simple.cpp</innerfile>
    <innerfile refid="symrec_8cpp">symrec.cpp</innerfile>
    <innerfile refid="symrec_8h">symrec.h</innerfile>
    <innerfile refid="tests_2indexutil_8cpp">indexutil.cpp</innerfile>
    <innerfile refid="tests_2nbsearch_8cpp">nbsearch.cpp</innerfile>
    <innerfile refid="tests_2poscalc_8cpp">poscalc.cpp</innerfile>
    <innerfile refid="tests_2selectioncollection_8cpp">selectioncollection.cpp</innerfile>
    <innerfile refid="tests_2selectionoption_8cpp">selectionoption.cpp</innerfile>
    <innerfile refid="toputils_8cpp">toputils.cpp</innerfile>
    <innerfile refid="toputils_8h">toputils.h</innerfile>
    <innerfile refid="selection_8h">selection.h</innerfile>
    <innerclass refid="classgmx_1_1FileNameOptionManager" prot="public">gmx::FileNameOptionManager</innerclass>
    <innerclass refid="classgmx_1_1SelectionCompiler" prot="public">gmx::SelectionCompiler</innerclass>
    <innerclass refid="classanonymous__namespace_02evaluate_8cpp_03_1_1MempoolSelelemReserver" prot="public">anonymous_namespace{evaluate.cpp}::MempoolSelelemReserver</innerclass>
    <innerclass refid="classanonymous__namespace_02evaluate_8cpp_03_1_1MempoolGroupReserver" prot="public">anonymous_namespace{evaluate.cpp}::MempoolGroupReserver</innerclass>
    <innerclass refid="classanonymous__namespace_02evaluate_8cpp_03_1_1SelelemTemporaryValueAssigner" prot="public">anonymous_namespace{evaluate.cpp}::SelelemTemporaryValueAssigner</innerclass>
    <innerclass refid="classgmx_1_1AnalysisNeighborhoodPositions" prot="public">gmx::AnalysisNeighborhoodPositions</innerclass>
    <innerclass refid="classgmx_1_1AnalysisNeighborhood" prot="public">gmx::AnalysisNeighborhood</innerclass>
    <innerclass refid="classgmx_1_1AnalysisNeighborhoodPair" prot="public">gmx::AnalysisNeighborhoodPair</innerclass>
    <innerclass refid="classgmx_1_1AnalysisNeighborhoodSearch" prot="public">gmx::AnalysisNeighborhoodSearch</innerclass>
    <innerclass refid="classgmx_1_1AnalysisNeighborhoodPairSearch" prot="public">gmx::AnalysisNeighborhoodPairSearch</innerclass>
    <innerclass refid="classgmx_1_1SelectionParserValue" prot="public">gmx::SelectionParserValue</innerclass>
    <innerclass refid="classgmx_1_1SelectionParserParameter" prot="public">gmx::SelectionParserParameter</innerclass>
    <innerclass refid="classgmx_1_1PositionCalculationCollection_1_1Impl" prot="public">gmx::PositionCalculationCollection::Impl</innerclass>
    <innerclass refid="classgmx_1_1PositionCalculationCollection" prot="public">gmx::PositionCalculationCollection</innerclass>
    <innerclass refid="classgmx_1_1internal_1_1SelectionData" prot="public">gmx::internal::SelectionData</innerclass>
    <innerclass refid="classgmx_1_1Selection" prot="public">gmx::Selection</innerclass>
    <innerclass refid="classgmx_1_1SelectionPosition" prot="public">gmx::SelectionPosition</innerclass>
    <innerclass refid="structgmx__ana__selcollection__t" prot="public">gmx_ana_selcollection_t</innerclass>
    <innerclass refid="classgmx_1_1SelectionEvaluator" prot="public">gmx::SelectionEvaluator</innerclass>
    <innerclass refid="classgmx_1_1SelectionCollection" prot="public">gmx::SelectionCollection</innerclass>
    <innerclass refid="classgmx_1_1SelectionFileOption" prot="public">gmx::SelectionFileOption</innerclass>
    <innerclass refid="classgmx_1_1SelectionFileOptionInfo" prot="public">gmx::SelectionFileOptionInfo</innerclass>
    <innerclass refid="classgmx_1_1SelectionFileOptionStorage" prot="public">gmx::SelectionFileOptionStorage</innerclass>
    <innerclass refid="classgmx_1_1SelectionOption" prot="public">gmx::SelectionOption</innerclass>
    <innerclass refid="classgmx_1_1SelectionOptionInfo" prot="public">gmx::SelectionOptionInfo</innerclass>
    <innerclass refid="classgmx_1_1ITopologyProvider" prot="public">gmx::ITopologyProvider</innerclass>
    <innerclass refid="classgmx_1_1SelectionOptionBehavior" prot="public">gmx::SelectionOptionBehavior</innerclass>
    <innerclass refid="classgmx_1_1SelectionOptionManager" prot="public">gmx::SelectionOptionManager</innerclass>
    <innerclass refid="classgmx_1_1SelectionOptionStorage" prot="public">gmx::SelectionOptionStorage</innerclass>
    <innerclass refid="classgmx_1_1anonymous__namespace_02selhelp_8cpp_03_1_1KeywordDetailsHelpTopic" prot="public">gmx::anonymous_namespace{selhelp.cpp}::KeywordDetailsHelpTopic</innerclass>
    <innerclass refid="classgmx_1_1anonymous__namespace_02selhelp_8cpp_03_1_1KeywordsHelpTopic" prot="public">gmx::anonymous_namespace{selhelp.cpp}::KeywordsHelpTopic</innerclass>
    <innerclass refid="structt__methoddata__distance" prot="public">t_methoddata_distance</innerclass>
    <innerclass refid="structt__partition__item" prot="public">t_partition_item</innerclass>
    <innerclass refid="structt__partition" prot="public">t_partition</innerclass>
    <innerclass refid="structt__spheresurfacebin" prot="public">t_spheresurfacebin</innerclass>
    <innerclass refid="structt__methoddata__insolidangle" prot="public">t_methoddata_insolidangle</innerclass>
    <innerclass refid="classanonymous__namespace_02sm__keywords_8cpp_03_1_1StringKeywordMatchItem" prot="public">anonymous_namespace{sm_keywords.cpp}::StringKeywordMatchItem</innerclass>
    <innerclass refid="structt__methoddata__same" prot="public">t_methoddata_same</innerclass>
    <innerclass refid="classgmx_1_1SelectionParserSymbol" prot="public">gmx::SelectionParserSymbol</innerclass>
    <innerclass refid="classgmx_1_1SelectionParserSymbolIterator" prot="public">gmx::SelectionParserSymbolIterator</innerclass>
    <innerclass refid="classgmx_1_1SelectionParserSymbolTable" prot="public">gmx::SelectionParserSymbolTable</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__module__selection_1ga2ab58eea84794341a35ac67e9b2dd229" prot="public" static="no">
        <name>SelectionStringMatchType</name>
        <enumvalue id="group__module__selection_1gga2ab58eea84794341a35ac67e9b2dd229a76e91d87b1fc9e35af5a744934e0be5d" prot="public">
          <name>eStringMatchType_Auto</name>
          <briefdescription>
<para>Deduce from the string. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__module__selection_1gga2ab58eea84794341a35ac67e9b2dd229ae3793d484d4d5b121f9beff792e7a542" prot="public">
          <name>eStringMatchType_Exact</name>
          <briefdescription>
<para>Match as a literal string. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__module__selection_1gga2ab58eea84794341a35ac67e9b2dd229a9c54f931f9075ae0a0bd35e55e07312b" prot="public">
          <name>eStringMatchType_Wildcard</name>
          <briefdescription>
<para>Match using ? and * as wildcards. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__module__selection_1gga2ab58eea84794341a35ac67e9b2dd229ad061c2f42b00f07d32e9d3a18222e84c" prot="public">
          <name>eStringMatchType_RegularExpression</name>
          <briefdescription>
<para>Match using regular expressions. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>String matching mode for string keyword expressions. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/parsetree.h" line="81" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/parsetree.h" bodystart="80" bodyend="86"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__module__selection_1ga14897c6c4dbb3e7c573c61d7213da93e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool next_group_index</definition>
        <argsstring>(int atomIndex, t_topology *top, e_index_t type, int *id)</argsstring>
        <name>next_group_index</name>
        <param>
          <type>int</type>
          <declname>atomIndex</declname>
        </param>
        <param>
          <type><ref refid="structt__topology" kindref="compound">t_topology</ref> *</type>
          <declname>top</declname>
        </param>
        <param>
          <type><ref refid="indexutil_8h_1ad7330829cb93245b9de7ed268cf6ba67" kindref="member">e_index_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Helper for splitting a sequence of atom indices into groups. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">atomIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the next atom in the sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">top</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of group to split into. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to receive the next group id. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>atomIndex</computeroutput> starts a new group in the sequence, i.e., if <computeroutput>*id</computeroutput> was changed.</para></simplesect>
<computeroutput>*id</computeroutput> should be initialized to <computeroutput>-1</computeroutput> before first call of this function, and then each atom index in the sequence passed to the function in turn. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/indexutil.cpp" line="794" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/indexutil.cpp" bodystart="794" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="group__module__selection_1ga602d5f10c261b4110186f5c1c65c3703" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HelpTopicPointer</type>
        <definition>HelpTopicPointer gmx::createSelectionHelpTopic</definition>
        <argsstring>()</argsstring>
        <name>createSelectionHelpTopic</name>
        <briefdescription>
<para>*/ </para>        </briefdescription>
        <detaileddescription>
<para>Creates a help tree for selections.</para><para> <libinternal /> <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Root topic of the created selection tree. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/selhelp.cpp" line="803" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/selection/selhelp.cpp" bodystart="803" bodyend="815"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides functionality for initializing and evaluating selections. </para>    </briefdescription>
    <detaileddescription>
<para>The core of the selection engine is accessed through <ref refid="classgmx_1_1SelectionCollection" kindref="compound">gmx::SelectionCollection</ref>, which manages a set of selections. Documentation for that class explains the general selection mechanisms.</para><para>For each selection that is parsed using a <ref refid="classgmx_1_1SelectionCollection" kindref="compound">gmx::SelectionCollection</ref>, a <ref refid="classgmx_1_1Selection" kindref="compound">gmx::Selection</ref> handle is returned and can be used to access information about that selection. <ref refid="classgmx_1_1SelectionPosition" kindref="compound">gmx::SelectionPosition</ref> is a helper class used to access information about individual positions in a selection. These classes refer to internal state within the <ref refid="classgmx_1_1SelectionCollection" kindref="compound">gmx::SelectionCollection</ref>, and their contents update automatically when the <ref refid="classgmx_1_1SelectionCollection" kindref="compound">gmx::SelectionCollection</ref> is compiled or evaluated.</para><para>This module also provides <ref refid="classgmx_1_1SelectionOption" kindref="compound">gmx::SelectionOption</ref> and <ref refid="classgmx_1_1SelectionOptionInfo" kindref="compound">gmx::SelectionOptionInfo</ref> classes for declaring options that evaluate to selections (see <ref refid="group__module__options" kindref="compound">Extensible Handling of Options (options)</ref> for general explanation of the options mechanism). These classes provide the main interface to obtain <ref refid="classgmx_1_1Selection" kindref="compound">gmx::Selection</ref> objects in trajectory analysis using <ref refid="classgmx_1_1TrajectoryAnalysisModule" kindref="compound">gmx::TrajectoryAnalysisModule</ref>. To use these classes outside the trajectory analysis framework, a <ref refid="classgmx_1_1SelectionOptionManager" kindref="compound">gmx::SelectionOptionManager</ref> or a <ref refid="classgmx_1_1SelectionOptionBehavior" kindref="compound">gmx::SelectionOptionBehavior</ref> needs to be created to serve as a bridge between the selection option classes and the <ref refid="classgmx_1_1SelectionCollection" kindref="compound">gmx::SelectionCollection</ref> object. <ref refid="classgmx_1_1SelectionFileOption" kindref="compound">gmx::SelectionFileOption</ref> can be used to implement generic file input for selection options (done internally within <ref refid="classgmx_1_1SelectionOptionBehavior" kindref="compound">gmx::SelectionOptionBehavior</ref>).</para><para>The selection module contains some lower-level functionality that is currently internal to it (<ref refid="centerofmass_8h" kindref="compound">centerofmass.h</ref>, <ref refid="indexutil_8h" kindref="compound">indexutil.h</ref>, <ref refid="poscalc_8h" kindref="compound">poscalc.h</ref>, <ref refid="position_8h" kindref="compound">position.h</ref>), but could possibly be useful also outside the module. It should be considered whether they should be moved somewhere else.</para><para><simplesect kind="author"><para>Teemu Murtola <ulink url="mailto:teemu.murtola@gmail.com">teemu.murtola@gmail.com</ulink> </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>

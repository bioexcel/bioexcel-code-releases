<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1FileNameOptionManager" kind="class" prot="public">
    <compoundname>gmx::FileNameOptionManager</compoundname>
    <basecompoundref refid="classgmx_1_1IOptionManager" prot="public" virt="non-virtual">gmx::IOptionManager</basecompoundref>
    <includes local="no">gromacs/options/filenameoptionmanager.h</includes>
    <innerclass refid="classgmx_1_1FileNameOptionManager_1_1Impl" prot="public">gmx::FileNameOptionManager::Impl</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1FileNameOptionManager_1af4696ee3b681ba502455bb58a7d20a70" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1PrivateImplPointer" kindref="compound">PrivateImplPointer</ref>&lt; <ref refid="classgmx_1_1FileNameOptionManager_1_1Impl" kindref="compound">Impl</ref> &gt;</type>
        <definition>PrivateImplPointer&lt;Impl&gt; gmx::FileNameOptionManager::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/filenameoptionmanager.h" line="176" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/filenameoptionmanager.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1FileNameOptionManager_1a64b6ae493e4cfd9ade278c33c77192fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::FileNameOptionManager::FileNameOptionManager</definition>
        <argsstring>()</argsstring>
        <name>FileNameOptionManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/filenameoptionmanager.h" line="85" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/filenameoptionmanager.cpp" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1FileNameOptionManager_1a306fc566365038f320c6ed2dbb662619" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>gmx::FileNameOptionManager::~FileNameOptionManager</definition>
        <argsstring>()</argsstring>
        <name>~FileNameOptionManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/filenameoptionmanager.h" line="86" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/filenameoptionmanager.cpp" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1FileNameOptionManager_1ae4de8b094d01a0f277bb15f59e663772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::FileNameOptionManager::setInputRedirector</definition>
        <argsstring>(const IFileInputRedirector *redirector)</argsstring>
        <name>setInputRedirector</name>
        <param>
          <type>const <ref refid="classgmx_1_1IFileInputRedirector" kindref="compound">IFileInputRedirector</ref> *</type>
          <declname>redirector</declname>
        </param>
        <briefdescription>
<para>Redirects file existence checks. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">redirector</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1File" kindref="compound">File</ref> redirector to use for existence checks.</para></parameterdescription>
</parameteritem>
</parameterlist>
The manager checks for existence of various files on the file system to complete file extensions. This method can be used to redirect those checks to an alternative implementation.</para><para>This is used for unit tests to more easily control the result of the checks and to keep the tests as fast as possible by avoiding real file system access. To keep implementation options open, behavior with <computeroutput>redirector == NULL</computeroutput> is undefined and should not be relied on. For tests, there should only be need to call this a single time, right after creating the manager. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/filenameoptionmanager.h" line="104" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/filenameoptionmanager.cpp" bodystart="140" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1FileNameOptionManager_1af034d289519b058998ef490aaa748702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::FileNameOptionManager::disableInputOptionChecking</definition>
        <argsstring>(bool bDisable)</argsstring>
        <name>disableInputOptionChecking</name>
        <param>
          <type>bool</type>
          <declname>bDisable</declname>
        </param>
        <briefdescription>
<para>Disables special input file option handling. </para>        </briefdescription>
        <detaileddescription>
<para>If disabled, this removes all file system calls from the file name option parsing. The values returned by <ref refid="classgmx_1_1FileNameOption" kindref="compound">FileNameOption</ref> for input and input/output files are handled with the same simple rule as for output files: the default extension is added if the file does not end in a recognized extension, and no other checking is done.</para><para>This changes the following behavior:<itemizedlist>
<listitem><para>Providing non-existent files does not trigger errors.</para></listitem><listitem><para>Extensions for input files are not completed to an existing file.</para></listitem><listitem><para>Compressed input files do not work. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/filenameoptionmanager.h" line="121" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/filenameoptionmanager.cpp" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1FileNameOptionManager_1a1f872f2dbe12798b6597bdc7b7854434" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::FileNameOptionManager::addDefaultFileNameOption</definition>
        <argsstring>(IOptionsContainer *options, const char *name)</argsstring>
        <name>addDefaultFileNameOption</name>
        <param>
          <type><ref refid="classgmx_1_1IOptionsContainer" kindref="compound">IOptionsContainer</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Adds an option for setting the default global file name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Options" kindref="compound">Options</ref> to add the option to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the option to add.</para></parameterdescription>
</parameteritem>
</parameterlist>
If the user sets the option, it affects all file name options that would normally return a default value: the basename for the returned value is taken from the value of the default file name option, instead from an option-specific default (FileNameOption::defaultBaseName()). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/filenameoptionmanager.h" line="135" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/filenameoptionmanager.cpp" bodystart="151" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1FileNameOptionManager_1a3bec8f1f598744374292e50afd25892b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gmx::FileNameOptionManager::completeFileName</definition>
        <argsstring>(const std::string &amp;value, const FileNameOptionInfo &amp;option)</argsstring>
        <name>completeFileName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1FileNameOptionInfo" kindref="compound">FileNameOptionInfo</ref> &amp;</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Completes file name option values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value provided by the user. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>Option for which the value should be completed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value for the file name option. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1InvalidInputError" kindref="compound">InvalidInputError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the value is not valid for this option.</para></parameterdescription>
</parameteritem>
</parameterlist>
This method is called for each value that the user provides to a <ref refid="classgmx_1_1FileNameOption" kindref="compound">FileNameOption</ref>. The return value (if non-empty) is used as the value of the option instead of the user-provided one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/filenameoptionmanager.h" line="151" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/filenameoptionmanager.cpp" bodystart="159" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1FileNameOptionManager_1aef79085e8a1002456c68dea1144a8ed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gmx::FileNameOptionManager::completeDefaultFileName</definition>
        <argsstring>(const std::string &amp;prefix, const FileNameOptionInfo &amp;option)</argsstring>
        <name>completeDefaultFileName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1FileNameOptionInfo" kindref="compound">FileNameOptionInfo</ref> &amp;</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Completes default values for file name options. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>Default prefix for the file name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>Option for which the value should be completed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value for the file name option. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1InvalidInputError" kindref="compound">InvalidInputError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if the value is not valid for this option.</para></parameterdescription>
</parameteritem>
</parameterlist>
This method is called for each <ref refid="classgmx_1_1FileNameOption" kindref="compound">FileNameOption</ref> that has a default value (either a standard default value, or if the user provided the option without an explicit value). <computeroutput>prefix</computeroutput> is the default value without the default extension for the option. If the return value is non-empty, it is used as the default value for the option instead of <computeroutput>prefix</computeroutput> + default extension. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/filenameoptionmanager.h" line="170" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/filenameoptionmanager.cpp" bodystart="267" bodyend="315"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Handles interaction of file name options with global options. </para>    </briefdescription>
    <detaileddescription>
<para>This class contains all logic that completes file names based on user input and file system contents. Additionally, this class implements support for a global default file name that overrides any option-specific default, as well as additional control over how the completion is done.</para><para><xrefsect id="todo_1_todo000039"><xreftitle>Todo</xreftitle><xrefdescription><para>Most of the functionality in this class is specific to command line parsing, so it would be cleaner to replace this with an interface, and have the actual code in the <computeroutput>commandline</computeroutput> module.</para></xrefdescription></xrefsect></para><para>Adding a <ref refid="classgmx_1_1FileNameOptionManager" kindref="compound">FileNameOptionManager</ref> for an <ref refid="classgmx_1_1Options" kindref="compound">Options</ref> object is optional, even if the <ref refid="classgmx_1_1Options" kindref="compound">Options</ref> contains <ref refid="classgmx_1_1FileNameOption" kindref="compound">FileNameOption</ref> options. Features from the manager are not available if the manager is not created, but otherwise the options work: the values provided to <ref refid="classgmx_1_1FileNameOption" kindref="compound">FileNameOption</ref> are used as they are, and exceptions are thrown if they are no valid instead of attempting to complete them.</para><para><simplesect kind="see"><para><ref refid="classgmx_1_1Options_1aec34346be097c2d666ff4434c4bf562e" kindref="member">Options::addManager()</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1424">
        <label>gmx::FileNameOptionManager</label>
        <link refid="classgmx_1_1FileNameOptionManager"/>
        <childnode refid="1425" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1425">
        <label>gmx::IOptionManager</label>
        <link refid="classgmx_1_1IOptionManager"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1426">
        <label>gmx::FileNameOptionManager</label>
        <link refid="classgmx_1_1FileNameOptionManager"/>
        <childnode refid="1427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1427">
        <label>gmx::IOptionManager</label>
        <link refid="classgmx_1_1IOptionManager"/>
      </node>
    </collaborationgraph>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/filenameoptionmanager.h" line="83" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/options/filenameoptionmanager.h" bodystart="82" bodyend="177"/>
    <listofallmembers>
      <member refid="classgmx_1_1FileNameOptionManager_1a1f872f2dbe12798b6597bdc7b7854434" prot="public" virt="non-virtual"><scope>gmx::FileNameOptionManager</scope><name>addDefaultFileNameOption</name></member>
      <member refid="classgmx_1_1FileNameOptionManager_1aef79085e8a1002456c68dea1144a8ed9" prot="public" virt="non-virtual"><scope>gmx::FileNameOptionManager</scope><name>completeDefaultFileName</name></member>
      <member refid="classgmx_1_1FileNameOptionManager_1a3bec8f1f598744374292e50afd25892b" prot="public" virt="non-virtual"><scope>gmx::FileNameOptionManager</scope><name>completeFileName</name></member>
      <member refid="classgmx_1_1FileNameOptionManager_1af034d289519b058998ef490aaa748702" prot="public" virt="non-virtual"><scope>gmx::FileNameOptionManager</scope><name>disableInputOptionChecking</name></member>
      <member refid="classgmx_1_1FileNameOptionManager_1a64b6ae493e4cfd9ade278c33c77192fe" prot="public" virt="non-virtual"><scope>gmx::FileNameOptionManager</scope><name>FileNameOptionManager</name></member>
      <member refid="classgmx_1_1FileNameOptionManager_1af4696ee3b681ba502455bb58a7d20a70" prot="private" virt="non-virtual"><scope>gmx::FileNameOptionManager</scope><name>impl_</name></member>
      <member refid="classgmx_1_1FileNameOptionManager_1ae4de8b094d01a0f277bb15f59e663772" prot="public" virt="non-virtual"><scope>gmx::FileNameOptionManager</scope><name>setInputRedirector</name></member>
      <member refid="classgmx_1_1FileNameOptionManager_1a306fc566365038f320c6ed2dbb662619" prot="public" virt="virtual"><scope>gmx::FileNameOptionManager</scope><name>~FileNameOptionManager</name></member>
      <member refid="classgmx_1_1IOptionManager_1ae18c34dabc95565b34921559e0466e55" prot="protected" virt="virtual"><scope>gmx::FileNameOptionManager</scope><name>~IOptionManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

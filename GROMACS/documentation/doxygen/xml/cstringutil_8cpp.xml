<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="cstringutil_8cpp" kind="file">
    <compoundname>cstringutil.cpp</compoundname>
    <includes refid="gmxpre_8h" local="yes">gmxpre.h</includes>
    <includes refid="cstringutil_8h" local="yes">cstringutil.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">cassert</includes>
    <includes local="no">cctype</includes>
    <includes local="no">cstring</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="basedefinitions_8h" local="yes">gromacs/utility/basedefinitions.h</includes>
    <includes refid="fatalerror_8h" local="yes">gromacs/utility/fatalerror.h</includes>
    <includes refid="futil_8h" local="yes">gromacs/utility/futil.h</includes>
    <includes refid="smalloc_8h" local="yes">gromacs/utility/smalloc.h</includes>
    <includes refid="sysinfo_8h" local="yes">gromacs/utility/sysinfo.h</includes>
    <incdepgraph>
      <node id="22180">
        <label>stdarg.h</label>
      </node>
      <node id="22183">
        <label>gromacs/utility/smalloc.h</label>
        <link refid="smalloc_8h"/>
        <childnode refid="22184" relation="include">
        </childnode>
        <childnode refid="22169" relation="include">
        </childnode>
      </node>
      <node id="22179">
        <label>gromacs/utility/fatalerror.h</label>
        <link refid="fatalerror_8h"/>
        <childnode refid="22180" relation="include">
        </childnode>
        <childnode refid="22168" relation="include">
        </childnode>
        <childnode refid="22169" relation="include">
        </childnode>
      </node>
      <node id="22170">
        <label>stdint.h</label>
      </node>
      <node id="22172">
        <label>stdlib.h</label>
      </node>
      <node id="22166">
        <label>gmxpre.h</label>
        <link refid="gmxpre_8h"/>
      </node>
      <node id="22167">
        <label>cstringutil.h</label>
        <link refid="cstringutil_8h"/>
        <childnode refid="22168" relation="include">
        </childnode>
        <childnode refid="22169" relation="include">
        </childnode>
      </node>
      <node id="22173">
        <label>cassert</label>
      </node>
      <node id="22177">
        <label>string</label>
      </node>
      <node id="22184">
        <label>stddef.h</label>
      </node>
      <node id="22182">
        <label>limits.h</label>
      </node>
      <node id="22178">
        <label>vector</label>
      </node>
      <node id="22176">
        <label>sstream</label>
      </node>
      <node id="22186">
        <label>time.h</label>
      </node>
      <node id="22174">
        <label>cctype</label>
      </node>
      <node id="22181">
        <label>gromacs/utility/futil.h</label>
        <link refid="futil_8h"/>
        <childnode refid="22182" relation="include">
        </childnode>
        <childnode refid="22168" relation="include">
        </childnode>
        <childnode refid="22169" relation="include">
        </childnode>
      </node>
      <node id="22165">
        <label>src/gromacs/utility/cstringutil.cpp</label>
        <link refid="cstringutil.cpp"/>
        <childnode refid="22166" relation="include">
        </childnode>
        <childnode refid="22167" relation="include">
        </childnode>
        <childnode refid="22168" relation="include">
        </childnode>
        <childnode refid="22172" relation="include">
        </childnode>
        <childnode refid="22173" relation="include">
        </childnode>
        <childnode refid="22174" relation="include">
        </childnode>
        <childnode refid="22175" relation="include">
        </childnode>
        <childnode refid="22176" relation="include">
        </childnode>
        <childnode refid="22177" relation="include">
        </childnode>
        <childnode refid="22178" relation="include">
        </childnode>
        <childnode refid="22169" relation="include">
        </childnode>
        <childnode refid="22179" relation="include">
        </childnode>
        <childnode refid="22181" relation="include">
        </childnode>
        <childnode refid="22183" relation="include">
        </childnode>
        <childnode refid="22185" relation="include">
        </childnode>
      </node>
      <node id="22169">
        <label>gromacs/utility/basedefinitions.h</label>
        <link refid="basedefinitions_8h"/>
        <childnode refid="22170" relation="include">
        </childnode>
        <childnode refid="22171" relation="include">
        </childnode>
      </node>
      <node id="22185">
        <label>gromacs/utility/sysinfo.h</label>
        <link refid="sysinfo_8h"/>
        <childnode refid="22184" relation="include">
        </childnode>
        <childnode refid="22186" relation="include">
        </childnode>
      </node>
      <node id="22168">
        <label>stdio.h</label>
      </node>
      <node id="22175">
        <label>cstring</label>
      </node>
      <node id="22171">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cstringutil_8cpp_1a929ed36fc580abd4984ae5500adbf9c3" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int gmx_string_hash_init</definition>
        <argsstring></argsstring>
        <name>gmx_string_hash_init</name>
        <initializer>= 5381</initializer>
        <briefdescription>
<para>Magic hash initialization number from Dan J. </para>        </briefdescription>
        <detaileddescription>
<para>Bernstein. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="330" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="330" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cstringutil_8cpp_1ac103ab2c7ce56d62340d2f351142ccab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int continuing</definition>
        <argsstring>(char *s)</argsstring>
        <name>continuing</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Strip trailing spaces and if s ends with a <ref refid="cstringutil_8h_1ab711666ad09d7f6c0b91576525ea158e" kindref="member">CONTINUE</ref> remove that too. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>TRUE if s ends with a CONTINUE, FALSE otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="59" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="59" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1ad88cc879f2f602ea6e73c5dd71777156" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* fgets2</definition>
        <argsstring>(char *line, int n, FILE *stream)</argsstring>
        <name>fgets2</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
          <defname>line</defname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Reads a line from a stream. </para>        </briefdescription>
        <detaileddescription>
<para>This routine reads a string from stream of max length n, including \0 and zero terminated, without newlines. <computeroutput>s</computeroutput> should be long enough (&gt;= <computeroutput>n</computeroutput>) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="79" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="79" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1a4371bd7d8210d09a110b9642b42b7e7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void strip_comment</definition>
        <argsstring>(char *line)</argsstring>
        <name>strip_comment</name>
        <param>
          <type>char *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Remove portion of a line after a <ref refid="cstringutil_8h_1a15be34a1d7b93d10f581b60833afca7a" kindref="member">COMMENTSIGN</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="109" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="109" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1a74173c7afe5600452edf4956ae58bbe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void upstring</definition>
        <argsstring>(char *str)</argsstring>
        <name>upstring</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Make a string uppercase. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="125" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="125" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1a1d9ff13ca6fbfeed019ff8459a2d7b27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ltrim</definition>
        <argsstring>(char *str)</argsstring>
        <name>ltrim</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Remove leading whitespace from a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="135" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="135" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1a36c31afc53e5a1e87177eff988d6d17e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtrim</definition>
        <argsstring>(char *str)</argsstring>
        <name>rtrim</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Remove trailing whitespace from a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="159" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="159" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1a60ea663401e86ca2a60a29e76c716679" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void trim</definition>
        <argsstring>(char *str)</argsstring>
        <name>trim</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Remove leading and trailing whitespace from a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="176" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="176" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1a075edcfe0f6dfd4ca5e15770d19c2709" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nice_header</definition>
        <argsstring>(FILE *out, const char *fn)</argsstring>
        <name>nice_header</name>
        <param>
          <type>FILE *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
<para>Prints creation time stamp and user information into a file as comments. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="182" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="182" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1ac088a6356a03b85a516823c77e8bf594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_strcasecmp_min</definition>
        <argsstring>(const char *str1, const char *str2)</argsstring>
        <name>gmx_strcasecmp_min</name>
        <param>
          <type>const char *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str2</declname>
        </param>
        <briefdescription>
<para>Version of <ref refid="cstringutil_8h_1a6b201e0b9f999f296778a437ac6249d4" kindref="member">gmx_strcasecmp()</ref> that also ignores &apos;-&apos; and &apos;_&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="204" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="204" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1aa2ea251cda429a6f437ee9c5a5746590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_strncasecmp_min</definition>
        <argsstring>(const char *str1, const char *str2, int n)</argsstring>
        <name>gmx_strncasecmp_min</name>
        <param>
          <type>const char *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Version of <ref refid="cstringutil_8h_1ab7c80209718acf9845ef30405b612d25" kindref="member">gmx_strncasecmp()</ref> that also ignores &apos;-&apos; and &apos;_&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="230" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="230" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1a6b201e0b9f999f296778a437ac6249d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_strcasecmp</definition>
        <argsstring>(const char *str1, const char *str2)</argsstring>
        <name>gmx_strcasecmp</name>
        <param>
          <type>const char *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str2</declname>
        </param>
        <briefdescription>
<para>Case-insensitive strcmp(). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="259" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="259" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1ab7c80209718acf9845ef30405b612d25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_strncasecmp</definition>
        <argsstring>(const char *str1, const char *str2, int n)</argsstring>
        <name>gmx_strncasecmp</name>
        <param>
          <type>const char *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Case-insensitive strncmp(). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="276" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="276" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1a94be9cd5076011714476c26badc7d250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gmx_strdup</definition>
        <argsstring>(const char *src)</argsstring>
        <name>gmx_strdup</name>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Creates a duplicate of <computeroutput>src</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="299" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="299" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1a2a892337fcde247de2e1f1ac5b414d0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gmx_strndup</definition>
        <argsstring>(const char *src, int n)</argsstring>
        <name>gmx_strndup</name>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Duplicates first <computeroutput>n</computeroutput> characters of <computeroutput>src</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="310" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="310" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1a8f29e4714f3618996df11a09fbdf820e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int gmx_string_fullhash_func</definition>
        <argsstring>(const char *s, unsigned int hash_init)</argsstring>
        <name>gmx_string_fullhash_func</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>hash_init</declname>
        </param>
        <briefdescription>
<para>Return a hash of the string according to Dan J. Bernsteins algorithm. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>String to calculate hash for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hash_init</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial (or previous) hash value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Updated hash value (hash_init combined with string hash).</para></simplesect>
On the first invocation for a new string, use the constant gmx_string_hash_init for the second argument. If you want to create a hash corresponding to several concatenated strings, provide the returned hash value as hash_init for the second string, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="334" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="334" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1a7551c37dbac76a247a4305b3bea52f0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int gmx_string_hash_func</definition>
        <argsstring>(const char *s, unsigned int hash_init)</argsstring>
        <name>gmx_string_hash_func</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>hash_init</declname>
        </param>
        <briefdescription>
<para>Return a hash of the string according to Dan J. Bernsteins algorithm. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>String to calculate hash for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hash_init</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial (or previous) hash value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Updated hash value (hash_init combined with string hash).</para></simplesect>
Identical to gmx_string_fullhash_func, except that this routine only uses characters for which isalnum(c) is true, and all characters are converted to upper case. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="346" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="346" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1ae5242279c5f96040a36162574dc97d0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx_wcmatch</definition>
        <argsstring>(const char *pattern, const char *str)</argsstring>
        <name>gmx_wcmatch</name>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Pattern matching with wildcards. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>Pattern to match against. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>String to match. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on match, GMX_NO_WCMATCH if there is no match.</para></simplesect>
Matches <computeroutput>str</computeroutput> against <computeroutput>pattern</computeroutput>, which may contain * and ? wildcards. All other characters are matched literally. Currently, it is not possible to match literal * or ?. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="361" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="361" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1a78512fb6ca46ef3528c91480dfcfba2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* wrap_lines</definition>
        <argsstring>(const char *buf, int line_width, int indent, gmx_bool bIndentFirst)</argsstring>
        <name>wrap_lines</name>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indent</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bIndentFirst</declname>
        </param>
        <briefdescription>
<para>Wraps lines, optionally indenting lines. </para>        </briefdescription>
        <detaileddescription>
<para>Wraps lines at <computeroutput>linewidth</computeroutput>, indenting all following lines by <computeroutput>indent</computeroutput> spaces. A temp buffer is allocated and returned, which can be disposed of if no longer needed. If <computeroutput>bIndentFirst</computeroutput> is FALSE, then the first line will not be indented, only the lines that are created due to wapping. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="425" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="425" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1ae4477abec400b014f38cc5389835f742" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gmx_int64_t</type>
        <definition>gmx_int64_t str_to_int64_t</definition>
        <argsstring>(const char *str, char **endptr)</argsstring>
        <name>str_to_int64_t</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>endptr</declname>
        </param>
        <briefdescription>
<para>Convert a string to gmx_int64_t. </para>        </briefdescription>
        <detaileddescription>
<para>This method works as the standard library function strtol(), except that it does not support different bases. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="529" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="529" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1a3cb3397e019fa79f20ec3cfcfb4c81f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* gmx_step_str</definition>
        <argsstring>(gmx_int64_t i, char *buf)</argsstring>
        <name>gmx_step_str</name>
        <param>
          <type>gmx_int64_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Prints a gmx_int64_t value in buf and returns the pointer to buf. </para>        </briefdescription>
        <detaileddescription>
<para>buf should be large enough to contain i: STEPSTRSIZE (22) chars. When multiple gmx_int64_t values are printed in the same printf call, be sure to call gmx_step_str with different buffers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="538" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="538" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1a993d674a5511831a274d989927423cb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parse_digits_from_string</definition>
        <argsstring>(const char *digitstring, int *ndigits, int **digitlist)</argsstring>
        <name>parse_digits_from_string</name>
        <param>
          <type>const char *</type>
          <declname>digitstring</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ndigits</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>digitlist</declname>
        </param>
        <briefdescription>
<para>Construct an array of digits an input string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">digitstring</parametername>
</parameternamelist>
<parameterdescription>
<para>String that must contain only digits, or only digits and commas </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ndigits</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of return array with the values of the digits </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">digitlist</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of digits found in digitstring. Allocated by this function with size *ndigits. Calling code is responsible for deallocation. If digitstring is NULL, then ndigits is set to zero and digitlist to NULL. If digitstring contains a non digit-or-comma character, a fatal error results. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="544" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="544" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1a6e9036486ecc3db7965717c1263d2196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parse_digits_from_plain_string</definition>
        <argsstring>(const char *digitstring, int *ndigits, int **digitlist)</argsstring>
        <name>parse_digits_from_plain_string</name>
        <param>
          <type>const char *</type>
          <declname>digitstring</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ndigits</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>digitlist</declname>
        </param>
        <briefdescription>
<para>Construct an array of digits found in the input string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">digitstring</parametername>
</parameternamelist>
<parameterdescription>
<para>String that must contain only digits </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ndigits</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of return array with the values of the digits </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">digitlist</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of digits found in digitstring. Allocated by this function with size *ndigits. Calling code is responsible for deallocation.</para></parameterdescription>
</parameteritem>
</parameterlist>
If digitstring is NULL, then ndigits is set to zero and digitlist to NULL. If digitstring contains a non-digit character, a fatal error results. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="564" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="564" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="cstringutil_8cpp_1a84e7306c4b152ca09f9cf8b892217bd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parse_digits_from_csv_string</definition>
        <argsstring>(const char *digitstring, int *ndigits, int **digitlist)</argsstring>
        <name>parse_digits_from_csv_string</name>
        <param>
          <type>const char *</type>
          <declname>digitstring</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ndigits</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>digitlist</declname>
        </param>
        <briefdescription>
<para>Construct an array of digits from a comma separated input string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">digitstring</parametername>
</parameternamelist>
<parameterdescription>
<para>String that must contain only digits and commas </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ndigits</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of return array with the values of the digits </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">digitlist</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of digits found in digitstring. Allocated by this function with size *ndigits. Calling code is responsible for deallocation.</para></parameterdescription>
</parameteritem>
</parameterlist>
If digitstring is NULL, then ndigits is set to zero and digitlist to NULL. If digitstring contains a non digit-or-comma character, a fatal error results. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" line="590" column="1" bodyfile="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp" bodystart="590" bodyend="619"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/mnt/workspace/Release_workflow_2016/gromacs-2016.3/src/gromacs/utility/cstringutil.cpp"/>
  </compounddef>
</doxygen>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/utility/fatalerror.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_71392c6f4b1ed3a32ba5c064e868a1ba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a798d384400d41a9e6864d9b1b8753fe.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_de18afb36696138c96356a62009637d5.xhtml">utility</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">fatalerror.h File Reference<div class="ingroups"><a class="el" href="group__group__publicapi.xhtml">Public API</a> &#124; <a class="el" href="group__module__utility.xhtml">Low-Level Utilities (utility)</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;stdarg.h&gt;</code><br/>
<code>#include &lt;stdio.h&gt;</code><br/>
<code>#include &quot;<a class="el" href="basedefinitions_8h.xhtml">gromacs/utility/basedefinitions.h</a>&quot;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for fatalerror.h:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="fatalerror_8h__incl.svg" width="400" height="202"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Declares fatal error handling and debugging routines for C code. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a9ea237347839348e994103e6e7d8bab7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#a9ea237347839348e994103e6e7d8bab7">where</a>()&#160;&#160;&#160;<a class="el" href="fatalerror_8h.xhtml#aa854c0764e91528b453dea99c788e5b1">_where</a>(__FILE__, __LINE__)</td></tr>
<tr class="memdesc:a9ea237347839348e994103e6e7d8bab7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints filename and line to stdlog.  <a href="#a9ea237347839348e994103e6e7d8bab7">More...</a><br/></td></tr>
<tr class="separator:a9ea237347839348e994103e6e7d8bab7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad420b10b269f0310c1ace73100fb5aad"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#ad420b10b269f0310c1ace73100fb5aad">FARGS</a>&#160;&#160;&#160;0, __FILE__, __LINE__</td></tr>
<tr class="memdesc:ad420b10b269f0310c1ace73100fb5aad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper macro to pass first three parameters to <a class="el" href="fatalerror_8h.xhtml#a3f6ee0e1ac19bfb1ebb1bbdd0b1e3852" title="Fatal error reporting routine for GROMACS. ">gmx_fatal()</a>.  <a href="#ad420b10b269f0310c1ace73100fb5aad">More...</a><br/></td></tr>
<tr class="separator:ad420b10b269f0310c1ace73100fb5aad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec5c3a16d3e1e0a792a6972853d6a15f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#aec5c3a16d3e1e0a792a6972853d6a15f">gmx_error</a>(key, msg)&#160;&#160;&#160;<a class="el" href="fatalerror_8h.xhtml#adf16e57ac9eb428556a220603f49e36e">_gmx_error</a>(key, msg, __FILE__, __LINE__)</td></tr>
<tr class="memdesc:aec5c3a16d3e1e0a792a6972853d6a15f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Alternative fatal error routine with canned messages.  <a href="#aec5c3a16d3e1e0a792a6972853d6a15f">More...</a><br/></td></tr>
<tr class="separator:aec5c3a16d3e1e0a792a6972853d6a15f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac29cde54bba2239ff2cf4d20682be8fe"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#ac29cde54bba2239ff2cf4d20682be8fe">range_check_mesg</a>(n, n_min, n_max, str)&#160;&#160;&#160;<a class="el" href="fatalerror_8h.xhtml#aaac1a6b6b0d12ed3c12813d9f341e307">_range_check</a>(n, n_min, n_max, str,#n, __FILE__, __LINE__)</td></tr>
<tr class="memdesc:ac29cde54bba2239ff2cf4d20682be8fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks that a variable is within a range.  <a href="#ac29cde54bba2239ff2cf4d20682be8fe">More...</a><br/></td></tr>
<tr class="separator:ac29cde54bba2239ff2cf4d20682be8fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6ee0d4697fffc7500ba038e45b7a52b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#aa6ee0d4697fffc7500ba038e45b7a52b">range_check</a>(n, n_min, n_max)&#160;&#160;&#160;<a class="el" href="fatalerror_8h.xhtml#aaac1a6b6b0d12ed3c12813d9f341e307">_range_check</a>(n, n_min, n_max, NULL,#n, __FILE__, __LINE__)</td></tr>
<tr class="memdesc:aa6ee0d4697fffc7500ba038e45b7a52b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks that a variable is within a range.  <a href="#aa6ee0d4697fffc7500ba038e45b7a52b">More...</a><br/></td></tr>
<tr class="separator:aa6ee0d4697fffc7500ba038e45b7a52b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Fatal error routines for certain types of errors</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>These wrap <a class="el" href="fatalerror_8h.xhtml#aec5c3a16d3e1e0a792a6972853d6a15f" title="Alternative fatal error routine with canned messages. ">gmx_error()</a> and provide the <code>key</code> parameter as one of the recognized strings. </p>
</div></td></tr>
<tr class="memitem:aec4610dda86e375bdef957b0f625244a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aec4610dda86e375bdef957b0f625244a"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>gmx_call</b>(msg)&#160;&#160;&#160;<a class="el" href="fatalerror_8h.xhtml#aec5c3a16d3e1e0a792a6972853d6a15f">gmx_error</a>(&quot;call&quot;, msg)</td></tr>
<tr class="separator:aec4610dda86e375bdef957b0f625244a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a153805827cd2ecf75f7b1251a7a4cf80"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a153805827cd2ecf75f7b1251a7a4cf80"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>gmx_comm</b>(msg)&#160;&#160;&#160;<a class="el" href="fatalerror_8h.xhtml#aec5c3a16d3e1e0a792a6972853d6a15f">gmx_error</a>(&quot;comm&quot;, msg)</td></tr>
<tr class="separator:a153805827cd2ecf75f7b1251a7a4cf80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bd8953ec3bfcc0a003ff789b85dbb00"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0bd8953ec3bfcc0a003ff789b85dbb00"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>gmx_file</b>(msg)&#160;&#160;&#160;<a class="el" href="fatalerror_8h.xhtml#aec5c3a16d3e1e0a792a6972853d6a15f">gmx_error</a>(&quot;file&quot;, msg)</td></tr>
<tr class="separator:a0bd8953ec3bfcc0a003ff789b85dbb00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8c6556318f8bfcd8e45feecacba83bb"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae8c6556318f8bfcd8e45feecacba83bb"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>gmx_impl</b>(msg)&#160;&#160;&#160;<a class="el" href="fatalerror_8h.xhtml#aec5c3a16d3e1e0a792a6972853d6a15f">gmx_error</a>(&quot;impl&quot;, msg)</td></tr>
<tr class="separator:ae8c6556318f8bfcd8e45feecacba83bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac17e94931352c1b89ea7517e77309452"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac17e94931352c1b89ea7517e77309452"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>gmx_incons</b>(msg)&#160;&#160;&#160;<a class="el" href="fatalerror_8h.xhtml#aec5c3a16d3e1e0a792a6972853d6a15f">gmx_error</a>(&quot;incons&quot;, msg)</td></tr>
<tr class="separator:ac17e94931352c1b89ea7517e77309452"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6aff7c9f6d625e4b1633ee0363fe9ee2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6aff7c9f6d625e4b1633ee0363fe9ee2"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>gmx_input</b>(msg)&#160;&#160;&#160;<a class="el" href="fatalerror_8h.xhtml#aec5c3a16d3e1e0a792a6972853d6a15f">gmx_error</a>(&quot;input&quot;, msg)</td></tr>
<tr class="separator:a6aff7c9f6d625e4b1633ee0363fe9ee2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53b7c11f00864ee80767330140bdf9ab"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a53b7c11f00864ee80767330140bdf9ab"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>gmx_mem</b>(msg)&#160;&#160;&#160;<a class="el" href="fatalerror_8h.xhtml#aec5c3a16d3e1e0a792a6972853d6a15f">gmx_error</a>(&quot;mem&quot;, msg)</td></tr>
<tr class="separator:a53b7c11f00864ee80767330140bdf9ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca458a9056267f27fe83aa1a176005af"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aca458a9056267f27fe83aa1a176005af"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>gmx_open</b>(fn)&#160;&#160;&#160;<a class="el" href="fatalerror_8h.xhtml#aec5c3a16d3e1e0a792a6972853d6a15f">gmx_error</a>(&quot;open&quot;, fn)</td></tr>
<tr class="separator:aca458a9056267f27fe83aa1a176005af"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:adf6ea4751e004af551adb10519aabd21"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#adf6ea4751e004af551adb10519aabd21">gmx_error_handler_t</a> )(const char *title, const char *msg, const char *file, int line)</td></tr>
<tr class="memdesc:adf6ea4751e004af551adb10519aabd21"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function pointer type for fatal error handler callback.  <a href="#adf6ea4751e004af551adb10519aabd21">More...</a><br/></td></tr>
<tr class="separator:adf6ea4751e004af551adb10519aabd21"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a0615ee27159b500bdb73bed3ee37027d"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#a0615ee27159b500bdb73bed3ee37027d">ExitType</a> { <a class="el" href="fatalerror_8h.xhtml#a0615ee27159b500bdb73bed3ee37027da46635f0260592311e1eac4de3bef6394">ExitType_CleanExit</a>, 
<a class="el" href="fatalerror_8h.xhtml#a0615ee27159b500bdb73bed3ee37027da2bb20172347e52b5ca938f644d70f899">ExitType_Abort</a>, 
<a class="el" href="fatalerror_8h.xhtml#a0615ee27159b500bdb73bed3ee37027da2ae6ed0e9926c103546021cd3bfe996e">ExitType_NonMasterAbort</a>
 }</td></tr>
<tr class="memdesc:a0615ee27159b500bdb73bed3ee37027d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identifies the state of the program on a fatal error.  <a href="fatalerror_8h.xhtml#a0615ee27159b500bdb73bed3ee37027d">More...</a><br/></td></tr>
<tr class="separator:a0615ee27159b500bdb73bed3ee37027d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a5103420f6349222fc4e35f1a3f1c1411"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#a5103420f6349222fc4e35f1a3f1c1411">gmx_init_debug</a> (const int dbglevel, const char *dbgfile)</td></tr>
<tr class="memdesc:a5103420f6349222fc4e35f1a3f1c1411"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes debugging variables.  <a href="#a5103420f6349222fc4e35f1a3f1c1411">More...</a><br/></td></tr>
<tr class="separator:a5103420f6349222fc4e35f1a3f1c1411"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51e9f68a817eeeaee68a5614d9760b5d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a51e9f68a817eeeaee68a5614d9760b5d"></a>
<a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#a51e9f68a817eeeaee68a5614d9760b5d">bDebugMode</a> (void)</td></tr>
<tr class="memdesc:a51e9f68a817eeeaee68a5614d9760b5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns TRUE when the program was started in debug mode. <br/></td></tr>
<tr class="separator:a51e9f68a817eeeaee68a5614d9760b5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa854c0764e91528b453dea99c788e5b1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#aa854c0764e91528b453dea99c788e5b1">_where</a> (const char *file, int line)</td></tr>
<tr class="memdesc:aa854c0764e91528b453dea99c788e5b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementation for <a class="el" href="fatalerror_8h.xhtml#a9ea237347839348e994103e6e7d8bab7" title="Prints filename and line to stdlog. ">where()</a>.  <a href="#aa854c0764e91528b453dea99c788e5b1">More...</a><br/></td></tr>
<tr class="separator:aa854c0764e91528b453dea99c788e5b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a00dfd1ab8081705b8a712e6806b01d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#a3a00dfd1ab8081705b8a712e6806b01d">gmx_fatal_set_log_file</a> (FILE *fp)</td></tr>
<tr class="memdesc:a3a00dfd1ab8081705b8a712e6806b01d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the log file for printing error messages.  <a href="#a3a00dfd1ab8081705b8a712e6806b01d">More...</a><br/></td></tr>
<tr class="separator:a3a00dfd1ab8081705b8a712e6806b01d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43b224006ffc6b75765096b1212a78ac"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#a43b224006ffc6b75765096b1212a78ac">gmx_set_error_handler</a> (<a class="el" href="fatalerror_8h.xhtml#adf6ea4751e004af551adb10519aabd21">gmx_error_handler_t</a> func)</td></tr>
<tr class="memdesc:a43b224006ffc6b75765096b1212a78ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets an error handler for <a class="el" href="fatalerror_8h.xhtml#a3f6ee0e1ac19bfb1ebb1bbdd0b1e3852" title="Fatal error reporting routine for GROMACS. ">gmx_fatal()</a> and other fatal error routines.  <a href="#a43b224006ffc6b75765096b1212a78ac">More...</a><br/></td></tr>
<tr class="separator:a43b224006ffc6b75765096b1212a78ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32b75b2180d08d8ba41a7356ba9306c1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#a32b75b2180d08d8ba41a7356ba9306c1">gmx_exit_on_fatal_error</a> (enum <a class="el" href="fatalerror_8h.xhtml#a0615ee27159b500bdb73bed3ee37027d">ExitType</a> exitType, int returnValue)</td></tr>
<tr class="memdesc:a32b75b2180d08d8ba41a7356ba9306c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function to terminate the program on a fatal error.  <a href="#a32b75b2180d08d8ba41a7356ba9306c1">More...</a><br/></td></tr>
<tr class="separator:a32b75b2180d08d8ba41a7356ba9306c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c1ce032117cae175a183361a501df8b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#a2c1ce032117cae175a183361a501df8b">gmx_fatal_mpi_va</a> (int fatal_errno, const char *file, int line, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bMaster, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bFinalize, const char *fmt, va_list ap)</td></tr>
<tr class="memdesc:a2c1ce032117cae175a183361a501df8b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Low-level fatal error reporting routine for collective MPI errors.  <a href="#a2c1ce032117cae175a183361a501df8b">More...</a><br/></td></tr>
<tr class="separator:a2c1ce032117cae175a183361a501df8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f6ee0e1ac19bfb1ebb1bbdd0b1e3852"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#a3f6ee0e1ac19bfb1ebb1bbdd0b1e3852">gmx_fatal</a> (int fatal_errno, const char *file, int line, const char *fmt,...)</td></tr>
<tr class="memdesc:a3f6ee0e1ac19bfb1ebb1bbdd0b1e3852"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fatal error reporting routine for GROMACS.  <a href="#a3f6ee0e1ac19bfb1ebb1bbdd0b1e3852">More...</a><br/></td></tr>
<tr class="separator:a3f6ee0e1ac19bfb1ebb1bbdd0b1e3852"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf16e57ac9eb428556a220603f49e36e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#adf16e57ac9eb428556a220603f49e36e">_gmx_error</a> (const char *key, const char *msg, const char *file, int line)</td></tr>
<tr class="memdesc:adf16e57ac9eb428556a220603f49e36e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementation for <a class="el" href="fatalerror_8h.xhtml#aec5c3a16d3e1e0a792a6972853d6a15f" title="Alternative fatal error routine with canned messages. ">gmx_error()</a>.  <a href="#adf16e57ac9eb428556a220603f49e36e">More...</a><br/></td></tr>
<tr class="separator:adf16e57ac9eb428556a220603f49e36e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaac1a6b6b0d12ed3c12813d9f341e307"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#aaac1a6b6b0d12ed3c12813d9f341e307">_range_check</a> (int n, int n_min, int n_max, const char *warn_str, const char *var, const char *file, int line)</td></tr>
<tr class="memdesc:aaac1a6b6b0d12ed3c12813d9f341e307"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementation for <a class="el" href="fatalerror_8h.xhtml#aa6ee0d4697fffc7500ba038e45b7a52b" title="Checks that a variable is within a range. ">range_check()</a> and <a class="el" href="fatalerror_8h.xhtml#ac29cde54bba2239ff2cf4d20682be8fe" title="Checks that a variable is within a range. ">range_check_mesg()</a>.  <a href="#aaac1a6b6b0d12ed3c12813d9f341e307">More...</a><br/></td></tr>
<tr class="separator:aaac1a6b6b0d12ed3c12813d9f341e307"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6477b2f03fb43295f3466476d564f92a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#a6477b2f03fb43295f3466476d564f92a">gmx_warning</a> (const char *fmt,...)</td></tr>
<tr class="memdesc:a6477b2f03fb43295f3466476d564f92a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints a warning message to stderr.  <a href="#a6477b2f03fb43295f3466476d564f92a">More...</a><br/></td></tr>
<tr class="separator:a6477b2f03fb43295f3466476d564f92a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a7f0158669de514eb00dcf8d3a7408285"><td class="memItemLeft" align="right" valign="top">FILE *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#a7f0158669de514eb00dcf8d3a7408285">debug</a></td></tr>
<tr class="memdesc:a7f0158669de514eb00dcf8d3a7408285"><td class="mdescLeft">&#160;</td><td class="mdescRight">Debug log file.  <a href="#a7f0158669de514eb00dcf8d3a7408285">More...</a><br/></td></tr>
<tr class="separator:a7f0158669de514eb00dcf8d3a7408285"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a527a5fb12c2c9bcecd0c9148ab00b9b9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml#a527a5fb12c2c9bcecd0c9148ab00b9b9">gmx_debug_at</a></td></tr>
<tr class="memdesc:a527a5fb12c2c9bcecd0c9148ab00b9b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether extra debugging is enabled.  <a href="#a527a5fb12c2c9bcecd0c9148ab00b9b9">More...</a><br/></td></tr>
<tr class="separator:a527a5fb12c2c9bcecd0c9148ab00b9b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="ad420b10b269f0310c1ace73100fb5aad"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define FARGS&#160;&#160;&#160;0, __FILE__, __LINE__</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Helper macro to pass first three parameters to <a class="el" href="fatalerror_8h.xhtml#a3f6ee0e1ac19bfb1ebb1bbdd0b1e3852" title="Fatal error reporting routine for GROMACS. ">gmx_fatal()</a>. </p>

</div>
</div>
<a class="anchor" id="aec5c3a16d3e1e0a792a6972853d6a15f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define gmx_error</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">key, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="fatalerror_8h.xhtml#adf16e57ac9eb428556a220603f49e36e">_gmx_error</a>(key, msg, __FILE__, __LINE__)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Alternative fatal error routine with canned messages. </p>
<p>This works as <a class="el" href="fatalerror_8h.xhtml#a3f6ee0e1ac19bfb1ebb1bbdd0b1e3852" title="Fatal error reporting routine for GROMACS. ">gmx_fatal()</a>, except that a generic error message is added based on a string key, and printf-style formatting is not supported. Should not typically be called directly, but through gmx_call() etc. </p>

</div>
</div>
<a class="anchor" id="aa6ee0d4697fffc7500ba038e45b7a52b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define range_check</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">n, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">n_min, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">n_max&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="fatalerror_8h.xhtml#aaac1a6b6b0d12ed3c12813d9f341e307">_range_check</a>(n, n_min, n_max, NULL,#n, __FILE__, __LINE__)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks that a variable is within a range. </p>
<p>This works as <a class="el" href="fatalerror_8h.xhtml#ac29cde54bba2239ff2cf4d20682be8fe" title="Checks that a variable is within a range. ">range_check_mesg()</a>, but with a default error message. </p>

</div>
</div>
<a class="anchor" id="ac29cde54bba2239ff2cf4d20682be8fe"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define range_check_mesg</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">n, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">n_min, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">n_max, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">str&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;<a class="el" href="fatalerror_8h.xhtml#aaac1a6b6b0d12ed3c12813d9f341e307">_range_check</a>(n, n_min, n_max, str,#n, __FILE__, __LINE__)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks that a variable is within a range. </p>
<p>If <code>n</code> is not in range [n_min, n_max), a fatal error is raised. <code>n_min</code> is inclusive, but <code>n_max</code> is not. </p>

</div>
</div>
<a class="anchor" id="a9ea237347839348e994103e6e7d8bab7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define where</td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td>&#160;&#160;&#160;<a class="el" href="fatalerror_8h.xhtml#aa854c0764e91528b453dea99c788e5b1">_where</a>(__FILE__, __LINE__)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prints filename and line to stdlog. </p>

</div>
</div>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="adf6ea4751e004af551adb10519aabd21"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void(* gmx_error_handler_t)(const char *title, const char *msg, const char *file, int line)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function pointer type for fatal error handler callback. </p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a class="anchor" id="a0615ee27159b500bdb73bed3ee37027d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="fatalerror_8h.xhtml#a0615ee27159b500bdb73bed3ee37027d">ExitType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Identifies the state of the program on a fatal error. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><em><a class="anchor" id="a0615ee27159b500bdb73bed3ee37027da46635f0260592311e1eac4de3bef6394"></a>ExitType_CleanExit</em>&nbsp;</td><td class="fielddoc">
<p>Clean exit is possible. </p>
<p>There should be no concurrently executing code that might be accessing global objects, and all MPI ranks should reach the same fatal error. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="a0615ee27159b500bdb73bed3ee37027da2bb20172347e52b5ca938f644d70f899"></a>ExitType_Abort</em>&nbsp;</td><td class="fielddoc">
<p>Program needs to be aborted. </p>
<p>There are no preconditions for this state. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="a0615ee27159b500bdb73bed3ee37027da2ae6ed0e9926c103546021cd3bfe996e"></a>ExitType_NonMasterAbort</em>&nbsp;</td><td class="fielddoc">
<p>Program needs to be aborted, but some other rank is responsible of it. </p>
<p>There should be some other MPI rank that reaches the same fatal error, but uses ExitType_Abort. The other ranks can then use ExitType_NonMasterAbort to wait for that one rank to issue the abort. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="adf16e57ac9eb428556a220603f49e36e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void _gmx_error </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Implementation for <a class="el" href="fatalerror_8h.xhtml#aec5c3a16d3e1e0a792a6972853d6a15f" title="Alternative fatal error routine with canned messages. ">gmx_error()</a>. </p>

</div>
</div>
<a class="anchor" id="aaac1a6b6b0d12ed3c12813d9f341e307"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void _range_check </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n_min</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n_max</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>warn_str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>var</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Implementation for <a class="el" href="fatalerror_8h.xhtml#aa6ee0d4697fffc7500ba038e45b7a52b" title="Checks that a variable is within a range. ">range_check()</a> and <a class="el" href="fatalerror_8h.xhtml#ac29cde54bba2239ff2cf4d20682be8fe" title="Checks that a variable is within a range. ">range_check_mesg()</a>. </p>
<p><code>warn_str</code> can be NULL. </p>

</div>
</div>
<a class="anchor" id="aa854c0764e91528b453dea99c788e5b1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void _where </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Implementation for <a class="el" href="fatalerror_8h.xhtml#a9ea237347839348e994103e6e7d8bab7" title="Prints filename and line to stdlog. ">where()</a>. </p>

</div>
</div>
<a class="anchor" id="a32b75b2180d08d8ba41a7356ba9306c1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx_exit_on_fatal_error </td>
          <td>(</td>
          <td class="paramtype">enum <a class="el" href="fatalerror_8h.xhtml#a0615ee27159b500bdb73bed3ee37027d">ExitType</a>&#160;</td>
          <td class="paramname"><em>exitType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>returnValue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Helper function to terminate the program on a fatal error. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">exitType</td><td>Identifies the state of the program at the time of the call, determining how the program can be terminated. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">returnValue</td><td>Exit code for the program, for cases where it can be used. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3f6ee0e1ac19bfb1ebb1bbdd0b1e3852"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx_fatal </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fatal_errno</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>line</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fatal error reporting routine for GROMACS. </p>
<p>This function prints a fatal error message with a header that contains the source file and line number of the call, followed by the string specified by <code>fmt</code> and supplied parameters. If <code>fatal_errno</code> is 0, only the message and arguments are printed. If <code>fatal_errno</code> is a legal system errno or -1, a perror()-like message is printed after the first message; if fatal_errno is -1, the last system errno will be used. The format of <code>fmt</code> uses printf()-like formatting.</p>
<p>In case all MPI processes want to stop with the same fatal error, use gmx_fatal_collective(), declared in network.h, to avoid having as many error messages as processes.</p>
<p>The first three parameters can be provided through <a class="el" href="fatalerror_8h.xhtml#ad420b10b269f0310c1ace73100fb5aad" title="Helper macro to pass first three parameters to gmx_fatal(). ">FARGS</a>: </p>
<div class="fragment"><div class="line"><a class="code" href="fatalerror_8h.xhtml#a3f6ee0e1ac19bfb1ebb1bbdd0b1e3852">gmx_fatal</a>(<a class="code" href="fatalerror_8h.xhtml#ad420b10b269f0310c1ace73100fb5aad">FARGS</a>, fmt, ...);</div>
</div><!-- fragment --> 
</div>
</div>
<a class="anchor" id="a2c1ce032117cae175a183361a501df8b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx_fatal_mpi_va </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fatal_errno</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>line</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bMaster</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bFinalize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">va_list&#160;</td>
          <td class="paramname"><em>ap</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Low-level fatal error reporting routine for collective MPI errors. </p>
<p>This function works as <a class="el" href="fatalerror_8h.xhtml#a3f6ee0e1ac19bfb1ebb1bbdd0b1e3852" title="Fatal error reporting routine for GROMACS. ">gmx_fatal()</a>, but provides additional control for cases where it is known that the same error occurs on multiple MPI ranks. The error handler is called only if <code>bMaster</code> is <code>TRUE</code>, and MPI_Finalize() is called instead of MPI_Abort() in MPI-enabled GROMACS if <code>bFinalize</code> is <code>TRUE</code>.</p>
<p>This is used to implement gmx_fatal_collective() (which cannot be declared here, since it would bring with it mdrun-specific dependencies). </p>

</div>
</div>
<a class="anchor" id="a3a00dfd1ab8081705b8a712e6806b01d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx_fatal_set_log_file </td>
          <td>(</td>
          <td class="paramtype">FILE *&#160;</td>
          <td class="paramname"><em>fp</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the log file for printing error messages. </p>

</div>
</div>
<a class="anchor" id="a5103420f6349222fc4e35f1a3f1c1411"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx_init_debug </td>
          <td>(</td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>dbglevel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>dbgfile</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes debugging variables. </p>
<p>This function is not threadsafe. It should be called as part of initializing GROMACS, before any other thread accesses the library. For command line programs, gmx::CommandLineModuleManager takes care of this if the user requests debugging. </p>

</div>
</div>
<a class="anchor" id="a43b224006ffc6b75765096b1212a78ac"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx_set_error_handler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fatalerror_8h.xhtml#adf6ea4751e004af551adb10519aabd21">gmx_error_handler_t</a>&#160;</td>
          <td class="paramname"><em>func</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets an error handler for <a class="el" href="fatalerror_8h.xhtml#a3f6ee0e1ac19bfb1ebb1bbdd0b1e3852" title="Fatal error reporting routine for GROMACS. ">gmx_fatal()</a> and other fatal error routines. </p>
<p>The default handler prints the message. GROMACS will terminate the program after the error handler returns. To make gmx_fatal_collective() work, the error handler should not terminate the program, as it cannot know what is the desired way of termination. The message passed to the handler may be a multi-line string.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="fatalerror_8h.xhtml#a3f6ee0e1ac19bfb1ebb1bbdd0b1e3852" title="Fatal error reporting routine for GROMACS. ">gmx_fatal()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a6477b2f03fb43295f3466476d564f92a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx_warning </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>fmt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prints a warning message to stderr. </p>
<p>The format of <code>fmt</code> uses printf()-like formatting. The message string should NOT start with "WARNING" and should NOT end with a newline. </p>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="a7f0158669de514eb00dcf8d3a7408285"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">FILE* debug</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Debug log file. </p>
<p>Functions can write to this file for debug info. Before writing to it, it should be checked whether the file is not NULL: </p>
<div class="fragment"><div class="line"><span class="keywordflow">if</span> (<a class="code" href="fatalerror_8h.xhtml#a7f0158669de514eb00dcf8d3a7408285">debug</a>)</div>
<div class="line">{</div>
<div class="line">    fprintf(<a class="code" href="fatalerror_8h.xhtml#a7f0158669de514eb00dcf8d3a7408285">debug</a>, <span class="stringliteral">&quot;%s&quot;</span>, <span class="stringliteral">&quot;Debug text&quot;</span>);</div>
<div class="line">}</div>
</div><!-- fragment --> 
</div>
</div>
<a class="anchor" id="a527a5fb12c2c9bcecd0c9148ab00b9b9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> gmx_debug_at</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Whether extra debugging is enabled. </p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:18:07 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

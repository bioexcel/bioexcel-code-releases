<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::Options Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1Options.xhtml">Options</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1Options-members.xhtml">List of all members</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::Options Class Reference<div class="ingroups"><a class="el" href="group__group__publicapi.xhtml">Public API</a> &#124; <a class="el" href="group__module__options.xhtml">Extensible Handling of Options (options)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/options/options.h&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for gmx::Options:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1Options__inherit__graph.svg" width="171" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for gmx::Options:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1Options__coll__graph.svg" width="171" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Collection of options. </p>
<p>See <a class="el" href="group__module__options.xhtml">Extensible Handling of Options (options)</a> for an overview of how the options work. The <a class="el" href="classgmx_1_1IOptionsContainer.xhtml" title="Interface for adding input options. ">IOptionsContainer</a> interface documents how to add options.</p>
<p>In order to keep the public interface of this class simple, functionality to assign values to options is provided by a separate OptionsAssigner class. Similarly, functionality for looping over all options (e.g., for writing out help) is provided by OptionsIterator. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8a48ca44e45d731c858adf9d6b25a913"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Options.xhtml#a8a48ca44e45d731c858adf9d6b25a913">Options</a> (const char *<a class="el" href="classgmx_1_1Options.xhtml#a4c3bbe018e650800c22c630065348218">name</a>, const char *title)</td></tr>
<tr class="memdesc:a8a48ca44e45d731c858adf9d6b25a913"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the name and title of an option collection.  <a href="#a8a48ca44e45d731c858adf9d6b25a913">More...</a><br/></td></tr>
<tr class="separator:a8a48ca44e45d731c858adf9d6b25a913"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c3bbe018e650800c22c630065348218"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4c3bbe018e650800c22c630065348218"></a>
const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Options.xhtml#a4c3bbe018e650800c22c630065348218">name</a> () const </td></tr>
<tr class="memdesc:a4c3bbe018e650800c22c630065348218"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the short name of the option collection. <br/></td></tr>
<tr class="separator:a4c3bbe018e650800c22c630065348218"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec34346be097c2d666ff4434c4bf562e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Options.xhtml#aec34346be097c2d666ff4434c4bf562e">addManager</a> (<a class="el" href="classgmx_1_1IOptionManager.xhtml">IOptionManager</a> *manager)</td></tr>
<tr class="memdesc:aec34346be097c2d666ff4434c4bf562e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds an option manager.  <a href="#aec34346be097c2d666ff4434c4bf562e">More...</a><br/></td></tr>
<tr class="separator:aec34346be097c2d666ff4434c4bf562e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd9cf4c2effe43bc92063569143b54a7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Options.xhtml#abd9cf4c2effe43bc92063569143b54a7">addSubSection</a> (<a class="el" href="classgmx_1_1Options.xhtml">Options</a> *section)</td></tr>
<tr class="memdesc:abd9cf4c2effe43bc92063569143b54a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds an option collection as a subsection of this collection.  <a href="#abd9cf4c2effe43bc92063569143b54a7">More...</a><br/></td></tr>
<tr class="separator:abd9cf4c2effe43bc92063569143b54a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9244e7acb4e31fa96099bcd73537349a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classgmx_1_1IOptionsContainer.xhtml">IOptionsContainer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Options.xhtml#a9244e7acb4e31fa96099bcd73537349a">addGroup</a> ()</td></tr>
<tr class="memdesc:a9244e7acb4e31fa96099bcd73537349a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a subgroup of options within the current options.  <a href="#a9244e7acb4e31fa96099bcd73537349a">More...</a><br/></td></tr>
<tr class="separator:a9244e7acb4e31fa96099bcd73537349a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7add46682b6c65d3de585e7942df7807"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classgmx_1_1OptionInfo.xhtml">OptionInfo</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Options.xhtml#a7add46682b6c65d3de585e7942df7807">addOption</a> (const <a class="el" href="classgmx_1_1AbstractOption.xhtml">AbstractOption</a> &amp;settings)</td></tr>
<tr class="memdesc:a7add46682b6c65d3de585e7942df7807"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a recognized option.  <a href="#a7add46682b6c65d3de585e7942df7807">More...</a><br/></td></tr>
<tr class="separator:a7add46682b6c65d3de585e7942df7807"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3316f3681c71daa04098696d4417f2f9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Options.xhtml#a3316f3681c71daa04098696d4417f2f9">finish</a> ()</td></tr>
<tr class="memdesc:a3316f3681c71daa04098696d4417f2f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Notifies the collection that all option values are assigned.  <a href="#a3316f3681c71daa04098696d4417f2f9">More...</a><br/></td></tr>
<tr class="separator:a3316f3681c71daa04098696d4417f2f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24e2aea4956eadf7dc78dc4a75fb5a63"><td class="memTemplParams" colspan="2">template&lt;class OptionType &gt; </td></tr>
<tr class="memitem:a24e2aea4956eadf7dc78dc4a75fb5a63"><td class="memTemplItemLeft" align="right" valign="top">OptionType::InfoType *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classgmx_1_1IOptionsContainer.xhtml#a24e2aea4956eadf7dc78dc4a75fb5a63">addOption</a> (const OptionType &amp;settings)</td></tr>
<tr class="memdesc:a24e2aea4956eadf7dc78dc4a75fb5a63"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a recognized option.  <a href="#a24e2aea4956eadf7dc78dc4a75fb5a63">More...</a><br/></td></tr>
<tr class="separator:a24e2aea4956eadf7dc78dc4a75fb5a63"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a8a48ca44e45d731c858adf9d6b25a913"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">gmx::Options::Options </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>title</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the name and title of an option collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Single-word name. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>Descriptive title.</td></tr>
  </table>
  </dd>
</dl>
<p>Copies the input strings. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a9244e7acb4e31fa96099bcd73537349a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1IOptionsContainer.xhtml">IOptionsContainer</a> &amp; gmx::Options::addGroup </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a subgroup of options within the current options. </p>
<p>To add options to the group, use the returned interface.</p>
<p>Currently, this is only used to influence the order of options: all options in a group appear before options in a group added after it, no matter in which order the options are added to the groups. In the future, the groups could also be used to influence the help output. </p>

<p>Implements <a class="el" href="classgmx_1_1IOptionsContainer.xhtml#a549dc1d6be411e9717960e0577a5b506">gmx::IOptionsContainer</a>.</p>

</div>
</div>
<a class="anchor" id="aec34346be097c2d666ff4434c4bf562e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::Options::addManager </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1IOptionManager.xhtml">IOptionManager</a> *&#160;</td>
          <td class="paramname"><em>manager</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds an option manager. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">manager</td><td>Manager to add. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory.</td></tr>
  </table>
  </dd>
</dl>
<p>Option managers are used by some types of options that require interaction between different option instances (e.g., selection options), or need to support globally set properties (e.g., a global default file prefix). Option objects can retrieve the pointer to their manager when they are created, and the caller can alter the behavior of the options through the manager. See the individual managers for details.</p>
<p>Caller is responsible for memory management of <code>manager</code>. The <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a> object (and its contained options) only stores a reference to the object.</p>
<p>This method cannot be called after adding options or subsections. </p>

</div>
</div>
<a class="anchor" id="a24e2aea4956eadf7dc78dc4a75fb5a63"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class OptionType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">OptionType::InfoType* gmx::IOptionsContainer::addOption </td>
          <td>(</td>
          <td class="paramtype">const OptionType &amp;&#160;</td>
          <td class="paramname"><em>settings</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a recognized option. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">OptionType</td><td>Type of the options description object. </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">settings</td><td>Option description. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classgmx_1_1OptionInfo.xhtml" title="Gives information and allows modifications to an option after creation. ">OptionInfo</a> object for the created option (never NULL). </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a></td><td>if invalid option settings are provided.</td></tr>
  </table>
  </dd>
</dl>
<p>The return value is a pointer for more convenient use in callers: often callers need to declare the variable that will hold the return value in wider scope than would be achieved by declaring it at the site where <a class="el" href="classgmx_1_1IOptionsContainer.xhtml#af5fa735cc7aeeafd44285fdd66461404" title="Adds a recognized option. ">addOption()</a> is called. The returned pointer must not be freed.</p>
<p>See <a class="el" href="classgmx_1_1Options.xhtml">class documentation </a> for example usage. </p>

</div>
</div>
<a class="anchor" id="a7add46682b6c65d3de585e7942df7807"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionInfo.xhtml">OptionInfo</a> * gmx::Options::addOption </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1AbstractOption.xhtml">AbstractOption</a> &amp;&#160;</td>
          <td class="paramname"><em>settings</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a recognized option. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">settings</td><td>Option description. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classgmx_1_1OptionInfo.xhtml" title="Gives information and allows modifications to an option after creation. ">OptionInfo</a> object for the created option (never NULL). </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a></td><td>if invalid option settings are provided.</td></tr>
  </table>
  </dd>
</dl>
<p>This method provides the internal implementation, but in most cases the templated method is called from user code. See the templated method for more details. </p>

<p>Implements <a class="el" href="classgmx_1_1IOptionsContainer.xhtml#af5fa735cc7aeeafd44285fdd66461404">gmx::IOptionsContainer</a>.</p>

</div>
</div>
<a class="anchor" id="abd9cf4c2effe43bc92063569143b54a7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::Options::addSubSection </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1Options.xhtml">Options</a> *&#160;</td>
          <td class="paramname"><em>section</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds an option collection as a subsection of this collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">section</td><td>Subsection to add.</td></tr>
  </table>
  </dd>
</dl>
<p>The <a class="el" href="classgmx_1_1Options.xhtml#a4c3bbe018e650800c22c630065348218" title="Returns the short name of the option collection. ">name()</a> field of <code>section</code> is used as the name of the subsection. If an attempt is made to add two different subsections with the same name, this function asserts.</p>
<p><code>section</code> should not have any options added at the point this method is called.</p>
<p>Only a pointer to the provided object is stored. The caller is responsible that the object exists for the lifetime of the collection. It is not possible to add the same <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a> object as a subsection to several different <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a>. If an attempt is made, the function asserts. </p>

</div>
</div>
<a class="anchor" id="a3316f3681c71daa04098696d4417f2f9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::Options::finish </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Notifies the collection that all option values are assigned. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InvalidInputError.xhtml" title="Exception class for situations where user input cannot be parsed/understood. ">InvalidInputError</a></td><td>if invalid user input is detected.</td></tr>
  </table>
  </dd>
</dl>
<p>This function should be called after no more option values are to be assigned. Values in storage variables are guaranteed to be available only after this call, although in most cases, they are available already during assignment.</p>
<p>If invalid option values, e.g., missing required option, is detected at this point, this function throws. The thrown exception contains information on all errors detected during the call. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/options/<a class="el" href="options_2options_8h.xhtml">options.h</a></li>
<li>src/gromacs/options/options.cpp</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:18:10 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::AnalysisNeighborhoodSearch Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1AnalysisNeighborhoodSearch.xhtml">AnalysisNeighborhoodSearch</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1AnalysisNeighborhoodSearch-members.xhtml">List of all members</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::AnalysisNeighborhoodSearch Class Reference<div class="ingroups"><a class="el" href="group__group__publicapi.xhtml">Public API</a> &#124; <a class="el" href="group__module__selection.xhtml">Parsing and Evaluation of Analysis Selections (selection)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/selection/nbsearch.h&gt;</code></p>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Initialized neighborhood search with a fixed set of reference positions. </p>
<p>An instance of this class is obtained through <a class="el" href="classgmx_1_1AnalysisNeighborhood.xhtml#ac11ba1b44a1c777677276f6ec664a82d" title="Initializes neighborhood search for a set of positions. ">AnalysisNeighborhood::initSearch()</a>, and can be used to do multiple searches against the provided set of reference positions. It is possible to create concurrent pair searches (including from different threads), as well as call other methods in this class while a pair search is in progress.</p>
<p>This class works like a pointer: copies of it point to the same search. In general, avoid creating copies, and only use the copy/assignment support for moving the variable around. With C++11, this class would best be movable.</p>
<p>Methods in this class do not throw unless otherwise indicated.</p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000034">Todo:</a></b></dt><dd>Make it such that <a class="el" href="classgmx_1_1AnalysisNeighborhoodSearch.xhtml#a5e749843e759e164b790eee1d8004489" title="Clears this search. ">reset()</a> is not necessary to call in code that repeatedly assigns the result of <a class="el" href="classgmx_1_1AnalysisNeighborhood.xhtml#ac11ba1b44a1c777677276f6ec664a82d" title="Initializes neighborhood search for a set of positions. ">AnalysisNeighborhood::initSearch()</a> to the same variable (see sm_distance.cpp).</dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000035">Todo:</a></b></dt><dd>Consider merging <a class="el" href="classgmx_1_1AnalysisNeighborhoodSearch.xhtml#a3d5dc061994dfeee42abbe9556cc7147" title="Finds the closest reference point. ">nearestPoint()</a> and <a class="el" href="classgmx_1_1AnalysisNeighborhoodSearch.xhtml#adbf80af8e5193cf2cb73694234b77157" title="Calculates the minimum distance from the reference points. ">minimumDistance()</a> by adding the distance to <a class="el" href="classgmx_1_1AnalysisNeighborhoodPair.xhtml" title="Value type to represent a pair of positions found in neighborhood searching. ">AnalysisNeighborhoodPair</a>.</dd></dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="template_8cpp-example.xhtml#_a22">template.cpp</a>.</dd>
</dl></div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a5148f4912747720780cce5bece02a343"><td class="memItemLeft" align="right" valign="top">typedef std::shared_ptr<br class="typebreak"/>
&lt; internal::AnalysisNeighborhoodSearchImpl &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisNeighborhoodSearch.xhtml#a5148f4912747720780cce5bece02a343">ImplPointer</a></td></tr>
<tr class="memdesc:a5148f4912747720780cce5bece02a343"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internal short-hand type for a pointer to the implementation class.  <a href="#a5148f4912747720780cce5bece02a343">More...</a><br/></td></tr>
<tr class="separator:a5148f4912747720780cce5bece02a343"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af3fe3eb5bc2452c504c6674aada78710"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisNeighborhoodSearch.xhtml#af3fe3eb5bc2452c504c6674aada78710">AnalysisNeighborhoodSearch</a> ()</td></tr>
<tr class="memdesc:af3fe3eb5bc2452c504c6674aada78710"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes an invalid search.  <a href="#af3fe3eb5bc2452c504c6674aada78710">More...</a><br/></td></tr>
<tr class="separator:af3fe3eb5bc2452c504c6674aada78710"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac78854183d2af635b1179454b7e8dc41"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisNeighborhoodSearch.xhtml#ac78854183d2af635b1179454b7e8dc41">AnalysisNeighborhoodSearch</a> (const <a class="el" href="classgmx_1_1AnalysisNeighborhoodSearch.xhtml#a5148f4912747720780cce5bece02a343">ImplPointer</a> &amp;impl)</td></tr>
<tr class="memdesc:ac78854183d2af635b1179454b7e8dc41"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internally initialize the search.  <a href="#ac78854183d2af635b1179454b7e8dc41">More...</a><br/></td></tr>
<tr class="separator:ac78854183d2af635b1179454b7e8dc41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e749843e759e164b790eee1d8004489"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisNeighborhoodSearch.xhtml#a5e749843e759e164b790eee1d8004489">reset</a> ()</td></tr>
<tr class="memdesc:a5e749843e759e164b790eee1d8004489"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears this search.  <a href="#a5e749843e759e164b790eee1d8004489">More...</a><br/></td></tr>
<tr class="separator:a5e749843e759e164b790eee1d8004489"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5850017fb25be239cead2112d7ee3326"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1AnalysisNeighborhood.xhtml#a5de52a8b0a7503e848223d313df6a8d5">AnalysisNeighborhood::SearchMode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisNeighborhoodSearch.xhtml#a5850017fb25be239cead2112d7ee3326">mode</a> () const </td></tr>
<tr class="memdesc:a5850017fb25be239cead2112d7ee3326"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the searching algorithm that this search is using.  <a href="#a5850017fb25be239cead2112d7ee3326">More...</a><br/></td></tr>
<tr class="separator:a5850017fb25be239cead2112d7ee3326"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca51cdb79459d86bd3718eaa950114f2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisNeighborhoodSearch.xhtml#aca51cdb79459d86bd3718eaa950114f2">isWithin</a> (const <a class="el" href="classgmx_1_1AnalysisNeighborhoodPositions.xhtml">AnalysisNeighborhoodPositions</a> &amp;positions) const </td></tr>
<tr class="memdesc:aca51cdb79459d86bd3718eaa950114f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check whether a point is within a neighborhood.  <a href="#aca51cdb79459d86bd3718eaa950114f2">More...</a><br/></td></tr>
<tr class="separator:aca51cdb79459d86bd3718eaa950114f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbf80af8e5193cf2cb73694234b77157"><td class="memItemLeft" align="right" valign="top"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisNeighborhoodSearch.xhtml#adbf80af8e5193cf2cb73694234b77157">minimumDistance</a> (const <a class="el" href="classgmx_1_1AnalysisNeighborhoodPositions.xhtml">AnalysisNeighborhoodPositions</a> &amp;positions) const </td></tr>
<tr class="memdesc:adbf80af8e5193cf2cb73694234b77157"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the minimum distance from the reference points.  <a href="#adbf80af8e5193cf2cb73694234b77157">More...</a><br/></td></tr>
<tr class="separator:adbf80af8e5193cf2cb73694234b77157"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d5dc061994dfeee42abbe9556cc7147"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1AnalysisNeighborhoodPair.xhtml">AnalysisNeighborhoodPair</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisNeighborhoodSearch.xhtml#a3d5dc061994dfeee42abbe9556cc7147">nearestPoint</a> (const <a class="el" href="classgmx_1_1AnalysisNeighborhoodPositions.xhtml">AnalysisNeighborhoodPositions</a> &amp;positions) const </td></tr>
<tr class="memdesc:a3d5dc061994dfeee42abbe9556cc7147"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds the closest reference point.  <a href="#a3d5dc061994dfeee42abbe9556cc7147">More...</a><br/></td></tr>
<tr class="separator:a3d5dc061994dfeee42abbe9556cc7147"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05376f41b50379732ce9bebba6c0e728"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1AnalysisNeighborhoodPairSearch.xhtml">AnalysisNeighborhoodPairSearch</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisNeighborhoodSearch.xhtml#a05376f41b50379732ce9bebba6c0e728">startPairSearch</a> (const <a class="el" href="classgmx_1_1AnalysisNeighborhoodPositions.xhtml">AnalysisNeighborhoodPositions</a> &amp;positions) const </td></tr>
<tr class="memdesc:a05376f41b50379732ce9bebba6c0e728"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start a search to find reference positions within a cutoff.  <a href="#a05376f41b50379732ce9bebba6c0e728">More...</a><br/></td></tr>
<tr class="separator:a05376f41b50379732ce9bebba6c0e728"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Typedef Documentation</h2>
<a class="anchor" id="a5148f4912747720780cce5bece02a343"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::shared_ptr&lt;internal::AnalysisNeighborhoodSearchImpl&gt; <a class="el" href="classgmx_1_1AnalysisNeighborhoodSearch.xhtml#a5148f4912747720780cce5bece02a343">gmx::AnalysisNeighborhoodSearch::ImplPointer</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Internal short-hand type for a pointer to the implementation class. </p>
<p>shared_ptr is used here to automatically keep a reference count to track whether an implementation class is still used outside the <a class="el" href="classgmx_1_1AnalysisNeighborhood.xhtml" title="Neighborhood searching for analysis tools. ">AnalysisNeighborhood</a> object. Ownership currently always stays with <a class="el" href="classgmx_1_1AnalysisNeighborhood.xhtml" title="Neighborhood searching for analysis tools. ">AnalysisNeighborhood</a>; it always keeps one instance of the pointer. </p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="af3fe3eb5bc2452c504c6674aada78710"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">gmx::AnalysisNeighborhoodSearch::AnalysisNeighborhoodSearch </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes an invalid search. </p>
<p>Such an object cannot be used for searching. It needs to be assigned a value from <a class="el" href="classgmx_1_1AnalysisNeighborhood.xhtml#ac11ba1b44a1c777677276f6ec664a82d" title="Initializes neighborhood search for a set of positions. ">AnalysisNeighborhood::initSearch()</a> before it can be used. Provided to allow declaring a variable to hold the search before calling <a class="el" href="classgmx_1_1AnalysisNeighborhood.xhtml#ac11ba1b44a1c777677276f6ec664a82d" title="Initializes neighborhood search for a set of positions. ">AnalysisNeighborhood::initSearch()</a>. </p>

</div>
</div>
<a class="anchor" id="ac78854183d2af635b1179454b7e8dc41"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">gmx::AnalysisNeighborhoodSearch::AnalysisNeighborhoodSearch </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1AnalysisNeighborhoodSearch.xhtml#a5148f4912747720780cce5bece02a343">ImplPointer</a> &amp;&#160;</td>
          <td class="paramname"><em>impl</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Internally initialize the search. </p>
<p>Used to implement <a class="el" href="classgmx_1_1AnalysisNeighborhood.xhtml#ac11ba1b44a1c777677276f6ec664a82d" title="Initializes neighborhood search for a set of positions. ">AnalysisNeighborhood::initSearch()</a>. Cannot be called from user code. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aca51cdb79459d86bd3718eaa950114f2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::AnalysisNeighborhoodSearch::isWithin </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1AnalysisNeighborhoodPositions.xhtml">AnalysisNeighborhoodPositions</a> &amp;&#160;</td>
          <td class="paramname"><em>positions</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check whether a point is within a neighborhood. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">positions</td><td>Set of test positions to use. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if any of the test positions is within the cutoff of any reference position. </dd></dl>

</div>
</div>
<a class="anchor" id="adbf80af8e5193cf2cb73694234b77157"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> gmx::AnalysisNeighborhoodSearch::minimumDistance </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1AnalysisNeighborhoodPositions.xhtml">AnalysisNeighborhoodPositions</a> &amp;&#160;</td>
          <td class="paramname"><em>positions</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates the minimum distance from the reference points. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">positions</td><td>Set of test positions to use. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The distance to the nearest reference position, or the cutoff value if there are no reference positions within the cutoff. </dd></dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="template_8cpp-example.xhtml#a28">template.cpp</a>.</dd>
</dl>
</div>
</div>
<a class="anchor" id="a5850017fb25be239cead2112d7ee3326"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1AnalysisNeighborhood.xhtml#a5de52a8b0a7503e848223d313df6a8d5">AnalysisNeighborhood::SearchMode</a> gmx::AnalysisNeighborhoodSearch::mode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the searching algorithm that this search is using. </p>
<p>The return value is never <a class="el" href="classgmx_1_1AnalysisNeighborhood.xhtml#a5de52a8b0a7503e848223d313df6a8d5ade6be6891c10bf7a9b7c5b4cf4d9466b" title="Select algorithm based on heuristic efficiency considerations. ">AnalysisNeighborhood::eSearchMode_Automatic</a>. </p>

</div>
</div>
<a class="anchor" id="a3d5dc061994dfeee42abbe9556cc7147"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1AnalysisNeighborhoodPair.xhtml">AnalysisNeighborhoodPair</a> gmx::AnalysisNeighborhoodSearch::nearestPoint </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1AnalysisNeighborhoodPositions.xhtml">AnalysisNeighborhoodPositions</a> &amp;&#160;</td>
          <td class="paramname"><em>positions</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Finds the closest reference point. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">positions</td><td>Set of test positions to use. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The reference index identifies the reference position that is closest to the test positions. The test index identifies the test position that is closest to the provided test position. The returned pair is invalid if no reference position is within the cutoff. </dd></dl>

</div>
</div>
<a class="anchor" id="a5e749843e759e164b790eee1d8004489"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AnalysisNeighborhoodSearch::reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clears this search. </p>
<p>Equivalent to <code>"*this = AnalysisNeighborhoodSearch();"</code>. Currently, this is necessary to avoid unnecessary memory allocation if the previous search variable is still in scope when you want to call <a class="el" href="classgmx_1_1AnalysisNeighborhood.xhtml#ac11ba1b44a1c777677276f6ec664a82d" title="Initializes neighborhood search for a set of positions. ">AnalysisNeighborhood::initSearch()</a> again. </p>

</div>
</div>
<a class="anchor" id="a05376f41b50379732ce9bebba6c0e728"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1AnalysisNeighborhoodPairSearch.xhtml">AnalysisNeighborhoodPairSearch</a> gmx::AnalysisNeighborhoodSearch::startPairSearch </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1AnalysisNeighborhoodPositions.xhtml">AnalysisNeighborhoodPositions</a> &amp;&#160;</td>
          <td class="paramname"><em>positions</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Start a search to find reference positions within a cutoff. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">positions</td><td>Set of test positions to use. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Initialized search object to loop through all reference positions within the configured cutoff. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/selection/<a class="el" href="nbsearch_8h.xhtml">nbsearch.h</a></li>
<li>src/gromacs/selection/nbsearch.cpp</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:18:10 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

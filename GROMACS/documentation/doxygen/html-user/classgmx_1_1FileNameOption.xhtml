<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::FileNameOption Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1FileNameOption.xhtml">FileNameOption</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1FileNameOption-members.xhtml">List of all members</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::FileNameOption Class Reference<div class="ingroups"><a class="el" href="group__group__publicapi.xhtml">Public API</a> &#124; <a class="el" href="group__module__options.xhtml">Extensible Handling of Options (options)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/options/filenameoption.h&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for gmx::FileNameOption:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1FileNameOption__inherit__graph.svg" width="218" height="202"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for gmx::FileNameOption:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1FileNameOption__coll__graph.svg" width="218" height="202"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Specifies an option that provides file names. </p>
<p>Public methods in this class do not throw. </p>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="template_8cpp-example.xhtml#_a11">template.cpp</a>.</dd>
</dl></div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a76e2e18997773a47d871b9c67dfc0a69"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a76e2e18997773a47d871b9c67dfc0a69"></a>
typedef <a class="el" href="classgmx_1_1FileNameOptionInfo.xhtml">FileNameOptionInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FileNameOption.xhtml#a76e2e18997773a47d871b9c67dfc0a69">InfoType</a></td></tr>
<tr class="memdesc:a76e2e18997773a47d871b9c67dfc0a69"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classgmx_1_1OptionInfo.xhtml" title="Gives information and allows modifications to an option after creation. ">OptionInfo</a> subclass corresponding to this option type. <br/></td></tr>
<tr class="separator:a76e2e18997773a47d871b9c67dfc0a69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44cf51c8417eeb4a0a20d20a355f8f89"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a44cf51c8417eeb4a0a20d20a355f8f89"></a>
typedef std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#a44cf51c8417eeb4a0a20d20a355f8f89">ValueType</a></td></tr>
<tr class="memdesc:a44cf51c8417eeb4a0a20d20a355f8f89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type that stores a single option value. <br/></td></tr>
<tr class="separator:a44cf51c8417eeb4a0a20d20a355f8f89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6d35e5daa23fbc3e66e2d3cbc014857"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac6d35e5daa23fbc3e66e2d3cbc014857"></a>
typedef <a class="el" href="classgmx_1_1FileNameOption.xhtml">FileNameOption</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a></td></tr>
<tr class="memdesc:ac6d35e5daa23fbc3e66e2d3cbc014857"><td class="mdescLeft">&#160;</td><td class="mdescRight">Alias for the derived class type. <br/></td></tr>
<tr class="separator:ac6d35e5daa23fbc3e66e2d3cbc014857"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4057766b5851a4d02b3913f1984b3891"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4057766b5851a4d02b3913f1984b3891"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FileNameOption.xhtml#a4057766b5851a4d02b3913f1984b3891">FileNameOption</a> (const char *name)</td></tr>
<tr class="memdesc:a4057766b5851a4d02b3913f1984b3891"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes an option with the given name. <br/></td></tr>
<tr class="separator:a4057766b5851a4d02b3913f1984b3891"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78193a3a7884f54946b618be1f090ec7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FileNameOption.xhtml#a78193a3a7884f54946b618be1f090ec7">filetype</a> (<a class="el" href="group__module__options.xhtml#ga89f55fd684646bb146f99a8c6c18569b">OptionFileType</a> type)</td></tr>
<tr class="memdesc:a78193a3a7884f54946b618be1f090ec7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the type of the file this option accepts.  <a href="#a78193a3a7884f54946b618be1f090ec7">More...</a><br/></td></tr>
<tr class="separator:a78193a3a7884f54946b618be1f090ec7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a967fad014d4f0d510fc694f8a18cc962"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FileNameOption.xhtml#a967fad014d4f0d510fc694f8a18cc962">legacyType</a> (int type)</td></tr>
<tr class="memdesc:a967fad014d4f0d510fc694f8a18cc962"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the type of the file from an enum in filetypes.h.  <a href="#a967fad014d4f0d510fc694f8a18cc962">More...</a><br/></td></tr>
<tr class="separator:a967fad014d4f0d510fc694f8a18cc962"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08858ce3070ad01dbc6489262a09b743"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FileNameOption.xhtml#a08858ce3070ad01dbc6489262a09b743">legacyOptionalBehavior</a> ()</td></tr>
<tr class="memdesc:a08858ce3070ad01dbc6489262a09b743"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the behavior of optional options to match old <a class="el" href="structt__filenm.xhtml" title="File name option definition for C code. ">t_filenm</a>.  <a href="#a08858ce3070ad01dbc6489262a09b743">More...</a><br/></td></tr>
<tr class="separator:a08858ce3070ad01dbc6489262a09b743"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14204e32ebaeb8aa146252a322a75930"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a14204e32ebaeb8aa146252a322a75930"></a>
<a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FileNameOption.xhtml#a14204e32ebaeb8aa146252a322a75930">inputFile</a> ()</td></tr>
<tr class="memdesc:a14204e32ebaeb8aa146252a322a75930"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tells that the file provided by this option is used for input only. <br/></td></tr>
<tr class="separator:a14204e32ebaeb8aa146252a322a75930"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88e7dfd620e6bc21471789fb89b1d530"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a88e7dfd620e6bc21471789fb89b1d530"></a>
<a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FileNameOption.xhtml#a88e7dfd620e6bc21471789fb89b1d530">outputFile</a> ()</td></tr>
<tr class="memdesc:a88e7dfd620e6bc21471789fb89b1d530"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tells that the file provided by this option is used for output only. <br/></td></tr>
<tr class="separator:a88e7dfd620e6bc21471789fb89b1d530"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a044a4865bc394453f33c8cbb135df24b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a044a4865bc394453f33c8cbb135df24b"></a>
<a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FileNameOption.xhtml#a044a4865bc394453f33c8cbb135df24b">inputOutputFile</a> ()</td></tr>
<tr class="memdesc:a044a4865bc394453f33c8cbb135df24b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tells that the file provided by this option is used for input and output both. <br/></td></tr>
<tr class="separator:a044a4865bc394453f33c8cbb135df24b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a313ae1984f5a2ab94b05c4b9671c9a79"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a313ae1984f5a2ab94b05c4b9671c9a79"></a>
<a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FileNameOption.xhtml#a313ae1984f5a2ab94b05c4b9671c9a79">readWriteFlags</a> (bool bRead, bool bWrite)</td></tr>
<tr class="memdesc:a313ae1984f5a2ab94b05c4b9671c9a79"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the read/write usage for this file from boolean flags. <br/></td></tr>
<tr class="separator:a313ae1984f5a2ab94b05c4b9671c9a79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa182da8a00d4ff7556615cedc38a8de2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FileNameOption.xhtml#aa182da8a00d4ff7556615cedc38a8de2">libraryFile</a> (bool bLibrary=true)</td></tr>
<tr class="memdesc:aa182da8a00d4ff7556615cedc38a8de2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tells that the file will be looked up in library directories in addition to working directory.  <a href="#aa182da8a00d4ff7556615cedc38a8de2">More...</a><br/></td></tr>
<tr class="separator:aa182da8a00d4ff7556615cedc38a8de2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeff31b1c20421e64c2404310352c109a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FileNameOption.xhtml#aeff31b1c20421e64c2404310352c109a">allowMissing</a> (bool bAllow=true)</td></tr>
<tr class="memdesc:aeff31b1c20421e64c2404310352c109a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tells that missing file names explicitly provided by the user are valid for this input option.  <a href="#aeff31b1c20421e64c2404310352c109a">More...</a><br/></td></tr>
<tr class="separator:aeff31b1c20421e64c2404310352c109a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ca74d56d433be77518640dfb1feffdb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FileNameOption.xhtml#a4ca74d56d433be77518640dfb1feffdb">defaultBasename</a> (const char *basename)</td></tr>
<tr class="memdesc:a4ca74d56d433be77518640dfb1feffdb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a default basename for the file option.  <a href="#a4ca74d56d433be77518640dfb1feffdb">More...</a><br/></td></tr>
<tr class="separator:a4ca74d56d433be77518640dfb1feffdb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dacf77c93329e519b5c1bdffc82bfc7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FileNameOption.xhtml#a2dacf77c93329e519b5c1bdffc82bfc7">defaultType</a> (int <a class="el" href="classgmx_1_1FileNameOption.xhtml#a78193a3a7884f54946b618be1f090ec7">filetype</a>)</td></tr>
<tr class="memdesc:a2dacf77c93329e519b5c1bdffc82bfc7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a default type/extension for the file option.  <a href="#a2dacf77c93329e519b5c1bdffc82bfc7">More...</a><br/></td></tr>
<tr class="separator:a2dacf77c93329e519b5c1bdffc82bfc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6183dbb2066a34dab9327511ffa50838"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#a6183dbb2066a34dab9327511ffa50838">description</a> (const char *descr)</td></tr>
<tr class="memdesc:a6183dbb2066a34dab9327511ffa50838"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a description for the option.  <a href="#a6183dbb2066a34dab9327511ffa50838">More...</a><br/></td></tr>
<tr class="separator:a6183dbb2066a34dab9327511ffa50838"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a761c2f380b5376a6288b7e22f8d565cd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a761c2f380b5376a6288b7e22f8d565cd"></a>
<a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#a761c2f380b5376a6288b7e22f8d565cd">hidden</a> (bool bHidden=true)</td></tr>
<tr class="memdesc:a761c2f380b5376a6288b7e22f8d565cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Hides the option from normal help output. <br/></td></tr>
<tr class="separator:a761c2f380b5376a6288b7e22f8d565cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaceb267de884e94636e5af8be232e6f7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#aaceb267de884e94636e5af8be232e6f7">required</a> (bool bRequired=true)</td></tr>
<tr class="memdesc:aaceb267de884e94636e5af8be232e6f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Requires the option to be specified explicitly.  <a href="#aaceb267de884e94636e5af8be232e6f7">More...</a><br/></td></tr>
<tr class="separator:aaceb267de884e94636e5af8be232e6f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae70d1a6add1250ff76ba3bed2cedb4c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aae70d1a6add1250ff76ba3bed2cedb4c"></a>
<a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#aae70d1a6add1250ff76ba3bed2cedb4c">allowMultiple</a> (bool bMulti=true)</td></tr>
<tr class="memdesc:aae70d1a6add1250ff76ba3bed2cedb4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows the option to be specified multiple times. <br/></td></tr>
<tr class="separator:aae70d1a6add1250ff76ba3bed2cedb4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c4ddf73e8031ac29ca19e86fbc232d2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7c4ddf73e8031ac29ca19e86fbc232d2"></a>
<a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#a7c4ddf73e8031ac29ca19e86fbc232d2">valueCount</a> (int count)</td></tr>
<tr class="memdesc:a7c4ddf73e8031ac29ca19e86fbc232d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Requires exactly <code>count</code> values for the option. <br/></td></tr>
<tr class="separator:a7c4ddf73e8031ac29ca19e86fbc232d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07fd012d7538102b0c0aded54a895de4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a07fd012d7538102b0c0aded54a895de4"></a>
<a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#a07fd012d7538102b0c0aded54a895de4">multiValue</a> (bool bMulti=true)</td></tr>
<tr class="memdesc:a07fd012d7538102b0c0aded54a895de4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows any number of values for the option. <br/></td></tr>
<tr class="separator:a07fd012d7538102b0c0aded54a895de4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2ae3f0f880d262f5468496ce5350981"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ae2ae3f0f880d262f5468496ce5350981">defaultValue</a> (const std::string &amp;defaultValue)</td></tr>
<tr class="memdesc:ae2ae3f0f880d262f5468496ce5350981"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a default value for the option.  <a href="#ae2ae3f0f880d262f5468496ce5350981">More...</a><br/></td></tr>
<tr class="separator:ae2ae3f0f880d262f5468496ce5350981"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a400e5589c2dcb2d4758e21c5feffab69"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#a400e5589c2dcb2d4758e21c5feffab69">defaultValueIfSet</a> (const std::string &amp;<a class="el" href="classgmx_1_1OptionTemplate.xhtml#ae2ae3f0f880d262f5468496ce5350981">defaultValue</a>)</td></tr>
<tr class="memdesc:a400e5589c2dcb2d4758e21c5feffab69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a default value for the option when it is set.  <a href="#a400e5589c2dcb2d4758e21c5feffab69">More...</a><br/></td></tr>
<tr class="separator:a400e5589c2dcb2d4758e21c5feffab69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7399c1622ad4905e95fafd212b30677"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#af7399c1622ad4905e95fafd212b30677">store</a> (std::string *store)</td></tr>
<tr class="memdesc:af7399c1622ad4905e95fafd212b30677"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores value(s) in memory pointed by <code>store</code>.  <a href="#af7399c1622ad4905e95fafd212b30677">More...</a><br/></td></tr>
<tr class="separator:af7399c1622ad4905e95fafd212b30677"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8430ae1a804bd9400a13f7bc9694234"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ab8430ae1a804bd9400a13f7bc9694234">storeCount</a> (int *countptr)</td></tr>
<tr class="memdesc:ab8430ae1a804bd9400a13f7bc9694234"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores number of values in the value pointed by <code>countptr</code>.  <a href="#ab8430ae1a804bd9400a13f7bc9694234">More...</a><br/></td></tr>
<tr class="separator:ab8430ae1a804bd9400a13f7bc9694234"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3cb044b50f1b2a86b2fe9552165f02c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ad3cb044b50f1b2a86b2fe9552165f02c">storeVector</a> (std::vector&lt; std::string &gt; *<a class="el" href="classgmx_1_1OptionTemplate.xhtml#af7399c1622ad4905e95fafd212b30677">store</a>)</td></tr>
<tr class="memdesc:ad3cb044b50f1b2a86b2fe9552165f02c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores option values in the provided vector.  <a href="#ad3cb044b50f1b2a86b2fe9552165f02c">More...</a><br/></td></tr>
<tr class="separator:ad3cb044b50f1b2a86b2fe9552165f02c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8c9e05a041f94527c8fafdd40822cf4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#af8c9e05a041f94527c8fafdd40822cf4">storeIsSet</a> (bool *<a class="el" href="classgmx_1_1OptionTemplate.xhtml#af7399c1622ad4905e95fafd212b30677">store</a>)</td></tr>
<tr class="memdesc:af8c9e05a041f94527c8fafdd40822cf4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores whether the option was explicitly set.  <a href="#af8c9e05a041f94527c8fafdd40822cf4">More...</a><br/></td></tr>
<tr class="separator:af8c9e05a041f94527c8fafdd40822cf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aeff31b1c20421e64c2404310352c109a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; gmx::FileNameOption::allowMissing </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bAllow</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Tells that missing file names explicitly provided by the user are valid for this input option. </p>
<p>If this method is not called, an error will be raised if the user explicitly provides a file name that does not name an existing file, or if the default value does not resolve to a valid file name for a required option that the user has not set.</p>
<p>This method only has effect with input files, and only if a <a class="el" href="classgmx_1_1FileNameOptionManager.xhtml" title="Handles interaction of file name options with global options. ">FileNameOptionManager</a> is being used. </p>

</div>
</div>
<a class="anchor" id="a4ca74d56d433be77518640dfb1feffdb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; gmx::FileNameOption::defaultBasename </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>basename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets a default basename for the file option. </p>
<p>Use this method instead of <a class="el" href="classgmx_1_1OptionTemplate.xhtml#ae2ae3f0f880d262f5468496ce5350981" title="Sets a default value for the option. ">defaultValue()</a> or <a class="el" href="classgmx_1_1OptionTemplate.xhtml#a400e5589c2dcb2d4758e21c5feffab69" title="Sets a default value for the option when it is set. ">defaultValueIfSet()</a> to set a default value for a file name option. No extension needs to be provided; it is automatically added based on <a class="el" href="classgmx_1_1FileNameOption.xhtml#a78193a3a7884f54946b618be1f090ec7" title="Sets the type of the file this option accepts. ">filetype()</a> or <a class="el" href="classgmx_1_1FileNameOption.xhtml#a2dacf77c93329e519b5c1bdffc82bfc7" title="Sets a default type/extension for the file option. ">defaultType()</a>. The behavior is also adjusted based on <a class="el" href="classgmx_1_1OptionTemplate.xhtml#aaceb267de884e94636e5af8be232e6f7" title="Requires the option to be specified explicitly. ">required()</a>: if the option is required, the value given to <a class="el" href="classgmx_1_1FileNameOption.xhtml#a4ca74d56d433be77518640dfb1feffdb" title="Sets a default basename for the file option. ">defaultBasename()</a> is treated as for both <a class="el" href="classgmx_1_1OptionTemplate.xhtml#ae2ae3f0f880d262f5468496ce5350981" title="Sets a default value for the option. ">defaultValue()</a> and <a class="el" href="classgmx_1_1OptionTemplate.xhtml#a400e5589c2dcb2d4758e21c5feffab69" title="Sets a default value for the option when it is set. ">defaultValueIfSet()</a>, otherwise it is treated as for <a class="el" href="classgmx_1_1OptionTemplate.xhtml#a400e5589c2dcb2d4758e21c5feffab69" title="Sets a default value for the option when it is set. ">defaultValueIfSet()</a>.</p>
<p>For input files that accept multiple extensions, the extension is completed to the default extension on creation of the option or at time of parsing an option without a value.</p>
<p>If <a class="el" href="classgmx_1_1FileNameOptionManager.xhtml" title="Handles interaction of file name options with global options. ">FileNameOptionManager</a> is used, the extension may change during <a class="el" href="classgmx_1_1Options.xhtml#a3316f3681c71daa04098696d4417f2f9" title="Notifies the collection that all option values are assigned. ">Options::finish()</a>, as this is the time when the default names are checked against the file system to provide an extension that matches an existing file if that is possible.</p>
<p>If <a class="el" href="classgmx_1_1FileNameOptionManager.xhtml" title="Handles interaction of file name options with global options. ">FileNameOptionManager</a> is used, and <a class="el" href="classgmx_1_1FileNameOptionManager.xhtml#a1f872f2dbe12798b6597bdc7b7854434" title="Adds an option for setting the default global file name. ">FileNameOptionManager::addDefaultFileNameOption()</a> is used, and the user provides a global default file name using that option, then the global default takes precedence over <a class="el" href="classgmx_1_1FileNameOption.xhtml#a4ca74d56d433be77518640dfb1feffdb" title="Sets a default basename for the file option. ">defaultBasename()</a>. </p>

</div>
</div>
<a class="anchor" id="a2dacf77c93329e519b5c1bdffc82bfc7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; gmx::FileNameOption::defaultType </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>filetype</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets a default type/extension for the file option. </p>
<p>For options that accept multiple types of files (e.g., eftTrajectory), this method sets the default extension used for completing <a class="el" href="classgmx_1_1FileNameOption.xhtml#a4ca74d56d433be77518640dfb1feffdb" title="Sets a default basename for the file option. ">defaultBasename()</a>, as well as the default extension used by <a class="el" href="classgmx_1_1FileNameOptionManager.xhtml" title="Handles interaction of file name options with global options. ">FileNameOptionManager</a> to complete various file names.</p>
<p>The value should be one of the enumerated <code>ef*</code> values from filetypes.h, and be a valid type for the type specified with <a class="el" href="classgmx_1_1FileNameOption.xhtml#a78193a3a7884f54946b618be1f090ec7" title="Sets the type of the file this option accepts. ">filetype()</a>. </p>

</div>
</div>
<a class="anchor" id="ae2ae3f0f880d262f5468496ce5350981"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; <a class="el" href="classgmx_1_1OptionTemplate.xhtml">gmx::OptionTemplate</a>&lt; std::string , <a class="el" href="classgmx_1_1FileNameOption.xhtml">FileNameOption</a>  &gt;::defaultValue </td>
          <td>(</td>
          <td class="paramtype">const std::string  &amp;&#160;</td>
          <td class="paramname"><em>defaultValue</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets a default value for the option. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">defaultValue</td><td>Default value.</td></tr>
  </table>
  </dd>
</dl>
<p>If the option is never set, the default value is copied to the assigned storage. Note that if the option is not set and there is no default value, the storage is not altered, which can also be used to provide a default value. The latter method has to be used if the option can take multiple values.</p>
<p><code>defaultValue</code> is copied when the option is created. </p>

</div>
</div>
<a class="anchor" id="a400e5589c2dcb2d4758e21c5feffab69"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; <a class="el" href="classgmx_1_1OptionTemplate.xhtml">gmx::OptionTemplate</a>&lt; std::string , <a class="el" href="classgmx_1_1FileNameOption.xhtml">FileNameOption</a>  &gt;::defaultValueIfSet </td>
          <td>(</td>
          <td class="paramtype">const std::string  &amp;&#160;</td>
          <td class="paramname"><em>defaultValue</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets a default value for the option when it is set. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">defaultValue</td><td>Default value.</td></tr>
  </table>
  </dd>
</dl>
<p>This value is used if the option is set, but no value is provided. If the option is never set, the value set with <a class="el" href="classgmx_1_1OptionTemplate.xhtml#ae2ae3f0f880d262f5468496ce5350981" title="Sets a default value for the option. ">defaultValue()</a> is used. Can only be used for options that accept a single value.</p>
<p><code>defaultValue</code> is copied when the option is created. </p>

</div>
</div>
<a class="anchor" id="a6183dbb2066a34dab9327511ffa50838"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; <a class="el" href="classgmx_1_1OptionTemplate.xhtml">gmx::OptionTemplate</a>&lt; std::string , <a class="el" href="classgmx_1_1FileNameOption.xhtml">FileNameOption</a>  &gt;::description </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>descr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets a description for the option. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">descr</td><td>Description to set.</td></tr>
  </table>
  </dd>
</dl>
<p>String in <code>descr</code> is copied when the option is created. </p>

</div>
</div>
<a class="anchor" id="a78193a3a7884f54946b618be1f090ec7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; gmx::FileNameOption::filetype </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__module__options.xhtml#ga89f55fd684646bb146f99a8c6c18569b">OptionFileType</a>&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the type of the file this option accepts. </p>
<p>Either this attribute or <a class="el" href="classgmx_1_1FileNameOption.xhtml#a967fad014d4f0d510fc694f8a18cc962" title="Sets the type of the file from an enum in filetypes.h. ">legacyType()</a> must be provided. </p>

</div>
</div>
<a class="anchor" id="a08858ce3070ad01dbc6489262a09b743"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; gmx::FileNameOption::legacyOptionalBehavior </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Changes the behavior of optional options to match old <a class="el" href="structt__filenm.xhtml" title="File name option definition for C code. ">t_filenm</a>. </p>
<p>If this is not set, optional options return an empty string if not set. If this is set, a non-empty value is always returned. In the latter case, whether the option is set only affects the return value of <a class="el" href="classgmx_1_1OptionInfo.xhtml#a2702ec6fe5d292b93adbe6084719e903" title="Returns true if the option has been set. ">OptionInfo::isSet()</a> and Options::isSet(). </p>

</div>
</div>
<a class="anchor" id="a967fad014d4f0d510fc694f8a18cc962"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; gmx::FileNameOption::legacyType </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the type of the file from an enum in filetypes.h. </p>
<p>New code should prefer <a class="el" href="classgmx_1_1FileNameOption.xhtml#a78193a3a7884f54946b618be1f090ec7" title="Sets the type of the file this option accepts. ">filetype()</a>, extending the enumeration if necessary. </p>

</div>
</div>
<a class="anchor" id="aa182da8a00d4ff7556615cedc38a8de2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; gmx::FileNameOption::libraryFile </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bLibrary</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Tells that the file will be looked up in library directories in addition to working directory. </p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000030">Todo:</a></b></dt><dd>Currently, this flag only affects the help output. Callers must take care themselves to actually search the file in the library directories. It would be nicer to do this searching within the file name option implementation. </dd></dl>

</div>
</div>
<a class="anchor" id="aaceb267de884e94636e5af8be232e6f7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; <a class="el" href="classgmx_1_1OptionTemplate.xhtml">gmx::OptionTemplate</a>&lt; std::string , <a class="el" href="classgmx_1_1FileNameOption.xhtml">FileNameOption</a>  &gt;::required </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bRequired</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Requires the option to be specified explicitly. </p>
<p>Note that if you specify <a class="el" href="classgmx_1_1OptionTemplate.xhtml#ae2ae3f0f880d262f5468496ce5350981" title="Sets a default value for the option. ">defaultValue()</a> together with <a class="el" href="classgmx_1_1OptionTemplate.xhtml#aaceb267de884e94636e5af8be232e6f7" title="Requires the option to be specified explicitly. ">required()</a>, the user is not required to explicitly provide the option. In this case, <a class="el" href="classgmx_1_1OptionTemplate.xhtml#aaceb267de884e94636e5af8be232e6f7" title="Requires the option to be specified explicitly. ">required()</a> only affects possible help output. </p>

</div>
</div>
<a class="anchor" id="af7399c1622ad4905e95fafd212b30677"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; <a class="el" href="classgmx_1_1OptionTemplate.xhtml">gmx::OptionTemplate</a>&lt; std::string , <a class="el" href="classgmx_1_1FileNameOption.xhtml">FileNameOption</a>  &gt;::store </td>
          <td>(</td>
          <td class="paramtype">std::string  *&#160;</td>
          <td class="paramname"><em>store</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stores value(s) in memory pointed by <code>store</code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">store</td><td>Storage for option value(s).</td></tr>
  </table>
  </dd>
</dl>
<p>The caller is responsible for allocating enough memory such that the any allowed number of values fits into the array pointed by <code>store</code>. If there is no maximum allowed number or if the maximum is inconveniently large, <a class="el" href="classgmx_1_1OptionTemplate.xhtml#ad3cb044b50f1b2a86b2fe9552165f02c" title="Stores option values in the provided vector. ">storeVector()</a> should be used.</p>
<p>For information on when values are available in the storage, see <a class="el" href="classgmx_1_1OptionTemplate.xhtml#ad3cb044b50f1b2a86b2fe9552165f02c" title="Stores option values in the provided vector. ">storeVector()</a>.</p>
<p>The pointer provided should remain valid as long as the associated Options object exists. </p>

</div>
</div>
<a class="anchor" id="ab8430ae1a804bd9400a13f7bc9694234"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; <a class="el" href="classgmx_1_1OptionTemplate.xhtml">gmx::OptionTemplate</a>&lt; std::string , <a class="el" href="classgmx_1_1FileNameOption.xhtml">FileNameOption</a>  &gt;::storeCount </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>countptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stores number of values in the value pointed by <code>countptr</code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">countptr</td><td>Storage for the number of values.</td></tr>
  </table>
  </dd>
</dl>
<p>For information on when values are available in the storage, see <a class="el" href="classgmx_1_1OptionTemplate.xhtml#ad3cb044b50f1b2a86b2fe9552165f02c" title="Stores option values in the provided vector. ">storeVector()</a>.</p>
<p>The pointers provided should remain valid as long as the associated Options object exists. </p>

</div>
</div>
<a class="anchor" id="af8c9e05a041f94527c8fafdd40822cf4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; <a class="el" href="classgmx_1_1OptionTemplate.xhtml">gmx::OptionTemplate</a>&lt; std::string , <a class="el" href="classgmx_1_1FileNameOption.xhtml">FileNameOption</a>  &gt;::storeIsSet </td>
          <td>(</td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>store</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stores whether the option was explicitly set. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">store</td><td>Variable to store the flag in.</td></tr>
  </table>
  </dd>
</dl>
<p>The value is set to <code>false</code> on creation of the option, and to <code>true</code> as soon as a value is assigned to the option. A default value does not set the flag to <code>true</code>, but assignment that uses <a class="el" href="classgmx_1_1OptionTemplate.xhtml#a400e5589c2dcb2d4758e21c5feffab69" title="Sets a default value for the option when it is set. ">defaultValueIfSet()</a> does.</p>
<p>The pointer provided should remain valid as long as the associated Options object exists. </p>

</div>
</div>
<a class="anchor" id="ad3cb044b50f1b2a86b2fe9552165f02c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; <a class="el" href="classgmx_1_1OptionTemplate.xhtml">gmx::OptionTemplate</a>&lt; std::string , <a class="el" href="classgmx_1_1FileNameOption.xhtml">FileNameOption</a>  &gt;::storeVector </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; std::string  &gt; *&#160;</td>
          <td class="paramname"><em>store</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stores option values in the provided vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">store</td><td>Vector to store option values in.</td></tr>
  </table>
  </dd>
</dl>
<p>Values are added to the vector after each successful set of values is parsed. Note that for some options, the value may be changed later, and is only guaranteed to be correct after Options::finish() has been called.</p>
<p>The pointer provided should remain valid as long as the associated Options object exists. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/options/<a class="el" href="filenameoption_8h.xhtml">filenameoption.h</a></li>
<li>src/gromacs/options/filenameoption.cpp</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:18:10 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

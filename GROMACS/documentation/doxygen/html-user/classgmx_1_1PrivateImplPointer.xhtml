<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::PrivateImplPointer&lt; Impl &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1PrivateImplPointer.xhtml">PrivateImplPointer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1PrivateImplPointer-members.xhtml">List of all members</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::PrivateImplPointer&lt; Impl &gt; Class Template Reference<div class="ingroups"><a class="el" href="group__group__libraryapi.xhtml">Library API</a> &#124; <a class="el" href="group__module__utility.xhtml">Low-Level Utilities (utility)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/utility/classhelpers.h&gt;</code></p>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><h3>template&lt;class Impl&gt;<br/>
class gmx::PrivateImplPointer&lt; Impl &gt;</h3>

<p>Helper class to manage a pointer to a private implementation class. </p>
<p>This helper provides the following benefits (all but the last could also be achieved with std::unique_ptr):</p>
<ul>
<li>Automatic memory management: the implementation pointer is freed in the destructor automatically. If the destructor is not declared or is defined inline in the header file, a compilation error occurs instead of a memory leak or undefined behavior.</li>
<li>Exception safety in constructors: the implementation pointer is freed correctly even if the constructor of the containing class throws after the implementation class is constructed.</li>
<li>Copy and/or assignment is automatically disallowed if explicit copy constructor and/or assignment operator is not provided.</li>
<li>Compiler helps to manage const-correctness: in const methods, it is not possible to change the implementation class.</li>
</ul>
<p>Move construction and assignment are also disallowed, but can be enabled by providing explicit move constructor and/or assignment.</p>
<p>Intended use: </p>
<div class="fragment"><div class="line"><span class="comment">// In exampleclass.h</span></div>
<div class="line"><span class="keyword">class </span>ExampleClass</div>
<div class="line">{</div>
<div class="line">    <span class="keyword">public</span>:</div>
<div class="line">        ExampleClass();</div>
<div class="line">        ~ExampleClass(); <span class="comment">// Must not be defined inline</span></div>
<div class="line"></div>
<div class="line">        <span class="comment">// &lt;...&gt;</span></div>
<div class="line"></div>
<div class="line">    <span class="keyword">private</span>:</div>
<div class="line">        <span class="keyword">class </span>Impl;</div>
<div class="line"></div>
<div class="line">        PrivateImplPointer&lt;Impl&gt; impl_;</div>
<div class="line">};</div>
<div class="line"></div>
<div class="line"><span class="comment">// In exampleclass.cpp</span></div>
<div class="line"></div>
<div class="line"><span class="comment">// &lt;definition of ExampleClass::Impl&gt;</span></div>
<div class="line"></div>
<div class="line">ExampleClass::ExampleClass()</div>
<div class="line">    : impl_(new Impl)</div>
<div class="line">{</div>
<div class="line">}</div>
<div class="line"></div>
<div class="line">ExampleClass::~ExampleClass()</div>
<div class="line">{</div>
<div class="line">}</div>
</div><!-- fragment --> </div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7b0e9abeda705d240aacfc227d9d7118"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7b0e9abeda705d240aacfc227d9d7118"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PrivateImplPointer.xhtml#a7b0e9abeda705d240aacfc227d9d7118">PrivateImplPointer</a> (std::nullptr_t)</td></tr>
<tr class="memdesc:a7b0e9abeda705d240aacfc227d9d7118"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allow implicit initialization from nullptr to support comparison. <br/></td></tr>
<tr class="separator:a7b0e9abeda705d240aacfc227d9d7118"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a512030e66c85ece1550365a21e3bd2ff"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a512030e66c85ece1550365a21e3bd2ff"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PrivateImplPointer.xhtml#a512030e66c85ece1550365a21e3bd2ff">PrivateImplPointer</a> (Impl *ptr)</td></tr>
<tr class="memdesc:a512030e66c85ece1550365a21e3bd2ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize with the given implementation class. <br/></td></tr>
<tr class="separator:a512030e66c85ece1550365a21e3bd2ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab80711212028501a05c882ee2dfc5ff8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PrivateImplPointer.xhtml#ab80711212028501a05c882ee2dfc5ff8">reset</a> (Impl *ptr)</td></tr>
<tr class="memdesc:ab80711212028501a05c882ee2dfc5ff8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a new implementation class and destructs the previous one.  <a href="#ab80711212028501a05c882ee2dfc5ff8">More...</a><br/></td></tr>
<tr class="separator:ab80711212028501a05c882ee2dfc5ff8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b6e4b115c32e99fc0c133d3056e67b4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4b6e4b115c32e99fc0c133d3056e67b4"></a>
Impl *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PrivateImplPointer.xhtml#a4b6e4b115c32e99fc0c133d3056e67b4">get</a> ()</td></tr>
<tr class="memdesc:a4b6e4b115c32e99fc0c133d3056e67b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access the raw pointer. <br/></td></tr>
<tr class="separator:a4b6e4b115c32e99fc0c133d3056e67b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40917645eba614a1c2efd18fa9ba01ef"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a40917645eba614a1c2efd18fa9ba01ef"></a>
Impl *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PrivateImplPointer.xhtml#a40917645eba614a1c2efd18fa9ba01ef">operator-&gt;</a> ()</td></tr>
<tr class="memdesc:a40917645eba614a1c2efd18fa9ba01ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access the implementation class as with a raw pointer. <br/></td></tr>
<tr class="separator:a40917645eba614a1c2efd18fa9ba01ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a725d4492ea462a6ab096640361233e15"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a725d4492ea462a6ab096640361233e15"></a>
Impl &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PrivateImplPointer.xhtml#a725d4492ea462a6ab096640361233e15">operator*</a> ()</td></tr>
<tr class="memdesc:a725d4492ea462a6ab096640361233e15"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access the implementation class as with a raw pointer. <br/></td></tr>
<tr class="separator:a725d4492ea462a6ab096640361233e15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8543ac373fc535b8d25b3b614484ba04"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8543ac373fc535b8d25b3b614484ba04"></a>
const Impl *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PrivateImplPointer.xhtml#a8543ac373fc535b8d25b3b614484ba04">operator-&gt;</a> () const </td></tr>
<tr class="memdesc:a8543ac373fc535b8d25b3b614484ba04"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access the implementation class as with a raw pointer. <br/></td></tr>
<tr class="separator:a8543ac373fc535b8d25b3b614484ba04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a24aec2250cc1c213055f2037bf8602"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3a24aec2250cc1c213055f2037bf8602"></a>
const Impl &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PrivateImplPointer.xhtml#a3a24aec2250cc1c213055f2037bf8602">operator*</a> () const </td></tr>
<tr class="memdesc:a3a24aec2250cc1c213055f2037bf8602"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access the implementation class as with a raw pointer. <br/></td></tr>
<tr class="separator:a3a24aec2250cc1c213055f2037bf8602"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae48f9948b473d895965ff8b7805ec66a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae48f9948b473d895965ff8b7805ec66a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PrivateImplPointer.xhtml#ae48f9948b473d895965ff8b7805ec66a">operator bool</a> () const </td></tr>
<tr class="memdesc:ae48f9948b473d895965ff8b7805ec66a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows testing whether the implementation is initialized. <br/></td></tr>
<tr class="separator:ae48f9948b473d895965ff8b7805ec66a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a994b796b6b95dc8892310d601ca25e46"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a994b796b6b95dc8892310d601ca25e46"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PrivateImplPointer.xhtml#a994b796b6b95dc8892310d601ca25e46">operator==</a> (const <a class="el" href="classgmx_1_1PrivateImplPointer.xhtml">PrivateImplPointer</a> &amp;other) const </td></tr>
<tr class="memdesc:a994b796b6b95dc8892310d601ca25e46"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests for equality (mainly useful against nullptr). <br/></td></tr>
<tr class="separator:a994b796b6b95dc8892310d601ca25e46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e551bedf1ae2e1c10f67587bcb6ff7d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6e551bedf1ae2e1c10f67587bcb6ff7d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PrivateImplPointer.xhtml#a6e551bedf1ae2e1c10f67587bcb6ff7d">operator!=</a> (const <a class="el" href="classgmx_1_1PrivateImplPointer.xhtml">PrivateImplPointer</a> &amp;other) const </td></tr>
<tr class="memdesc:a6e551bedf1ae2e1c10f67587bcb6ff7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests for inequality (mainly useful against nullptr). <br/></td></tr>
<tr class="separator:a6e551bedf1ae2e1c10f67587bcb6ff7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ab80711212028501a05c882ee2dfc5ff8"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class Impl&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classgmx_1_1PrivateImplPointer.xhtml">gmx::PrivateImplPointer</a>&lt; Impl &gt;::reset </td>
          <td>(</td>
          <td class="paramtype">Impl *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets a new implementation class and destructs the previous one. </p>
<p>Needed, e.g., to implement lazily initializable or copy-assignable classes. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/gromacs/utility/<a class="el" href="classhelpers_8h.xhtml">classhelpers.h</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:18:11 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

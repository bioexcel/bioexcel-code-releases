<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/mdlib/groupcoord.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_71392c6f4b1ed3a32ba5c064e868a1ba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a798d384400d41a9e6864d9b1b8753fe.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_b988dc028879cf86b2e2d3976beb6cdb.xhtml">mdlib</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">groupcoord.h File Reference<div class="ingroups"><a class="el" href="group__group__libraryapi.xhtml">Library API</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;stdio.h&gt;</code><br/>
<code>#include &quot;gromacs/math/vectypes.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="basedefinitions_8h.xhtml">gromacs/utility/basedefinitions.h</a>&quot;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for groupcoord.h:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="groupcoord_8h__incl.svg" width="307" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Assemble atomic positions of a (small) subset of atoms and distribute to all nodes. </p>
<p>This file contains functions to assemble the positions of a subset of the atoms and to do operations on it like determining the center of mass, or doing translations and rotations. These functions are useful when a subset of the positions needs to be compared to some set of reference positions, as e.g. done for essential dynamics. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a5bad081bbb4ca7796308f7a9843926e5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="groupcoord_8h.xhtml#a5bad081bbb4ca7796308f7a9843926e5">dd_make_local_group_indices</a> (<a class="el" href="structgmx__ga2la__t.xhtml">gmx_ga2la_t</a> *ga2la, const int nr, int anrs[], int *nr_loc, int *anrs_loc[], int *nalloc_loc, int coll_ind[])</td></tr>
<tr class="memdesc:a5bad081bbb4ca7796308f7a9843926e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Select local atoms of a group.  <a href="#a5bad081bbb4ca7796308f7a9843926e5">More...</a><br/></td></tr>
<tr class="separator:a5bad081bbb4ca7796308f7a9843926e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20467c38340aadf3f059e16f12670109"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="groupcoord_8h.xhtml#a20467c38340aadf3f059e16f12670109">communicate_group_positions</a> (t_commrec *cr, rvec *xcoll, ivec *shifts, ivec *extra_shifts, const <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bNS, rvec *x_loc, const int nr, const int nr_loc, int *anrs_loc, int *coll_ind, rvec *xcoll_old, matrix box)</td></tr>
<tr class="memdesc:a20467c38340aadf3f059e16f12670109"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assemble local positions into a collective array present on all nodes.  <a href="#a20467c38340aadf3f059e16f12670109">More...</a><br/></td></tr>
<tr class="separator:a20467c38340aadf3f059e16f12670109"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade257f0bec734eec877f8dde10926aba"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="groupcoord_8h.xhtml#ade257f0bec734eec877f8dde10926aba">get_center</a> (rvec x[], <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> weight[], const int nr, rvec center)</td></tr>
<tr class="memdesc:ade257f0bec734eec877f8dde10926aba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the center of the positions x locally.  <a href="#ade257f0bec734eec877f8dde10926aba">More...</a><br/></td></tr>
<tr class="separator:ade257f0bec734eec877f8dde10926aba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa094e1b1d1067fc15558e2aa169f99a0"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="groupcoord_8h.xhtml#aa094e1b1d1067fc15558e2aa169f99a0">get_sum_of_positions</a> (rvec x[], <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> weight[], const int nr, dvec dsumvec)</td></tr>
<tr class="memdesc:aa094e1b1d1067fc15558e2aa169f99a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the sum of the positions x locally.  <a href="#aa094e1b1d1067fc15558e2aa169f99a0">More...</a><br/></td></tr>
<tr class="separator:aa094e1b1d1067fc15558e2aa169f99a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05a0f3b223b46ce34e8470d5e13a4e5c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="groupcoord_8h.xhtml#a05a0f3b223b46ce34e8470d5e13a4e5c">get_center_comm</a> (t_commrec *cr, rvec x_loc[], <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> weight_loc[], int nr_loc, int nr_group, rvec center)</td></tr>
<tr class="memdesc:a05a0f3b223b46ce34e8470d5e13a4e5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the global center of all local arrays x.  <a href="#a05a0f3b223b46ce34e8470d5e13a4e5c">More...</a><br/></td></tr>
<tr class="separator:a05a0f3b223b46ce34e8470d5e13a4e5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa739dbdc71986caa8bcbcda9009778ff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="groupcoord_8h.xhtml#aa739dbdc71986caa8bcbcda9009778ff">translate_x</a> (rvec x[], const int nr, const rvec transvec)</td></tr>
<tr class="memdesc:aa739dbdc71986caa8bcbcda9009778ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Translate positions.  <a href="#aa739dbdc71986caa8bcbcda9009778ff">More...</a><br/></td></tr>
<tr class="separator:aa739dbdc71986caa8bcbcda9009778ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a918543f4782aca4196ce2a5cc6a3272a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="groupcoord_8h.xhtml#a918543f4782aca4196ce2a5cc6a3272a">rotate_x</a> (rvec x[], const int nr, matrix rmat)</td></tr>
<tr class="memdesc:a918543f4782aca4196ce2a5cc6a3272a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotate positions.  <a href="#a918543f4782aca4196ce2a5cc6a3272a">More...</a><br/></td></tr>
<tr class="separator:a918543f4782aca4196ce2a5cc6a3272a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a20467c38340aadf3f059e16f12670109"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void communicate_group_positions </td>
          <td>(</td>
          <td class="paramtype">t_commrec *&#160;</td>
          <td class="paramname"><em>cr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec *&#160;</td>
          <td class="paramname"><em>xcoll</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ivec *&#160;</td>
          <td class="paramname"><em>shifts</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ivec *&#160;</td>
          <td class="paramname"><em>extra_shifts</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bNS</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec *&#160;</td>
          <td class="paramname"><em>x_loc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>nr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>nr_loc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>anrs_loc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>coll_ind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec *&#160;</td>
          <td class="paramname"><em>xcoll_old</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">matrix&#160;</td>
          <td class="paramname"><em>box</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assemble local positions into a collective array present on all nodes. </p>
<p>Communicate the positions of the group's atoms such that every node has all of them. Unless running on huge number of cores, this is not a big performance impact as long as the collective subset [0..nr] is kept small. The atom indices are retrieved from anrs_loc[0..nr_loc]. If you call the routine for the serial case, provide an array coll_ind[i] = i for i in 1..nr.</p>
<p>If shifts != NULL, the PBC representation of each atom is chosen such that a continuous trajectory results. Therefore, if the group is whole at the start of the simulation, it will always stay whole. If shifts = NULL, the group positions are not made whole again, but assembled and distributed to all nodes. The variables marked "optional" are not used in that case.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cr</td><td>Pointer to MPI communication data. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">xcoll</td><td>Collective array of positions, identical on all nodes after this routine has been called. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">shifts</td><td>Collective array of shifts for xcoll, needed to make the group whole. This array remembers the shifts since the start of the simulation (where the group is whole) and must therefore not be changed outside of this routine! If NULL, the group will not be made whole and the optional variables are ignored. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">extra_shifts</td><td>Extra shifts since last time step, only needed as buffer variable [0..nr] (optional). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bNS</td><td>Neighbor searching / domain re-decomposition has been performed at the begin of this time step such that the shifts have changed and need to be updated (optional). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">x_loc</td><td>Pointer to the local atom positions this node has. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nr</td><td>Total number of atoms in the group. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nr_loc</td><td>Number of group atoms on the local node. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">anrs_loc</td><td>Array of the local atom indices. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">coll_ind</td><td>This array of size nr stores for each local atom where it belongs in the collective array so that the local contributions can be gmx_summed. It is provided by dd_make_local_group_indices. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">xcoll_old</td><td>Positions from the last time step, used to make the group whole (optional). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">box</td><td>Simulation box matrix, needed to shift xcoll such that the group becomes whole (optional). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5bad081bbb4ca7796308f7a9843926e5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dd_make_local_group_indices </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structgmx__ga2la__t.xhtml">gmx_ga2la_t</a> *&#160;</td>
          <td class="paramname"><em>ga2la</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>nr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>anrs</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>nr_loc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>anrs_loc</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>nalloc_loc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>coll_ind</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Select local atoms of a group. </p>
<p>Selects the indices of local atoms of a group and stores them in anrs_loc[0..nr_loc]. If you need the positions of the group's atoms on all nodes, provide a coll_ind[0..nr] array and pass it on to communicate_group_positions. Thus the collective array will always have the same atom order (ascending indices).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ga2la</td><td>Global to local atom index conversion data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nr</td><td>The total number of atoms that the group contains. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">anrs</td><td>The global atom number of the group's atoms. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">nr_loc</td><td>The number of group atoms present on the local node. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">anrs_loc</td><td>The local atom numbers of the group. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">nalloc_loc</td><td>Local allocation size of anrs_loc array. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">coll_ind</td><td>If not NULL this array must be of size nr. It stores for each local atom where it belongs in the global (collective) array such that it can be gmx_summed in the communicate_group_positions routine. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ade257f0bec734eec877f8dde10926aba"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void get_center </td>
          <td>(</td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>x</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>weight</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>nr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>center</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates the center of the positions x locally. </p>
<p>Calculates the center of mass (if masses are given in the weight array) or the geometrical center (if NULL is passed as weight).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Positions. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weight</td><td>Can be NULL or an array of weights. If masses are given as weights, the COM is calculated. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nr</td><td>Number of positions and weights if present. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">center</td><td>The (weighted) center of the positions. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a05a0f3b223b46ce34e8470d5e13a4e5c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void get_center_comm </td>
          <td>(</td>
          <td class="paramtype">t_commrec *&#160;</td>
          <td class="paramname"><em>cr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>x_loc</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>weight_loc</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nr_loc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nr_group</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>center</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates the global center of all local arrays x. </p>
<p>Get the center from local positions [0..nr_loc], this involves communication. Not that the positions must already have the correct PBC representation. Use this routine if no collective coordinates are assembled from which the center could be calculated without communication.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cr</td><td>Pointer to MPI communication data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">x_loc</td><td>Array of local positions [0..nr_loc]. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weight_loc</td><td>Array of local weights, these are the masses if the center of mass is to be calculated. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nr_loc</td><td>The number of positions on the local node. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nr_group</td><td>The number of positions in the whole group. Since this is known anyway, we do not need to communicate and sum nr_loc if we pass it over. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">center</td><td>The (weighted) center of all x_loc from all the nodes. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa094e1b1d1067fc15558e2aa169f99a0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double get_sum_of_positions </td>
          <td>(</td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>x</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>weight</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>nr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">dvec&#160;</td>
          <td class="paramname"><em>dsumvec</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates the sum of the positions x locally. </p>
<p>Calculates the (weighted) sum of position vectors and returns the sum of weights, which is needed when local contributions shall be summed to a global weighted center.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Array of positions. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weight</td><td>Can be NULL or an array of weights. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nr</td><td>Number of positions and weights if present. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dsumvec</td><td>The (weighted) sum of the positions. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Sum of weights. </dd></dl>

</div>
</div>
<a class="anchor" id="a918543f4782aca4196ce2a5cc6a3272a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void rotate_x </td>
          <td>(</td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>x</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>nr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">matrix&#160;</td>
          <td class="paramname"><em>rmat</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Rotate positions. </p>
<p>Rotate the positions with the rotation matrix.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">x</td><td>Array of positions. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nr</td><td>Number of entries in the position array. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rmat</td><td>Rotation matrix to operate on all positions. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa739dbdc71986caa8bcbcda9009778ff"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void translate_x </td>
          <td>(</td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>x</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>nr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const rvec&#160;</td>
          <td class="paramname"><em>transvec</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Translate positions. </p>
<p>Add a translation vector to the positions x.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">x</td><td>Array of positions. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nr</td><td>Number of entries in the position array. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">transvec</td><td>Translation vector to be added to all positions. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:19:34 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

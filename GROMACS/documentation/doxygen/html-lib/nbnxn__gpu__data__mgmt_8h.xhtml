<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/mdlib/nbnxn_gpu_data_mgmt.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_71392c6f4b1ed3a32ba5c064e868a1ba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a798d384400d41a9e6864d9b1b8753fe.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_b988dc028879cf86b2e2d3976beb6cdb.xhtml">mdlib</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">nbnxn_gpu_data_mgmt.h File Reference<div class="ingroups"><a class="el" href="group__group__libraryapi.xhtml">Library API</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;gromacs/gpu_utils/gpu_macros.h&quot;</code><br/>
<code>#include &quot;gromacs/mdlib/nbnxn_gpu_types.h&quot;</code><br/>
<code>#include &quot;gromacs/mdtypes/interaction_const.h&quot;</code><br/>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Declare interface for GPU data transfer for NBNXN module. </p>
<dl class="section author"><dt>Author</dt><dd>Mark Abraham <a href="#" onclick="location.href='mai'+'lto:'+'mar'+'k.'+'j.a'+'br'+'aha'+'m@'+'gma'+'il'+'.co'+'m'; return false;">mark.<span style="display: none;">.nosp@m.</span>j.ab<span style="display: none;">.nosp@m.</span>raham<span style="display: none;">.nosp@m.</span>@gma<span style="display: none;">.nosp@m.</span>il.co<span style="display: none;">.nosp@m.</span>m</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ad4917e597062ef67e989709aa38b9659"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#ad4917e597062ef67e989709aa38b9659">nbnxn_gpu_init</a> (gmx_nbnxn_gpu_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> **p_nb, const struct gmx_gpu_info_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *gpu_info, const struct gmx_gpu_opt_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *gpu_opt, const interaction_const_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *ic, nonbonded_verlet_group_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *nbv_grp, int <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> my_gpu_index, int <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> rank, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> bLocalAndNonlocal)</td></tr>
<tr class="memdesc:ad4917e597062ef67e989709aa38b9659"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the data structures related to GPU nonbonded calculations.  <a href="#ad4917e597062ef67e989709aa38b9659">More...</a><br/></td></tr>
<tr class="separator:ad4917e597062ef67e989709aa38b9659"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad20779b2eaab018156c2e120726a74af"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#ad20779b2eaab018156c2e120726a74af">nbnxn_gpu_init_pairlist</a> (gmx_nbnxn_gpu_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *nb, const struct nbnxn_pairlist_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *h_nblist, int <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> iloc)</td></tr>
<tr class="memdesc:ad20779b2eaab018156c2e120726a74af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes pair-list data for GPU, called at every pair search step.  <a href="#ad20779b2eaab018156c2e120726a74af">More...</a><br/></td></tr>
<tr class="separator:ad20779b2eaab018156c2e120726a74af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdab67dfc5ee8902563a60aff2577263"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#acdab67dfc5ee8902563a60aff2577263">nbnxn_gpu_init_atomdata</a> (gmx_nbnxn_gpu_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *nb, const struct nbnxn_atomdata_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *nbat)</td></tr>
<tr class="memdesc:acdab67dfc5ee8902563a60aff2577263"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes atom-data on the GPU, called at every pair search step.  <a href="#acdab67dfc5ee8902563a60aff2577263">More...</a><br/></td></tr>
<tr class="separator:acdab67dfc5ee8902563a60aff2577263"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97f8aff74c636f0e21b80f8724a7bb3a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a97f8aff74c636f0e21b80f8724a7bb3a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#a97f8aff74c636f0e21b80f8724a7bb3a">nbnxn_gpu_pme_loadbal_update_param</a> (const struct nonbonded_verlet_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *nbv, const interaction_const_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *ic)</td></tr>
<tr class="memdesc:a97f8aff74c636f0e21b80f8724a7bb3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Re-generate the GPU Ewald force table, resets rlist, and update the electrostatic type switching to twin cut-off (or back) if needed. <br/></td></tr>
<tr class="separator:a97f8aff74c636f0e21b80f8724a7bb3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f12c5b14ca6b8cd9de83ccc182fa56c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#a3f12c5b14ca6b8cd9de83ccc182fa56c">nbnxn_gpu_upload_shiftvec</a> (gmx_nbnxn_gpu_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *nb, const struct nbnxn_atomdata_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *nbatom)</td></tr>
<tr class="memdesc:a3f12c5b14ca6b8cd9de83ccc182fa56c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Uploads shift vector to the GPU if the box is dynamic (otherwise just returns).  <a href="#a3f12c5b14ca6b8cd9de83ccc182fa56c">More...</a><br/></td></tr>
<tr class="separator:a3f12c5b14ca6b8cd9de83ccc182fa56c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb32dad08995b5f710d1d70293a8c922"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#acb32dad08995b5f710d1d70293a8c922">nbnxn_gpu_clear_outputs</a> (gmx_nbnxn_gpu_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *nb, int <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> flags)</td></tr>
<tr class="memdesc:acb32dad08995b5f710d1d70293a8c922"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears GPU outputs: nonbonded force, shift force and energy.  <a href="#acb32dad08995b5f710d1d70293a8c922">More...</a><br/></td></tr>
<tr class="separator:acb32dad08995b5f710d1d70293a8c922"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8860ea862c619e4d0046d3443800f04e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#a8860ea862c619e4d0046d3443800f04e">nbnxn_gpu_free</a> (gmx_nbnxn_gpu_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *nb)</td></tr>
<tr class="memdesc:a8860ea862c619e4d0046d3443800f04e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Frees all GPU resources used for the nonbonded calculations.  <a href="#a8860ea862c619e4d0046d3443800f04e">More...</a><br/></td></tr>
<tr class="separator:a8860ea862c619e4d0046d3443800f04e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65f313a85fc4d22e8240cc001b70cc5c"><td class="memItemLeft" align="right" valign="top">struct gmx_wallclock_gpu_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#a65f313a85fc4d22e8240cc001b70cc5c">nbnxn_gpu_get_timings</a> (gmx_nbnxn_gpu_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *nb)</td></tr>
<tr class="memdesc:a65f313a85fc4d22e8240cc001b70cc5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the GPU timings structure or NULL if GPU is not used or timing is off.  <a href="#a65f313a85fc4d22e8240cc001b70cc5c">More...</a><br/></td></tr>
<tr class="separator:a65f313a85fc4d22e8240cc001b70cc5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12f70e317eb36b43abf237b8b22b7e4c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#a12f70e317eb36b43abf237b8b22b7e4c">nbnxn_gpu_reset_timings</a> (struct nonbonded_verlet_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *nbv)</td></tr>
<tr class="memdesc:a12f70e317eb36b43abf237b8b22b7e4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets nonbonded GPU timings.  <a href="#a12f70e317eb36b43abf237b8b22b7e4c">More...</a><br/></td></tr>
<tr class="separator:a12f70e317eb36b43abf237b8b22b7e4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4561470fbb4119e126d060bebe93187"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#ae4561470fbb4119e126d060bebe93187">nbnxn_gpu_min_ci_balanced</a> (gmx_nbnxn_gpu_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *nb)</td></tr>
<tr class="memdesc:ae4561470fbb4119e126d060bebe93187"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the minimum size of proximity lists to improve SM load balance with GPU non-bonded kernels.  <a href="#ae4561470fbb4119e126d060bebe93187">More...</a><br/></td></tr>
<tr class="separator:ae4561470fbb4119e126d060bebe93187"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc7be22611b70c9237407f9653324407"><td class="memItemLeft" align="right" valign="top"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#acc7be22611b70c9237407f9653324407">nbnxn_gpu_is_kernel_ewald_analytical</a> (const gmx_nbnxn_gpu_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *nb)</td></tr>
<tr class="memdesc:acc7be22611b70c9237407f9653324407"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns if analytical Ewald GPU kernels are used.  <a href="#acc7be22611b70c9237407f9653324407">More...</a><br/></td></tr>
<tr class="separator:acc7be22611b70c9237407f9653324407"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="acb32dad08995b5f710d1d70293a8c922"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void nbnxn_gpu_clear_outputs </td>
          <td>(</td>
          <td class="paramtype">gmx_nbnxn_gpu_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *&#160;</td>
          <td class="paramname"><em>nb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a>&#160;</td>
          <td class="paramname"><em>flags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clears GPU outputs: nonbonded force, shift force and energy. </p>

</div>
</div>
<a class="anchor" id="a8860ea862c619e4d0046d3443800f04e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void nbnxn_gpu_free </td>
          <td>(</td>
          <td class="paramtype">gmx_nbnxn_gpu_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *&#160;</td>
          <td class="paramname"><em>nb</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Frees all GPU resources used for the nonbonded calculations. </p>

</div>
</div>
<a class="anchor" id="a65f313a85fc4d22e8240cc001b70cc5c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct gmx_wallclock_gpu_t* nbnxn_gpu_get_timings </td>
          <td>(</td>
          <td class="paramtype">gmx_nbnxn_gpu_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *&#160;</td>
          <td class="paramname"><em>nb</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the GPU timings structure or NULL if GPU is not used or timing is off. </p>

</div>
</div>
<a class="anchor" id="ad4917e597062ef67e989709aa38b9659"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void nbnxn_gpu_init </td>
          <td>(</td>
          <td class="paramtype">gmx_nbnxn_gpu_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> **&#160;</td>
          <td class="paramname"><em>p_nb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const struct gmx_gpu_info_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *&#160;</td>
          <td class="paramname"><em>gpu_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const struct gmx_gpu_opt_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *&#160;</td>
          <td class="paramname"><em>gpu_opt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const interaction_const_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *&#160;</td>
          <td class="paramname"><em>ic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">nonbonded_verlet_group_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *&#160;</td>
          <td class="paramname"><em>nbv_grp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a>&#160;</td>
          <td class="paramname"><em>my_gpu_index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a>&#160;</td>
          <td class="paramname"><em>rank</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a>&#160;</td>
          <td class="paramname"><em>bLocalAndNonlocal</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the data structures related to GPU nonbonded calculations. </p>

</div>
</div>
<a class="anchor" id="acdab67dfc5ee8902563a60aff2577263"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void nbnxn_gpu_init_atomdata </td>
          <td>(</td>
          <td class="paramtype">gmx_nbnxn_gpu_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *&#160;</td>
          <td class="paramname"><em>nb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const struct nbnxn_atomdata_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *&#160;</td>
          <td class="paramname"><em>nbat</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes atom-data on the GPU, called at every pair search step. </p>

</div>
</div>
<a class="anchor" id="ad20779b2eaab018156c2e120726a74af"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void nbnxn_gpu_init_pairlist </td>
          <td>(</td>
          <td class="paramtype">gmx_nbnxn_gpu_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *&#160;</td>
          <td class="paramname"><em>nb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const struct nbnxn_pairlist_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *&#160;</td>
          <td class="paramname"><em>h_nblist</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a>&#160;</td>
          <td class="paramname"><em>iloc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes pair-list data for GPU, called at every pair search step. </p>

</div>
</div>
<a class="anchor" id="acc7be22611b70c9237407f9653324407"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> nbnxn_gpu_is_kernel_ewald_analytical </td>
          <td>(</td>
          <td class="paramtype">const gmx_nbnxn_gpu_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *&#160;</td>
          <td class="paramname"><em>nb</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns if analytical Ewald GPU kernels are used. </p>

</div>
</div>
<a class="anchor" id="ae4561470fbb4119e126d060bebe93187"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int nbnxn_gpu_min_ci_balanced </td>
          <td>(</td>
          <td class="paramtype">gmx_nbnxn_gpu_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *&#160;</td>
          <td class="paramname"><em>nb</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates the minimum size of proximity lists to improve SM load balance with GPU non-bonded kernels. </p>

</div>
</div>
<a class="anchor" id="a12f70e317eb36b43abf237b8b22b7e4c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void nbnxn_gpu_reset_timings </td>
          <td>(</td>
          <td class="paramtype">struct nonbonded_verlet_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *&#160;</td>
          <td class="paramname"><em>nbv</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resets nonbonded GPU timings. </p>

</div>
</div>
<a class="anchor" id="a3f12c5b14ca6b8cd9de83ccc182fa56c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void nbnxn_gpu_upload_shiftvec </td>
          <td>(</td>
          <td class="paramtype">gmx_nbnxn_gpu_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *&#160;</td>
          <td class="paramname"><em>nb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const struct nbnxn_atomdata_t <a class="el" href="basedefinitions_8h.xhtml#a0548021afb76a02d9f589581c0a55013">gmx_unused</a> *&#160;</td>
          <td class="paramname"><em>nbatom</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Uploads shift vector to the GPU if the box is dynamic (otherwise just returns). </p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:19:34 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

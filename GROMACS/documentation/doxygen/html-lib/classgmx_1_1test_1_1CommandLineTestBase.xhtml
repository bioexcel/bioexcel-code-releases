<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::test::CommandLineTestBase Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="namespacegmx_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="classgmx_1_1test_1_1CommandLineTestBase.xhtml">CommandLineTestBase</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1test_1_1CommandLineTestBase-members.xhtml">List of all members</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::test::CommandLineTestBase Class Reference<div class="ingroups"><a class="el" href="group__group__libraryapi.xhtml">Library API</a> &#124; <a class="el" href="group__module__testutils.xhtml">Testing Utilities (testutils)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;testutils/cmdlinetest.h&gt;</code></p>

<p>Inherits Test.</p>

<p>Inherited by gmx::test::AbstractTrajectoryAnalysisModuleTestFixture.</p>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Test fixture for tests that call a single command-line program with input/output files. </p>
<p>This class provides a convenient package for using <a class="el" href="classgmx_1_1test_1_1CommandLineTestHelper.xhtml" title="Helper class for tests that construct command lines that need to reference existing files...">CommandLineTestHelper</a> in a test that do not need special customization. It takes care of creating the other necessary objects (like <a class="el" href="classgmx_1_1test_1_1TestFileManager.xhtml" title="Helper for tests that need input and output files. ">TestFileManager</a>, <a class="el" href="classgmx_1_1test_1_1TestReferenceData.xhtml" title="Handles creation of and comparison to test reference data. ">TestReferenceData</a>, and <a class="el" href="classgmx_1_1test_1_1CommandLine.xhtml" title="Helper class for tests that need to construct command lines. ">CommandLine</a>) and wrapping the methods from <a class="el" href="classgmx_1_1test_1_1CommandLineTestHelper.xhtml" title="Helper class for tests that construct command lines that need to reference existing files...">CommandLineTestHelper</a> such that extra parameters are not needed. Additionally, it provides <a class="el" href="classgmx_1_1test_1_1CommandLineTestBase.xhtml#a9793f413202eff2667e40fb157831978" title="Sets an input file. ">setInputFile()</a> as a convenience function for adding a fixed input file, pointing to a file that resides in the source tree.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1test_1_1CommandLineTestHelper.xhtml" title="Helper class for tests that construct command lines that need to reference existing files...">CommandLineTestHelper</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9793f413202eff2667e40fb157831978"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1CommandLineTestBase.xhtml#a9793f413202eff2667e40fb157831978">setInputFile</a> (const char *option, const char *filename)</td></tr>
<tr class="memdesc:a9793f413202eff2667e40fb157831978"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets an input file.  <a href="#a9793f413202eff2667e40fb157831978">More...</a><br/></td></tr>
<tr class="separator:a9793f413202eff2667e40fb157831978"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a469f2bc25eda4b62f1eab637466b2c6c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1CommandLineTestBase.xhtml#a469f2bc25eda4b62f1eab637466b2c6c">setInputFileContents</a> (const char *option, const char *extension, const std::string &amp;contents)</td></tr>
<tr class="memdesc:a469f2bc25eda4b62f1eab637466b2c6c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generates and sets an input file.  <a href="#a469f2bc25eda4b62f1eab637466b2c6c">More...</a><br/></td></tr>
<tr class="separator:a469f2bc25eda4b62f1eab637466b2c6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79f7d150887aa24f009512699118952b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1CommandLineTestBase.xhtml#a79f7d150887aa24f009512699118952b">setInputFileContents</a> (const char *option, const char *extension, const <a class="el" href="classgmx_1_1ConstArrayRef.xhtml">ConstArrayRef</a>&lt; const char * &gt; &amp;contents)</td></tr>
<tr class="memdesc:a79f7d150887aa24f009512699118952b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generates and sets an input file.  <a href="#a79f7d150887aa24f009512699118952b">More...</a><br/></td></tr>
<tr class="separator:a79f7d150887aa24f009512699118952b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30fffeafca8ac47ac67fb2355471765e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1CommandLineTestBase.xhtml#a30fffeafca8ac47ac67fb2355471765e">setOutputFile</a> (const char *option, const char *filename, const <a class="el" href="classgmx_1_1test_1_1ITextBlockMatcherSettings.xhtml">ITextBlockMatcherSettings</a> &amp;matcher)</td></tr>
<tr class="memdesc:a30fffeafca8ac47ac67fb2355471765e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets an output file parameter and adds it to the set of tested files.  <a href="#a30fffeafca8ac47ac67fb2355471765e">More...</a><br/></td></tr>
<tr class="separator:a30fffeafca8ac47ac67fb2355471765e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba2831a576c464327206ea473da28142"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1test_1_1CommandLine.xhtml">CommandLine</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1CommandLineTestBase.xhtml#aba2831a576c464327206ea473da28142">commandLine</a> ()</td></tr>
<tr class="memdesc:aba2831a576c464327206ea473da28142"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the internal <a class="el" href="classgmx_1_1test_1_1CommandLine.xhtml" title="Helper class for tests that need to construct command lines. ">CommandLine</a> object used to construct the command line for the test.  <a href="#aba2831a576c464327206ea473da28142">More...</a><br/></td></tr>
<tr class="separator:aba2831a576c464327206ea473da28142"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5899f9f12453f75da2a4af840a1c4b59"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1test_1_1TestFileManager.xhtml">TestFileManager</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1CommandLineTestBase.xhtml#a5899f9f12453f75da2a4af840a1c4b59">fileManager</a> ()</td></tr>
<tr class="memdesc:a5899f9f12453f75da2a4af840a1c4b59"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the internal <a class="el" href="classgmx_1_1test_1_1TestFileManager.xhtml" title="Helper for tests that need input and output files. ">TestFileManager</a> object used to manage the files.  <a href="#a5899f9f12453f75da2a4af840a1c4b59">More...</a><br/></td></tr>
<tr class="separator:a5899f9f12453f75da2a4af840a1c4b59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16a7a56e9d9ea0e631bc03deced58b43"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1test_1_1TestReferenceChecker.xhtml">TestReferenceChecker</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1CommandLineTestBase.xhtml#a16a7a56e9d9ea0e631bc03deced58b43">rootChecker</a> ()</td></tr>
<tr class="memdesc:a16a7a56e9d9ea0e631bc03deced58b43"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the root reference data checker.  <a href="#a16a7a56e9d9ea0e631bc03deced58b43">More...</a><br/></td></tr>
<tr class="separator:a16a7a56e9d9ea0e631bc03deced58b43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a766fc30c584fd86aca90d6621d24d687"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a766fc30c584fd86aca90d6621d24d687"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1CommandLineTestBase.xhtml#a766fc30c584fd86aca90d6621d24d687">testWriteHelp</a> (<a class="el" href="classgmx_1_1ICommandLineModule.xhtml">ICommandLineModule</a> *module)</td></tr>
<tr class="memdesc:a766fc30c584fd86aca90d6621d24d687"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks the output of writeHelp() against reference data. <br/></td></tr>
<tr class="separator:a766fc30c584fd86aca90d6621d24d687"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a264d07b5eac2f200136e1238268f15fd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1CommandLineTestBase.xhtml#a264d07b5eac2f200136e1238268f15fd">checkOutputFiles</a> ()</td></tr>
<tr class="memdesc:a264d07b5eac2f200136e1238268f15fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks output files added with <a class="el" href="classgmx_1_1test_1_1CommandLineTestBase.xhtml#a30fffeafca8ac47ac67fb2355471765e" title="Sets an output file parameter and adds it to the set of tested files. ">setOutputFile()</a> against reference data.  <a href="#a264d07b5eac2f200136e1238268f15fd">More...</a><br/></td></tr>
<tr class="separator:a264d07b5eac2f200136e1238268f15fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a264d07b5eac2f200136e1238268f15fd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::test::CommandLineTestBase::checkOutputFiles </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks output files added with <a class="el" href="classgmx_1_1test_1_1CommandLineTestBase.xhtml#a30fffeafca8ac47ac67fb2355471765e" title="Sets an output file parameter and adds it to the set of tested files. ">setOutputFile()</a> against reference data. </p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1test_1_1CommandLineTestHelper.xhtml#a03dcf4f3e2400defe8eb88d99af452ec" title="Checks output files added with setOutputFile() against reference data. ">CommandLineTestHelper::checkOutputFiles()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="aba2831a576c464327206ea473da28142"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1test_1_1CommandLine.xhtml">CommandLine</a> &amp; gmx::test::CommandLineTestBase::commandLine </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the internal <a class="el" href="classgmx_1_1test_1_1CommandLine.xhtml" title="Helper class for tests that need to construct command lines. ">CommandLine</a> object used to construct the command line for the test. </p>
<p>Derived test fixtures can use this to add additional options, and to access the final command line to do the actual call that is being tested.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a5899f9f12453f75da2a4af840a1c4b59"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1test_1_1TestFileManager.xhtml">TestFileManager</a> &amp; gmx::test::CommandLineTestBase::fileManager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the internal <a class="el" href="classgmx_1_1test_1_1TestFileManager.xhtml" title="Helper for tests that need input and output files. ">TestFileManager</a> object used to manage the files. </p>
<p>Derived test fixtures can use this to manage files in cases the canned methods are not sufficient.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a16a7a56e9d9ea0e631bc03deced58b43"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1test_1_1TestReferenceChecker.xhtml">TestReferenceChecker</a> gmx::test::CommandLineTestBase::rootChecker </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the root reference data checker. </p>
<p>Derived test fixtures can use this to check other things than output file contents. </p>

</div>
</div>
<a class="anchor" id="a9793f413202eff2667e40fb157831978"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::test::CommandLineTestBase::setInputFile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>option</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets an input file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">option</td><td>Option to set. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>Name of the input file.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1test_1_1TestFileManager.xhtml#ad9e9b159c4047c0d9560a0f752f2e3a1" title="Returns the path to a test input file. ">TestFileManager::getInputFilePath()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a469f2bc25eda4b62f1eab637466b2c6c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::test::CommandLineTestBase::setInputFileContents </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>option</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>extension</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>contents</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Generates and sets an input file. </p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1test_1_1CommandLineTestHelper.xhtml#a4e7a9dd4bbcd57f9554185b7c84aa022" title="Generates and sets an input file. ">CommandLineTestHelper::setInputFileContents()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a79f7d150887aa24f009512699118952b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::test::CommandLineTestBase::setInputFileContents </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>option</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>extension</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1ConstArrayRef.xhtml">ConstArrayRef</a>&lt; const char * &gt; &amp;&#160;</td>
          <td class="paramname"><em>contents</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Generates and sets an input file. </p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1test_1_1CommandLineTestHelper.xhtml#a4e7a9dd4bbcd57f9554185b7c84aa022" title="Generates and sets an input file. ">CommandLineTestHelper::setInputFileContents()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a30fffeafca8ac47ac67fb2355471765e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::test::CommandLineTestBase::setOutputFile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>option</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1test_1_1ITextBlockMatcherSettings.xhtml">ITextBlockMatcherSettings</a> &amp;&#160;</td>
          <td class="paramname"><em>matcher</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets an output file parameter and adds it to the set of tested files. </p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1test_1_1CommandLineTestHelper.xhtml#a4d9a0e1150be7ba9faea9522fc1bd274" title="Sets an output file parameter and adds it to the set of tested files. ">CommandLineTestHelper::setOutputFile()</a> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/testutils/<a class="el" href="cmdlinetest_8h.xhtml">cmdlinetest.h</a></li>
<li>src/testutils/cmdlinetest.cpp</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:19:42 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

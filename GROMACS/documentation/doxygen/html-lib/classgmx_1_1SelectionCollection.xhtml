<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::SelectionCollection Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1SelectionCollection.xhtml">SelectionCollection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1SelectionCollection-members.xhtml">List of all members</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">gmx::SelectionCollection Class Reference<div class="ingroups"><a class="el" href="group__group__publicapi.xhtml">Public API</a> &#124; <a class="el" href="group__module__selection.xhtml">Parsing and Evaluation of Analysis Selections (selection)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/selection/selectioncollection.h&gt;</code></p>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Collection of selections. </p>
<p>This class is the main interface to the core of the selection engine. It is used to initialize and manage a collection of selections that share the same topology. Selections within one collection can share variables and can be optimized together. Selections from two different collections do not interact.</p>
<p>The constructor creates an empty selection collection object. To initialize the object, either call <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a95a899f9d56761b449fb3abdce39d0bb" title="Initializes options for setting global properties on the collection. ">initOptions()</a>, or both <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a459808363dee98cbc1fe0fa3278ff1db" title="Sets the default reference position handling for a selection collection. ">setReferencePosType()</a> and <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a30a2b0fa1f2d89d045795fbced5ae059" title="Sets the default reference position handling for a selection collection. ">setOutputPosType()</a>. See these methods for more details on the initialization options.</p>
<p>After setting the default values, one or more selections can be parsed with one or more calls to <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a8e1ec471fdc3139a2d682625cc869610" title="Parses selection(s) interactively using provided streams. ">parseInteractive()</a>, <a class="el" href="classgmx_1_1SelectionCollection.xhtml#ab40d6413e56c8241e122d435585a79ef" title="Parses selection(s) from standard input. ">parseFromStdin()</a>, <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a4957a3141e7579fd9f9a4fe39a354ff1" title="Parses selection(s) from a file. ">parseFromFile()</a>, and/or <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a35d779a0619aade5e82ccdafba7c7cc6" title="Parses selection(s) from a string. ">parseFromString()</a>. After all selections are parsed, the topology must be set with <a class="el" href="classgmx_1_1SelectionCollection.xhtml#ac7ec09c6eb8f4981ee853698f06b6cf8" title="Sets the topology for the collection. ">setTopology()</a> unless <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a5d071c28fadd0ce7ae1338b0d44f978d" title="Returns true if the collection requires topology information for evaluation. ">requiresTopology()</a> returns false (the topology can also be set earlier). <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a0179f4a9c87e99d05182838457ea8f29" title="Sets the external index groups to use for the selections. ">setIndexGroups()</a> must also be called if external index group references are used in the selections; it can be called at any point before <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a3a5b467407c74b9ec2b09c8c7a86cb2e" title="Prepares the selections for evaluation and performs optimizations. ">compile()</a>. Once all selections are parsed, they must be compiled all at once using <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a3a5b467407c74b9ec2b09c8c7a86cb2e" title="Prepares the selections for evaluation and performs optimizations. ">compile()</a>.</p>
<p>After compilation, dynamic selections have the maximum number of atoms they can evaluate to, but positions have undefined values (see <a class="el" href="classgmx_1_1Selection.xhtml">Selection</a> and <a class="el" href="classgmx_1_1SelectionPosition.xhtml" title="Provides access to information about a single selected position. ">SelectionPosition</a>). <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a3d981d35e2fbd35f64092063871fdef3" title="Evaluates selections in the collection. ">evaluate()</a> can be used to update the selections for a new frame. <a class="el" href="classgmx_1_1SelectionCollection.xhtml#aeb8069b1be3abd49bad0a1431f91ad7c" title="Evaluates the largest possible index groups from dynamic selections. ">evaluateFinal()</a> can be called after all the frames have been processed to restore the selection values back to the ones they were after <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a3a5b467407c74b9ec2b09c8c7a86cb2e" title="Prepares the selections for evaluation and performs optimizations. ">compile()</a>.</p>
<p>At any point, <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a5d071c28fadd0ce7ae1338b0d44f978d" title="Returns true if the collection requires topology information for evaluation. ">requiresTopology()</a> can be called to see whether the information provided so far requires loading the topology. Similarly, <a class="el" href="classgmx_1_1SelectionCollection.xhtml#ac1a0aa80b45703c364d59749831c2f4a" title="Returns true if the collection requires external index groups. ">requiresIndexGroups()</a> tells whether external index groups are requires. <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a64154ce1da98f47bd52112cc893ce8ef" title="Prints a human-readable version of the internal selection element tree. ">printTree()</a> can be used to print the internal representation of the selections (mostly useful for debugging).</p>
<p>Note that for trajectory analysis using <a class="el" href="classgmx_1_1TrajectoryAnalysisModule.xhtml" title="Base class for trajectory analysis modules. ">TrajectoryAnalysisModule</a>, the <a class="el" href="classgmx_1_1SelectionCollection.xhtml" title="Collection of selections. ">SelectionCollection</a> object is managed by Gromacs, and <a class="el" href="classgmx_1_1Selection.xhtml">Selection</a> objects are obtained from <a class="el" href="classgmx_1_1SelectionOption.xhtml" title="Specifies an option that provides selection(s). ">SelectionOption</a>. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:af294f433688c52289ed05459d453dc34"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#af294f433688c52289ed05459d453dc34">SelectionTypeOption</a> { <a class="el" href="classgmx_1_1SelectionCollection.xhtml#af294f433688c52289ed05459d453dc34af155145686e582fa75e391710d835a6e">IncludeSelectionTypeOption</a>, 
<a class="el" href="classgmx_1_1SelectionCollection.xhtml#af294f433688c52289ed05459d453dc34a9f6d0fe4faafac5a3248723e2889db62">AlwaysAtomSelections</a>
 }</td></tr>
<tr class="memdesc:af294f433688c52289ed05459d453dc34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flag for <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a95a899f9d56761b449fb3abdce39d0bb" title="Initializes options for setting global properties on the collection. ">initOptions()</a> to select how to behave with -seltype option.  <a href="classgmx_1_1SelectionCollection.xhtml#af294f433688c52289ed05459d453dc34">More...</a><br/></td></tr>
<tr class="separator:af294f433688c52289ed05459d453dc34"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af4c4da031a86714c51d96f203ecc80b8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#af4c4da031a86714c51d96f203ecc80b8">SelectionCollection</a> ()</td></tr>
<tr class="memdesc:af4c4da031a86714c51d96f203ecc80b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty selection collection.  <a href="#af4c4da031a86714c51d96f203ecc80b8">More...</a><br/></td></tr>
<tr class="separator:af4c4da031a86714c51d96f203ecc80b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95a899f9d56761b449fb3abdce39d0bb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#a95a899f9d56761b449fb3abdce39d0bb">initOptions</a> (<a class="el" href="classgmx_1_1IOptionsContainer.xhtml">IOptionsContainer</a> *options, <a class="el" href="classgmx_1_1SelectionCollection.xhtml#af294f433688c52289ed05459d453dc34">SelectionTypeOption</a> selectionTypeOption)</td></tr>
<tr class="memdesc:a95a899f9d56761b449fb3abdce39d0bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes options for setting global properties on the collection.  <a href="#a95a899f9d56761b449fb3abdce39d0bb">More...</a><br/></td></tr>
<tr class="separator:a95a899f9d56761b449fb3abdce39d0bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a459808363dee98cbc1fe0fa3278ff1db"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#a459808363dee98cbc1fe0fa3278ff1db">setReferencePosType</a> (const char *type)</td></tr>
<tr class="memdesc:a459808363dee98cbc1fe0fa3278ff1db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the default reference position handling for a selection collection.  <a href="#a459808363dee98cbc1fe0fa3278ff1db">More...</a><br/></td></tr>
<tr class="separator:a459808363dee98cbc1fe0fa3278ff1db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30a2b0fa1f2d89d045795fbced5ae059"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#a30a2b0fa1f2d89d045795fbced5ae059">setOutputPosType</a> (const char *type)</td></tr>
<tr class="memdesc:a30a2b0fa1f2d89d045795fbced5ae059"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the default reference position handling for a selection collection.  <a href="#a30a2b0fa1f2d89d045795fbced5ae059">More...</a><br/></td></tr>
<tr class="separator:a30a2b0fa1f2d89d045795fbced5ae059"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7344df09de3ddade163929d93c7d017"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#ac7344df09de3ddade163929d93c7d017">setDebugLevel</a> (int debugLevel)</td></tr>
<tr class="memdesc:ac7344df09de3ddade163929d93c7d017"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the debugging level for the selection collection.  <a href="#ac7344df09de3ddade163929d93c7d017">More...</a><br/></td></tr>
<tr class="separator:ac7344df09de3ddade163929d93c7d017"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d071c28fadd0ce7ae1338b0d44f978d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#a5d071c28fadd0ce7ae1338b0d44f978d">requiresTopology</a> () const </td></tr>
<tr class="memdesc:a5d071c28fadd0ce7ae1338b0d44f978d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the collection requires topology information for evaluation.  <a href="#a5d071c28fadd0ce7ae1338b0d44f978d">More...</a><br/></td></tr>
<tr class="separator:a5d071c28fadd0ce7ae1338b0d44f978d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1a0aa80b45703c364d59749831c2f4a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#ac1a0aa80b45703c364d59749831c2f4a">requiresIndexGroups</a> () const </td></tr>
<tr class="memdesc:ac1a0aa80b45703c364d59749831c2f4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the collection requires external index groups.  <a href="#ac1a0aa80b45703c364d59749831c2f4a">More...</a><br/></td></tr>
<tr class="separator:ac1a0aa80b45703c364d59749831c2f4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7ec09c6eb8f4981ee853698f06b6cf8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#ac7ec09c6eb8f4981ee853698f06b6cf8">setTopology</a> (t_topology *top, int natoms)</td></tr>
<tr class="memdesc:ac7ec09c6eb8f4981ee853698f06b6cf8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the topology for the collection.  <a href="#ac7ec09c6eb8f4981ee853698f06b6cf8">More...</a><br/></td></tr>
<tr class="separator:ac7ec09c6eb8f4981ee853698f06b6cf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0179f4a9c87e99d05182838457ea8f29"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#a0179f4a9c87e99d05182838457ea8f29">setIndexGroups</a> (gmx_ana_indexgrps_t *grps)</td></tr>
<tr class="memdesc:a0179f4a9c87e99d05182838457ea8f29"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the external index groups to use for the selections.  <a href="#a0179f4a9c87e99d05182838457ea8f29">More...</a><br/></td></tr>
<tr class="separator:a0179f4a9c87e99d05182838457ea8f29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab40d6413e56c8241e122d435585a79ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacegmx.xhtml#ac852a0801cf49723903e23bc77a32163">SelectionList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#ab40d6413e56c8241e122d435585a79ef">parseFromStdin</a> (int count, bool bInteractive, const std::string &amp;context)</td></tr>
<tr class="memdesc:ab40d6413e56c8241e122d435585a79ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses selection(s) from standard input.  <a href="#ab40d6413e56c8241e122d435585a79ef">More...</a><br/></td></tr>
<tr class="separator:ab40d6413e56c8241e122d435585a79ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e1ec471fdc3139a2d682625cc869610"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacegmx.xhtml#ac852a0801cf49723903e23bc77a32163">SelectionList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#a8e1ec471fdc3139a2d682625cc869610">parseInteractive</a> (int count, <a class="el" href="classgmx_1_1TextInputStream.xhtml">TextInputStream</a> *inputStream, <a class="el" href="classgmx_1_1TextOutputStream.xhtml">TextOutputStream</a> *outputStream, const std::string &amp;context)</td></tr>
<tr class="memdesc:a8e1ec471fdc3139a2d682625cc869610"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses selection(s) interactively using provided streams.  <a href="#a8e1ec471fdc3139a2d682625cc869610">More...</a><br/></td></tr>
<tr class="separator:a8e1ec471fdc3139a2d682625cc869610"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4957a3141e7579fd9f9a4fe39a354ff1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacegmx.xhtml#ac852a0801cf49723903e23bc77a32163">SelectionList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#a4957a3141e7579fd9f9a4fe39a354ff1">parseFromFile</a> (const std::string &amp;filename)</td></tr>
<tr class="memdesc:a4957a3141e7579fd9f9a4fe39a354ff1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses selection(s) from a file.  <a href="#a4957a3141e7579fd9f9a4fe39a354ff1">More...</a><br/></td></tr>
<tr class="separator:a4957a3141e7579fd9f9a4fe39a354ff1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35d779a0619aade5e82ccdafba7c7cc6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacegmx.xhtml#ac852a0801cf49723903e23bc77a32163">SelectionList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#a35d779a0619aade5e82ccdafba7c7cc6">parseFromString</a> (const std::string &amp;str)</td></tr>
<tr class="memdesc:a35d779a0619aade5e82ccdafba7c7cc6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses selection(s) from a string.  <a href="#a35d779a0619aade5e82ccdafba7c7cc6">More...</a><br/></td></tr>
<tr class="separator:a35d779a0619aade5e82ccdafba7c7cc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a5b467407c74b9ec2b09c8c7a86cb2e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#a3a5b467407c74b9ec2b09c8c7a86cb2e">compile</a> ()</td></tr>
<tr class="memdesc:a3a5b467407c74b9ec2b09c8c7a86cb2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepares the selections for evaluation and performs optimizations.  <a href="#a3a5b467407c74b9ec2b09c8c7a86cb2e">More...</a><br/></td></tr>
<tr class="separator:a3a5b467407c74b9ec2b09c8c7a86cb2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d981d35e2fbd35f64092063871fdef3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#a3d981d35e2fbd35f64092063871fdef3">evaluate</a> (t_trxframe *fr, <a class="el" href="structt__pbc.xhtml">t_pbc</a> *pbc)</td></tr>
<tr class="memdesc:a3d981d35e2fbd35f64092063871fdef3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluates selections in the collection.  <a href="#a3d981d35e2fbd35f64092063871fdef3">More...</a><br/></td></tr>
<tr class="separator:a3d981d35e2fbd35f64092063871fdef3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb8069b1be3abd49bad0a1431f91ad7c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#aeb8069b1be3abd49bad0a1431f91ad7c">evaluateFinal</a> (int nframes)</td></tr>
<tr class="memdesc:aeb8069b1be3abd49bad0a1431f91ad7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluates the largest possible index groups from dynamic selections.  <a href="#aeb8069b1be3abd49bad0a1431f91ad7c">More...</a><br/></td></tr>
<tr class="separator:aeb8069b1be3abd49bad0a1431f91ad7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64154ce1da98f47bd52112cc893ce8ef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#a64154ce1da98f47bd52112cc893ce8ef">printTree</a> (FILE *fp, bool bValues) const </td></tr>
<tr class="memdesc:a64154ce1da98f47bd52112cc893ce8ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints a human-readable version of the internal selection element tree.  <a href="#a64154ce1da98f47bd52112cc893ce8ef">More...</a><br/></td></tr>
<tr class="separator:a64154ce1da98f47bd52112cc893ce8ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1db98098d332df6f317121890f8de3df"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#a1db98098d332df6f317121890f8de3df">printXvgrInfo</a> (FILE *fp) const </td></tr>
<tr class="memdesc:a1db98098d332df6f317121890f8de3df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints the selection strings into an XVGR file as comments.  <a href="#a1db98098d332df6f317121890f8de3df">More...</a><br/></td></tr>
<tr class="separator:a1db98098d332df6f317121890f8de3df"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a7ca9149354511e07285427350c8e9df7"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7ca9149354511e07285427350c8e9df7"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#a7ca9149354511e07285427350c8e9df7">SelectionCompiler</a></td></tr>
<tr class="memdesc:a7ca9149354511e07285427350c8e9df7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Needed for the compiler to freely modify the collection. <br/></td></tr>
<tr class="separator:a7ca9149354511e07285427350c8e9df7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad528488b2d58b94e7b58ab925cfc91f9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad528488b2d58b94e7b58ab925cfc91f9"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#ad528488b2d58b94e7b58ab925cfc91f9">SelectionEvaluator</a></td></tr>
<tr class="memdesc:ad528488b2d58b94e7b58ab925cfc91f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Needed for the evaluator to freely modify the collection. <br/></td></tr>
<tr class="separator:ad528488b2d58b94e7b58ab925cfc91f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="af294f433688c52289ed05459d453dc34"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classgmx_1_1SelectionCollection.xhtml#af294f433688c52289ed05459d453dc34">gmx::SelectionCollection::SelectionTypeOption</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Flag for <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a95a899f9d56761b449fb3abdce39d0bb" title="Initializes options for setting global properties on the collection. ">initOptions()</a> to select how to behave with -seltype option. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><em><a class="anchor" id="af294f433688c52289ed05459d453dc34af155145686e582fa75e391710d835a6e"></a>IncludeSelectionTypeOption</em>&nbsp;</td><td class="fielddoc">
<p>Add the option for the user to select default value for <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a30a2b0fa1f2d89d045795fbced5ae059" title="Sets the default reference position handling for a selection collection. ">setOutputPosType()</a>. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="af294f433688c52289ed05459d453dc34a9f6d0fe4faafac5a3248723e2889db62"></a>AlwaysAtomSelections</em>&nbsp;</td><td class="fielddoc">
<p>Do not add the option, selections will always select atoms by default. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="af4c4da031a86714c51d96f203ecc80b8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">gmx::SelectionCollection::SelectionCollection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates an empty selection collection. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a3a5b467407c74b9ec2b09c8c7a86cb2e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionCollection::compile </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prepares the selections for evaluation and performs optimizations. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InconsistentInputError.xhtml" title="Exception class for situations where user input is inconsistent. ">InconsistentInputError</a></td><td>if topology is required but not set. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InvalidInputError.xhtml" title="Exception class for situations where user input cannot be parsed/understood. ">InvalidInputError</a></td><td>if <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a0179f4a9c87e99d05182838457ea8f29" title="Sets the external index groups to use for the selections. ">setIndexGroups()</a> has not been called and there are index group references. </td></tr>
    <tr><td class="paramname">unspecified</td><td>if compilation fails (TODO: list/reduce these).</td></tr>
  </table>
  </dd>
</dl>
<p>Before compilation, selections should have been added to the collection using the parseFrom*() functions. The compiled selection collection can be passed to <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a3d981d35e2fbd35f64092063871fdef3" title="Evaluates selections in the collection. ">evaluate()</a> to evaluate the selection for a frame. Before the compiled selection is evaluated, the selections indicate the maximal set of atoms/positions to which they can be evaluated; see <a class="el" href="classgmx_1_1Selection.xhtml">Selection</a>.</p>
<p>If an error occurs, the collection is cleared.</p>
<p>The covered fraction information is initialized to <a class="el" href="group__group__publicapi.xhtml#gga3586467b9eaf1c08160c5fef7377e622a48c3d0ece765fef64dd56d6cf87daf47" title="No covered fraction (everything covered). ">CFRAC_NONE</a> for all selections. </p>

</div>
</div>
<a class="anchor" id="a3d981d35e2fbd35f64092063871fdef3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionCollection::evaluate </td>
          <td>(</td>
          <td class="paramtype">t_trxframe *&#160;</td>
          <td class="paramname"><em>fr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__pbc.xhtml">t_pbc</a> *&#160;</td>
          <td class="paramname"><em>pbc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Evaluates selections in the collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fr</td><td>Frame for which the evaluation should be carried out. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pbc</td><td>PBC data, or NULL if no PBC should be used. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">unspeficied</td><td>Multiple possible exceptions to indicate evaluation failure (TODO: enumerate). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aeb8069b1be3abd49bad0a1431f91ad7c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionCollection::evaluateFinal </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nframes</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Evaluates the largest possible index groups from dynamic selections. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">nframes</td><td>Total number of frames.</td></tr>
  </table>
  </dd>
</dl>
<p>This method restores the selections to the state they were after <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a3a5b467407c74b9ec2b09c8c7a86cb2e" title="Prepares the selections for evaluation and performs optimizations. ">compile()</a>.</p>
<p><code>nframes</code> should equal the number of times <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a3d981d35e2fbd35f64092063871fdef3" title="Evaluates selections in the collection. ">evaluate()</a> has been called.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a95a899f9d56761b449fb3abdce39d0bb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionCollection::initOptions </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1IOptionsContainer.xhtml">IOptionsContainer</a> *&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classgmx_1_1SelectionCollection.xhtml#af294f433688c52289ed05459d453dc34">SelectionTypeOption</a>&#160;</td>
          <td class="paramname"><em>selectionTypeOption</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes options for setting global properties on the collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">options</td><td><a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a> object to initialize. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">selectionTypeOption</td><td>Whether to add option to influence <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a30a2b0fa1f2d89d045795fbced5ae059" title="Sets the default reference position handling for a selection collection. ">setOutputPosType()</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory.</td></tr>
  </table>
  </dd>
</dl>
<p>Adds options to <code>options</code> that can be used to set the default position types (see <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a459808363dee98cbc1fe0fa3278ff1db" title="Sets the default reference position handling for a selection collection. ">setReferencePosType()</a> and <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a30a2b0fa1f2d89d045795fbced5ae059" title="Sets the default reference position handling for a selection collection. ">setOutputPosType()</a>) and debugging flags. </p>

</div>
</div>
<a class="anchor" id="a4957a3141e7579fd9f9a4fe39a354ff1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacegmx.xhtml#ac852a0801cf49723903e23bc77a32163">SelectionList</a> gmx::SelectionCollection::parseFromFile </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses selection(s) from a file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>Name of the file to parse selections from. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Vector of parsed selections. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InvalidInputError.xhtml" title="Exception class for situations where user input cannot be parsed/understood. ">InvalidInputError</a></td><td>if there is a parsing error.</td></tr>
  </table>
  </dd>
</dl>
<p>The returned objects remain valid for the lifetime of the selection collection. Some information about the selections only becomes available once <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a3a5b467407c74b9ec2b09c8c7a86cb2e" title="Prepares the selections for evaluation and performs optimizations. ">compile()</a> has been called; see <a class="el" href="classgmx_1_1Selection.xhtml">Selection</a>. </p>

</div>
</div>
<a class="anchor" id="ab40d6413e56c8241e122d435585a79ef"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacegmx.xhtml#ac852a0801cf49723903e23bc77a32163">SelectionList</a> gmx::SelectionCollection::parseFromStdin </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bInteractive</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>context</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses selection(s) from standard input. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Number of selections to parse (if -1, parse as many as provided by the user). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bInteractive</td><td>Whether the parser should behave interactively. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Context to print for interactive input. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Vector of parsed selections. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InvalidInputError.xhtml" title="Exception class for situations where user input cannot be parsed/understood. ">InvalidInputError</a></td><td>if there is a parsing error (an interactive parser only throws this if too few selections are provided and the user forced the end of input).</td></tr>
  </table>
  </dd>
</dl>
<p>The returned objects remain valid for the lifetime of the selection collection. Some information about the selections only becomes available once <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a3a5b467407c74b9ec2b09c8c7a86cb2e" title="Prepares the selections for evaluation and performs optimizations. ">compile()</a> has been called; see <a class="el" href="classgmx_1_1Selection.xhtml">Selection</a>.</p>
<p>The string provided to <code>context</code> should be such that it can replace the three dots in "Specify selections ...:". It can be empty. </p>

</div>
</div>
<a class="anchor" id="a35d779a0619aade5e82ccdafba7c7cc6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacegmx.xhtml#ac852a0801cf49723903e23bc77a32163">SelectionList</a> gmx::SelectionCollection::parseFromString </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses selection(s) from a string. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">str</td><td>String to parse selections from. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Vector of parsed selections. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InvalidInputError.xhtml" title="Exception class for situations where user input cannot be parsed/understood. ">InvalidInputError</a></td><td>if there is a parsing error.</td></tr>
  </table>
  </dd>
</dl>
<p>The returned objects remain valid for the lifetime of the selection collection. Some information about the selections only becomes available once <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a3a5b467407c74b9ec2b09c8c7a86cb2e" title="Prepares the selections for evaluation and performs optimizations. ">compile()</a> has been called; see <a class="el" href="classgmx_1_1Selection.xhtml">Selection</a>. </p>

</div>
</div>
<a class="anchor" id="a8e1ec471fdc3139a2d682625cc869610"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacegmx.xhtml#ac852a0801cf49723903e23bc77a32163">SelectionList</a> gmx::SelectionCollection::parseInteractive </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classgmx_1_1TextInputStream.xhtml">TextInputStream</a> *&#160;</td>
          <td class="paramname"><em>inputStream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classgmx_1_1TextOutputStream.xhtml">TextOutputStream</a> *&#160;</td>
          <td class="paramname"><em>outputStream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>context</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses selection(s) interactively using provided streams. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Number of selections to parse (if -1, parse as many as provided by the user). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">inputStream</td><td>Stream to use for input. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">outputStream</td><td>Stream to use for output (if NULL, the parser runs non-interactively and does not produce any status messages). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Context to print for interactive input. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Vector of parsed selections. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InvalidInputError.xhtml" title="Exception class for situations where user input cannot be parsed/understood. ">InvalidInputError</a></td><td>if there is a parsing error (an interactive parser only throws this if too few selections are provided and the user forced the end of input).</td></tr>
  </table>
  </dd>
</dl>
<p>Works the same as <a class="el" href="classgmx_1_1SelectionCollection.xhtml#ab40d6413e56c8241e122d435585a79ef" title="Parses selection(s) from standard input. ">parseFromStdin()</a>, except that the caller can provide streams to use instead of <code>stdin</code> and <code>stderr</code>.</p>
<p>Mainly usable for unit testing interactive input. </p>

</div>
</div>
<a class="anchor" id="a64154ce1da98f47bd52112cc893ce8ef"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionCollection::printTree </td>
          <td>(</td>
          <td class="paramtype">FILE *&#160;</td>
          <td class="paramname"><em>fp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bValues</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prints a human-readable version of the internal selection element tree. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fp</td><td>File handle to receive the output. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bValues</td><td>If true, the evaluated values of selection elements are printed as well.</td></tr>
  </table>
  </dd>
</dl>
<p>The output is very techical, and intended for debugging purposes.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a1db98098d332df6f317121890f8de3df"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionCollection::printXvgrInfo </td>
          <td>(</td>
          <td class="paramtype">FILE *&#160;</td>
          <td class="paramname"><em>fp</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prints the selection strings into an XVGR file as comments. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fp</td><td>Output file.</td></tr>
  </table>
  </dd>
</dl>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="ac1a0aa80b45703c364d59749831c2f4a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::SelectionCollection::requiresIndexGroups </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns true if the collection requires external index groups. </p>
<dl class="section return"><dt>Returns</dt><dd>true if any selection has an unresolved index group reference.</dd></dl>
<p>The return value is <code>false</code> after <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a0179f4a9c87e99d05182838457ea8f29" title="Sets the external index groups to use for the selections. ">setIndexGroups()</a> has been called.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a5d071c28fadd0ce7ae1338b0d44f978d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::SelectionCollection::requiresTopology </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns true if the collection requires topology information for evaluation. </p>
<dl class="section return"><dt>Returns</dt><dd>true if any selection in the collection requires topology information.</dd></dl>
<p>Before the parser functions have been called, the return value is based just on the position types set. After parser functions have been called, the return value also takes into account the selection keywords used.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="ac7344df09de3ddade163929d93c7d017"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionCollection::setDebugLevel </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>debugLevel</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the debugging level for the selection collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">debugLevel</td><td>Debug level to set (0 = no debug information).</td></tr>
  </table>
  </dd>
</dl>
<p><a class="el" href="classgmx_1_1SelectionCollection.xhtml#a95a899f9d56761b449fb3abdce39d0bb" title="Initializes options for setting global properties on the collection. ">initOptions()</a> creates debugging options that can also be used to set the debug level. These are normally hidden, but if this method is called before <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a95a899f9d56761b449fb3abdce39d0bb" title="Initializes options for setting global properties on the collection. ">initOptions()</a> with a non-zero <code>debugLevel</code>, they are made visible.</p>
<p>Mostly useful for debugging tools.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a0179f4a9c87e99d05182838457ea8f29"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionCollection::setIndexGroups </td>
          <td>(</td>
          <td class="paramtype">gmx_ana_indexgrps_t *&#160;</td>
          <td class="paramname"><em>grps</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the external index groups to use for the selections. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">grps</td><td>Index groups to use for the selections. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InconsistentInputError.xhtml" title="Exception class for situations where user input is inconsistent. ">InconsistentInputError</a></td><td>if a group reference cannot be resolved.</td></tr>
  </table>
  </dd>
</dl>
<p>Only the first call to this method can have a non-NULL <code>grps</code>. At this point, any selections that have already been provided are searched for references to external groups, and the references are replaced by the contents of the groups. If any referenced group cannot be found in <code>grps</code> (or if <code>grps</code> is NULL and there are any references), <a class="el" href="classgmx_1_1InconsistentInputError.xhtml" title="Exception class for situations where user input is inconsistent. ">InconsistentInputError</a> is thrown.</p>
<p>The selection collection keeps a reference to <code>grps</code> until this method is called with a NULL <code>grps</code>. If this method is not called before <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a3a5b467407c74b9ec2b09c8c7a86cb2e" title="Prepares the selections for evaluation and performs optimizations. ">compile()</a>, it is automatically called as setIndexGroups(NULL). </p>

</div>
</div>
<a class="anchor" id="a30a2b0fa1f2d89d045795fbced5ae059"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionCollection::setOutputPosType </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the default reference position handling for a selection collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>Default selection output position type (one of the strings acceptable for PositionCalculationCollection::typeFromEnum()). </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InternalError.xhtml" title="Exception class for internal errors. ">InternalError</a></td><td>if <code>type</code> is invalid.</td></tr>
  </table>
  </dd>
</dl>
<p>Should be called before calling the parser functions, unless <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a95a899f9d56761b449fb3abdce39d0bb" title="Initializes options for setting global properties on the collection. ">initOptions()</a> has been called. In the latter case, can still be used to override the default value (before <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a95a899f9d56761b449fb3abdce39d0bb" title="Initializes options for setting global properties on the collection. ">initOptions()</a> is called) and/or the value provided through the <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a> object.</p>
<p>Strong exception safety. </p>

</div>
</div>
<a class="anchor" id="a459808363dee98cbc1fe0fa3278ff1db"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionCollection::setReferencePosType </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the default reference position handling for a selection collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>Default selection reference position type (one of the strings acceptable for PositionCalculationCollection::typeFromEnum()). </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InternalError.xhtml" title="Exception class for internal errors. ">InternalError</a></td><td>if <code>type</code> is invalid.</td></tr>
  </table>
  </dd>
</dl>
<p>Should be called before calling the parser functions, unless <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a95a899f9d56761b449fb3abdce39d0bb" title="Initializes options for setting global properties on the collection. ">initOptions()</a> has been called. In the latter case, can still be used to override the default value (before <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a95a899f9d56761b449fb3abdce39d0bb" title="Initializes options for setting global properties on the collection. ">initOptions()</a> is called) and/or the value provided through the <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a> object.</p>
<p>Strong exception safety. </p>

</div>
</div>
<a class="anchor" id="ac7ec09c6eb8f4981ee853698f06b6cf8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionCollection::setTopology </td>
          <td>(</td>
          <td class="paramtype">t_topology *&#160;</td>
          <td class="paramname"><em>top</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>natoms</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the topology for the collection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">top</td><td>Topology data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">natoms</td><td>Number of atoms. If &lt;=0, the number of atoms in the topology is used.</td></tr>
  </table>
  </dd>
</dl>
<p>Either the topology must be provided, or <code>natoms</code> must be &gt; 0.</p>
<p><code>natoms</code> determines the largest atom index that can be selected by the selection: even if the topology contains more atoms, they will not be selected.</p>
<p>Does not throw currently, but this is subject to change when more underlying code is converted to C++. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/selection/<a class="el" href="selectioncollection_8h.xhtml">selectioncollection.h</a></li>
<li>src/gromacs/selection/selectioncollection.cpp</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:19:41 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

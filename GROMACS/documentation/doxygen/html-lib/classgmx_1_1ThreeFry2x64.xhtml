<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::ThreeFry2x64&lt; internalCounterBits &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1ThreeFry2x64.xhtml">ThreeFry2x64</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1ThreeFry2x64-members.xhtml">List of all members</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::ThreeFry2x64&lt; internalCounterBits &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/random/threefry.h&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for gmx::ThreeFry2x64&lt; internalCounterBits &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1ThreeFry2x64__inherit__graph.svg" width="191" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for gmx::ThreeFry2x64&lt; internalCounterBits &gt;:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1ThreeFry2x64__coll__graph.svg" width="191" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><h3>template&lt;unsigned int internalCounterBits = 64&gt;<br/>
class gmx::ThreeFry2x64&lt; internalCounterBits &gt;</h3>

<p><a class="el" href="classgmx_1_1ThreeFry2x64.xhtml" title="ThreeFry2x64 random engine with 20 iteractions. ">ThreeFry2x64</a> random engine with 20 iteractions. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">internalCounterBits,default</td><td>64.</td></tr>
  </table>
  </dd>
</dl>
<p>This class provides very high quality random numbers that pass all BigCrush tests, it works with two 64-bit values each for keys and counters, and is most efficient when we only need a few random values before restarting the counters with new values. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ab487235f75988cbc3cd09783b59dd6dd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab487235f75988cbc3cd09783b59dd6dd"></a>
typedef gmx_uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml#ab487235f75988cbc3cd09783b59dd6dd">result_type</a></td></tr>
<tr class="memdesc:ab487235f75988cbc3cd09783b59dd6dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Integer type for output. <br/></td></tr>
<tr class="separator:ab487235f75988cbc3cd09783b59dd6dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf9de9ccea5118f8957e8666e653d6e5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaf9de9ccea5118f8957e8666e653d6e5"></a>
typedef std::array<br class="typebreak"/>
&lt; <a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml#ab487235f75988cbc3cd09783b59dd6dd">result_type</a>, 2 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml#aaf9de9ccea5118f8957e8666e653d6e5">counter_type</a></td></tr>
<tr class="memdesc:aaf9de9ccea5118f8957e8666e653d6e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use array for counter &amp; key states so it is allocated on the stack. <br/></td></tr>
<tr class="separator:aaf9de9ccea5118f8957e8666e653d6e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a527d8223bce558b293769e923aa8d713"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1ThreeFry2x64.xhtml#a527d8223bce558b293769e923aa8d713">ThreeFry2x64</a> (gmx_uint64_t key0=0, <a class="el" href="namespacegmx.xhtml#a73202d646d57bcc963d8afd5a16015f0">RandomDomain</a> domain=<a class="el" href="namespacegmx.xhtml#a73202d646d57bcc963d8afd5a16015f0a6311ae17c1ee52b36e68aaf4ad066387">RandomDomain::Other</a>)</td></tr>
<tr class="memdesc:a527d8223bce558b293769e923aa8d713"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct ThreeFry random engine with 2x64 key values, 20 rounds.  <a href="#a527d8223bce558b293769e923aa8d713">More...</a><br/></td></tr>
<tr class="separator:a527d8223bce558b293769e923aa8d713"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b5e51d4e34f68881c8395c21e7963cd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1ThreeFry2x64.xhtml#a5b5e51d4e34f68881c8395c21e7963cd">ThreeFry2x64</a> (gmx_uint64_t key0, gmx_uint64_t key1)</td></tr>
<tr class="memdesc:a5b5e51d4e34f68881c8395c21e7963cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct random engine from 2x64-bit unsigned integers, 20 rounds.  <a href="#a5b5e51d4e34f68881c8395c21e7963cd">More...</a><br/></td></tr>
<tr class="separator:a5b5e51d4e34f68881c8395c21e7963cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aceb299eb5489de02fb52bf8f8299cdd1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml#aceb299eb5489de02fb52bf8f8299cdd1">seed</a> (gmx_uint64_t key0=0, <a class="el" href="namespacegmx.xhtml#a73202d646d57bcc963d8afd5a16015f0">RandomDomain</a> domain=<a class="el" href="namespacegmx.xhtml#a73202d646d57bcc963d8afd5a16015f0a6311ae17c1ee52b36e68aaf4ad066387">RandomDomain::Other</a>)</td></tr>
<tr class="memdesc:aceb299eb5489de02fb52bf8f8299cdd1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Seed 2x64 random engine with two 64-bit key values.  <a href="#aceb299eb5489de02fb52bf8f8299cdd1">More...</a><br/></td></tr>
<tr class="separator:aceb299eb5489de02fb52bf8f8299cdd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33af09ff1bf20d9bb295b3605eab2488"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml#a33af09ff1bf20d9bb295b3605eab2488">seed</a> (gmx_uint64_t key0, gmx_uint64_t key1)</td></tr>
<tr class="memdesc:a33af09ff1bf20d9bb295b3605eab2488"><td class="mdescLeft">&#160;</td><td class="mdescRight">Seed random engine from 2x64-bit unsigned integers.  <a href="#a33af09ff1bf20d9bb295b3605eab2488">More...</a><br/></td></tr>
<tr class="separator:a33af09ff1bf20d9bb295b3605eab2488"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18868bae394e59bffb4c3bc5df9be9a2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml#a18868bae394e59bffb4c3bc5df9be9a2">restart</a> (gmx_uint64_t ctr0=0, gmx_uint64_t ctr1=0)</td></tr>
<tr class="memdesc:a18868bae394e59bffb4c3bc5df9be9a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Restart 2x64 random engine counter from 2 64-bit values.  <a href="#a18868bae394e59bffb4c3bc5df9be9a2">More...</a><br/></td></tr>
<tr class="separator:a18868bae394e59bffb4c3bc5df9be9a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7b48b4f84e65ba843c44d06f312059a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml#ab487235f75988cbc3cd09783b59dd6dd">result_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml#ae7b48b4f84e65ba843c44d06f312059a">operator()</a> ()</td></tr>
<tr class="memdesc:ae7b48b4f84e65ba843c44d06f312059a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generate the next random number.  <a href="#ae7b48b4f84e65ba843c44d06f312059a">More...</a><br/></td></tr>
<tr class="separator:ae7b48b4f84e65ba843c44d06f312059a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a598e062131c3a72dac31a1232df5fbcd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml#a598e062131c3a72dac31a1232df5fbcd">discard</a> (gmx_uint64_t n)</td></tr>
<tr class="memdesc:a598e062131c3a72dac31a1232df5fbcd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Skip next n random numbers.  <a href="#a598e062131c3a72dac31a1232df5fbcd">More...</a><br/></td></tr>
<tr class="separator:a598e062131c3a72dac31a1232df5fbcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b236f504817e05275f15abe70a5ff4b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml#a5b236f504817e05275f15abe70a5ff4b">operator==</a> (const <a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml">ThreeFry2x64General</a>&lt; rounds, internalCounterBits &gt; &amp;x) const</td></tr>
<tr class="memdesc:a5b236f504817e05275f15abe70a5ff4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return true if two ThreeFry2x64 engines are identical.  <a href="#a5b236f504817e05275f15abe70a5ff4b">More...</a><br/></td></tr>
<tr class="separator:a5b236f504817e05275f15abe70a5ff4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3aad54540efb601c43bc653784345e0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml#ae3aad54540efb601c43bc653784345e0">operator!=</a> (const <a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml">ThreeFry2x64General</a>&lt; rounds, internalCounterBits &gt; &amp;x) const</td></tr>
<tr class="memdesc:ae3aad54540efb601c43bc653784345e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return true of two ThreeFry2x64 engines are not identical.  <a href="#ae3aad54540efb601c43bc653784345e0">More...</a><br/></td></tr>
<tr class="separator:ae3aad54540efb601c43bc653784345e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a894276bb060524bbd3c43d2d86a96fa8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a894276bb060524bbd3c43d2d86a96fa8"></a>
static constexpr <a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml#ab487235f75988cbc3cd09783b59dd6dd">result_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml#a894276bb060524bbd3c43d2d86a96fa8">min</a> ()</td></tr>
<tr class="memdesc:a894276bb060524bbd3c43d2d86a96fa8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Smallest value that can be returned from random engine. <br/></td></tr>
<tr class="separator:a894276bb060524bbd3c43d2d86a96fa8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a747866a072cff89a20b8f58621ae4bc5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a747866a072cff89a20b8f58621ae4bc5"></a>
static constexpr <a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml#ab487235f75988cbc3cd09783b59dd6dd">result_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml#a747866a072cff89a20b8f58621ae4bc5">max</a> ()</td></tr>
<tr class="memdesc:a747866a072cff89a20b8f58621ae4bc5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Largest value that can be returned from random engine. <br/></td></tr>
<tr class="separator:a747866a072cff89a20b8f58621ae4bc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a527d8223bce558b293769e923aa8d713"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int internalCounterBits = 64&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1ThreeFry2x64.xhtml">gmx::ThreeFry2x64</a>&lt; internalCounterBits &gt;::<a class="el" href="classgmx_1_1ThreeFry2x64.xhtml">ThreeFry2x64</a> </td>
          <td>(</td>
          <td class="paramtype">gmx_uint64_t&#160;</td>
          <td class="paramname"><em>key0</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacegmx.xhtml#a73202d646d57bcc963d8afd5a16015f0">RandomDomain</a>&#160;</td>
          <td class="paramname"><em>domain</em> = <code><a class="el" href="namespacegmx.xhtml#a73202d646d57bcc963d8afd5a16015f0a6311ae17c1ee52b36e68aaf4ad066387">RandomDomain::Other</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct ThreeFry random engine with 2x64 key values, 20 rounds. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key0</td><td>Random seed in the form of a 64-bit unsigned value. </td></tr>
    <tr><td class="paramname">domain</td><td>Random domain. This is used to guarantee that different applications of a random engine inside the code get different streams of random numbers, without requiring the user to provide lots of random seeds. Pick a value from the RandomDomain class, or <a class="el" href="namespacegmx.xhtml#a73202d646d57bcc963d8afd5a16015f0a6311ae17c1ee52b36e68aaf4ad066387" title="Generic - stream uniqueness is not important. ">RandomDomain::Other</a> if it is not important. In the latter case you might want to use <a class="el" href="namespacegmx.xhtml#a7ea21974bdd8acdfa1c344b0945cff1b">gmx::DefaultRandomEngine</a> instead.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>The random domain is really another 64-bit seed value.</dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InternalError.xhtml" title="Exception class for internal errors. ">InternalError</a></td><td>if the high bits needed to encode the number of counter bits are nonzero. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5b5e51d4e34f68881c8395c21e7963cd"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int internalCounterBits = 64&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1ThreeFry2x64.xhtml">gmx::ThreeFry2x64</a>&lt; internalCounterBits &gt;::<a class="el" href="classgmx_1_1ThreeFry2x64.xhtml">ThreeFry2x64</a> </td>
          <td>(</td>
          <td class="paramtype">gmx_uint64_t&#160;</td>
          <td class="paramname"><em>key0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gmx_uint64_t&#160;</td>
          <td class="paramname"><em>key1</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct random engine from 2x64-bit unsigned integers, 20 rounds. </p>
<p>This constructor assigns the raw 128 bit key data from unsigned integers. It is meant for the case when you want full control over the key, for instance to compare with reference values of the ThreeFry function during testing.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key0</td><td>First word of key/random seed. </td></tr>
    <tr><td class="paramname">key1</td><td>Second word of key/random seed.</td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InternalError.xhtml" title="Exception class for internal errors. ">InternalError</a></td><td>if the high bits needed to encode the number of counter bits are nonzero. To test arbitrary values, use 0 internal counter bits. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a598e062131c3a72dac31a1232df5fbcd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml">gmx::ThreeFry2x64General</a>&lt; rounds, internalCounterBits &gt;::discard </td>
          <td>(</td>
          <td class="paramtype">gmx_uint64_t&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Skip next n random numbers. </p>
<p>Moves the internal random stream for the give key/counter value n positions forward. The count is based on the number of random values returned, such that skipping 5 values gives exactly the same result as drawing 5 values that are ignored.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">n</td><td>Number of values to jump forward.</td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">InternalError</td><td>if the internal counter space is exhausted. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae3aad54540efb601c43bc653784345e0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml">gmx::ThreeFry2x64General</a>&lt; rounds, internalCounterBits &gt;::operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml">ThreeFry2x64General</a>&lt; rounds, internalCounterBits &gt; &amp;&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return true of two ThreeFry2x64 engines are not identical. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Instance to compare with.</td></tr>
  </table>
  </dd>
</dl>
<p>This routine should return true if the two engines will generate different random streams when drawing. </p>

</div>
</div>
<a class="anchor" id="ae7b48b4f84e65ba843c44d06f312059a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml#ab487235f75988cbc3cd09783b59dd6dd">result_type</a> <a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml">gmx::ThreeFry2x64General</a>&lt; rounds, internalCounterBits &gt;::operator() </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generate the next random number. </p>
<p>This will return the next stored 64-bit value if one is available, and otherwise generate a new block, update the internal counters, and return the first value while storing the others.</p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">InternalError</td><td>if the internal counter space is exhausted. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5b236f504817e05275f15abe70a5ff4b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml">gmx::ThreeFry2x64General</a>&lt; rounds, internalCounterBits &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml">ThreeFry2x64General</a>&lt; rounds, internalCounterBits &gt; &amp;&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return true if two ThreeFry2x64 engines are identical. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Instance to compare with.</td></tr>
  </table>
  </dd>
</dl>
<p>This routine should return true if the two engines will generate identical random streams when drawing. </p>

</div>
</div>
<a class="anchor" id="a18868bae394e59bffb4c3bc5df9be9a2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml">gmx::ThreeFry2x64General</a>&lt; rounds, internalCounterBits &gt;::restart </td>
          <td>(</td>
          <td class="paramtype">gmx_uint64_t&#160;</td>
          <td class="paramname"><em>ctr0</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gmx_uint64_t&#160;</td>
          <td class="paramname"><em>ctr1</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Restart 2x64 random engine counter from 2 64-bit values. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ctr0</td><td>First word of new counter, in the form of 64-bit unsigned values. </td></tr>
    <tr><td class="paramname">ctr1</td><td>Second word of new counter</td></tr>
  </table>
  </dd>
</dl>
<p>Restarting the engine with a new counter is extremely fast with ThreeFry64, and basically just consists of storing the counter value, so you should use this liberally in your innermost loops to restart the engine with e.g. the current step and atom index as counter values.</p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">InternalError</td><td>if any of the highest bits that are reserved for the internal part of the counter are set. The number of reserved bits is to the last template parameter to the class. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aceb299eb5489de02fb52bf8f8299cdd1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml">gmx::ThreeFry2x64General</a>&lt; rounds, internalCounterBits &gt;::seed </td>
          <td>(</td>
          <td class="paramtype">gmx_uint64_t&#160;</td>
          <td class="paramname"><em>key0</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacegmx.xhtml#a73202d646d57bcc963d8afd5a16015f0">RandomDomain</a>&#160;</td>
          <td class="paramname"><em>domain</em> = <code>RandomDomain::Other</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Seed 2x64 random engine with two 64-bit key values. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key0</td><td>First word of random seed, in the form of 64-bit unsigned values. </td></tr>
    <tr><td class="paramname">domain</td><td>Random domain. This is used to guarantee that different applications of a random engine inside the code get different streams of random numbers, without requiring the user to provide lots of random seeds. Pick a value from the RandomDomain class, or RandomDomain::Other if it is not important. In the latter case you might want to use <a class="el" href="namespacegmx.xhtml#a7ea21974bdd8acdfa1c344b0945cff1b">gmx::DefaultRandomEngine</a> instead.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>The random domain is really another 64-bit seed value.</dd></dl>
<p>Re-initialized the seed similar to the counter constructor. Same rules apply: The highest few bits of the last word are reserved to encode the number of internal counter bits, but to save the user the trouble of making sure these are zero when using e.g. a random device, we just ignore them. </p>

</div>
</div>
<a class="anchor" id="a33af09ff1bf20d9bb295b3605eab2488"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classgmx_1_1ThreeFry2x64General.xhtml">gmx::ThreeFry2x64General</a>&lt; rounds, internalCounterBits &gt;::seed </td>
          <td>(</td>
          <td class="paramtype">gmx_uint64_t&#160;</td>
          <td class="paramname"><em>key0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gmx_uint64_t&#160;</td>
          <td class="paramname"><em>key1</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Seed random engine from 2x64-bit unsigned integers. </p>
<p>This assigns the raw 128 bit key data from unsigned integers. It is meant for the case when you want full control over the key, for instance to compare with reference values of the ThreeFry function during testing.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key0</td><td>First word of key/random seed. </td></tr>
    <tr><td class="paramname">key1</td><td>Second word of key/random seed.</td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">InternalError</td><td>if the high bits needed to encode the number of counter bits are nonzero. To test arbitrary values, use 0 internal counter bits. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/gromacs/random/<a class="el" href="threefry_8h.xhtml">threefry.h</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:19:41 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

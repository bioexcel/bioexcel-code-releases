<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/simd/scalar/scalar.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_71392c6f4b1ed3a32ba5c064e868a1ba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a798d384400d41a9e6864d9b1b8753fe.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_69a31023f2cb90cacd6802dc380f9733.xhtml">simd</a></li><li class="navelem"><a class="el" href="dir_cff8e9f3d6702e4df753459466526074.xhtml">scalar</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">scalar.h File Reference<div class="ingroups"><a class="el" href="group__group__libraryapi.xhtml">Library API</a> &#124; <a class="el" href="group__module__simd.xhtml">SIMD intrinsics interface (simd)</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;cmath&gt;</code><br/>
<code>#include &lt;cstdint&gt;</code><br/>
<code>#include &lt;cstdlib&gt;</code><br/>
<code>#include &lt;algorithm&gt;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for scalar.h:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="scalar_8h__incl.svg" width="339" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><div class="textblock"><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> This graph shows which files directly or indirectly include this file:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="scalar_8h__dep__incl.svg" width="522" height="306"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Scalar float functions corresponding to GROMACS SIMD functions. </p>
<p>These versions make it possible to write functions that are templated with either a SIMD or scalar type. While some of these functions might not appear SIMD-specific, we have placed them here because the only reason to use these instead of generic function is in templated combined SIMD/non-SIMD code.</p>
<p>There are a handful of limitations, in particular that it is impossible to overload the bitwise logical operators on built-in types.</p>
<dl class="section author"><dt>Author</dt><dd>Erik Lindahl <a href="#" onclick="location.href='mai'+'lto:'+'eri'+'k.'+'lin'+'da'+'hl@'+'gm'+'ail'+'.c'+'om'; return false;">erik.<span style="display: none;">.nosp@m.</span>lind<span style="display: none;">.nosp@m.</span>ahl@g<span style="display: none;">.nosp@m.</span>mail<span style="display: none;">.nosp@m.</span>.com</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a5ba56cff453ff9a1f21a11d72358592a"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a5ba56cff453ff9a1f21a11d72358592a">gmx::store</a> (float *m, float a)</td></tr>
<tr class="memdesc:a5ba56cff453ff9a1f21a11d72358592a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Store contents of float variable to aligned memory m.  <a href="#a5ba56cff453ff9a1f21a11d72358592a">More...</a><br/></td></tr>
<tr class="separator:a5ba56cff453ff9a1f21a11d72358592a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3a3dcd7322b5b2555938fe1c05be15f"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#af3a3dcd7322b5b2555938fe1c05be15f">gmx::storeU</a> (float *m, float a)</td></tr>
<tr class="memdesc:af3a3dcd7322b5b2555938fe1c05be15f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Store contents of float variable to unaligned memory m.  <a href="#af3a3dcd7322b5b2555938fe1c05be15f">More...</a><br/></td></tr>
<tr class="separator:af3a3dcd7322b5b2555938fe1c05be15f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a183d89182d418bb66a668104978af5bf"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a183d89182d418bb66a668104978af5bf">gmx::fma</a> (float a, float b, float c)</td></tr>
<tr class="memdesc:a183d89182d418bb66a668104978af5bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Float Fused-multiply-add. Result is a*b + c.  <a href="#a183d89182d418bb66a668104978af5bf">More...</a><br/></td></tr>
<tr class="separator:a183d89182d418bb66a668104978af5bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afad947f51589a3a9eef2f8364ab62c19"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#afad947f51589a3a9eef2f8364ab62c19">gmx::fms</a> (float a, float b, float c)</td></tr>
<tr class="memdesc:afad947f51589a3a9eef2f8364ab62c19"><td class="mdescLeft">&#160;</td><td class="mdescRight">Float Fused-multiply-subtract. Result is a*b - c.  <a href="#afad947f51589a3a9eef2f8364ab62c19">More...</a><br/></td></tr>
<tr class="separator:afad947f51589a3a9eef2f8364ab62c19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55183d689ab9328c18c3b3f819bd7266"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a55183d689ab9328c18c3b3f819bd7266">gmx::fnma</a> (float a, float b, float c)</td></tr>
<tr class="memdesc:a55183d689ab9328c18c3b3f819bd7266"><td class="mdescLeft">&#160;</td><td class="mdescRight">Float Fused-negated-multiply-add. Result is -a*b + c.  <a href="#a55183d689ab9328c18c3b3f819bd7266">More...</a><br/></td></tr>
<tr class="separator:a55183d689ab9328c18c3b3f819bd7266"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6e6950597f4833fa93b09a94e7b0e16"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#aa6e6950597f4833fa93b09a94e7b0e16">gmx::fnms</a> (float a, float b, float c)</td></tr>
<tr class="memdesc:aa6e6950597f4833fa93b09a94e7b0e16"><td class="mdescLeft">&#160;</td><td class="mdescRight">Float Fused-negated-multiply-subtract. Result is -a*b - c.  <a href="#aa6e6950597f4833fa93b09a94e7b0e16">More...</a><br/></td></tr>
<tr class="separator:aa6e6950597f4833fa93b09a94e7b0e16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0178a127dde331652ab015323ae622f2"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a0178a127dde331652ab015323ae622f2">gmx::maskAdd</a> (float a, float b, float m)</td></tr>
<tr class="memdesc:a0178a127dde331652ab015323ae622f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add two float variables, masked version.  <a href="#a0178a127dde331652ab015323ae622f2">More...</a><br/></td></tr>
<tr class="separator:a0178a127dde331652ab015323ae622f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e3c4084e25d298f95003df8e9aeffa1"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a1e3c4084e25d298f95003df8e9aeffa1">gmx::maskzMul</a> (float a, float b, float m)</td></tr>
<tr class="memdesc:a1e3c4084e25d298f95003df8e9aeffa1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiply two float variables, masked version.  <a href="#a1e3c4084e25d298f95003df8e9aeffa1">More...</a><br/></td></tr>
<tr class="separator:a1e3c4084e25d298f95003df8e9aeffa1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8151e61ef06e30e360c03bba6fb5e2ab"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a8151e61ef06e30e360c03bba6fb5e2ab">gmx::maskzFma</a> (float a, float b, float c, float m)</td></tr>
<tr class="memdesc:a8151e61ef06e30e360c03bba6fb5e2ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Float fused multiply-add, masked version.  <a href="#a8151e61ef06e30e360c03bba6fb5e2ab">More...</a><br/></td></tr>
<tr class="separator:a8151e61ef06e30e360c03bba6fb5e2ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5dc46e83d110b8c81339683bf748fc81"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a5dc46e83d110b8c81339683bf748fc81">gmx::abs</a> (float a)</td></tr>
<tr class="memdesc:a5dc46e83d110b8c81339683bf748fc81"><td class="mdescLeft">&#160;</td><td class="mdescRight">Float Floating-point <a class="el" href="group__module__simd.xhtml#ga9339c53d13a59e946834c14d565f1e18" title="SIMD4 Floating-point abs(). ">abs()</a>.  <a href="#a5dc46e83d110b8c81339683bf748fc81">More...</a><br/></td></tr>
<tr class="separator:a5dc46e83d110b8c81339683bf748fc81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35c7b010fbd32f5424afa0de0c70db6f"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a35c7b010fbd32f5424afa0de0c70db6f">gmx::max</a> (float a, float b)</td></tr>
<tr class="memdesc:a35c7b010fbd32f5424afa0de0c70db6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set each float element to the largest from two variables.  <a href="#a35c7b010fbd32f5424afa0de0c70db6f">More...</a><br/></td></tr>
<tr class="separator:a35c7b010fbd32f5424afa0de0c70db6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6d21dccd9a94698363bdb1943f139bb"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#aa6d21dccd9a94698363bdb1943f139bb">gmx::min</a> (float a, float b)</td></tr>
<tr class="memdesc:aa6d21dccd9a94698363bdb1943f139bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set each float element to the smallest from two variables.  <a href="#aa6d21dccd9a94698363bdb1943f139bb">More...</a><br/></td></tr>
<tr class="separator:aa6d21dccd9a94698363bdb1943f139bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c0a061335a242530d8d791459a8e2d0"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a1c0a061335a242530d8d791459a8e2d0">gmx::round</a> (float a)</td></tr>
<tr class="memdesc:a1c0a061335a242530d8d791459a8e2d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Float round to nearest integer value (in floating-point format).  <a href="#a1c0a061335a242530d8d791459a8e2d0">More...</a><br/></td></tr>
<tr class="separator:a1c0a061335a242530d8d791459a8e2d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4323d38c16cd7ce6b1ae9df62e94ef2a"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a4323d38c16cd7ce6b1ae9df62e94ef2a">gmx::trunc</a> (float a)</td></tr>
<tr class="memdesc:a4323d38c16cd7ce6b1ae9df62e94ef2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Truncate float, i.e. round towards zero - common hardware instruction.  <a href="#a4323d38c16cd7ce6b1ae9df62e94ef2a">More...</a><br/></td></tr>
<tr class="separator:a4323d38c16cd7ce6b1ae9df62e94ef2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4a37558328ab029203170ad4c6c4d01"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#aa4a37558328ab029203170ad4c6c4d01">gmx::reduce</a> (float a)</td></tr>
<tr class="memdesc:aa4a37558328ab029203170ad4c6c4d01"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return sum of all elements in float variable (i.e., the variable itself).  <a href="#aa4a37558328ab029203170ad4c6c4d01">More...</a><br/></td></tr>
<tr class="separator:aa4a37558328ab029203170ad4c6c4d01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaec39ef87dbec92292cd5954c922be6d"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#aaec39ef87dbec92292cd5954c922be6d">gmx::andNot</a> (float a, float b)</td></tr>
<tr class="memdesc:aaec39ef87dbec92292cd5954c922be6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Bitwise andnot for two scalar float variables.  <a href="#aaec39ef87dbec92292cd5954c922be6d">More...</a><br/></td></tr>
<tr class="separator:aaec39ef87dbec92292cd5954c922be6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6a3628d9b9ddc7900590f963be7bbf0"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#af6a3628d9b9ddc7900590f963be7bbf0">gmx::testBits</a> (float a)</td></tr>
<tr class="memdesc:af6a3628d9b9ddc7900590f963be7bbf0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return true if any bits are set in the float variable.  <a href="#af6a3628d9b9ddc7900590f963be7bbf0">More...</a><br/></td></tr>
<tr class="separator:af6a3628d9b9ddc7900590f963be7bbf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af90cd5d709899e47809553109383299e"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#af90cd5d709899e47809553109383299e">gmx::anyTrue</a> (bool a)</td></tr>
<tr class="memdesc:af90cd5d709899e47809553109383299e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns if the boolean is true.  <a href="#af90cd5d709899e47809553109383299e">More...</a><br/></td></tr>
<tr class="separator:af90cd5d709899e47809553109383299e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af47eb155075f6f9aa99ecca11825b021"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#af47eb155075f6f9aa99ecca11825b021">gmx::selectByMask</a> (float a, bool mask)</td></tr>
<tr class="memdesc:af47eb155075f6f9aa99ecca11825b021"><td class="mdescLeft">&#160;</td><td class="mdescRight">Select from single precision variable where boolean is true.  <a href="#af47eb155075f6f9aa99ecca11825b021">More...</a><br/></td></tr>
<tr class="separator:af47eb155075f6f9aa99ecca11825b021"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76f8ccf8f582242260b4e785ebf48e3a"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a76f8ccf8f582242260b4e785ebf48e3a">gmx::selectByNotMask</a> (float a, bool mask)</td></tr>
<tr class="memdesc:a76f8ccf8f582242260b4e785ebf48e3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Select from single precision variable where boolean is false.  <a href="#a76f8ccf8f582242260b4e785ebf48e3a">More...</a><br/></td></tr>
<tr class="separator:a76f8ccf8f582242260b4e785ebf48e3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31c5db5940f1fed568d8d6a0dbe7ec1a"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a31c5db5940f1fed568d8d6a0dbe7ec1a">gmx::blend</a> (float a, float b, float sel)</td></tr>
<tr class="memdesc:a31c5db5940f1fed568d8d6a0dbe7ec1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Blend float selection.  <a href="#a31c5db5940f1fed568d8d6a0dbe7ec1a">More...</a><br/></td></tr>
<tr class="separator:a31c5db5940f1fed568d8d6a0dbe7ec1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2136f5684897fc7ea139039eba172629"><td class="memItemLeft" align="right" valign="top">static std::int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a2136f5684897fc7ea139039eba172629">gmx::cvtR2I</a> (float a)</td></tr>
<tr class="memdesc:a2136f5684897fc7ea139039eba172629"><td class="mdescLeft">&#160;</td><td class="mdescRight">Round single precision floating point to integer.  <a href="#a2136f5684897fc7ea139039eba172629">More...</a><br/></td></tr>
<tr class="separator:a2136f5684897fc7ea139039eba172629"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c74ba54abe2627167abfc0df7286f5d"><td class="memItemLeft" align="right" valign="top">static std::int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a7c74ba54abe2627167abfc0df7286f5d">gmx::cvttR2I</a> (float a)</td></tr>
<tr class="memdesc:a7c74ba54abe2627167abfc0df7286f5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Truncate single precision floating point to integer.  <a href="#a7c74ba54abe2627167abfc0df7286f5d">More...</a><br/></td></tr>
<tr class="separator:a7c74ba54abe2627167abfc0df7286f5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69388fb35cb4b891c7517554e4500615"><td class="memItemLeft" align="right" valign="top">static std::int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a69388fb35cb4b891c7517554e4500615">gmx::cvtI2R</a> (std::int32_t a)</td></tr>
<tr class="memdesc:a69388fb35cb4b891c7517554e4500615"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return integer.  <a href="#a69388fb35cb4b891c7517554e4500615">More...</a><br/></td></tr>
<tr class="separator:a69388fb35cb4b891c7517554e4500615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea1d0d7a9f81e8e5cac19a3b66f0170e"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#aea1d0d7a9f81e8e5cac19a3b66f0170e">gmx::store</a> (double *m, double a)</td></tr>
<tr class="memdesc:aea1d0d7a9f81e8e5cac19a3b66f0170e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Store contents of double variable to aligned memory m.  <a href="#aea1d0d7a9f81e8e5cac19a3b66f0170e">More...</a><br/></td></tr>
<tr class="separator:aea1d0d7a9f81e8e5cac19a3b66f0170e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea9644fa777bc5e47ff9d3e2bdde34e0"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#aea9644fa777bc5e47ff9d3e2bdde34e0">gmx::storeU</a> (double *m, double a)</td></tr>
<tr class="memdesc:aea9644fa777bc5e47ff9d3e2bdde34e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Store contents of double variable to unaligned memory m.  <a href="#aea9644fa777bc5e47ff9d3e2bdde34e0">More...</a><br/></td></tr>
<tr class="separator:aea9644fa777bc5e47ff9d3e2bdde34e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79e2ba07938cafa28c0988ba52874f46"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a79e2ba07938cafa28c0988ba52874f46">gmx::fma</a> (double a, double b, double c)</td></tr>
<tr class="memdesc:a79e2ba07938cafa28c0988ba52874f46"><td class="mdescLeft">&#160;</td><td class="mdescRight">double Fused-multiply-add. Result is a*b + c.  <a href="#a79e2ba07938cafa28c0988ba52874f46">More...</a><br/></td></tr>
<tr class="separator:a79e2ba07938cafa28c0988ba52874f46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcb2c8942d173c6a9964940f90c55b2a"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#abcb2c8942d173c6a9964940f90c55b2a">gmx::fms</a> (double a, double b, double c)</td></tr>
<tr class="memdesc:abcb2c8942d173c6a9964940f90c55b2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">double Fused-multiply-subtract. Result is a*b - c.  <a href="#abcb2c8942d173c6a9964940f90c55b2a">More...</a><br/></td></tr>
<tr class="separator:abcb2c8942d173c6a9964940f90c55b2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcf7849c8ce1bbbe3e2fecffedfc05e8"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#adcf7849c8ce1bbbe3e2fecffedfc05e8">gmx::fnma</a> (double a, double b, double c)</td></tr>
<tr class="memdesc:adcf7849c8ce1bbbe3e2fecffedfc05e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">double Fused-negated-multiply-add. Result is - a*b + c.  <a href="#adcf7849c8ce1bbbe3e2fecffedfc05e8">More...</a><br/></td></tr>
<tr class="separator:adcf7849c8ce1bbbe3e2fecffedfc05e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9bd8328d5cbdb7f6a054b877183f277"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#ad9bd8328d5cbdb7f6a054b877183f277">gmx::fnms</a> (double a, double b, double c)</td></tr>
<tr class="memdesc:ad9bd8328d5cbdb7f6a054b877183f277"><td class="mdescLeft">&#160;</td><td class="mdescRight">double Fused-negated-multiply-subtract. Result is -a*b - c.  <a href="#ad9bd8328d5cbdb7f6a054b877183f277">More...</a><br/></td></tr>
<tr class="separator:ad9bd8328d5cbdb7f6a054b877183f277"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68b090d0e3ab5695c508453406ee43c8"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a68b090d0e3ab5695c508453406ee43c8">gmx::maskAdd</a> (double a, double b, double m)</td></tr>
<tr class="memdesc:a68b090d0e3ab5695c508453406ee43c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add two double variables, masked version.  <a href="#a68b090d0e3ab5695c508453406ee43c8">More...</a><br/></td></tr>
<tr class="separator:a68b090d0e3ab5695c508453406ee43c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e4ab8b1ab046ff242d32ab93366bfde"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a7e4ab8b1ab046ff242d32ab93366bfde">gmx::maskzMul</a> (double a, double b, double m)</td></tr>
<tr class="memdesc:a7e4ab8b1ab046ff242d32ab93366bfde"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiply two double variables, masked version.  <a href="#a7e4ab8b1ab046ff242d32ab93366bfde">More...</a><br/></td></tr>
<tr class="separator:a7e4ab8b1ab046ff242d32ab93366bfde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3cf4eaad108887d2462f5beecd4db62"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#aa3cf4eaad108887d2462f5beecd4db62">gmx::maskzFma</a> (double a, double b, double c, double m)</td></tr>
<tr class="memdesc:aa3cf4eaad108887d2462f5beecd4db62"><td class="mdescLeft">&#160;</td><td class="mdescRight">double fused multiply-add, masked version.  <a href="#aa3cf4eaad108887d2462f5beecd4db62">More...</a><br/></td></tr>
<tr class="separator:aa3cf4eaad108887d2462f5beecd4db62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac85ea3af684916aee86e2674a6bd81e5"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#ac85ea3af684916aee86e2674a6bd81e5">gmx::abs</a> (double a)</td></tr>
<tr class="memdesc:ac85ea3af684916aee86e2674a6bd81e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">double doubleing-point <a class="el" href="group__module__simd.xhtml#ga9339c53d13a59e946834c14d565f1e18" title="SIMD4 Floating-point abs(). ">abs()</a>.  <a href="#ac85ea3af684916aee86e2674a6bd81e5">More...</a><br/></td></tr>
<tr class="separator:ac85ea3af684916aee86e2674a6bd81e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16f6bf4a20b14262f28168596d5bb8b9"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a16f6bf4a20b14262f28168596d5bb8b9">gmx::max</a> (double a, double b)</td></tr>
<tr class="memdesc:a16f6bf4a20b14262f28168596d5bb8b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set each double element to the largest from two variables.  <a href="#a16f6bf4a20b14262f28168596d5bb8b9">More...</a><br/></td></tr>
<tr class="separator:a16f6bf4a20b14262f28168596d5bb8b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65fb0c7aa84962905d3d78a913c787c3"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a65fb0c7aa84962905d3d78a913c787c3">gmx::min</a> (double a, double b)</td></tr>
<tr class="memdesc:a65fb0c7aa84962905d3d78a913c787c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set each double element to the smallest from two variables.  <a href="#a65fb0c7aa84962905d3d78a913c787c3">More...</a><br/></td></tr>
<tr class="separator:a65fb0c7aa84962905d3d78a913c787c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15179b513c1ec4ec0b9090e57b76bac4"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a15179b513c1ec4ec0b9090e57b76bac4">gmx::round</a> (double a)</td></tr>
<tr class="memdesc:a15179b513c1ec4ec0b9090e57b76bac4"><td class="mdescLeft">&#160;</td><td class="mdescRight">double round to nearest integer value (in doubleing-point format).  <a href="#a15179b513c1ec4ec0b9090e57b76bac4">More...</a><br/></td></tr>
<tr class="separator:a15179b513c1ec4ec0b9090e57b76bac4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00d84f65dae98aeb02816975f5045eed"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a00d84f65dae98aeb02816975f5045eed">gmx::trunc</a> (double a)</td></tr>
<tr class="memdesc:a00d84f65dae98aeb02816975f5045eed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Truncate double, i.e. round towards zero - common hardware instruction.  <a href="#a00d84f65dae98aeb02816975f5045eed">More...</a><br/></td></tr>
<tr class="separator:a00d84f65dae98aeb02816975f5045eed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a157983d90620412d404e8a77d1ddbd0f"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a157983d90620412d404e8a77d1ddbd0f">gmx::reduce</a> (double a)</td></tr>
<tr class="memdesc:a157983d90620412d404e8a77d1ddbd0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return sum of all elements in double variable (i.e., the variable itself).  <a href="#a157983d90620412d404e8a77d1ddbd0f">More...</a><br/></td></tr>
<tr class="separator:a157983d90620412d404e8a77d1ddbd0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebb0315d31c3c818a738bdc153397365"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#aebb0315d31c3c818a738bdc153397365">gmx::andNot</a> (double a, double b)</td></tr>
<tr class="memdesc:aebb0315d31c3c818a738bdc153397365"><td class="mdescLeft">&#160;</td><td class="mdescRight">Bitwise andnot for two scalar double variables.  <a href="#aebb0315d31c3c818a738bdc153397365">More...</a><br/></td></tr>
<tr class="separator:aebb0315d31c3c818a738bdc153397365"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae58ba299df96ee6c45043e646a1d01dc"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#ae58ba299df96ee6c45043e646a1d01dc">gmx::testBits</a> (double a)</td></tr>
<tr class="memdesc:ae58ba299df96ee6c45043e646a1d01dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return true if any bits are set in the double variable.  <a href="#ae58ba299df96ee6c45043e646a1d01dc">More...</a><br/></td></tr>
<tr class="separator:ae58ba299df96ee6c45043e646a1d01dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1449de9307a87e0c5946fd9cab43b35"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#aa1449de9307a87e0c5946fd9cab43b35">gmx::selectByMask</a> (double a, bool mask)</td></tr>
<tr class="memdesc:aa1449de9307a87e0c5946fd9cab43b35"><td class="mdescLeft">&#160;</td><td class="mdescRight">Select from double precision variable where boolean is true.  <a href="#aa1449de9307a87e0c5946fd9cab43b35">More...</a><br/></td></tr>
<tr class="separator:aa1449de9307a87e0c5946fd9cab43b35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f03ad3380ef6213c5459051c3268ba7"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a2f03ad3380ef6213c5459051c3268ba7">gmx::selectByNotMask</a> (double a, bool mask)</td></tr>
<tr class="memdesc:a2f03ad3380ef6213c5459051c3268ba7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Select from double precision variable where boolean is false.  <a href="#a2f03ad3380ef6213c5459051c3268ba7">More...</a><br/></td></tr>
<tr class="separator:a2f03ad3380ef6213c5459051c3268ba7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90aa803db2a6a8c9dbb22395dcaf4532"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a90aa803db2a6a8c9dbb22395dcaf4532">gmx::blend</a> (double a, double b, double sel)</td></tr>
<tr class="memdesc:a90aa803db2a6a8c9dbb22395dcaf4532"><td class="mdescLeft">&#160;</td><td class="mdescRight">Blend double selection.  <a href="#a90aa803db2a6a8c9dbb22395dcaf4532">More...</a><br/></td></tr>
<tr class="separator:a90aa803db2a6a8c9dbb22395dcaf4532"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc9f420c1d0c099cc58ac3ae5fcb1ace"><td class="memItemLeft" align="right" valign="top">static std::int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#acc9f420c1d0c099cc58ac3ae5fcb1ace">gmx::cvtR2I</a> (double a)</td></tr>
<tr class="memdesc:acc9f420c1d0c099cc58ac3ae5fcb1ace"><td class="mdescLeft">&#160;</td><td class="mdescRight">Round single precision doubleing point to integer.  <a href="#acc9f420c1d0c099cc58ac3ae5fcb1ace">More...</a><br/></td></tr>
<tr class="separator:acc9f420c1d0c099cc58ac3ae5fcb1ace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0fb4318cc5c14075330d52382e6bdd4"><td class="memItemLeft" align="right" valign="top">static std::int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#ac0fb4318cc5c14075330d52382e6bdd4">gmx::cvttR2I</a> (double a)</td></tr>
<tr class="memdesc:ac0fb4318cc5c14075330d52382e6bdd4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Truncate single precision doubleing point to integer.  <a href="#ac0fb4318cc5c14075330d52382e6bdd4">More...</a><br/></td></tr>
<tr class="separator:ac0fb4318cc5c14075330d52382e6bdd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac575d3b81809b71e414755dc8acf3317"><td class="memItemLeft" align="right" valign="top">static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#ac575d3b81809b71e414755dc8acf3317">gmx::cvtF2D</a> (float a)</td></tr>
<tr class="memdesc:ac575d3b81809b71e414755dc8acf3317"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert float to double (mimicks SIMD conversion)  <a href="#ac575d3b81809b71e414755dc8acf3317">More...</a><br/></td></tr>
<tr class="separator:ac575d3b81809b71e414755dc8acf3317"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22401779c65549d3061b4fdd5290ef19"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a22401779c65549d3061b4fdd5290ef19">gmx::cvtD2F</a> (double a)</td></tr>
<tr class="memdesc:a22401779c65549d3061b4fdd5290ef19"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert double to float (mimicks SIMD conversion)  <a href="#a22401779c65549d3061b4fdd5290ef19">More...</a><br/></td></tr>
<tr class="separator:a22401779c65549d3061b4fdd5290ef19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa169afcbfb3992ab9fde1ed5beee8b06"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#aa169afcbfb3992ab9fde1ed5beee8b06">gmx::store</a> (std::int32_t *m, std::int32_t a)</td></tr>
<tr class="memdesc:aa169afcbfb3992ab9fde1ed5beee8b06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Store contents of integer variable to aligned memory m.  <a href="#aa169afcbfb3992ab9fde1ed5beee8b06">More...</a><br/></td></tr>
<tr class="separator:aa169afcbfb3992ab9fde1ed5beee8b06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43354d3d210193bcf5316234dc7d93ae"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a43354d3d210193bcf5316234dc7d93ae">gmx::storeU</a> (std::int32_t *m, std::int32_t a)</td></tr>
<tr class="memdesc:a43354d3d210193bcf5316234dc7d93ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Store contents of integer variable to unaligned memory m.  <a href="#a43354d3d210193bcf5316234dc7d93ae">More...</a><br/></td></tr>
<tr class="separator:a43354d3d210193bcf5316234dc7d93ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a880a42645963c52980a5790f09e3bd18"><td class="memItemLeft" align="right" valign="top">static std::int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a880a42645963c52980a5790f09e3bd18">gmx::andNot</a> (std::int32_t a, std::int32_t b)</td></tr>
<tr class="memdesc:a880a42645963c52980a5790f09e3bd18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Bitwise andnot for two scalar integer variables.  <a href="#a880a42645963c52980a5790f09e3bd18">More...</a><br/></td></tr>
<tr class="separator:a880a42645963c52980a5790f09e3bd18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2a03b61db6a3ed3e8c2d5e1b3acc9a8"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#ae2a03b61db6a3ed3e8c2d5e1b3acc9a8">gmx::testBits</a> (std::int32_t a)</td></tr>
<tr class="memdesc:ae2a03b61db6a3ed3e8c2d5e1b3acc9a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return true if any bits are set in the integer variable.  <a href="#ae2a03b61db6a3ed3e8c2d5e1b3acc9a8">More...</a><br/></td></tr>
<tr class="separator:ae2a03b61db6a3ed3e8c2d5e1b3acc9a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a543420229312467871aaa26ea79f5a5d"><td class="memItemLeft" align="right" valign="top">static std::int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a543420229312467871aaa26ea79f5a5d">gmx::selectByMask</a> (std::int32_t a, bool mask)</td></tr>
<tr class="memdesc:a543420229312467871aaa26ea79f5a5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Select from integer variable where boolean is true.  <a href="#a543420229312467871aaa26ea79f5a5d">More...</a><br/></td></tr>
<tr class="separator:a543420229312467871aaa26ea79f5a5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1c7d81b9ba8302dadcbdded4fcd4399"><td class="memItemLeft" align="right" valign="top">static std::int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#aa1c7d81b9ba8302dadcbdded4fcd4399">gmx::selectByNotMask</a> (std::int32_t a, bool mask)</td></tr>
<tr class="memdesc:aa1c7d81b9ba8302dadcbdded4fcd4399"><td class="mdescLeft">&#160;</td><td class="mdescRight">Select from integer variable where boolean is false.  <a href="#aa1c7d81b9ba8302dadcbdded4fcd4399">More...</a><br/></td></tr>
<tr class="separator:aa1c7d81b9ba8302dadcbdded4fcd4399"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf33872c1b22ffd9340e77410c693083"><td class="memItemLeft" align="right" valign="top">static std::int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#acf33872c1b22ffd9340e77410c693083">gmx::blend</a> (std::int32_t a, std::int32_t b, float sel)</td></tr>
<tr class="memdesc:acf33872c1b22ffd9340e77410c693083"><td class="mdescLeft">&#160;</td><td class="mdescRight">Blend integer selection.  <a href="#acf33872c1b22ffd9340e77410c693083">More...</a><br/></td></tr>
<tr class="separator:acf33872c1b22ffd9340e77410c693083"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27254f29caa9fd12a6e774bf7a13502c"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a27254f29caa9fd12a6e774bf7a13502c">gmx::cvtB2IB</a> (bool a)</td></tr>
<tr class="memdesc:a27254f29caa9fd12a6e774bf7a13502c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Just return a boolean (mimicks SIMD real-to-int bool conversions)  <a href="#a27254f29caa9fd12a6e774bf7a13502c">More...</a><br/></td></tr>
<tr class="separator:a27254f29caa9fd12a6e774bf7a13502c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a600fa6a48b5df753c2fcc99c47f3f3"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a2a600fa6a48b5df753c2fcc99c47f3f3">gmx::cvtIB2B</a> (bool a)</td></tr>
<tr class="memdesc:a2a600fa6a48b5df753c2fcc99c47f3f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Just return a boolean (mimicks SIMD int-to-real bool conversions)  <a href="#a2a600fa6a48b5df753c2fcc99c47f3f3">More...</a><br/></td></tr>
<tr class="separator:a2a600fa6a48b5df753c2fcc99c47f3f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:19:34 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

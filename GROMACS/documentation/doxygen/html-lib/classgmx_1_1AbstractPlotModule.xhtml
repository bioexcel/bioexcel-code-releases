<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::AbstractPlotModule Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml">AbstractPlotModule</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1AbstractPlotModule-members.xhtml">List of all members</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::AbstractPlotModule Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span><div class="ingroups"><a class="el" href="group__module__analysisdata.xhtml">Parallelizable Handling of Output Data (analysisdata)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/analysisdata/modules/plot.h&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for gmx::AbstractPlotModule:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1AbstractPlotModule__inherit__graph.svg" width="430" height="276"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for gmx::AbstractPlotModule:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1AbstractPlotModule__coll__graph.svg" width="219" height="187"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Abstract data module for writing data into a file. </p>
<p>Implements features common to all plotting modules. Subclasses implement features specific to certain applications (<a class="el" href="classgmx_1_1AnalysisDataPlotModule.xhtml" title="Plotting module for straightforward plotting of data. ">AnalysisDataPlotModule</a> implements straightforward plotting).</p>
<p>By default, the data is written into an xvgr file, according to the options read from the <a class="el" href="classgmx_1_1AnalysisDataPlotSettings.xhtml" title="Common settings for data plots. ">AnalysisDataPlotSettings</a> object given to the constructor. For non-xvgr data, it's possible to skip all headers by calling <a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#acc5806ffdfeba02a61152aada16ec70a" title="Set plain output. ">setPlainOutput()</a>.</p>
<p>A single output line corresponds to a single frame. In most cases with multipoint data, <a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#acc5806ffdfeba02a61152aada16ec70a" title="Set plain output. ">setPlainOutput()</a> should be called since the output does not make sense as an xvgr file, but this is not enforced.</p>
<p>Multipoint data and multiple data sets are both supported, in which case all the points are written to the output, in the order in which they are added to the data. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a188171eb67bf21e0ea1be21ded6c1c19"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#a188171eb67bf21e0ea1be21ded6c1c19">Flag</a> { <br/>
&#160;&#160;<a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#a188171eb67bf21e0ea1be21ded6c1c19aab0a8d917fcd73e2d83b6ccd27d050ef">efAllowMultipoint</a> = 1&lt;&lt;0, 
<a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#a188171eb67bf21e0ea1be21ded6c1c19ae1bb23abbcc827800bcf2966ba9e63a8">efOnlyMultipoint</a> = 1&lt;&lt;1, 
<a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#a188171eb67bf21e0ea1be21ded6c1c19a1f92109f099701d827d220cd068700f9">efAllowMulticolumn</a> = 1&lt;&lt;2, 
<a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#a188171eb67bf21e0ea1be21ded6c1c19a36b0114de25d6ec54d086588bd62a5ff">efAllowMissing</a> = 1&lt;&lt;3, 
<br/>
&#160;&#160;<a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#a188171eb67bf21e0ea1be21ded6c1c19afdae76435f8341cd8a54e542980e6748">efAllowMultipleDataSets</a> = 1&lt;&lt;4
<br/>
 }</td></tr>
<tr class="memdesc:a188171eb67bf21e0ea1be21ded6c1c19"><td class="mdescLeft">&#160;</td><td class="mdescRight">Possible flags for <a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a617711d6962d1c05fc72d00f93a43028" title="Returns properties supported by the module. ">flags()</a>.  <a href="classgmx_1_1IAnalysisDataModule.xhtml#a188171eb67bf21e0ea1be21ded6c1c19">More...</a><br/></td></tr>
<tr class="separator:a188171eb67bf21e0ea1be21ded6c1c19"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a148d34821bc9f3b35a7422addb0ed453"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a148d34821bc9f3b35a7422addb0ed453"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a148d34821bc9f3b35a7422addb0ed453">setSettings</a> (const <a class="el" href="classgmx_1_1AnalysisDataPlotSettings.xhtml">AnalysisDataPlotSettings</a> &amp;settings)</td></tr>
<tr class="memdesc:a148d34821bc9f3b35a7422addb0ed453"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set common settings for the plotting. <br/></td></tr>
<tr class="separator:a148d34821bc9f3b35a7422addb0ed453"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd162f52c70245a3c00d4d52541110d6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#abd162f52c70245a3c00d4d52541110d6">setFileName</a> (const std::string &amp;filename)</td></tr>
<tr class="memdesc:abd162f52c70245a3c00d4d52541110d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the output file name.  <a href="#abd162f52c70245a3c00d4d52541110d6">More...</a><br/></td></tr>
<tr class="separator:abd162f52c70245a3c00d4d52541110d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc5806ffdfeba02a61152aada16ec70a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#acc5806ffdfeba02a61152aada16ec70a">setPlainOutput</a> (bool bPlain)</td></tr>
<tr class="memdesc:acc5806ffdfeba02a61152aada16ec70a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set plain output.  <a href="#acc5806ffdfeba02a61152aada16ec70a">More...</a><br/></td></tr>
<tr class="separator:acc5806ffdfeba02a61152aada16ec70a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaaffc648674748c70854a50d8ed50625"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaaffc648674748c70854a50d8ed50625"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#aaaffc648674748c70854a50d8ed50625">setErrorsAsSeparateColumn</a> (bool bSeparate)</td></tr>
<tr class="memdesc:aaaffc648674748c70854a50d8ed50625"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plot errors as a separate output column after each value column. <br/></td></tr>
<tr class="separator:aaaffc648674748c70854a50d8ed50625"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa30d77c2337e26e5b1402ea588e34825"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#aa30d77c2337e26e5b1402ea588e34825">setOmitX</a> (bool bOmitX)</td></tr>
<tr class="memdesc:aa30d77c2337e26e5b1402ea588e34825"><td class="mdescLeft">&#160;</td><td class="mdescRight">Omit the X coordinates from the output.  <a href="#aa30d77c2337e26e5b1402ea588e34825">More...</a><br/></td></tr>
<tr class="separator:aa30d77c2337e26e5b1402ea588e34825"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a942f8789698391ed24e252a950a1fa13"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a942f8789698391ed24e252a950a1fa13"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a942f8789698391ed24e252a950a1fa13">setTitle</a> (const char *title)</td></tr>
<tr class="memdesc:a942f8789698391ed24e252a950a1fa13"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set plot title. <br/></td></tr>
<tr class="separator:a942f8789698391ed24e252a950a1fa13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8e6594e8a2a8864595cd2eacfd8840b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#ad8e6594e8a2a8864595cd2eacfd8840b">setTitle</a> (const std::string &amp;title)</td></tr>
<tr class="memdesc:ad8e6594e8a2a8864595cd2eacfd8840b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set plot title.  <a href="#ad8e6594e8a2a8864595cd2eacfd8840b">More...</a><br/></td></tr>
<tr class="separator:ad8e6594e8a2a8864595cd2eacfd8840b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcafe6b6ca861666778a51966f3c14c0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adcafe6b6ca861666778a51966f3c14c0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#adcafe6b6ca861666778a51966f3c14c0">setSubtitle</a> (const char *subtitle)</td></tr>
<tr class="memdesc:adcafe6b6ca861666778a51966f3c14c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set plot subtitle. <br/></td></tr>
<tr class="separator:adcafe6b6ca861666778a51966f3c14c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d136f725aecb00d7d8d7b4bdbd3eb7e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a3d136f725aecb00d7d8d7b4bdbd3eb7e">setSubtitle</a> (const std::string &amp;subtitle)</td></tr>
<tr class="memdesc:a3d136f725aecb00d7d8d7b4bdbd3eb7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set plot subtitle.  <a href="#a3d136f725aecb00d7d8d7b4bdbd3eb7e">More...</a><br/></td></tr>
<tr class="separator:a3d136f725aecb00d7d8d7b4bdbd3eb7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59fb11bacf51311647359ba53588af08"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a59fb11bacf51311647359ba53588af08"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a59fb11bacf51311647359ba53588af08">setXLabel</a> (const char *label)</td></tr>
<tr class="memdesc:a59fb11bacf51311647359ba53588af08"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set X axis label. <br/></td></tr>
<tr class="separator:a59fb11bacf51311647359ba53588af08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b5357ddea14f2dbdf885fd810c4cda6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a2b5357ddea14f2dbdf885fd810c4cda6">setXAxisIsTime</a> ()</td></tr>
<tr class="memdesc:a2b5357ddea14f2dbdf885fd810c4cda6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Treat X axis as time.  <a href="#a2b5357ddea14f2dbdf885fd810c4cda6">More...</a><br/></td></tr>
<tr class="separator:a2b5357ddea14f2dbdf885fd810c4cda6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af07e171a313545c8b9b3859a09da30a3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af07e171a313545c8b9b3859a09da30a3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#af07e171a313545c8b9b3859a09da30a3">setYLabel</a> (const char *label)</td></tr>
<tr class="memdesc:af07e171a313545c8b9b3859a09da30a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set Y axis label. <br/></td></tr>
<tr class="separator:af07e171a313545c8b9b3859a09da30a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24640d8a21d0a7161bd6c900deb51aef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a24640d8a21d0a7161bd6c900deb51aef">setLegend</a> (int nsets, const char *const *setname)</td></tr>
<tr class="memdesc:a24640d8a21d0a7161bd6c900deb51aef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add legend from an array of strings.  <a href="#a24640d8a21d0a7161bd6c900deb51aef">More...</a><br/></td></tr>
<tr class="separator:a24640d8a21d0a7161bd6c900deb51aef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3628694d99274d866f2f980d3b71c021"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a3628694d99274d866f2f980d3b71c021">appendLegend</a> (const char *setname)</td></tr>
<tr class="memdesc:a3628694d99274d866f2f980d3b71c021"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a legend string for the next data set.  <a href="#a3628694d99274d866f2f980d3b71c021">More...</a><br/></td></tr>
<tr class="separator:a3628694d99274d866f2f980d3b71c021"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d3dd145b25bae5aeaa4daf25bd15361"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a7d3dd145b25bae5aeaa4daf25bd15361">appendLegend</a> (const std::string &amp;setname)</td></tr>
<tr class="memdesc:a7d3dd145b25bae5aeaa4daf25bd15361"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a legend string for the next data set.  <a href="#a7d3dd145b25bae5aeaa4daf25bd15361">More...</a><br/></td></tr>
<tr class="separator:a7d3dd145b25bae5aeaa4daf25bd15361"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e916a71739d93bdc2c560e3ca4df4b1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6e916a71739d93bdc2c560e3ca4df4b1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a6e916a71739d93bdc2c560e3ca4df4b1">setXFormat</a> (int width, int precision, char format= 'f')</td></tr>
<tr class="memdesc:a6e916a71739d93bdc2c560e3ca4df4b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set field width and precision for X value output. <br/></td></tr>
<tr class="separator:a6e916a71739d93bdc2c560e3ca4df4b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abac448ea36f43bfd65efc21af0f8267c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abac448ea36f43bfd65efc21af0f8267c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#abac448ea36f43bfd65efc21af0f8267c">setYFormat</a> (int width, int precision, char format= 'f')</td></tr>
<tr class="memdesc:abac448ea36f43bfd65efc21af0f8267c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set field width and precision for Y value output. <br/></td></tr>
<tr class="separator:abac448ea36f43bfd65efc21af0f8267c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a617711d6962d1c05fc72d00f93a43028"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a617711d6962d1c05fc72d00f93a43028">flags</a> () const </td></tr>
<tr class="memdesc:a617711d6962d1c05fc72d00f93a43028"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns properties supported by the module.  <a href="#a617711d6962d1c05fc72d00f93a43028">More...</a><br/></td></tr>
<tr class="separator:a617711d6962d1c05fc72d00f93a43028"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4c99c267699b17beb16996c819b3489"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#ad4c99c267699b17beb16996c819b3489">dataStarted</a> (<a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml">AbstractAnalysisData</a> *data)</td></tr>
<tr class="memdesc:ad4c99c267699b17beb16996c819b3489"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called (once) when the data has been set up properly.  <a href="#ad4c99c267699b17beb16996c819b3489">More...</a><br/></td></tr>
<tr class="separator:ad4c99c267699b17beb16996c819b3489"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b80d4a31432a1f192bd46a26b47572c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a1b80d4a31432a1f192bd46a26b47572c">frameStarted</a> (const <a class="el" href="classgmx_1_1AnalysisDataFrameHeader.xhtml">AnalysisDataFrameHeader</a> &amp;header)</td></tr>
<tr class="memdesc:a1b80d4a31432a1f192bd46a26b47572c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called at the start of each data frame.  <a href="#a1b80d4a31432a1f192bd46a26b47572c">More...</a><br/></td></tr>
<tr class="separator:a1b80d4a31432a1f192bd46a26b47572c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2130da2f21c6bb15c813542cd2902ac8"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a2130da2f21c6bb15c813542cd2902ac8">pointsAdded</a> (const <a class="el" href="classgmx_1_1AnalysisDataPointSetRef.xhtml">AnalysisDataPointSetRef</a> &amp;points)=0</td></tr>
<tr class="memdesc:a2130da2f21c6bb15c813542cd2902ac8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called one or more times during each data frame.  <a href="#a2130da2f21c6bb15c813542cd2902ac8">More...</a><br/></td></tr>
<tr class="separator:a2130da2f21c6bb15c813542cd2902ac8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48bad1249dd0ae2af9ade92c7866198c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a48bad1249dd0ae2af9ade92c7866198c">frameFinished</a> (const <a class="el" href="classgmx_1_1AnalysisDataFrameHeader.xhtml">AnalysisDataFrameHeader</a> &amp;header)</td></tr>
<tr class="memdesc:a48bad1249dd0ae2af9ade92c7866198c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when a data frame is finished.  <a href="#a48bad1249dd0ae2af9ade92c7866198c">More...</a><br/></td></tr>
<tr class="separator:a48bad1249dd0ae2af9ade92c7866198c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98288e371fcdcaa4bf14a33a2a75efcc"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a98288e371fcdcaa4bf14a33a2a75efcc">dataFinished</a> ()</td></tr>
<tr class="memdesc:a98288e371fcdcaa4bf14a33a2a75efcc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called (once) when no more data is available.  <a href="#a98288e371fcdcaa4bf14a33a2a75efcc">More...</a><br/></td></tr>
<tr class="separator:a98288e371fcdcaa4bf14a33a2a75efcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a961270b81e0697e298caf2971c59818c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a961270b81e0697e298caf2971c59818c"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a961270b81e0697e298caf2971c59818c">AbstractPlotModule</a> (const <a class="el" href="classgmx_1_1AnalysisDataPlotSettings.xhtml">AnalysisDataPlotSettings</a> &amp;settings)</td></tr>
<tr class="memdesc:a961270b81e0697e298caf2971c59818c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates <a class="el" href="classgmx_1_1AbstractPlotModule.xhtml" title="Abstract data module for writing data into a file. ">AbstractPlotModule</a> and assign common settings. <br/></td></tr>
<tr class="separator:a961270b81e0697e298caf2971c59818c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b0b087dc2df27e3024f278248d19b4a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6b0b087dc2df27e3024f278248d19b4a"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a6b0b087dc2df27e3024f278248d19b4a">isFileOpen</a> () const </td></tr>
<tr class="memdesc:a6b0b087dc2df27e3024f278248d19b4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether an output file has been opened. <br/></td></tr>
<tr class="separator:a6b0b087dc2df27e3024f278248d19b4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c686bc5b2d24c8402e4c11728f0745e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a5c686bc5b2d24c8402e4c11728f0745e">writeValue</a> (const <a class="el" href="classgmx_1_1AnalysisDataValue.xhtml">AnalysisDataValue</a> &amp;value) const </td></tr>
<tr class="memdesc:a5c686bc5b2d24c8402e4c11728f0745e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Appends a single value to the current output line.  <a href="#a5c686bc5b2d24c8402e4c11728f0745e">More...</a><br/></td></tr>
<tr class="separator:a5c686bc5b2d24c8402e4c11728f0745e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="a188171eb67bf21e0ea1be21ded6c1c19"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#a188171eb67bf21e0ea1be21ded6c1c19">gmx::IAnalysisDataModule::Flag</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Possible flags for <a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#afa2983f2300095d7f5eeff11635ce2e9" title="Returns properties supported by the module. ">flags()</a>. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><em><a class="anchor" id="a188171eb67bf21e0ea1be21ded6c1c19aab0a8d917fcd73e2d83b6ccd27d050ef"></a>efAllowMultipoint</em>&nbsp;</td><td class="fielddoc">
<p>The module can process multipoint data. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="a188171eb67bf21e0ea1be21ded6c1c19ae1bb23abbcc827800bcf2966ba9e63a8"></a>efOnlyMultipoint</em>&nbsp;</td><td class="fielddoc">
<p>The module does not make sense for non-multipoint data. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="a188171eb67bf21e0ea1be21ded6c1c19a1f92109f099701d827d220cd068700f9"></a>efAllowMulticolumn</em>&nbsp;</td><td class="fielddoc">
<p>The module can process data with more than one column. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="a188171eb67bf21e0ea1be21ded6c1c19a36b0114de25d6ec54d086588bd62a5ff"></a>efAllowMissing</em>&nbsp;</td><td class="fielddoc">
<p>The module can process data with missing points. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="a188171eb67bf21e0ea1be21ded6c1c19afdae76435f8341cd8a54e542980e6748"></a>efAllowMultipleDataSets</em>&nbsp;</td><td class="fielddoc">
<p>The module can process data with multiple data sets. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a3628694d99274d866f2f980d3b71c021"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractPlotModule::appendLegend </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>setname</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add a legend string for the next data set. </p>
<p>Multiple calls to <a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a24640d8a21d0a7161bd6c900deb51aef" title="Add legend from an array of strings. ">setLegend()</a> and/or <a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a3628694d99274d866f2f980d3b71c021" title="Add a legend string for the next data set. ">appendLegend()</a> are added together. </p>

</div>
</div>
<a class="anchor" id="a7d3dd145b25bae5aeaa4daf25bd15361"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractPlotModule::appendLegend </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>setname</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add a legend string for the next data set. </p>
<p>Multiple calls to <a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a24640d8a21d0a7161bd6c900deb51aef" title="Add legend from an array of strings. ">setLegend()</a> and/or <a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a3628694d99274d866f2f980d3b71c021" title="Add a legend string for the next data set. ">appendLegend()</a> are added together. </p>

</div>
</div>
<a class="anchor" id="a98288e371fcdcaa4bf14a33a2a75efcc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractPlotModule::dataFinished </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called (once) when no more data is available. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">unspecified</td><td>Can throw any exception required by the implementing class to report errors. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classgmx_1_1AnalysisDataModuleSerial.xhtml#aea276a3a791220ceccd8dc1f7f80997e">gmx::AnalysisDataModuleSerial</a>.</p>

</div>
</div>
<a class="anchor" id="ad4c99c267699b17beb16996c819b3489"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractPlotModule::dataStarted </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml">AbstractAnalysisData</a> *&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called (once) when the data has been set up properly. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">data</td><td>Data object to which the module is added. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a></td><td>if the provided data is not compatible. </td></tr>
    <tr><td class="paramname">unspecified</td><td>Can throw any exception required by the implementing class to report errors.</td></tr>
  </table>
  </dd>
</dl>
<p>When the data is ready, either this method or parallelDataStarted() is called, depending on the nature of the input data. If this method is called, the input data will always present the frames in sequential order.</p>
<p>The data to which the module is attached is passed as an argument to provide access to properties of the data for initialization and/or validation. The module can also call <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a99ba2f4072c75c8e56d1e377cb6b5f8c" title="Request storage of frames. ">AbstractAnalysisData::requestStorage()</a> if needed.</p>
<p>This is the only place where the module gets access to the data; if properties of the data are required later, the module should store them internally. It is guaranteed that the data properties (column count, whether it's multipoint) do not change once this method has been called.</p>
<p>Notice that <code>data</code> will be a proxy object if the module is added as a column module, not the data object for which <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a8e6f762df563d577f8a1d34a35273952" title="Adds a module that processes only a subset of the columns. ">AbstractAnalysisData::addColumnModule()</a> was called. </p>

<p>Implements <a class="el" href="classgmx_1_1AnalysisDataModuleSerial.xhtml#a90a387cac3eb8aa05c19f971b573eec3">gmx::AnalysisDataModuleSerial</a>.</p>

</div>
</div>
<a class="anchor" id="a617711d6962d1c05fc72d00f93a43028"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::AbstractPlotModule::flags </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns properties supported by the module. </p>
<p>The return value of this method should not change after the module has been added to a data (this responsibility can, and in most cases must, be delegated to the user of the module).</p>
<p>The purpose of this method is to remove the need for common checks for data compatibility in the classes that implement the interface. Instead, <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml" title="Abstract base class for all objects that provide data. ">AbstractAnalysisData</a> performs these checks based on the flags provided.</p>
<p>Does not throw. </p>

<p>Implements <a class="el" href="classgmx_1_1AnalysisDataModuleSerial.xhtml#a3db5dddcea1655ee9af60b7a598aafd3">gmx::AnalysisDataModuleSerial</a>.</p>

</div>
</div>
<a class="anchor" id="a48bad1249dd0ae2af9ade92c7866198c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractPlotModule::frameFinished </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1AnalysisDataFrameHeader.xhtml">AnalysisDataFrameHeader</a> &amp;&#160;</td>
          <td class="paramname"><em>header</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called when a data frame is finished. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">header</td><td>Header information for the frame that is ending. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">unspecified</td><td>Can throw any exception required by the implementing class to report errors. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classgmx_1_1AnalysisDataModuleSerial.xhtml#acb4ebb14797df1f0d3681bde0262a085">gmx::AnalysisDataModuleSerial</a>.</p>

</div>
</div>
<a class="anchor" id="a1b80d4a31432a1f192bd46a26b47572c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractPlotModule::frameStarted </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1AnalysisDataFrameHeader.xhtml">AnalysisDataFrameHeader</a> &amp;&#160;</td>
          <td class="paramname"><em>frame</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called at the start of each data frame. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">frame</td><td>Header information for the frame that is starting. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">unspecified</td><td>Can throw any exception required by the implementing class to report errors. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classgmx_1_1AnalysisDataModuleSerial.xhtml#a3126810adc856fd3ab1856b863a15d6b">gmx::AnalysisDataModuleSerial</a>.</p>

</div>
</div>
<a class="anchor" id="a2130da2f21c6bb15c813542cd2902ac8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void gmx::AbstractPlotModule::pointsAdded </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1AnalysisDataPointSetRef.xhtml">AnalysisDataPointSetRef</a> &amp;&#160;</td>
          <td class="paramname"><em>points</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called one or more times during each data frame. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">points</td><td>Set of points added (also provides access to frame-level data). </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a></td><td>if the provided data is not compatible. </td></tr>
    <tr><td class="paramname">unspecified</td><td>Can throw any exception required by the implementing class to report errors.</td></tr>
  </table>
  </dd>
</dl>
<p>Can be called once or multiple times for a frame. For all data objects currently implemented in the library (and all objects that will use <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml" title="Helper class that implements storage of data. ">AnalysisDataStorage</a> for internal implementation), it is called exactly once for each frame if the data is not multipoint, but currently this restriction is not enforced. </p>

<p>Implements <a class="el" href="classgmx_1_1AnalysisDataModuleSerial.xhtml#adb04bcf23e5be50f7c354833a1e7e9c1">gmx::AnalysisDataModuleSerial</a>.</p>

<p>Implemented in <a class="el" href="classgmx_1_1AnalysisDataVectorPlotModule.xhtml#a6fc2a94e74334819a3b554c7c7dd5357">gmx::AnalysisDataVectorPlotModule</a>, and <a class="el" href="classgmx_1_1AnalysisDataPlotModule.xhtml#ac9f118315cecf5356a6400b21847116a">gmx::AnalysisDataPlotModule</a>.</p>

</div>
</div>
<a class="anchor" id="abd162f52c70245a3c00d4d52541110d6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractPlotModule::setFileName </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the output file name. </p>
<p>If no file name is set (or if <code>filename</code> is empty), no output occurs. </p>

</div>
</div>
<a class="anchor" id="a24640d8a21d0a7161bd6c900deb51aef"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractPlotModule::setLegend </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nsets</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const *&#160;</td>
          <td class="paramname"><em>setname</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add legend from an array of strings. </p>
<p>Multiple calls to <a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a24640d8a21d0a7161bd6c900deb51aef" title="Add legend from an array of strings. ">setLegend()</a> and/or <a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a3628694d99274d866f2f980d3b71c021" title="Add a legend string for the next data set. ">appendLegend()</a> are added together. </p>

</div>
</div>
<a class="anchor" id="aa30d77c2337e26e5b1402ea588e34825"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractPlotModule::setOmitX </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bOmitX</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Omit the X coordinates from the output. </p>
<p>This method only makes sense when combined with <a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#acc5806ffdfeba02a61152aada16ec70a" title="Set plain output. ">setPlainOutput()</a>. </p>

</div>
</div>
<a class="anchor" id="acc5806ffdfeba02a61152aada16ec70a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractPlotModule::setPlainOutput </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bPlain</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set plain output. </p>
<p>If <code>bPlain</code> is true, no xvgr headers are written to the file. In this case, only <a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#aa30d77c2337e26e5b1402ea588e34825" title="Omit the X coordinates from the output. ">setOmitX()</a>, <a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a6e916a71739d93bdc2c560e3ca4df4b1" title="Set field width and precision for X value output. ">setXFormat()</a>, and <a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#abac448ea36f43bfd65efc21af0f8267c" title="Set field width and precision for Y value output. ">setYFormat()</a> methods have any effect on the output. </p>

</div>
</div>
<a class="anchor" id="a3d136f725aecb00d7d8d7b4bdbd3eb7e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractPlotModule::setSubtitle </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>subtitle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set plot subtitle. </p>

</div>
</div>
<a class="anchor" id="ad8e6594e8a2a8864595cd2eacfd8840b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractPlotModule::setTitle </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>title</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set plot title. </p>

</div>
</div>
<a class="anchor" id="a2b5357ddea14f2dbdf885fd810c4cda6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractPlotModule::setXAxisIsTime </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Treat X axis as time. </p>
<p>Sets the label for the axis accordingly and also scales output to take into account the correct time unit. </p>

</div>
</div>
<a class="anchor" id="a5c686bc5b2d24c8402e4c11728f0745e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractPlotModule::writeValue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1AnalysisDataValue.xhtml">AnalysisDataValue</a> &amp;&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Appends a single value to the current output line. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>Value to append.</td></tr>
  </table>
  </dd>
</dl>
<p>Should be used from <a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a2130da2f21c6bb15c813542cd2902ac8" title="Called one or more times during each data frame. ">pointsAdded()</a> implementations in derived classes to write out individual y values to the output.</p>
<p>Must not be called if <a class="el" href="classgmx_1_1AbstractPlotModule.xhtml#a6b0b087dc2df27e3024f278248d19b4a" title="Whether an output file has been opened. ">isFileOpen()</a> returns false. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/analysisdata/modules/<a class="el" href="plot_8h.xhtml">plot.h</a></li>
<li>src/gromacs/analysisdata/modules/plot.cpp</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:19:40 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

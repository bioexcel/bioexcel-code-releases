<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::HelpWriterContext Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2016.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1HelpWriterContext.xhtml">HelpWriterContext</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1HelpWriterContext-members.xhtml">List of all members</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::HelpWriterContext Class Reference<div class="ingroups"><a class="el" href="group__group__libraryapi.xhtml">Library API</a> &#124; <a class="el" href="group__module__onlinehelp.xhtml">Help Formatting for Online Help (onlinehelp)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/onlinehelp/helpwritercontext.h&gt;</code></p>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Context information for writing out help. </p>
<p>The purpose of this class is to pass information about the output format to methods that write help, and to abstract away most of the details of different output formats.</p>
<p>The state of a context object (excluding the fact that the output file is written to) does not change after initial construction of the object. Copying creates a context objects that share state with the source. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab17b32ad5802855990bd79ae6ada94b4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HelpWriterContext.xhtml#ab17b32ad5802855990bd79ae6ada94b4">HelpWriterContext</a> (<a class="el" href="classgmx_1_1TextWriter.xhtml">TextWriter</a> *writer, <a class="el" href="namespacegmx.xhtml#adc6936f6090da8e4cf7801c8e71ee37f">HelpOutputFormat</a> format)</td></tr>
<tr class="memdesc:ab17b32ad5802855990bd79ae6ada94b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a context with the given output writer and format.  <a href="#ab17b32ad5802855990bd79ae6ada94b4">More...</a><br/></td></tr>
<tr class="separator:ab17b32ad5802855990bd79ae6ada94b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cc36f78e38c772e52c4cdc73cf18d7c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HelpWriterContext.xhtml#a9cc36f78e38c772e52c4cdc73cf18d7c">HelpWriterContext</a> (<a class="el" href="classgmx_1_1TextWriter.xhtml">TextWriter</a> *writer, <a class="el" href="namespacegmx.xhtml#adc6936f6090da8e4cf7801c8e71ee37f">HelpOutputFormat</a> format, const <a class="el" href="classgmx_1_1HelpLinks.xhtml">HelpLinks</a> *links)</td></tr>
<tr class="memdesc:a9cc36f78e38c772e52c4cdc73cf18d7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a context with the given output writer, format and links.  <a href="#a9cc36f78e38c772e52c4cdc73cf18d7c">More...</a><br/></td></tr>
<tr class="separator:a9cc36f78e38c772e52c4cdc73cf18d7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1e18511b3fea03259da87cceb160ef0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae1e18511b3fea03259da87cceb160ef0"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HelpWriterContext.xhtml#ae1e18511b3fea03259da87cceb160ef0">HelpWriterContext</a> (const <a class="el" href="classgmx_1_1HelpWriterContext.xhtml">HelpWriterContext</a> &amp;other)</td></tr>
<tr class="memdesc:ae1e18511b3fea03259da87cceb160ef0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a copy of the context. <br/></td></tr>
<tr class="separator:ae1e18511b3fea03259da87cceb160ef0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bec872f46ecd34601df72141fca3739"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HelpWriterContext.xhtml#a6bec872f46ecd34601df72141fca3739">setReplacement</a> (const std::string &amp;search, const std::string &amp;replace)</td></tr>
<tr class="memdesc:a6bec872f46ecd34601df72141fca3739"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a string replacement for markup subsitution.  <a href="#a6bec872f46ecd34601df72141fca3739">More...</a><br/></td></tr>
<tr class="separator:a6bec872f46ecd34601df72141fca3739"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22e1cce37b16f69dae9781d8dc9c5eef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacegmx.xhtml#adc6936f6090da8e4cf7801c8e71ee37f">HelpOutputFormat</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HelpWriterContext.xhtml#a22e1cce37b16f69dae9781d8dc9c5eef">outputFormat</a> () const </td></tr>
<tr class="memdesc:a22e1cce37b16f69dae9781d8dc9c5eef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the active output format.  <a href="#a22e1cce37b16f69dae9781d8dc9c5eef">More...</a><br/></td></tr>
<tr class="separator:a22e1cce37b16f69dae9781d8dc9c5eef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a534954f271c4566257ca1b74f63f603f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1TextWriter.xhtml">TextWriter</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HelpWriterContext.xhtml#a534954f271c4566257ca1b74f63f603f">outputFile</a> () const </td></tr>
<tr class="memdesc:a534954f271c4566257ca1b74f63f603f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the raw writer for writing the help.  <a href="#a534954f271c4566257ca1b74f63f603f">More...</a><br/></td></tr>
<tr class="separator:a534954f271c4566257ca1b74f63f603f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89e3e8e0f7b5b0999978dc4eb1daed98"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HelpWriterContext.xhtml#a89e3e8e0f7b5b0999978dc4eb1daed98">enterSubSection</a> (const std::string &amp;title)</td></tr>
<tr class="memdesc:a89e3e8e0f7b5b0999978dc4eb1daed98"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a subsection in the output help.  <a href="#a89e3e8e0f7b5b0999978dc4eb1daed98">More...</a><br/></td></tr>
<tr class="separator:a89e3e8e0f7b5b0999978dc4eb1daed98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31e58d83c4e6acafe7e2c4ad90d4b1f6"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HelpWriterContext.xhtml#a31e58d83c4e6acafe7e2c4ad90d4b1f6">substituteMarkupAndWrapToString</a> (const <a class="el" href="classgmx_1_1TextLineWrapperSettings.xhtml">TextLineWrapperSettings</a> &amp;settings, const std::string &amp;text) const </td></tr>
<tr class="memdesc:a31e58d83c4e6acafe7e2c4ad90d4b1f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Substitutes markup used in help text and wraps lines.  <a href="#a31e58d83c4e6acafe7e2c4ad90d4b1f6">More...</a><br/></td></tr>
<tr class="separator:a31e58d83c4e6acafe7e2c4ad90d4b1f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8027f4f82a28c4e87b5c69ac4f2441c8"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HelpWriterContext.xhtml#a8027f4f82a28c4e87b5c69ac4f2441c8">substituteMarkupAndWrapToVector</a> (const <a class="el" href="classgmx_1_1TextLineWrapperSettings.xhtml">TextLineWrapperSettings</a> &amp;settings, const std::string &amp;text) const </td></tr>
<tr class="memdesc:a8027f4f82a28c4e87b5c69ac4f2441c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Substitutes markup used in help text and wraps lines.  <a href="#a8027f4f82a28c4e87b5c69ac4f2441c8">More...</a><br/></td></tr>
<tr class="separator:a8027f4f82a28c4e87b5c69ac4f2441c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af55bef08376285732572aa04983d0b48"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HelpWriterContext.xhtml#af55bef08376285732572aa04983d0b48">writeTitle</a> (const std::string &amp;title) const </td></tr>
<tr class="memdesc:af55bef08376285732572aa04983d0b48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a title for the current help topic.  <a href="#af55bef08376285732572aa04983d0b48">More...</a><br/></td></tr>
<tr class="separator:af55bef08376285732572aa04983d0b48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3158d36e646d1b28d06c642dff61db51"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HelpWriterContext.xhtml#a3158d36e646d1b28d06c642dff61db51">writeTextBlock</a> (const std::string &amp;text) const </td></tr>
<tr class="memdesc:a3158d36e646d1b28d06c642dff61db51"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a formatted text block into the output.  <a href="#a3158d36e646d1b28d06c642dff61db51">More...</a><br/></td></tr>
<tr class="separator:a3158d36e646d1b28d06c642dff61db51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f194e69aecfc9f46fb4d8894c253204"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HelpWriterContext.xhtml#a2f194e69aecfc9f46fb4d8894c253204">paragraphBreak</a> () const </td></tr>
<tr class="memdesc:a2f194e69aecfc9f46fb4d8894c253204"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ensures a paragraph break (empty line) in the output.  <a href="#a2f194e69aecfc9f46fb4d8894c253204">More...</a><br/></td></tr>
<tr class="separator:a2f194e69aecfc9f46fb4d8894c253204"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bbfe97b7a42ea389d62cb6c4314dfff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HelpWriterContext.xhtml#a3bbfe97b7a42ea389d62cb6c4314dfff">writeOptionListStart</a> () const </td></tr>
<tr class="memdesc:a3bbfe97b7a42ea389d62cb6c4314dfff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts writing a list of options.  <a href="#a3bbfe97b7a42ea389d62cb6c4314dfff">More...</a><br/></td></tr>
<tr class="separator:a3bbfe97b7a42ea389d62cb6c4314dfff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8380c29527de5c4bff81f0e7806ac1d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HelpWriterContext.xhtml#ac8380c29527de5c4bff81f0e7806ac1d">writeOptionItem</a> (const std::string &amp;name, const std::string &amp;value, const std::string &amp;defaultValue, const std::string &amp;info, const std::string &amp;description) const </td></tr>
<tr class="memdesc:ac8380c29527de5c4bff81f0e7806ac1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes an entry for a single option into the output.  <a href="#ac8380c29527de5c4bff81f0e7806ac1d">More...</a><br/></td></tr>
<tr class="separator:ac8380c29527de5c4bff81f0e7806ac1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7f3b3d906a68d555c249cca7cb29de6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HelpWriterContext.xhtml#ab7f3b3d906a68d555c249cca7cb29de6">writeOptionListEnd</a> () const </td></tr>
<tr class="memdesc:ab7f3b3d906a68d555c249cca7cb29de6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finishes writing a list of options.  <a href="#ab7f3b3d906a68d555c249cca7cb29de6">More...</a><br/></td></tr>
<tr class="separator:ab7f3b3d906a68d555c249cca7cb29de6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ab17b32ad5802855990bd79ae6ada94b4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">gmx::HelpWriterContext::HelpWriterContext </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1TextWriter.xhtml">TextWriter</a> *&#160;</td>
          <td class="paramname"><em>writer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacegmx.xhtml#adc6936f6090da8e4cf7801c8e71ee37f">HelpOutputFormat</a>&#160;</td>
          <td class="paramname"><em>format</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes a context with the given output writer and format. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9cc36f78e38c772e52c4cdc73cf18d7c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">gmx::HelpWriterContext::HelpWriterContext </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1TextWriter.xhtml">TextWriter</a> *&#160;</td>
          <td class="paramname"><em>writer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacegmx.xhtml#adc6936f6090da8e4cf7801c8e71ee37f">HelpOutputFormat</a>&#160;</td>
          <td class="paramname"><em>format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1HelpLinks.xhtml">HelpLinks</a> *&#160;</td>
          <td class="paramname"><em>links</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes a context with the given output writer, format and links. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory.</td></tr>
  </table>
  </dd>
</dl>
<p>A reference to <code>links</code> is stored until the <a class="el" href="classgmx_1_1HelpWriterContext.xhtml" title="Context information for writing out help. ">HelpWriterContext</a> is destructed. The caller is responsible for ensuring that the links object remains valid long enough. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a89e3e8e0f7b5b0999978dc4eb1daed98"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::HelpWriterContext::enterSubSection </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>title</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a subsection in the output help. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>Title for the subsection. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1FileIOError.xhtml" title="Exception class for file I/O errors. ">FileIOError</a></td><td>on any I/O error.</td></tr>
  </table>
  </dd>
</dl>
<p>Writes <code>title</code> using <a class="el" href="classgmx_1_1HelpWriterContext.xhtml#af55bef08376285732572aa04983d0b48" title="Writes a title for the current help topic. ">writeTitle()</a> and makes any further <a class="el" href="classgmx_1_1HelpWriterContext.xhtml#af55bef08376285732572aa04983d0b48" title="Writes a title for the current help topic. ">writeTitle()</a> calls write headings one level deeper.</p>
<p>Typical use for writing a subsection is to create a copy of the context for the parent section, and then call <a class="el" href="classgmx_1_1HelpWriterContext.xhtml#a89e3e8e0f7b5b0999978dc4eb1daed98" title="Creates a subsection in the output help. ">enterSubSection()</a> on the copy. The whole subsection should be written out using the returned context before calling any further methods in the parent context.</p>
<p>This method is only necessary if the subsection will contain further subsections. If there is only one level of subsections, it is possible to use <a class="el" href="classgmx_1_1HelpWriterContext.xhtml#af55bef08376285732572aa04983d0b48" title="Writes a title for the current help topic. ">writeTitle()</a> directly. </p>

</div>
</div>
<a class="anchor" id="a534954f271c4566257ca1b74f63f603f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1TextWriter.xhtml">TextWriter</a> &amp; gmx::HelpWriterContext::outputFile </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the raw writer for writing the help. </p>
<p>Using this writer directly should be avoided, as it requires one to have different code for each output format. Using other methods in this class should be preferred.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a22e1cce37b16f69dae9781d8dc9c5eef"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacegmx.xhtml#adc6936f6090da8e4cf7801c8e71ee37f">HelpOutputFormat</a> gmx::HelpWriterContext::outputFormat </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the active output format. </p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a2f194e69aecfc9f46fb4d8894c253204"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::HelpWriterContext::paragraphBreak </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Ensures a paragraph break (empty line) in the output. </p>
<p>Calls at the beginning and end of output do not produce extra empty lines, and consencutive calls only result in a single empty line. This allows calling the method before and after all output that needs to appear separated as empty lines. </p>

</div>
</div>
<a class="anchor" id="a6bec872f46ecd34601df72141fca3739"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::HelpWriterContext::setReplacement </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>search</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>replace</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a string replacement for markup subsitution. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">search</td><td>Text to replace in input. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">replace</td><td>Text that each occurrence of <code>search</code> is replaced with. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory.</td></tr>
  </table>
  </dd>
</dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000033">Todo:</a></b></dt><dd>Improve semantics if the same <code>search</code> item is set multiple times. </dd></dl>

</div>
</div>
<a class="anchor" id="a31e58d83c4e6acafe7e2c4ad90d4b1f6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string gmx::HelpWriterContext::substituteMarkupAndWrapToString </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1TextLineWrapperSettings.xhtml">TextLineWrapperSettings</a> &amp;&#160;</td>
          <td class="paramname"><em>settings</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Substitutes markup used in help text and wraps lines. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">settings</td><td>Line wrapper settings. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">text</td><td>Text to substitute. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><code>text</code> with markup substituted and wrapped. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1TextLineWrapper.xhtml#a17bdad2e591848e64321249e177d1a57" title="Formats a string, producing a single string with all the lines. ">TextLineWrapper::wrapToString()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a8027f4f82a28c4e87b5c69ac4f2441c8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; std::string &gt; gmx::HelpWriterContext::substituteMarkupAndWrapToVector </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1TextLineWrapperSettings.xhtml">TextLineWrapperSettings</a> &amp;&#160;</td>
          <td class="paramname"><em>settings</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Substitutes markup used in help text and wraps lines. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">settings</td><td>Line wrapper settings. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">text</td><td>Text to substitute. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><code>text</code> with markup substituted and wrapped as a list of lines. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1TextLineWrapper.xhtml#ac598eb95c69dff1a8b8f38210189e6f9" title="Formats a string, producing a vector with all the lines. ">TextLineWrapper::wrapToVector()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ac8380c29527de5c4bff81f0e7806ac1d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::HelpWriterContext::writeOptionItem </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>defaultValue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>description</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Writes an entry for a single option into the output. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of the option. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>Placeholder for option value. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">defaultValue</td><td>Default value for the option. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">info</td><td>Additional (brief) info/attributes for the option. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">description</td><td>Full description of the option. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab7f3b3d906a68d555c249cca7cb29de6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::HelpWriterContext::writeOptionListEnd </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Finishes writing a list of options. </p>
<p>Prints any necessary footers for a list of options formatted with <a class="el" href="classgmx_1_1HelpWriterContext.xhtml#ac8380c29527de5c4bff81f0e7806ac1d" title="Writes an entry for a single option into the output. ">writeOptionItem()</a>. </p>

</div>
</div>
<a class="anchor" id="a3bbfe97b7a42ea389d62cb6c4314dfff"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::HelpWriterContext::writeOptionListStart </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Starts writing a list of options. </p>
<p>Prints any necessary headers for a list of options formatted with <a class="el" href="classgmx_1_1HelpWriterContext.xhtml#ac8380c29527de5c4bff81f0e7806ac1d" title="Writes an entry for a single option into the output. ">writeOptionItem()</a>. </p>

</div>
</div>
<a class="anchor" id="a3158d36e646d1b28d06c642dff61db51"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::HelpWriterContext::writeTextBlock </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Writes a formatted text block into the output. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">text</td><td>Text to format. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1FileIOError.xhtml" title="Exception class for file I/O errors. ">FileIOError</a></td><td>on any I/O error.</td></tr>
  </table>
  </dd>
</dl>
<p>Convenience function that calls <a class="el" href="classgmx_1_1HelpWriterContext.xhtml#a31e58d83c4e6acafe7e2c4ad90d4b1f6" title="Substitutes markup used in help text and wraps lines. ">substituteMarkupAndWrapToString()</a> and writes the result directly to the output file. </p>

</div>
</div>
<a class="anchor" id="af55bef08376285732572aa04983d0b48"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::HelpWriterContext::writeTitle </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>title</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Writes a title for the current help topic. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">title</td><td>Title to write. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1FileIOError.xhtml" title="Exception class for file I/O errors. ">FileIOError</a></td><td>on any I/O error. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/onlinehelp/<a class="el" href="helpwritercontext_8h.xhtml">helpwritercontext.h</a></li>
<li>src/gromacs/onlinehelp/helpwritercontext.cpp</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Mar 13 2017 19:19:40 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

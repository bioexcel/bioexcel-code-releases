.. _gmx trjconv:

gmx trjconv
===========

Synopsis
--------

.. parsed-literal::

    gmx trjconv [:strong:`-f` :emphasis:`[<.xtc/.trr/...>]`] [:strong:`-s` :emphasis:`[<.tpr/.gro/...>]`] [:strong:`-n` :emphasis:`[<.ndx>]`]
                [:strong:`-fr` :emphasis:`[<.ndx>]`] [:strong:`-sub` :emphasis:`[<.ndx>]`] [:strong:`-drop` :emphasis:`[<.xvg>]`]
                [:strong:`-o` :emphasis:`[<.xtc/.trr/...>]`] [:strong:`-b` :emphasis:`<time>`] [:strong:`-e` :emphasis:`<time>`]
                [:strong:`-tu` :emphasis:`<enum>`] [:strong:`-[no]w`] [:strong:`-xvg` :emphasis:`<enum>`] [:strong:`-skip` :emphasis:`<int>`]
                [:strong:`-dt` :emphasis:`<time>`] [:strong:`-[no]round`] [:strong:`-dump` :emphasis:`<time>`] [:strong:`-t0` :emphasis:`<time>`]
                [:strong:`-timestep` :emphasis:`<time>`] [:strong:`-pbc` :emphasis:`<enum>`] [:strong:`-ur` :emphasis:`<enum>`]
                [:strong:`-[no]center`] [:strong:`-boxcenter` :emphasis:`<enum>`] [:strong:`-box` :emphasis:`<vector>`]
                [:strong:`-trans` :emphasis:`<vector>`] [:strong:`-shift` :emphasis:`<vector>`] [:strong:`-fit` :emphasis:`<enum>`]
                [:strong:`-ndec` :emphasis:`<int>`] [:strong:`-[no]vel`] [:strong:`-[no]force`] [:strong:`-trunc` :emphasis:`<time>`]
                [:strong:`-exec` :emphasis:`<string>`] [:strong:`-split` :emphasis:`<time>`] [:strong:`-[no]sep`]
                [:strong:`-nzero` :emphasis:`<int>`] [:strong:`-dropunder` :emphasis:`<real>`] [:strong:`-dropover` :emphasis:`<real>`]
                [:strong:`-[no]conect`]

Description
-----------

``gmx trjconv`` can convert trajectory files in many ways:

* from one format to another
* select a subset of atoms
* change the periodicity representation
* keep multimeric molecules together
* center atoms in the box
* fit atoms to reference structure
* reduce the number of frames
* change the timestamps of the frames (``-t0`` and ``-timestep``)
* cut the trajectory in small subtrajectories according
  to information in an index file. This allows subsequent analysis of
  the subtrajectories that could, for example, be the result of a
  cluster analysis. Use option ``-sub``.
  This assumes that the entries in the index file are frame numbers and
  dumps each group in the index file to a separate trajectory file.
* select frames within a certain range of a quantity given
  in an :ref:`.xvg <xvg>` file.

:doc:`gmx trjcat <gmx-trjcat>` is better suited for concatenating multiple trajectory files.

The following formats are supported for input and output:
:ref:`.xtc <xtc>`, :ref:`.trr <trr>`, :ref:`.gro <gro>`, ``.g96``
and :ref:`.pdb <pdb>`.
The file formats are detected from the file extension.
The precision of :ref:`.xtc <xtc>` and :ref:`.gro <gro>` output is taken from the
input file for :ref:`.xtc <xtc>`, :ref:`.gro <gro>` and :ref:`.pdb <pdb>`,
and from the ``-ndec`` option for other input formats. The precision
is always taken from ``-ndec``, when this option is set.
All other formats have fixed precision. :ref:`.trr <trr>`
output can be single or double precision, depending on the precision
of the ``gmx trjconv`` binary.
Note that velocities are only supported in
:ref:`.trr <trr>`, :ref:`.gro <gro>` and ``.g96`` files.

Option ``-sep`` can be used to write every frame to a separate
``.gro, .g96`` or :ref:`.pdb <pdb>` file. By default, all frames all written to one file.
:ref:`.pdb <pdb>` files with all frames concatenated can be viewed with
``rasmol -nmrpdb``.

It is possible to select part of your trajectory and write it out
to a new trajectory file in order to save disk space, e.g. for leaving
out the water from a trajectory of a protein in water.
**ALWAYS** put the original trajectory on tape!
We recommend to use the portable :ref:`.xtc <xtc>` format for your analysis
to save disk space and to have portable files.

There are two options for fitting the trajectory to a reference
either for essential dynamics analysis, etc.
The first option is just plain fitting to a reference structure
in the structure file. The second option is a progressive fit
in which the first timeframe is fitted to the reference structure
in the structure file to obtain and each subsequent timeframe is
fitted to the previously fitted structure. This way a continuous
trajectory is generated, which might not be the case when using the
regular fit method, e.g. when your protein undergoes large
conformational transitions.

Option ``-pbc`` sets the type of periodic boundary condition
treatment:

 * ``mol`` puts the center of mass of molecules in the box,
   and requires a run input file to be supplied with ``-s``.
 * ``res`` puts the center of mass of residues in the box.
 * ``atom`` puts all the atoms in the box.
 * ``nojump`` checks if atoms jump across the box and then puts
   them back. This has the effect that all molecules
   will remain whole (provided they were whole in the initial
   conformation). **Note** that this ensures a continuous trajectory but
   molecules may diffuse out of the box. The starting configuration
   for this procedure is taken from the structure file, if one is
   supplied, otherwise it is the first frame.
 * ``cluster`` clusters all the atoms in the selected index
   such that they are all closest to the center of mass of the cluster,
   which is iteratively updated. **Note** that this will only give meaningful
   results if you in fact have a cluster. Luckily that can be checked
   afterwards using a trajectory viewer. Note also that if your molecules
   are broken this will not work either.
 * ``whole`` only makes broken molecules whole.

Option ``-ur`` sets the unit cell representation for options
``mol``, ``res`` and ``atom`` of ``-pbc``.
All three options give different results for triclinic boxes and
identical results for rectangular boxes.
``rect`` is the ordinary brick shape.
``tric`` is the triclinic unit cell.
``compact`` puts all atoms at the closest distance from the center
of the box. This can be useful for visualizing e.g. truncated octahedra
or rhombic dodecahedra. The center for options ``tric`` and ``compact``
is ``tric`` (see below), unless the option ``-boxcenter``
is set differently.

Option ``-center`` centers the system in the box. The user can
select the group which is used to determine the geometrical center.
Option ``-boxcenter`` sets the location of the center of the box
for options ``-pbc`` and ``-center``. The center options are:
``tric``: half of the sum of the box vectors,
``rect``: half of the box diagonal,
``zero``: zero.
Use option ``-pbc mol`` in addition to ``-center`` when you
want all molecules in the box after the centering.

Option ``-box`` sets the size of the new box. This option only works
for leading dimensions and is thus generally only useful for rectangular boxes.
If you want to modify only some of the dimensions, e.g. when reading from
a trajectory, you can use -1 for those dimensions that should stay the same
It is not always possible to use combinations of ``-pbc``,
``-fit``, ``-ur`` and ``-center`` to do exactly what
you want in one call to ``gmx trjconv``. Consider using multiple
calls, and check out the GROMACS website for suggestions.

With ``-dt``, it is possible to reduce the number of
frames in the output. This option relies on the accuracy of the times
in your input trajectory, so if these are inaccurate use the
``-timestep`` option to modify the time (this can be done
simultaneously). For making smooth movies, the program :doc:`gmx filter <gmx-filter>`
can reduce the number of frames while using low-pass frequency
filtering, this reduces aliasing of high frequency motions.

Using ``-trunc`` ``gmx trjconv`` can truncate :ref:`.trr <trr>` in place, i.e.
without copying the file. This is useful when a run has crashed
during disk I/O (i.e. full disk), or when two contiguous
trajectories must be concatenated without having double frames.

Option ``-dump`` can be used to extract a frame at or near
one specific time from your trajectory, but only works reliably
if the time interval between frames is uniform.

Option ``-drop`` reads an :ref:`.xvg <xvg>` file with times and values.
When options ``-dropunder`` and/or ``-dropover`` are set,
frames with a value below and above the value of the respective options
will not be written.

Options
-------

Options to specify input files:

``-f`` [<.xtc/.trr/...>] (traj.xtc)
    Trajectory: :ref:`xtc` :ref:`trr` :ref:`cpt` :ref:`gro` :ref:`g96` :ref:`pdb` :ref:`tng`
``-s`` [<.tpr/.gro/...>] (topol.tpr) (Optional)
    Structure+mass(db): :ref:`tpr` :ref:`gro` :ref:`g96` :ref:`pdb` brk ent
``-n`` [<.ndx>] (index.ndx) (Optional)
    Index file
``-fr`` [<.ndx>] (frames.ndx) (Optional)
    Index file
``-sub`` [<.ndx>] (cluster.ndx) (Optional)
    Index file
``-drop`` [<.xvg>] (drop.xvg) (Optional)
    xvgr/xmgr file

Options to specify output files:

``-o`` [<.xtc/.trr/...>] (trajout.xtc)
    Trajectory: :ref:`xtc` :ref:`trr` :ref:`gro` :ref:`g96` :ref:`pdb` :ref:`tng`

Other options:

``-b`` <time> (0)
    First frame (ps) to read from trajectory
``-e`` <time> (0)
    Last frame (ps) to read from trajectory
``-tu`` <enum> (ps)
    Unit for time values: fs, ps, ns, us, ms, s
``-[no]w``  (no)
    View output :ref:`.xvg <xvg>`, :ref:`.xpm <xpm>`, :ref:`.eps <eps>` and :ref:`.pdb <pdb>` files
``-xvg`` <enum> (xmgrace)
    xvg plot formatting: xmgrace, xmgr, none
``-skip`` <int> (1)
    Only write every nr-th frame
``-dt`` <time> (0)
    Only write frame when t MOD dt = first time (ps)
``-[no]round``  (no)
    Round measurements to nearest picosecond
``-dump`` <time> (-1)
    Dump frame nearest specified time (ps)
``-t0`` <time> (0)
    Starting time (ps) (default: don't change)
``-timestep`` <time> (0)
    Change time step between input frames (ps)
``-pbc`` <enum> (none)
    PBC treatment (see help text for full description): none, mol, res, atom, nojump, cluster, whole
``-ur`` <enum> (rect)
    Unit-cell representation: rect, tric, compact
``-[no]center``  (no)
    Center atoms in box
``-boxcenter`` <enum> (tric)
    Center for -pbc and -center: tric, rect, zero
``-box`` <vector> (0 0 0)
    Size for new cubic box (default: read from input)
``-trans`` <vector> (0 0 0)
    All coordinates will be translated by trans. This can advantageously be combined with -pbc mol -ur compact.
``-shift`` <vector> (0 0 0)
    All coordinates will be shifted by framenr*shift
``-fit`` <enum> (none)
    Fit molecule to ref structure in the structure file: none, rot+trans, rotxy+transxy, translation, transxy, progressive
``-ndec`` <int> (3)
    Precision for .xtc and .gro writing in number of decimal places
``-[no]vel``  (yes)
    Read and write velocities if possible
``-[no]force``  (no)
    Read and write forces if possible
``-trunc`` <time> (-1)
    Truncate input trajectory file after this time (ps)
``-exec`` <string>
    Execute command for every output frame with the frame number as argument
``-split`` <time> (0)
    Start writing new file when t MOD split = first time (ps)
``-[no]sep``  (no)
    Write each frame to a separate .gro, .g96 or .pdb file
``-nzero`` <int> (0)
    If the -sep flag is set, use these many digits for the file numbers and prepend zeros as needed
``-dropunder`` <real> (0)
    Drop all frames below this value
``-dropover`` <real> (0)
    Drop all frames above this value
``-[no]conect``  (no)
    Add conect records when writing :ref:`.pdb <pdb>` files. Useful for visualization of non-standard molecules, e.g. coarse grained ones

.. only:: man

   See also
   --------

   :manpage:`gmx(1)`

   More information about |Gromacs| is available at <http://www.gromacs.org/>.

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::OptionInfo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1OptionInfo.xhtml">OptionInfo</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1OptionInfo-members.xhtml">List of all members</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::OptionInfo Class Reference<div class="ingroups"><a class="el" href="group__group__publicapi.xhtml">Public API</a> &#124; <a class="el" href="group__module__options.xhtml">Extensible Handling of Options (options)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/options/abstractoption.h&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for gmx::OptionInfo:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1OptionInfo__inherit__graph.svg" width="344" height="443"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Gives information and allows modifications to an option after creation. </p>
<p>When an option is added with <a class="el" href="classgmx_1_1IOptionsContainer.xhtml#a24e2aea4956eadf7dc78dc4a75fb5a63" title="Adds a recognized option. ">Options::addOption()</a>, an object of a subclass of <a class="el" href="classgmx_1_1OptionInfo.xhtml" title="Gives information and allows modifications to an option after creation. ">OptionInfo</a> is returned. This object can be later used to access information about the option. Non-const methods also allow later changing (some of) the option settings provided at initialization time. The properties accessible/modifiable through this interface are implemented based on need, and may not be implemented for all cases.</p>
<p>This class isolates the details of the internal option implementation from callers. Although this class is a simple reference to the underlying implementation, it is implemented as non-copyable to allow const/non-const status of a reference to this class to indicate whether modifications are allowed. Otherwise, separate classes would be needed for access and modification, complicating the implementation. In the implementation, there is always a single <a class="el" href="classgmx_1_1OptionInfo.xhtml" title="Gives information and allows modifications to an option after creation. ">OptionInfo</a> instance referring to one option. The underlying implementation object always owns this instance, and only references are passed to callers.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1IOptionsContainer.xhtml#a24e2aea4956eadf7dc78dc4a75fb5a63" title="Adds a recognized option. ">Options::addOption()</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3eab4a7d7d90f4c016c027746af0b3fd"><td class="memTemplParams" colspan="2">template&lt;class InfoType &gt; </td></tr>
<tr class="memitem:a3eab4a7d7d90f4c016c027746af0b3fd"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionInfo.xhtml#a3eab4a7d7d90f4c016c027746af0b3fd">isType</a> () const </td></tr>
<tr class="memdesc:a3eab4a7d7d90f4c016c027746af0b3fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Test whether the option is of a particular type.  <a href="#a3eab4a7d7d90f4c016c027746af0b3fd">More...</a><br/></td></tr>
<tr class="separator:a3eab4a7d7d90f4c016c027746af0b3fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae65c741bfa049dc1d91ea9097da9002d"><td class="memTemplParams" colspan="2">template&lt;class InfoType &gt; </td></tr>
<tr class="memitem:ae65c741bfa049dc1d91ea9097da9002d"><td class="memTemplItemLeft" align="right" valign="top">InfoType *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionInfo.xhtml#ae65c741bfa049dc1d91ea9097da9002d">toType</a> ()</td></tr>
<tr class="memdesc:ae65c741bfa049dc1d91ea9097da9002d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert the info object to a particular type if the type is correct.  <a href="#ae65c741bfa049dc1d91ea9097da9002d">More...</a><br/></td></tr>
<tr class="separator:ae65c741bfa049dc1d91ea9097da9002d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60ca3f0f690c81edb179d92c0b94bb78"><td class="memTemplParams" colspan="2">template&lt;class InfoType &gt; </td></tr>
<tr class="memitem:a60ca3f0f690c81edb179d92c0b94bb78"><td class="memTemplItemLeft" align="right" valign="top">const InfoType *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionInfo.xhtml#a60ca3f0f690c81edb179d92c0b94bb78">toType</a> () const </td></tr>
<tr class="memdesc:a60ca3f0f690c81edb179d92c0b94bb78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert the info object to a particular type if the type is correct.  <a href="#a60ca3f0f690c81edb179d92c0b94bb78">More...</a><br/></td></tr>
<tr class="separator:a60ca3f0f690c81edb179d92c0b94bb78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2702ec6fe5d292b93adbe6084719e903"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2702ec6fe5d292b93adbe6084719e903"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionInfo.xhtml#a2702ec6fe5d292b93adbe6084719e903">isSet</a> () const </td></tr>
<tr class="memdesc:a2702ec6fe5d292b93adbe6084719e903"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the option has been set. <br/></td></tr>
<tr class="separator:a2702ec6fe5d292b93adbe6084719e903"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90a207172ec449f8e95057ab1e7dec6a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a90a207172ec449f8e95057ab1e7dec6a"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionInfo.xhtml#a90a207172ec449f8e95057ab1e7dec6a">isHidden</a> () const </td></tr>
<tr class="memdesc:a90a207172ec449f8e95057ab1e7dec6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the option is a hidden option. <br/></td></tr>
<tr class="separator:a90a207172ec449f8e95057ab1e7dec6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fb71af2485927db893fefa8f96d8185"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1fb71af2485927db893fefa8f96d8185"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionInfo.xhtml#a1fb71af2485927db893fefa8f96d8185">isRequired</a> () const </td></tr>
<tr class="memdesc:a1fb71af2485927db893fefa8f96d8185"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the option is required. <br/></td></tr>
<tr class="separator:a1fb71af2485927db893fefa8f96d8185"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a488894a59cec82eb6e39fd8d059dc38d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a488894a59cec82eb6e39fd8d059dc38d"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionInfo.xhtml#a488894a59cec82eb6e39fd8d059dc38d">minValueCount</a> () const </td></tr>
<tr class="memdesc:a488894a59cec82eb6e39fd8d059dc38d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the minimum number of values that this option accepts. <br/></td></tr>
<tr class="separator:a488894a59cec82eb6e39fd8d059dc38d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30856265cdfef84d57c17da223dd20cf"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a30856265cdfef84d57c17da223dd20cf"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionInfo.xhtml#a30856265cdfef84d57c17da223dd20cf">maxValueCount</a> () const </td></tr>
<tr class="memdesc:a30856265cdfef84d57c17da223dd20cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the maximum number of values that this option accepts. <br/></td></tr>
<tr class="separator:a30856265cdfef84d57c17da223dd20cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abee17998cbfa43bf917da70c70dbc149"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abee17998cbfa43bf917da70c70dbc149"></a>
const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionInfo.xhtml#abee17998cbfa43bf917da70c70dbc149">name</a> () const </td></tr>
<tr class="memdesc:abee17998cbfa43bf917da70c70dbc149"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the option. <br/></td></tr>
<tr class="separator:abee17998cbfa43bf917da70c70dbc149"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac75b01af39d751318ed2d970d87245dd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac75b01af39d751318ed2d970d87245dd"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionInfo.xhtml#ac75b01af39d751318ed2d970d87245dd">type</a> () const </td></tr>
<tr class="memdesc:ac75b01af39d751318ed2d970d87245dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of the option as a string. <br/></td></tr>
<tr class="separator:ac75b01af39d751318ed2d970d87245dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5d855835a1b09bf3c85eb5df7c040db"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af5d855835a1b09bf3c85eb5df7c040db"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionInfo.xhtml#af5d855835a1b09bf3c85eb5df7c040db">formatDescription</a> () const </td></tr>
<tr class="memdesc:af5d855835a1b09bf3c85eb5df7c040db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the description of the option. <br/></td></tr>
<tr class="separator:af5d855835a1b09bf3c85eb5df7c040db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a683e767728957aed2f583f4362f21340"><td class="memItemLeft" align="right" valign="top">std::vector&lt; Variant &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionInfo.xhtml#a683e767728957aed2f583f4362f21340">defaultValues</a> () const </td></tr>
<tr class="memdesc:a683e767728957aed2f583f4362f21340"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the default value(s) of the option.  <a href="#a683e767728957aed2f583f4362f21340">More...</a><br/></td></tr>
<tr class="separator:a683e767728957aed2f583f4362f21340"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3df2941239ed13f951d2ca6b4f530e05"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionInfo.xhtml#a3df2941239ed13f951d2ca6b4f530e05">defaultValuesAsStrings</a> () const </td></tr>
<tr class="memdesc:a3df2941239ed13f951d2ca6b4f530e05"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the default value(s) of the option as strings.  <a href="#a3df2941239ed13f951d2ca6b4f530e05">More...</a><br/></td></tr>
<tr class="separator:a3df2941239ed13f951d2ca6b4f530e05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56ae9265091e8ca2fd9f9664b2a7dff8"><td class="memItemLeft" align="right" valign="top">std::vector&lt; Variant &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionInfo.xhtml#a56ae9265091e8ca2fd9f9664b2a7dff8">normalizeValues</a> (const std::vector&lt; Variant &gt; &amp;values) const </td></tr>
<tr class="memdesc:a56ae9265091e8ca2fd9f9664b2a7dff8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts given values to native representation for this option.  <a href="#a56ae9265091e8ca2fd9f9664b2a7dff8">More...</a><br/></td></tr>
<tr class="separator:a56ae9265091e8ca2fd9f9664b2a7dff8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a683e767728957aed2f583f4362f21340"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; Variant &gt; gmx::OptionInfo::defaultValues </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the default value(s) of the option. </p>
<p>The returned values should all be of the same type, but returning each as a separate variant is currently simpler.</p>
<p>Currently, this can only be called before option values have been assigned. </p>

</div>
</div>
<a class="anchor" id="a3df2941239ed13f951d2ca6b4f530e05"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; std::string &gt; gmx::OptionInfo::defaultValuesAsStrings </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the default value(s) of the option as strings. </p>
<p>If there is no default value, but defaultValueIfSet() is set, that is returned instead.</p>
<p>Currently, this can only be called before option values have been assigned. </p>

</div>
</div>
<a class="anchor" id="a3eab4a7d7d90f4c016c027746af0b3fd"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class InfoType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::OptionInfo::isType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Test whether the option is of a particular type. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">InfoType</td><td>Option type to test for. Should be a class derived from <a class="el" href="classgmx_1_1OptionInfo.xhtml" title="Gives information and allows modifications to an option after creation. ">OptionInfo</a>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a56ae9265091e8ca2fd9f9664b2a7dff8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; Variant &gt; gmx::OptionInfo::normalizeValues </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; Variant &gt; &amp;&#160;</td>
          <td class="paramname"><em>values</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Converts given values to native representation for this option. </p>
<p>For example, strings are parsed to the type that is actually used to store the options.</p>
<p>The return value only depends on the option type, not on the current value of the option, and the current value in the option is not changed. </p>

</div>
</div>
<a class="anchor" id="ae65c741bfa049dc1d91ea9097da9002d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class InfoType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">InfoType* gmx::OptionInfo::toType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert the info object to a particular type if the type is correct. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">InfoType</td><td>Option type to convert to. Should be a class derived from <a class="el" href="classgmx_1_1OptionInfo.xhtml" title="Gives information and allows modifications to an option after creation. ">OptionInfo</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">this</td><td>converted to a pointer to <code>InfoType</code>, or NULL if the conversion is not possible. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a60ca3f0f690c81edb179d92c0b94bb78"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class InfoType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const InfoType* gmx::OptionInfo::toType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert the info object to a particular type if the type is correct. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">InfoType</td><td>Option type to convert to. Should be a class derived from <a class="el" href="classgmx_1_1OptionInfo.xhtml" title="Gives information and allows modifications to an option after creation. ">OptionInfo</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">this</td><td>converted to a pointer to <code>InfoType</code>, or NULL if the conversion is not possible. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/options/<a class="el" href="abstractoption_8h.xhtml">abstractoption.h</a></li>
<li>src/gromacs/options/abstractoption.cpp</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:54:36 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::AnalysisData Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1AnalysisData.xhtml">AnalysisData</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1AnalysisData-members.xhtml">List of all members</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::AnalysisData Class Reference<div class="ingroups"><a class="el" href="group__group__publicapi.xhtml">Public API</a> &#124; <a class="el" href="group__module__analysisdata.xhtml">Parallelizable Handling of Output Data (analysisdata)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/analysisdata/analysisdata.h&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for gmx::AnalysisData:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1AnalysisData__inherit__graph.svg" width="194" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for gmx::AnalysisData:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1AnalysisData__coll__graph.svg" width="194" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Parallelizable data container for raw data. </p>
<p>This is the main class used to implement parallelizable data processing in analysis tools. It is used by first creating an object and setting its properties using <a class="el" href="classgmx_1_1AnalysisData.xhtml#a52581701312f80286fce213167df9bf5" title="Sets the number of data sets. ">setDataSetCount()</a>, <a class="el" href="classgmx_1_1AnalysisData.xhtml#a2ed328beb6480f608cc3cb902a52b61f" title="Sets the number of columns in a data set. ">setColumnCount()</a> and <a class="el" href="classgmx_1_1AnalysisData.xhtml#a01cb4745e7a693567d83afcf81b882f6" title="Sets whether the data contains multiple points per column per frame. ">setMultipoint()</a>, and attaching necessary modules using <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ada778191d76b2826b57e7b30ecd7a296" title="Adds a module to process the data. ">addModule()</a> etc. Then one or more <a class="el" href="classgmx_1_1AnalysisDataHandle.xhtml" title="Handle for inserting data into AnalysisData. ">AnalysisDataHandle</a> objects can be created using <a class="el" href="classgmx_1_1AnalysisData.xhtml#a1db0cb22f56abd7d612dc59992ce3486" title="Creates a handle for adding data. ">startData()</a>. Each data handle can then be independently used to provide data frames (each frame must be provided by a single handle, but different frames can be freely mixed between the handles). The <a class="el" href="classgmx_1_1AnalysisData.xhtml#a54e98fd211473c7cfe750e2b49517d96" title="Performs in-order sequential processing for the next frame. ">finishFrameSerial()</a> method must be called in serial for each frame, after one of the handles has been used to provide the data for that frame. When all data has been provided, the handles are destroyed using <a class="el" href="classgmx_1_1AnalysisData.xhtml#a0187a7640e5af29dd67a7f7064b16bf4" title="Destroys a handle after all data has been added. ">finishData()</a> (or <a class="el" href="classgmx_1_1AnalysisDataHandle.xhtml#a58f3f261400bea1983004e6589ee1fb0" title="Calls AnalysisData::finishData() for this handle. ">AnalysisDataHandle::finishData()</a>).</p>
<p>When used through the trajectory analysis framework, calls to <a class="el" href="classgmx_1_1AnalysisData.xhtml#a1db0cb22f56abd7d612dc59992ce3486" title="Creates a handle for adding data. ">startData()</a>, <a class="el" href="classgmx_1_1AnalysisData.xhtml#a54e98fd211473c7cfe750e2b49517d96" title="Performs in-order sequential processing for the next frame. ">finishFrameSerial()</a>, and <a class="el" href="classgmx_1_1AnalysisData.xhtml#a0187a7640e5af29dd67a7f7064b16bf4" title="Destroys a handle after all data has been added. ">finishData()</a> are handled by the framework.</p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000005">Todo:</a></b></dt><dd>Parallel implementation is not complete.</dd></dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="template_8cpp-example.xhtml#_a8">template.cpp</a>.</dd>
</dl></div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:afde1676e7c3d3fc4dedbd441063b281f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisData.xhtml#afde1676e7c3d3fc4dedbd441063b281f">AnalysisData</a> ()</td></tr>
<tr class="memdesc:afde1676e7c3d3fc4dedbd441063b281f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty analysis data object.  <a href="#afde1676e7c3d3fc4dedbd441063b281f">More...</a><br/></td></tr>
<tr class="separator:afde1676e7c3d3fc4dedbd441063b281f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52581701312f80286fce213167df9bf5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisData.xhtml#a52581701312f80286fce213167df9bf5">setDataSetCount</a> (int <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#aa5e15c4c54a953a2d13855286ca1391e">dataSetCount</a>)</td></tr>
<tr class="memdesc:a52581701312f80286fce213167df9bf5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the number of data sets.  <a href="#a52581701312f80286fce213167df9bf5">More...</a><br/></td></tr>
<tr class="separator:a52581701312f80286fce213167df9bf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ed328beb6480f608cc3cb902a52b61f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisData.xhtml#a2ed328beb6480f608cc3cb902a52b61f">setColumnCount</a> (int dataSet, int <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ad0c3d329b51830be42ad0b447ac56d31">columnCount</a>)</td></tr>
<tr class="memdesc:a2ed328beb6480f608cc3cb902a52b61f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the number of columns in a data set.  <a href="#a2ed328beb6480f608cc3cb902a52b61f">More...</a><br/></td></tr>
<tr class="separator:a2ed328beb6480f608cc3cb902a52b61f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01cb4745e7a693567d83afcf81b882f6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisData.xhtml#a01cb4745e7a693567d83afcf81b882f6">setMultipoint</a> (bool bMultipoint)</td></tr>
<tr class="memdesc:a01cb4745e7a693567d83afcf81b882f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets whether the data contains multiple points per column per frame.  <a href="#a01cb4745e7a693567d83afcf81b882f6">More...</a><br/></td></tr>
<tr class="separator:a01cb4745e7a693567d83afcf81b882f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa01a654b47dfccafb81daaa1895fcd79"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisData.xhtml#aa01a654b47dfccafb81daaa1895fcd79">frameCount</a> () const </td></tr>
<tr class="memdesc:aa01a654b47dfccafb81daaa1895fcd79"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the total number of frames in the data.  <a href="#aa01a654b47dfccafb81daaa1895fcd79">More...</a><br/></td></tr>
<tr class="separator:aa01a654b47dfccafb81daaa1895fcd79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1db0cb22f56abd7d612dc59992ce3486"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1AnalysisDataHandle.xhtml">AnalysisDataHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisData.xhtml#a1db0cb22f56abd7d612dc59992ce3486">startData</a> (const AnalysisDataParallelOptions &amp;opt)</td></tr>
<tr class="memdesc:a1db0cb22f56abd7d612dc59992ce3486"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a handle for adding data.  <a href="#a1db0cb22f56abd7d612dc59992ce3486">More...</a><br/></td></tr>
<tr class="separator:a1db0cb22f56abd7d612dc59992ce3486"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54e98fd211473c7cfe750e2b49517d96"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisData.xhtml#a54e98fd211473c7cfe750e2b49517d96">finishFrameSerial</a> (int frameIndex)</td></tr>
<tr class="memdesc:a54e98fd211473c7cfe750e2b49517d96"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs in-order sequential processing for the next frame.  <a href="#a54e98fd211473c7cfe750e2b49517d96">More...</a><br/></td></tr>
<tr class="separator:a54e98fd211473c7cfe750e2b49517d96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0187a7640e5af29dd67a7f7064b16bf4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisData.xhtml#a0187a7640e5af29dd67a7f7064b16bf4">finishData</a> (<a class="el" href="classgmx_1_1AnalysisDataHandle.xhtml">AnalysisDataHandle</a> handle)</td></tr>
<tr class="memdesc:a0187a7640e5af29dd67a7f7064b16bf4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys a handle after all data has been added.  <a href="#a0187a7640e5af29dd67a7f7064b16bf4">More...</a><br/></td></tr>
<tr class="separator:a0187a7640e5af29dd67a7f7064b16bf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c84cd94769c773907605c53ba417a47"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a3c84cd94769c773907605c53ba417a47">isMultipoint</a> () const </td></tr>
<tr class="memdesc:a3c84cd94769c773907605c53ba417a47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the data can have multiple points in the same column in the same frame.  <a href="#a3c84cd94769c773907605c53ba417a47">More...</a><br/></td></tr>
<tr class="separator:a3c84cd94769c773907605c53ba417a47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5e15c4c54a953a2d13855286ca1391e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#aa5e15c4c54a953a2d13855286ca1391e">dataSetCount</a> () const </td></tr>
<tr class="memdesc:aa5e15c4c54a953a2d13855286ca1391e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of data sets in the data object.  <a href="#aa5e15c4c54a953a2d13855286ca1391e">More...</a><br/></td></tr>
<tr class="separator:aa5e15c4c54a953a2d13855286ca1391e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0c3d329b51830be42ad0b447ac56d31"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ad0c3d329b51830be42ad0b447ac56d31">columnCount</a> (int dataSet) const </td></tr>
<tr class="memdesc:ad0c3d329b51830be42ad0b447ac56d31"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of columns in a data set.  <a href="#ad0c3d329b51830be42ad0b447ac56d31">More...</a><br/></td></tr>
<tr class="separator:ad0c3d329b51830be42ad0b447ac56d31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5c4dbc7b71874e137e8af955fa09624"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac5c4dbc7b71874e137e8af955fa09624">columnCount</a> () const </td></tr>
<tr class="memdesc:ac5c4dbc7b71874e137e8af955fa09624"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of columns in the data.  <a href="#ac5c4dbc7b71874e137e8af955fa09624">More...</a><br/></td></tr>
<tr class="separator:ac5c4dbc7b71874e137e8af955fa09624"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7f670bd3e772d5055f485e9f0e51658"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1AnalysisDataFrameRef.xhtml">AnalysisDataFrameRef</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac7f670bd3e772d5055f485e9f0e51658">tryGetDataFrame</a> (int index) const </td></tr>
<tr class="memdesc:ac7f670bd3e772d5055f485e9f0e51658"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access stored data.  <a href="#ac7f670bd3e772d5055f485e9f0e51658">More...</a><br/></td></tr>
<tr class="separator:ac7f670bd3e772d5055f485e9f0e51658"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac97ab78a57e02aad95c9e679ef8b2798"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1AnalysisDataFrameRef.xhtml">AnalysisDataFrameRef</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac97ab78a57e02aad95c9e679ef8b2798">getDataFrame</a> (int index) const </td></tr>
<tr class="memdesc:ac97ab78a57e02aad95c9e679ef8b2798"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access stored data.  <a href="#ac97ab78a57e02aad95c9e679ef8b2798">More...</a><br/></td></tr>
<tr class="separator:ac97ab78a57e02aad95c9e679ef8b2798"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99ba2f4072c75c8e56d1e377cb6b5f8c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a99ba2f4072c75c8e56d1e377cb6b5f8c">requestStorage</a> (int nframes)</td></tr>
<tr class="memdesc:a99ba2f4072c75c8e56d1e377cb6b5f8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Request storage of frames.  <a href="#a99ba2f4072c75c8e56d1e377cb6b5f8c">More...</a><br/></td></tr>
<tr class="separator:a99ba2f4072c75c8e56d1e377cb6b5f8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada778191d76b2826b57e7b30ecd7a296"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ada778191d76b2826b57e7b30ecd7a296">addModule</a> (<a class="el" href="namespacegmx.xhtml#aea400e67c2f38e5bacdf8677f38a61cc">AnalysisDataModulePointer</a> module)</td></tr>
<tr class="memdesc:ada778191d76b2826b57e7b30ecd7a296"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a module to process the data.  <a href="#ada778191d76b2826b57e7b30ecd7a296">More...</a><br/></td></tr>
<tr class="separator:ada778191d76b2826b57e7b30ecd7a296"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e6f762df563d577f8a1d34a35273952"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a8e6f762df563d577f8a1d34a35273952">addColumnModule</a> (int col, int span, <a class="el" href="namespacegmx.xhtml#aea400e67c2f38e5bacdf8677f38a61cc">AnalysisDataModulePointer</a> module)</td></tr>
<tr class="memdesc:a8e6f762df563d577f8a1d34a35273952"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a module that processes only a subset of the columns.  <a href="#a8e6f762df563d577f8a1d34a35273952">More...</a><br/></td></tr>
<tr class="separator:a8e6f762df563d577f8a1d34a35273952"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae095550bd347b42db3c49e064bc44228"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ae095550bd347b42db3c49e064bc44228">applyModule</a> (<a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml">IAnalysisDataModule</a> *module)</td></tr>
<tr class="memdesc:ae095550bd347b42db3c49e064bc44228"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies a module to process data that is ready.  <a href="#ae095550bd347b42db3c49e064bc44228">More...</a><br/></td></tr>
<tr class="separator:ae095550bd347b42db3c49e064bc44228"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="afde1676e7c3d3fc4dedbd441063b281f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">gmx::AnalysisData::AnalysisData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates an empty analysis data object. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a8e6f762df563d577f8a1d34a35273952"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractAnalysisData::addColumnModule </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>col</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>span</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacegmx.xhtml#aea400e67c2f38e5bacdf8677f38a61cc">AnalysisDataModulePointer</a>&#160;</td>
          <td class="paramname"><em>module</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a module that processes only a subset of the columns. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">col</td><td>First column. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">span</td><td>Number of columns. </td></tr>
    <tr><td class="paramdir"></td><td class="paramname">module</td><td>Module to add.</td></tr>
  </table>
  </dd>
</dl>
<p>Throws in the same situations as <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ada778191d76b2826b57e7b30ecd7a296" title="Adds a module to process the data. ">addModule()</a>.</p>
<p>Currently, all data sets are filtered using the same column mask.</p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000002">Todo:</a></b></dt><dd>This method doesn't currently work in all cases with multipoint data or with multiple data sets. In particular, if the added module requests storage and uses <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac97ab78a57e02aad95c9e679ef8b2798" title="Access stored data. ">getDataFrame()</a>, it will behave unpredictably (most likely asserts).</dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000003">Todo:</a></b></dt><dd>Generalize this method to multiple data sets (e.g., for adding modules that only process a single data set).</dd></dl>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ada778191d76b2826b57e7b30ecd7a296" title="Adds a module to process the data. ">addModule()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ada778191d76b2826b57e7b30ecd7a296"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractAnalysisData::addModule </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacegmx.xhtml#aea400e67c2f38e5bacdf8677f38a61cc">AnalysisDataModulePointer</a>&#160;</td>
          <td class="paramname"><em>module</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a module to process the data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">module</td><td>Module to add. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a></td><td>if<ul>
<li><code>module</code> is not compatible with the data object</li>
<li>data has already been added to the data object and everything is not available through <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac97ab78a57e02aad95c9e679ef8b2798" title="Access stored data. ">getDataFrame()</a>. </li>
</ul>
</td></tr>
    <tr><td class="paramname">unspecified</td><td>Any exception thrown by <code>module</code> in its notification methods (if data has been added).</td></tr>
  </table>
  </dd>
</dl>
<p>If data has already been added to the data, the new module immediately processes all existing data. <a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a> is thrown if all data is not available through <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac97ab78a57e02aad95c9e679ef8b2798" title="Access stored data. ">getDataFrame()</a>.</p>
<p>The caller can keep a copy of the module pointer if it requires later access to the module.</p>
<p>If the method throws, the state of the data object is not changed. The state of the data module is indeterminate. </p>

</div>
</div>
<a class="anchor" id="ae095550bd347b42db3c49e064bc44228"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractAnalysisData::applyModule </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml">IAnalysisDataModule</a> *&#160;</td>
          <td class="paramname"><em>module</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Applies a module to process data that is ready. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">module</td><td>Module to apply. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a></td><td>in same situations as <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ada778191d76b2826b57e7b30ecd7a296" title="Adds a module to process the data. ">addModule()</a>. </td></tr>
    <tr><td class="paramname">unspecified</td><td>Any exception thrown by <code>module</code> in its notification methods.</td></tr>
  </table>
  </dd>
</dl>
<p>This function works as <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ada778191d76b2826b57e7b30ecd7a296" title="Adds a module to process the data. ">addModule()</a>, except that it does not keep a reference to <code>module</code> within the data object after it returns. Also, it can only be called after the data is ready, and only if <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac97ab78a57e02aad95c9e679ef8b2798" title="Access stored data. ">getDataFrame()</a> gives access to all of the data. It is provided for additional flexibility in postprocessing in-memory data.</p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000004">Todo:</a></b></dt><dd>Currently, this method may not work correctly if <code>module</code> requests storage (<a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ada778191d76b2826b57e7b30ecd7a296" title="Adds a module to process the data. ">addModule()</a> has the same problem if called after data is started). </dd></dl>

</div>
</div>
<a class="anchor" id="ad0c3d329b51830be42ad0b447ac56d31"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::AbstractAnalysisData::columnCount </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dataSet</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the number of columns in a data set. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dataSet</td><td>Zero-based index of the data set to query. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The number of columns in the data.</dd></dl>
<p>If the number of columns is not yet known, returns 0. The returned value does not change after modules have been notified of data start, but may change multiple times before that, depending on the actual data class.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="ac5c4dbc7b71874e137e8af955fa09624"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::AbstractAnalysisData::columnCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the number of columns in the data. </p>
<dl class="section return"><dt>Returns</dt><dd>The number of columns in the data.</dd></dl>
<p>This is a convenience method for data objects with a single data set. Can only be called if <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#aa5e15c4c54a953a2d13855286ca1391e" title="Returns the number of data sets in the data object. ">dataSetCount()</a> == 1.</p>
<p>Does not throw.</p>
<dl class="section see"><dt>See Also</dt><dd>columnCount(int) </dd></dl>

</div>
</div>
<a class="anchor" id="aa5e15c4c54a953a2d13855286ca1391e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::AbstractAnalysisData::dataSetCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the number of data sets in the data object. </p>
<dl class="section return"><dt>Returns</dt><dd>The number of data sets in the data.</dd></dl>
<p>If the number is not yet known, returns 0. The returned value does not change after modules have been notified of data start, but may change multiple times before that, depending on the actual data class.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a0187a7640e5af29dd67a7f7064b16bf4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AnalysisData::finishData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1AnalysisDataHandle.xhtml">AnalysisDataHandle</a>&#160;</td>
          <td class="paramname"><em>handle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destroys a handle after all data has been added. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">handle</td><td>Handle to destroy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">unspecified</td><td>Any exception thrown by attached data modules in <a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#ab85bf34dcfbd4f5c4be6711c7b07d29c" title="Called (once) when no more data is available. ">IAnalysisDataModule::dataFinished()</a>.</td></tr>
  </table>
  </dd>
</dl>
<p><code>handle</code> must have been obtained from <a class="el" href="classgmx_1_1AnalysisData.xhtml#a1db0cb22f56abd7d612dc59992ce3486" title="Creates a handle for adding data. ">startData()</a> of this object. The order of the calls with respect to the corresponding <a class="el" href="classgmx_1_1AnalysisData.xhtml#a1db0cb22f56abd7d612dc59992ce3486" title="Creates a handle for adding data. ">startData()</a> calls is not important.</p>
<p>The <code>handle</code> (and any copies) are invalid after the call. </p>

</div>
</div>
<a class="anchor" id="a54e98fd211473c7cfe750e2b49517d96"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AnalysisData::finishFrameSerial </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>frameIndex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs in-order sequential processing for the next frame. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">frameIndex</td><td>Index of the frame that has been finished. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">unspecified</td><td>Any exception thrown by attached data modules in <a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#a803d7992f7d0723103c61727f80938bd" title="Called in sequential order for each frame after they are finished. ">IAnalysisDataModule::frameFinishedSerial()</a>.</td></tr>
  </table>
  </dd>
</dl>
<p>This method should be called sequentially for each frame, after data for that frame has been produced. It is not necessary to call this method if there is no parallelism, i.e., if only a single data handle is created and the parallelization options provided at that time do not indicate parallelism. </p>

</div>
</div>
<a class="anchor" id="aa01a654b47dfccafb81daaa1895fcd79"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::AnalysisData::frameCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the total number of frames in the data. </p>
<dl class="section return"><dt>Returns</dt><dd>The total number of frames in the data.</dd></dl>
<p>This function returns the number of frames that the object has produced. If <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a99ba2f4072c75c8e56d1e377cb6b5f8c" title="Request storage of frames. ">requestStorage()</a> has been successfully called, tryGetDataframe() or <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac97ab78a57e02aad95c9e679ef8b2798" title="Access stored data. ">getDataFrame()</a> can be used to access some or all of these frames.</p>
<p>Does not throw. </p>

<p>Implements <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a49ff8cb5c6087a8081f72b436b9824e7">gmx::AbstractAnalysisData</a>.</p>

</div>
</div>
<a class="anchor" id="ac97ab78a57e02aad95c9e679ef8b2798"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1AnalysisDataFrameRef.xhtml">AnalysisDataFrameRef</a> gmx::AbstractAnalysisData::getDataFrame </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Access stored data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Zero-based frame index to access. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Frame reference to frame <code>index</code>. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a></td><td>if the requested frame is not accessible.</td></tr>
  </table>
  </dd>
</dl>
<p>If the data is not certainly available, use <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac7f670bd3e772d5055f485e9f0e51658" title="Access stored data. ">tryGetDataFrame()</a>.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a99ba2f4072c75c8e56d1e377cb6b5f8c" title="Request storage of frames. ">requestStorage()</a> </dd>
<dd>
<a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac7f670bd3e772d5055f485e9f0e51658" title="Access stored data. ">tryGetDataFrame()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a3c84cd94769c773907605c53ba417a47"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::AbstractAnalysisData::isMultipoint </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Whether the data can have multiple points in the same column in the same frame. </p>
<dl class="section return"><dt>Returns</dt><dd><code>true</code> if multiple points in the same column are allowed within a single frame.</dd></dl>
<p>This kind of data can appear in many histogramming applications (e.g., RDFs), where each trajectory frame has several data points (possibly a different number for each frame). The current interface doesn't support storing such data, but this should rarely be necessary.</p>
<p>The returned value does not change after modules have been notified of data start.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a99ba2f4072c75c8e56d1e377cb6b5f8c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::AbstractAnalysisData::requestStorage </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nframes</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Request storage of frames. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">nframes</td><td>Request storing at least <code>nframes</code> previous frames (-1 = request storing all). Must be &gt;= -1. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the request could be satisfied.</dd></dl>
<p>If called multiple times, the largest request is honored.</p>
<p>Does not throw. Failure to honor the request is indicated through the return value.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac97ab78a57e02aad95c9e679ef8b2798" title="Access stored data. ">getDataFrame()</a> </dd>
<dd>
<a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac7f670bd3e772d5055f485e9f0e51658" title="Access stored data. ">tryGetDataFrame()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a2ed328beb6480f608cc3cb902a52b61f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AnalysisData::setColumnCount </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dataSet</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>columnCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the number of columns in a data set. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dataSet</td><td>Zero-based data set index. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">columnCount</td><td>Number of columns in the data (must be &gt; 0). </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a></td><td>if modules have been added that are not compatible with the new column count.</td></tr>
  </table>
  </dd>
</dl>
<p>Must be called before <a class="el" href="classgmx_1_1AnalysisData.xhtml#a1db0cb22f56abd7d612dc59992ce3486" title="Creates a handle for adding data. ">startData()</a> for each data set. Must not be called after <a class="el" href="classgmx_1_1AnalysisData.xhtml#a1db0cb22f56abd7d612dc59992ce3486" title="Creates a handle for adding data. ">startData()</a> has been called. If called multiple times for a data set, the last call takes effect. </p>

</div>
</div>
<a class="anchor" id="a52581701312f80286fce213167df9bf5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AnalysisData::setDataSetCount </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dataSetCount</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the number of data sets. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dataSetCount</td><td>Number of data sets (must be &gt; 0). </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a></td><td>if modules have been added that are not compatible with the new data set count.</td></tr>
  </table>
  </dd>
</dl>
<p>Must not be called after <a class="el" href="classgmx_1_1AnalysisData.xhtml#a1db0cb22f56abd7d612dc59992ce3486" title="Creates a handle for adding data. ">startData()</a> has been called. If not called, a single data set is assumed. If called multiple times, the last call takes effect. </p>

</div>
</div>
<a class="anchor" id="a01cb4745e7a693567d83afcf81b882f6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AnalysisData::setMultipoint </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bMultipoint</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets whether the data contains multiple points per column per frame. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">bMultipoint</td><td>Whether the data will allow multiple points per column within a single frame. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a></td><td>if modules have been added that are not compatible with the new setting.</td></tr>
  </table>
  </dd>
</dl>
<p>If this method is not called, the data is not multipoint.</p>
<p>Must not be called after <a class="el" href="classgmx_1_1AnalysisData.xhtml#a1db0cb22f56abd7d612dc59992ce3486" title="Creates a handle for adding data. ">startData()</a> has been called.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a3c84cd94769c773907605c53ba417a47" title="Whether the data can have multiple points in the same column in the same frame. ">isMultipoint()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a1db0cb22f56abd7d612dc59992ce3486"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1AnalysisDataHandle.xhtml">AnalysisDataHandle</a> gmx::AnalysisData::startData </td>
          <td>(</td>
          <td class="paramtype">const AnalysisDataParallelOptions &amp;&#160;</td>
          <td class="paramname"><em>opt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a handle for adding data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">opt</td><td><a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a> for setting how this handle will be used. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The created handle. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a></td><td>if any attached data module is not compatible. </td></tr>
    <tr><td class="paramname">unspecified</td><td>Any exception thrown by attached data modules in <a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#ac77236904b9f2871c38a73e2d150d787" title="Called (once) when the data has been set up properly. ">IAnalysisDataModule::dataStarted()</a>.</td></tr>
  </table>
  </dd>
</dl>
<p>The caller should retain the returned handle (or a copy of it), and pass it to <a class="el" href="classgmx_1_1AnalysisData.xhtml#a0187a7640e5af29dd67a7f7064b16bf4" title="Destroys a handle after all data has been added. ">finishData()</a> after successfully adding all data. The caller should discard the returned handle if an error occurs; memory allocated for the handle will be freed when the <a class="el" href="classgmx_1_1AnalysisData.xhtml" title="Parallelizable data container for raw data. ">AnalysisData</a> object is destroyed.</p>
<p>The <code>opt</code> options should be the same for all calls to this method, and the number of calls should match the parallelization factor defined in <code>opt</code>. </p>

</div>
</div>
<a class="anchor" id="ac7f670bd3e772d5055f485e9f0e51658"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1AnalysisDataFrameRef.xhtml">AnalysisDataFrameRef</a> gmx::AbstractAnalysisData::tryGetDataFrame </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Access stored data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Zero-based frame index to access. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Frame reference to frame <code>index</code>, or an invalid reference if no such frame is available.</dd></dl>
<p>Does not throw. Failure to access a frame with the given index is indicated through the return value. Negative <code>index</code> is allowed, and will always result in an invalid reference being returned.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a99ba2f4072c75c8e56d1e377cb6b5f8c" title="Request storage of frames. ">requestStorage()</a> </dd>
<dd>
<a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac97ab78a57e02aad95c9e679ef8b2798" title="Access stored data. ">getDataFrame()</a> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/analysisdata/<a class="el" href="analysisdata_2analysisdata_8h.xhtml">analysisdata.h</a></li>
<li>src/gromacs/analysisdata/analysisdata.cpp</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:54:36 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

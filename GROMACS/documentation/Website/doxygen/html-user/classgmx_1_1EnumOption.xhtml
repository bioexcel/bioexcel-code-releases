<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::EnumOption&lt; EnumType &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1EnumOption.xhtml">EnumOption</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1EnumOption-members.xhtml">List of all members</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::EnumOption&lt; EnumType &gt; Class Template Reference<div class="ingroups"><a class="el" href="group__module__options.xhtml">Extensible Handling of Options (options)</a> &#124; <a class="el" href="group__group__publicapi.xhtml">Public API</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/options/basicoptions.h&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for gmx::EnumOption&lt; EnumType &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1EnumOption__inherit__graph.svg" width="226" height="216"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for gmx::EnumOption&lt; EnumType &gt;:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1EnumOption__coll__graph.svg" width="226" height="216"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><h3>template&lt;typename EnumType&gt;<br/>
class gmx::EnumOption&lt; EnumType &gt;</h3>

<p>Specifies an option that accepts enumerated string values and writes the selected index into an <code>enum</code> variable. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">EnumType</td><td>Type of the variable that receives the values (can also be <code>int</code>).</td></tr>
  </table>
  </dd>
</dl>
<p>Examples: </p>
<div class="fragment"><div class="line">  <span class="keyword">enum</span> MyEnum { eAtom, eRes, eMol };</div>
<div class="line">  <span class="keyword">using</span> <a class="code" href="classgmx_1_1EnumOption.xhtml">gmx::EnumOption</a>;</div>
<div class="line">  <span class="keyword">const</span> <span class="keywordtype">char</span> * <span class="keyword">const</span>  allowed[] = { <span class="stringliteral">&quot;atom&quot;</span>, <span class="stringliteral">&quot;residue&quot;</span>, <span class="stringliteral">&quot;molecule&quot;</span> };</div>
<div class="line">  MyEnum       value = eAtom; <span class="comment">// default value</span></div>
<div class="line">  options.addOption(EnumOption&lt;MyEnum&gt;(<span class="stringliteral">&quot;type&quot;</span>).<a class="code" href="classgmx_1_1EnumOption.xhtml#a1372973e2514b842401b68711c7b4589">enumValue</a>(allowed).<a class="code" href="classgmx_1_1OptionTemplate.xhtml#af7399c1622ad4905e95fafd212b30677">store</a>(&amp;value));</div>
<div class="line">* </div>
</div><!-- fragment --><p><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ab8430ae1a804bd9400a13f7bc9694234" title="Stores number of values in the value pointed by countptr. ">storeCount()</a> is not currently implemented for this option type, and providing multiple default values through an array passed to <a class="el" href="classgmx_1_1OptionTemplate.xhtml#af7399c1622ad4905e95fafd212b30677" title="Stores value(s) in memory pointed by store. ">store()</a> does not work consistently in all cases. In the current implementation, the values of the enum type should correspond to indices in the array passed to <a class="el" href="classgmx_1_1EnumOption.xhtml#a1372973e2514b842401b68711c7b4589" title="Sets the option to only accept one of a fixed set of strings. ">enumValue()</a>, i.e., be consencutive starting from zero. Only values corresponding to valid indices are accepted as parameters to, e.g., <a class="el" href="classgmx_1_1OptionTemplate.xhtml#ae2ae3f0f880d262f5468496ce5350981" title="Sets a default value for the option. ">defaultValue()</a>. However, other values can be used as the initial value of the variable (<code>value</code> in the above example), and those will be preserved if the option is not set.</p>
<p>Public methods in this class do not throw. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:acb69348b591a29a046cb91f7dabd0145"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acb69348b591a29a046cb91f7dabd0145"></a>
typedef <a class="el" href="classgmx_1_1EnumOptionInfo.xhtml">EnumOptionInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1EnumOption.xhtml#acb69348b591a29a046cb91f7dabd0145">InfoType</a></td></tr>
<tr class="memdesc:acb69348b591a29a046cb91f7dabd0145"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classgmx_1_1OptionInfo.xhtml" title="Gives information and allows modifications to an option after creation. ">OptionInfo</a> subclass corresponding to this option type. <br/></td></tr>
<tr class="separator:acb69348b591a29a046cb91f7dabd0145"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ae7f787f716f475d57b274bf6e8004e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9ae7f787f716f475d57b274bf6e8004e"></a>
typedef <a class="el" href="classgmx_1_1OptionTemplate.xhtml">OptionTemplate</a><br class="typebreak"/>
&lt; EnumType, <a class="el" href="classgmx_1_1EnumOption.xhtml">EnumOption</a><br class="typebreak"/>
&lt; EnumType &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1EnumOption.xhtml#a9ae7f787f716f475d57b274bf6e8004e">MyBase</a></td></tr>
<tr class="memdesc:a9ae7f787f716f475d57b274bf6e8004e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Short-hand for the base class. <br/></td></tr>
<tr class="separator:a9ae7f787f716f475d57b274bf6e8004e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44cf51c8417eeb4a0a20d20a355f8f89"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a44cf51c8417eeb4a0a20d20a355f8f89"></a>
typedef EnumType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#a44cf51c8417eeb4a0a20d20a355f8f89">ValueType</a></td></tr>
<tr class="memdesc:a44cf51c8417eeb4a0a20d20a355f8f89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type that stores a single option value. <br/></td></tr>
<tr class="separator:a44cf51c8417eeb4a0a20d20a355f8f89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6d35e5daa23fbc3e66e2d3cbc014857"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac6d35e5daa23fbc3e66e2d3cbc014857"></a>
typedef <a class="el" href="classgmx_1_1EnumOption.xhtml">EnumOption</a>&lt; EnumType &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a></td></tr>
<tr class="memdesc:ac6d35e5daa23fbc3e66e2d3cbc014857"><td class="mdescLeft">&#160;</td><td class="mdescRight">Alias for the derived class type. <br/></td></tr>
<tr class="separator:ac6d35e5daa23fbc3e66e2d3cbc014857"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7843327a0a0a8cc64f1fa9585f42e077"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7843327a0a0a8cc64f1fa9585f42e077"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1EnumOption.xhtml#a7843327a0a0a8cc64f1fa9585f42e077">EnumOption</a> (const char *name)</td></tr>
<tr class="memdesc:a7843327a0a0a8cc64f1fa9585f42e077"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes an option with the given name. <br/></td></tr>
<tr class="separator:a7843327a0a0a8cc64f1fa9585f42e077"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1372973e2514b842401b68711c7b4589"><td class="memTemplParams" colspan="2">template&lt;size_t count&gt; </td></tr>
<tr class="memitem:a1372973e2514b842401b68711c7b4589"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1EnumOption.xhtml">EnumOption</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classgmx_1_1EnumOption.xhtml#a1372973e2514b842401b68711c7b4589">enumValue</a> (const char *const (&amp;values)[count])</td></tr>
<tr class="memdesc:a1372973e2514b842401b68711c7b4589"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the option to only accept one of a fixed set of strings.  <a href="#a1372973e2514b842401b68711c7b4589">More...</a><br/></td></tr>
<tr class="separator:a1372973e2514b842401b68711c7b4589"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbb084b554c8772076d287f5563bc38b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1EnumOption.xhtml">EnumOption</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1EnumOption.xhtml#adbb084b554c8772076d287f5563bc38b">enumValueFromNullTerminatedArray</a> (const char *const *values)</td></tr>
<tr class="memdesc:adbb084b554c8772076d287f5563bc38b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the option to only accept one of a fixed set of strings.  <a href="#adbb084b554c8772076d287f5563bc38b">More...</a><br/></td></tr>
<tr class="separator:adbb084b554c8772076d287f5563bc38b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6183dbb2066a34dab9327511ffa50838"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#a6183dbb2066a34dab9327511ffa50838">description</a> (const char *descr)</td></tr>
<tr class="memdesc:a6183dbb2066a34dab9327511ffa50838"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a description for the option.  <a href="#a6183dbb2066a34dab9327511ffa50838">More...</a><br/></td></tr>
<tr class="separator:a6183dbb2066a34dab9327511ffa50838"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a761c2f380b5376a6288b7e22f8d565cd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a761c2f380b5376a6288b7e22f8d565cd"></a>
<a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#a761c2f380b5376a6288b7e22f8d565cd">hidden</a> (bool bHidden=true)</td></tr>
<tr class="memdesc:a761c2f380b5376a6288b7e22f8d565cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Hides the option from normal help output. <br/></td></tr>
<tr class="separator:a761c2f380b5376a6288b7e22f8d565cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaceb267de884e94636e5af8be232e6f7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#aaceb267de884e94636e5af8be232e6f7">required</a> (bool bRequired=true)</td></tr>
<tr class="memdesc:aaceb267de884e94636e5af8be232e6f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Requires the option to be specified explicitly.  <a href="#aaceb267de884e94636e5af8be232e6f7">More...</a><br/></td></tr>
<tr class="separator:aaceb267de884e94636e5af8be232e6f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae70d1a6add1250ff76ba3bed2cedb4c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aae70d1a6add1250ff76ba3bed2cedb4c"></a>
<a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#aae70d1a6add1250ff76ba3bed2cedb4c">allowMultiple</a> (bool bMulti=true)</td></tr>
<tr class="memdesc:aae70d1a6add1250ff76ba3bed2cedb4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows the option to be specified multiple times. <br/></td></tr>
<tr class="separator:aae70d1a6add1250ff76ba3bed2cedb4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c4ddf73e8031ac29ca19e86fbc232d2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7c4ddf73e8031ac29ca19e86fbc232d2"></a>
<a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#a7c4ddf73e8031ac29ca19e86fbc232d2">valueCount</a> (int count)</td></tr>
<tr class="memdesc:a7c4ddf73e8031ac29ca19e86fbc232d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Requires exactly <code>count</code> values for the option. <br/></td></tr>
<tr class="separator:a7c4ddf73e8031ac29ca19e86fbc232d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07fd012d7538102b0c0aded54a895de4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a07fd012d7538102b0c0aded54a895de4"></a>
<a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#a07fd012d7538102b0c0aded54a895de4">multiValue</a> (bool bMulti=true)</td></tr>
<tr class="memdesc:a07fd012d7538102b0c0aded54a895de4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows any number of values for the option. <br/></td></tr>
<tr class="separator:a07fd012d7538102b0c0aded54a895de4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2ae3f0f880d262f5468496ce5350981"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ae2ae3f0f880d262f5468496ce5350981">defaultValue</a> (const EnumType &amp;defaultValue)</td></tr>
<tr class="memdesc:ae2ae3f0f880d262f5468496ce5350981"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a default value for the option.  <a href="#ae2ae3f0f880d262f5468496ce5350981">More...</a><br/></td></tr>
<tr class="separator:ae2ae3f0f880d262f5468496ce5350981"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a400e5589c2dcb2d4758e21c5feffab69"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#a400e5589c2dcb2d4758e21c5feffab69">defaultValueIfSet</a> (const EnumType &amp;<a class="el" href="classgmx_1_1OptionTemplate.xhtml#ae2ae3f0f880d262f5468496ce5350981">defaultValue</a>)</td></tr>
<tr class="memdesc:a400e5589c2dcb2d4758e21c5feffab69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a default value for the option when it is set.  <a href="#a400e5589c2dcb2d4758e21c5feffab69">More...</a><br/></td></tr>
<tr class="separator:a400e5589c2dcb2d4758e21c5feffab69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7399c1622ad4905e95fafd212b30677"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#af7399c1622ad4905e95fafd212b30677">store</a> (EnumType *store)</td></tr>
<tr class="memdesc:af7399c1622ad4905e95fafd212b30677"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores value(s) in memory pointed by <code>store</code>.  <a href="#af7399c1622ad4905e95fafd212b30677">More...</a><br/></td></tr>
<tr class="separator:af7399c1622ad4905e95fafd212b30677"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8430ae1a804bd9400a13f7bc9694234"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ab8430ae1a804bd9400a13f7bc9694234">storeCount</a> (int *countptr)</td></tr>
<tr class="memdesc:ab8430ae1a804bd9400a13f7bc9694234"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores number of values in the value pointed by <code>countptr</code>.  <a href="#ab8430ae1a804bd9400a13f7bc9694234">More...</a><br/></td></tr>
<tr class="separator:ab8430ae1a804bd9400a13f7bc9694234"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3cb044b50f1b2a86b2fe9552165f02c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ad3cb044b50f1b2a86b2fe9552165f02c">storeVector</a> (std::vector&lt; EnumType &gt; *<a class="el" href="classgmx_1_1OptionTemplate.xhtml#af7399c1622ad4905e95fafd212b30677">store</a>)</td></tr>
<tr class="memdesc:ad3cb044b50f1b2a86b2fe9552165f02c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores option values in the provided vector.  <a href="#ad3cb044b50f1b2a86b2fe9552165f02c">More...</a><br/></td></tr>
<tr class="separator:ad3cb044b50f1b2a86b2fe9552165f02c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8c9e05a041f94527c8fafdd40822cf4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#af8c9e05a041f94527c8fafdd40822cf4">storeIsSet</a> (bool *<a class="el" href="classgmx_1_1OptionTemplate.xhtml#af7399c1622ad4905e95fafd212b30677">store</a>)</td></tr>
<tr class="memdesc:af8c9e05a041f94527c8fafdd40822cf4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores whether the option was explicitly set.  <a href="#af8c9e05a041f94527c8fafdd40822cf4">More...</a><br/></td></tr>
<tr class="separator:af8c9e05a041f94527c8fafdd40822cf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ae2ae3f0f880d262f5468496ce5350981"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; <a class="el" href="classgmx_1_1OptionTemplate.xhtml">gmx::OptionTemplate</a>&lt; EnumType , <a class="el" href="classgmx_1_1EnumOption.xhtml">EnumOption</a>&lt; EnumType &gt;  &gt;::defaultValue </td>
          <td>(</td>
          <td class="paramtype">const EnumType  &amp;&#160;</td>
          <td class="paramname"><em>defaultValue</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets a default value for the option. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">defaultValue</td><td>Default value.</td></tr>
  </table>
  </dd>
</dl>
<p>If the option is never set, the default value is copied to the assigned storage. Note that if the option is not set and there is no default value, the storage is not altered, which can also be used to provide a default value. The latter method has to be used if the option can take multiple values.</p>
<p><code>defaultValue</code> is copied when the option is created. </p>

</div>
</div>
<a class="anchor" id="a400e5589c2dcb2d4758e21c5feffab69"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; <a class="el" href="classgmx_1_1OptionTemplate.xhtml">gmx::OptionTemplate</a>&lt; EnumType , <a class="el" href="classgmx_1_1EnumOption.xhtml">EnumOption</a>&lt; EnumType &gt;  &gt;::defaultValueIfSet </td>
          <td>(</td>
          <td class="paramtype">const EnumType  &amp;&#160;</td>
          <td class="paramname"><em>defaultValue</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets a default value for the option when it is set. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">defaultValue</td><td>Default value.</td></tr>
  </table>
  </dd>
</dl>
<p>This value is used if the option is set, but no value is provided. If the option is never set, the value set with <a class="el" href="classgmx_1_1OptionTemplate.xhtml#ae2ae3f0f880d262f5468496ce5350981" title="Sets a default value for the option. ">defaultValue()</a> is used. Can only be used for options that accept a single value.</p>
<p><code>defaultValue</code> is copied when the option is created. </p>

</div>
</div>
<a class="anchor" id="a6183dbb2066a34dab9327511ffa50838"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; <a class="el" href="classgmx_1_1OptionTemplate.xhtml">gmx::OptionTemplate</a>&lt; EnumType , <a class="el" href="classgmx_1_1EnumOption.xhtml">EnumOption</a>&lt; EnumType &gt;  &gt;::description </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>descr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets a description for the option. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">descr</td><td>Description to set.</td></tr>
  </table>
  </dd>
</dl>
<p>String in <code>descr</code> is copied when the option is created. </p>

</div>
</div>
<a class="anchor" id="a1372973e2514b842401b68711c7b4589"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename EnumType &gt; </div>
<div class="memtemplate">
template&lt;size_t count&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1EnumOption.xhtml">EnumOption</a>&amp; <a class="el" href="classgmx_1_1EnumOption.xhtml">gmx::EnumOption</a>&lt; EnumType &gt;::enumValue </td>
          <td>(</td>
          <td class="paramtype">const char *const (&amp;)&#160;</td>
          <td class="paramname"><em>values</em>[count]</td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the option to only accept one of a fixed set of strings. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">values</td><td>Array of strings to accept.</td></tr>
  </table>
  </dd>
</dl>
<p>Also accepts prefixes of the strings; if a prefix matches more than one of the possible strings, the shortest one is used (in a tie, the first one is).</p>
<p>The strings are copied once the option is created. </p>

</div>
</div>
<a class="anchor" id="adbb084b554c8772076d287f5563bc38b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename EnumType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1EnumOption.xhtml">EnumOption</a>&amp; <a class="el" href="classgmx_1_1EnumOption.xhtml">gmx::EnumOption</a>&lt; EnumType &gt;::enumValueFromNullTerminatedArray </td>
          <td>(</td>
          <td class="paramtype">const char *const *&#160;</td>
          <td class="paramname"><em>values</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the option to only accept one of a fixed set of strings. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">values</td><td>Array of strings to accept, with a NULL pointer following the last string.</td></tr>
  </table>
  </dd>
</dl>
<p>Works otherwise as the array version, but accepts a pointer to an array of undetermined length. The end of the array is indicated by a NULL pointer in the array.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1EnumOption.xhtml#a1372973e2514b842401b68711c7b4589" title="Sets the option to only accept one of a fixed set of strings. ">enumValue()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="aaceb267de884e94636e5af8be232e6f7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; <a class="el" href="classgmx_1_1OptionTemplate.xhtml">gmx::OptionTemplate</a>&lt; EnumType , <a class="el" href="classgmx_1_1EnumOption.xhtml">EnumOption</a>&lt; EnumType &gt;  &gt;::required </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bRequired</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Requires the option to be specified explicitly. </p>
<p>Note that if you specify <a class="el" href="classgmx_1_1OptionTemplate.xhtml#ae2ae3f0f880d262f5468496ce5350981" title="Sets a default value for the option. ">defaultValue()</a> together with <a class="el" href="classgmx_1_1OptionTemplate.xhtml#aaceb267de884e94636e5af8be232e6f7" title="Requires the option to be specified explicitly. ">required()</a>, the user is not required to explicitly provide the option. In this case, <a class="el" href="classgmx_1_1OptionTemplate.xhtml#aaceb267de884e94636e5af8be232e6f7" title="Requires the option to be specified explicitly. ">required()</a> only affects possible help output. </p>

</div>
</div>
<a class="anchor" id="af7399c1622ad4905e95fafd212b30677"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; <a class="el" href="classgmx_1_1OptionTemplate.xhtml">gmx::OptionTemplate</a>&lt; EnumType , <a class="el" href="classgmx_1_1EnumOption.xhtml">EnumOption</a>&lt; EnumType &gt;  &gt;::store </td>
          <td>(</td>
          <td class="paramtype">EnumType  *&#160;</td>
          <td class="paramname"><em>store</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stores value(s) in memory pointed by <code>store</code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">store</td><td>Storage for option value(s).</td></tr>
  </table>
  </dd>
</dl>
<p>The caller is responsible for allocating enough memory such that the any allowed number of values fits into the array pointed by <code>store</code>. If there is no maximum allowed number or if the maximum is inconveniently large, <a class="el" href="classgmx_1_1OptionTemplate.xhtml#ad3cb044b50f1b2a86b2fe9552165f02c" title="Stores option values in the provided vector. ">storeVector()</a> should be used.</p>
<p>For information on when values are available in the storage, see <a class="el" href="classgmx_1_1OptionTemplate.xhtml#ad3cb044b50f1b2a86b2fe9552165f02c" title="Stores option values in the provided vector. ">storeVector()</a>.</p>
<p>The pointer provided should remain valid as long as the associated Options object exists. </p>

</div>
</div>
<a class="anchor" id="ab8430ae1a804bd9400a13f7bc9694234"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; <a class="el" href="classgmx_1_1OptionTemplate.xhtml">gmx::OptionTemplate</a>&lt; EnumType , <a class="el" href="classgmx_1_1EnumOption.xhtml">EnumOption</a>&lt; EnumType &gt;  &gt;::storeCount </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>countptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stores number of values in the value pointed by <code>countptr</code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">countptr</td><td>Storage for the number of values.</td></tr>
  </table>
  </dd>
</dl>
<p>For information on when values are available in the storage, see <a class="el" href="classgmx_1_1OptionTemplate.xhtml#ad3cb044b50f1b2a86b2fe9552165f02c" title="Stores option values in the provided vector. ">storeVector()</a>.</p>
<p>The pointers provided should remain valid as long as the associated Options object exists. </p>

</div>
</div>
<a class="anchor" id="af8c9e05a041f94527c8fafdd40822cf4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; <a class="el" href="classgmx_1_1OptionTemplate.xhtml">gmx::OptionTemplate</a>&lt; EnumType , <a class="el" href="classgmx_1_1EnumOption.xhtml">EnumOption</a>&lt; EnumType &gt;  &gt;::storeIsSet </td>
          <td>(</td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>store</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stores whether the option was explicitly set. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">store</td><td>Variable to store the flag in.</td></tr>
  </table>
  </dd>
</dl>
<p>The value is set to <code>false</code> on creation of the option, and to <code>true</code> as soon as a value is assigned to the option. A default value does not set the flag to <code>true</code>, but assignment that uses <a class="el" href="classgmx_1_1OptionTemplate.xhtml#a400e5589c2dcb2d4758e21c5feffab69" title="Sets a default value for the option when it is set. ">defaultValueIfSet()</a> does.</p>
<p>The pointer provided should remain valid as long as the associated Options object exists. </p>

</div>
</div>
<a class="anchor" id="ad3cb044b50f1b2a86b2fe9552165f02c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1OptionTemplate.xhtml#ac6d35e5daa23fbc3e66e2d3cbc014857">MyClass</a>&amp; <a class="el" href="classgmx_1_1OptionTemplate.xhtml">gmx::OptionTemplate</a>&lt; EnumType , <a class="el" href="classgmx_1_1EnumOption.xhtml">EnumOption</a>&lt; EnumType &gt;  &gt;::storeVector </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; EnumType  &gt; *&#160;</td>
          <td class="paramname"><em>store</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stores option values in the provided vector. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">store</td><td>Vector to store option values in.</td></tr>
  </table>
  </dd>
</dl>
<p>Values are added to the vector after each successful set of values is parsed. Note that for some options, the value may be changed later, and is only guaranteed to be correct after Options::finish() has been called.</p>
<p>The pointer provided should remain valid as long as the associated Options object exists. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/gromacs/options/<a class="el" href="basicoptions_8h.xhtml">basicoptions.h</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:54:37 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

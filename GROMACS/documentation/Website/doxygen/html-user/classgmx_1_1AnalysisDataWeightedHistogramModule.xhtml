<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::AnalysisDataWeightedHistogramModule Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml">AnalysisDataWeightedHistogramModule</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1AnalysisDataWeightedHistogramModule-members.xhtml">List of all members</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::AnalysisDataWeightedHistogramModule Class Reference<div class="ingroups"><a class="el" href="group__group__publicapi.xhtml">Public API</a> &#124; <a class="el" href="group__module__analysisdata.xhtml">Parallelizable Handling of Output Data (analysisdata)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/analysisdata/modules/histogram.h&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for gmx::AnalysisDataWeightedHistogramModule:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1AnalysisDataWeightedHistogramModule__inherit__graph.svg" width="438" height="202"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for gmx::AnalysisDataWeightedHistogramModule:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1AnalysisDataWeightedHistogramModule__coll__graph.svg" width="438" height="202"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Data module for per-frame weighted histograms. </p>
<p>Output data contains the same number of frames and data sets as the input data. Each frame contains the histogram(s) for the points in that frame, interpreted such that the first column passed to <a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#a2c0f968b2ca8d8ad82e4e4ebe1bdf928" title="Called one or more times during each data frame. ">pointsAdded()</a> determines the bin and the rest give weights to be added to that bin (input data should have at least two colums, and at least two columns should be added at the same time). Each input data set is processed independently into the corresponding output data set. All input columns for a data set are averaged into the same histogram. The number of columns for all data sets equals the number of bins in the histogram.</p>
<p>The histograms are accumulated in double precision, even if the output data is in single precision. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a188171eb67bf21e0ea1be21ded6c1c19"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#a188171eb67bf21e0ea1be21ded6c1c19">Flag</a> { <br/>
&#160;&#160;<a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#a188171eb67bf21e0ea1be21ded6c1c19aab0a8d917fcd73e2d83b6ccd27d050ef">efAllowMultipoint</a> = 1&lt;&lt;0, 
<a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#a188171eb67bf21e0ea1be21ded6c1c19ae1bb23abbcc827800bcf2966ba9e63a8">efOnlyMultipoint</a> = 1&lt;&lt;1, 
<a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#a188171eb67bf21e0ea1be21ded6c1c19a1f92109f099701d827d220cd068700f9">efAllowMulticolumn</a> = 1&lt;&lt;2, 
<a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#a188171eb67bf21e0ea1be21ded6c1c19a36b0114de25d6ec54d086588bd62a5ff">efAllowMissing</a> = 1&lt;&lt;3, 
<br/>
&#160;&#160;<a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#a188171eb67bf21e0ea1be21ded6c1c19afdae76435f8341cd8a54e542980e6748">efAllowMultipleDataSets</a> = 1&lt;&lt;4
<br/>
 }</td></tr>
<tr class="memdesc:a188171eb67bf21e0ea1be21ded6c1c19"><td class="mdescLeft">&#160;</td><td class="mdescRight">Possible flags for <a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#a014c474b1932d26d37cd7b36c6c58ab9" title="Returns properties supported by the module. ">flags()</a>.  <a href="classgmx_1_1IAnalysisDataModule.xhtml#a188171eb67bf21e0ea1be21ded6c1c19">More...</a><br/></td></tr>
<tr class="separator:a188171eb67bf21e0ea1be21ded6c1c19"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab8cf1768de2f01e11e305e7ffcfad982"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#ab8cf1768de2f01e11e305e7ffcfad982">AnalysisDataWeightedHistogramModule</a> ()</td></tr>
<tr class="memdesc:ab8cf1768de2f01e11e305e7ffcfad982"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a histogram module with undefined bins.  <a href="#ab8cf1768de2f01e11e305e7ffcfad982">More...</a><br/></td></tr>
<tr class="separator:ab8cf1768de2f01e11e305e7ffcfad982"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7df5e5c0c4f15b0a4d8e8f006d197e6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#ab7df5e5c0c4f15b0a4d8e8f006d197e6">AnalysisDataWeightedHistogramModule</a> (const <a class="el" href="classgmx_1_1AnalysisHistogramSettings.xhtml">AnalysisHistogramSettings</a> &amp;<a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#a32de78175630df494088f36e25886c3b">settings</a>)</td></tr>
<tr class="memdesc:ab7df5e5c0c4f15b0a4d8e8f006d197e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a histogram module with defined bin parameters.  <a href="#ab7df5e5c0c4f15b0a4d8e8f006d197e6">More...</a><br/></td></tr>
<tr class="separator:ab7df5e5c0c4f15b0a4d8e8f006d197e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adadd173469be29d74a3a207bcb6d922f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#adadd173469be29d74a3a207bcb6d922f">init</a> (const <a class="el" href="classgmx_1_1AnalysisHistogramSettings.xhtml">AnalysisHistogramSettings</a> &amp;<a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#a32de78175630df494088f36e25886c3b">settings</a>)</td></tr>
<tr class="memdesc:adadd173469be29d74a3a207bcb6d922f"><td class="mdescLeft">&#160;</td><td class="mdescRight">(Re)initializes the histogram from settings.  <a href="#adadd173469be29d74a3a207bcb6d922f">More...</a><br/></td></tr>
<tr class="separator:adadd173469be29d74a3a207bcb6d922f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b0e98a3d198fbb4786bb9dc900322d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1AbstractAverageHistogram.xhtml">AbstractAverageHistogram</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#a2b0e98a3d198fbb4786bb9dc900322d0">averager</a> ()</td></tr>
<tr class="memdesc:a2b0e98a3d198fbb4786bb9dc900322d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the average histogram over all frames.  <a href="#a2b0e98a3d198fbb4786bb9dc900322d0">More...</a><br/></td></tr>
<tr class="separator:a2b0e98a3d198fbb4786bb9dc900322d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32de78175630df494088f36e25886c3b"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classgmx_1_1AnalysisHistogramSettings.xhtml">AnalysisHistogramSettings</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#a32de78175630df494088f36e25886c3b">settings</a> () const </td></tr>
<tr class="memdesc:a32de78175630df494088f36e25886c3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns bin properties for the histogram.  <a href="#a32de78175630df494088f36e25886c3b">More...</a><br/></td></tr>
<tr class="separator:a32de78175630df494088f36e25886c3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a5ebdd0407a95e7dbb904f4ae5f4324"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#a8a5ebdd0407a95e7dbb904f4ae5f4324">frameCount</a> () const </td></tr>
<tr class="memdesc:a8a5ebdd0407a95e7dbb904f4ae5f4324"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the total number of frames in the data.  <a href="#a8a5ebdd0407a95e7dbb904f4ae5f4324">More...</a><br/></td></tr>
<tr class="separator:a8a5ebdd0407a95e7dbb904f4ae5f4324"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a014c474b1932d26d37cd7b36c6c58ab9"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#a014c474b1932d26d37cd7b36c6c58ab9">flags</a> () const </td></tr>
<tr class="memdesc:a014c474b1932d26d37cd7b36c6c58ab9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns properties supported by the module.  <a href="#a014c474b1932d26d37cd7b36c6c58ab9">More...</a><br/></td></tr>
<tr class="separator:a014c474b1932d26d37cd7b36c6c58ab9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a999025fb3ca712b3e42a658e6bff91d6"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#a999025fb3ca712b3e42a658e6bff91d6">parallelDataStarted</a> (<a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml">AbstractAnalysisData</a> *data, const AnalysisDataParallelOptions &amp;options)</td></tr>
<tr class="memdesc:a999025fb3ca712b3e42a658e6bff91d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called (once) for parallel data when the data has been set up.  <a href="#a999025fb3ca712b3e42a658e6bff91d6">More...</a><br/></td></tr>
<tr class="separator:a999025fb3ca712b3e42a658e6bff91d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb77d880b0b206c456c4ed7ae47459cb"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#acb77d880b0b206c456c4ed7ae47459cb">frameStarted</a> (const <a class="el" href="classgmx_1_1AnalysisDataFrameHeader.xhtml">AnalysisDataFrameHeader</a> &amp;header)</td></tr>
<tr class="memdesc:acb77d880b0b206c456c4ed7ae47459cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called at the start of each data frame.  <a href="#acb77d880b0b206c456c4ed7ae47459cb">More...</a><br/></td></tr>
<tr class="separator:acb77d880b0b206c456c4ed7ae47459cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c0f968b2ca8d8ad82e4e4ebe1bdf928"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#a2c0f968b2ca8d8ad82e4e4ebe1bdf928">pointsAdded</a> (const <a class="el" href="classgmx_1_1AnalysisDataPointSetRef.xhtml">AnalysisDataPointSetRef</a> &amp;points)</td></tr>
<tr class="memdesc:a2c0f968b2ca8d8ad82e4e4ebe1bdf928"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called one or more times during each data frame.  <a href="#a2c0f968b2ca8d8ad82e4e4ebe1bdf928">More...</a><br/></td></tr>
<tr class="separator:a2c0f968b2ca8d8ad82e4e4ebe1bdf928"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7745781a4c63a5c2ce40b7bdc8037a4"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#ae7745781a4c63a5c2ce40b7bdc8037a4">frameFinished</a> (const <a class="el" href="classgmx_1_1AnalysisDataFrameHeader.xhtml">AnalysisDataFrameHeader</a> &amp;header)</td></tr>
<tr class="memdesc:ae7745781a4c63a5c2ce40b7bdc8037a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when a data frame is finished.  <a href="#ae7745781a4c63a5c2ce40b7bdc8037a4">More...</a><br/></td></tr>
<tr class="separator:ae7745781a4c63a5c2ce40b7bdc8037a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb90d311cf374ad55fa3a7a6d0045ce7"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#afb90d311cf374ad55fa3a7a6d0045ce7">frameFinishedSerial</a> (int frameIndex)</td></tr>
<tr class="memdesc:afb90d311cf374ad55fa3a7a6d0045ce7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called in sequential order for each frame after they are finished.  <a href="#afb90d311cf374ad55fa3a7a6d0045ce7">More...</a><br/></td></tr>
<tr class="separator:afb90d311cf374ad55fa3a7a6d0045ce7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7883928adfcfed54892d1d4c5e9746d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#ac7883928adfcfed54892d1d4c5e9746d">dataFinished</a> ()</td></tr>
<tr class="memdesc:ac7883928adfcfed54892d1d4c5e9746d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called (once) when no more data is available.  <a href="#ac7883928adfcfed54892d1d4c5e9746d">More...</a><br/></td></tr>
<tr class="separator:ac7883928adfcfed54892d1d4c5e9746d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c84cd94769c773907605c53ba417a47"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a3c84cd94769c773907605c53ba417a47">isMultipoint</a> () const </td></tr>
<tr class="memdesc:a3c84cd94769c773907605c53ba417a47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the data can have multiple points in the same column in the same frame.  <a href="#a3c84cd94769c773907605c53ba417a47">More...</a><br/></td></tr>
<tr class="separator:a3c84cd94769c773907605c53ba417a47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5e15c4c54a953a2d13855286ca1391e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#aa5e15c4c54a953a2d13855286ca1391e">dataSetCount</a> () const </td></tr>
<tr class="memdesc:aa5e15c4c54a953a2d13855286ca1391e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of data sets in the data object.  <a href="#aa5e15c4c54a953a2d13855286ca1391e">More...</a><br/></td></tr>
<tr class="separator:aa5e15c4c54a953a2d13855286ca1391e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0c3d329b51830be42ad0b447ac56d31"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ad0c3d329b51830be42ad0b447ac56d31">columnCount</a> (int dataSet) const </td></tr>
<tr class="memdesc:ad0c3d329b51830be42ad0b447ac56d31"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of columns in a data set.  <a href="#ad0c3d329b51830be42ad0b447ac56d31">More...</a><br/></td></tr>
<tr class="separator:ad0c3d329b51830be42ad0b447ac56d31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5c4dbc7b71874e137e8af955fa09624"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac5c4dbc7b71874e137e8af955fa09624">columnCount</a> () const </td></tr>
<tr class="memdesc:ac5c4dbc7b71874e137e8af955fa09624"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of columns in the data.  <a href="#ac5c4dbc7b71874e137e8af955fa09624">More...</a><br/></td></tr>
<tr class="separator:ac5c4dbc7b71874e137e8af955fa09624"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7f670bd3e772d5055f485e9f0e51658"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1AnalysisDataFrameRef.xhtml">AnalysisDataFrameRef</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac7f670bd3e772d5055f485e9f0e51658">tryGetDataFrame</a> (int index) const </td></tr>
<tr class="memdesc:ac7f670bd3e772d5055f485e9f0e51658"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access stored data.  <a href="#ac7f670bd3e772d5055f485e9f0e51658">More...</a><br/></td></tr>
<tr class="separator:ac7f670bd3e772d5055f485e9f0e51658"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac97ab78a57e02aad95c9e679ef8b2798"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1AnalysisDataFrameRef.xhtml">AnalysisDataFrameRef</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac97ab78a57e02aad95c9e679ef8b2798">getDataFrame</a> (int index) const </td></tr>
<tr class="memdesc:ac97ab78a57e02aad95c9e679ef8b2798"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access stored data.  <a href="#ac97ab78a57e02aad95c9e679ef8b2798">More...</a><br/></td></tr>
<tr class="separator:ac97ab78a57e02aad95c9e679ef8b2798"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99ba2f4072c75c8e56d1e377cb6b5f8c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a99ba2f4072c75c8e56d1e377cb6b5f8c">requestStorage</a> (int nframes)</td></tr>
<tr class="memdesc:a99ba2f4072c75c8e56d1e377cb6b5f8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Request storage of frames.  <a href="#a99ba2f4072c75c8e56d1e377cb6b5f8c">More...</a><br/></td></tr>
<tr class="separator:a99ba2f4072c75c8e56d1e377cb6b5f8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada778191d76b2826b57e7b30ecd7a296"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ada778191d76b2826b57e7b30ecd7a296">addModule</a> (<a class="el" href="namespacegmx.xhtml#aea400e67c2f38e5bacdf8677f38a61cc">AnalysisDataModulePointer</a> module)</td></tr>
<tr class="memdesc:ada778191d76b2826b57e7b30ecd7a296"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a module to process the data.  <a href="#ada778191d76b2826b57e7b30ecd7a296">More...</a><br/></td></tr>
<tr class="separator:ada778191d76b2826b57e7b30ecd7a296"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e6f762df563d577f8a1d34a35273952"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a8e6f762df563d577f8a1d34a35273952">addColumnModule</a> (int col, int span, <a class="el" href="namespacegmx.xhtml#aea400e67c2f38e5bacdf8677f38a61cc">AnalysisDataModulePointer</a> module)</td></tr>
<tr class="memdesc:a8e6f762df563d577f8a1d34a35273952"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a module that processes only a subset of the columns.  <a href="#a8e6f762df563d577f8a1d34a35273952">More...</a><br/></td></tr>
<tr class="separator:a8e6f762df563d577f8a1d34a35273952"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae095550bd347b42db3c49e064bc44228"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ae095550bd347b42db3c49e064bc44228">applyModule</a> (<a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml">IAnalysisDataModule</a> *module)</td></tr>
<tr class="memdesc:ae095550bd347b42db3c49e064bc44228"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies a module to process data that is ready.  <a href="#ae095550bd347b42db3c49e064bc44228">More...</a><br/></td></tr>
<tr class="separator:ae095550bd347b42db3c49e064bc44228"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="a188171eb67bf21e0ea1be21ded6c1c19"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#a188171eb67bf21e0ea1be21ded6c1c19">gmx::IAnalysisDataModule::Flag</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Possible flags for <a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml#afa2983f2300095d7f5eeff11635ce2e9" title="Returns properties supported by the module. ">flags()</a>. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><em><a class="anchor" id="a188171eb67bf21e0ea1be21ded6c1c19aab0a8d917fcd73e2d83b6ccd27d050ef"></a>efAllowMultipoint</em>&nbsp;</td><td class="fielddoc">
<p>The module can process multipoint data. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="a188171eb67bf21e0ea1be21ded6c1c19ae1bb23abbcc827800bcf2966ba9e63a8"></a>efOnlyMultipoint</em>&nbsp;</td><td class="fielddoc">
<p>The module does not make sense for non-multipoint data. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="a188171eb67bf21e0ea1be21ded6c1c19a1f92109f099701d827d220cd068700f9"></a>efAllowMulticolumn</em>&nbsp;</td><td class="fielddoc">
<p>The module can process data with more than one column. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="a188171eb67bf21e0ea1be21ded6c1c19a36b0114de25d6ec54d086588bd62a5ff"></a>efAllowMissing</em>&nbsp;</td><td class="fielddoc">
<p>The module can process data with missing points. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="a188171eb67bf21e0ea1be21ded6c1c19afdae76435f8341cd8a54e542980e6748"></a>efAllowMultipleDataSets</em>&nbsp;</td><td class="fielddoc">
<p>The module can process data with multiple data sets. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ab8cf1768de2f01e11e305e7ffcfad982"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">gmx::AnalysisDataWeightedHistogramModule::AnalysisDataWeightedHistogramModule </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a histogram module with undefined bins. </p>
<p>Bin parameters must be defined with <a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#adadd173469be29d74a3a207bcb6d922f" title="(Re)initializes the histogram from settings. ">init()</a> before data input is started. </p>

</div>
</div>
<a class="anchor" id="ab7df5e5c0c4f15b0a4d8e8f006d197e6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">gmx::AnalysisDataWeightedHistogramModule::AnalysisDataWeightedHistogramModule </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1AnalysisHistogramSettings.xhtml">AnalysisHistogramSettings</a> &amp;&#160;</td>
          <td class="paramname"><em>settings</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a histogram module with defined bin parameters. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a8e6f762df563d577f8a1d34a35273952"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractAnalysisData::addColumnModule </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>col</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>span</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacegmx.xhtml#aea400e67c2f38e5bacdf8677f38a61cc">AnalysisDataModulePointer</a>&#160;</td>
          <td class="paramname"><em>module</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a module that processes only a subset of the columns. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">col</td><td>First column. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">span</td><td>Number of columns. </td></tr>
    <tr><td class="paramdir"></td><td class="paramname">module</td><td>Module to add.</td></tr>
  </table>
  </dd>
</dl>
<p>Throws in the same situations as <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ada778191d76b2826b57e7b30ecd7a296" title="Adds a module to process the data. ">addModule()</a>.</p>
<p>Currently, all data sets are filtered using the same column mask.</p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000002">Todo:</a></b></dt><dd>This method doesn't currently work in all cases with multipoint data or with multiple data sets. In particular, if the added module requests storage and uses <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac97ab78a57e02aad95c9e679ef8b2798" title="Access stored data. ">getDataFrame()</a>, it will behave unpredictably (most likely asserts).</dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000003">Todo:</a></b></dt><dd>Generalize this method to multiple data sets (e.g., for adding modules that only process a single data set).</dd></dl>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ada778191d76b2826b57e7b30ecd7a296" title="Adds a module to process the data. ">addModule()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ada778191d76b2826b57e7b30ecd7a296"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractAnalysisData::addModule </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacegmx.xhtml#aea400e67c2f38e5bacdf8677f38a61cc">AnalysisDataModulePointer</a>&#160;</td>
          <td class="paramname"><em>module</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a module to process the data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">module</td><td>Module to add. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a></td><td>if<ul>
<li><code>module</code> is not compatible with the data object</li>
<li>data has already been added to the data object and everything is not available through <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac97ab78a57e02aad95c9e679ef8b2798" title="Access stored data. ">getDataFrame()</a>. </li>
</ul>
</td></tr>
    <tr><td class="paramname">unspecified</td><td>Any exception thrown by <code>module</code> in its notification methods (if data has been added).</td></tr>
  </table>
  </dd>
</dl>
<p>If data has already been added to the data, the new module immediately processes all existing data. <a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a> is thrown if all data is not available through <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac97ab78a57e02aad95c9e679ef8b2798" title="Access stored data. ">getDataFrame()</a>.</p>
<p>The caller can keep a copy of the module pointer if it requires later access to the module.</p>
<p>If the method throws, the state of the data object is not changed. The state of the data module is indeterminate. </p>

</div>
</div>
<a class="anchor" id="ae095550bd347b42db3c49e064bc44228"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AbstractAnalysisData::applyModule </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1IAnalysisDataModule.xhtml">IAnalysisDataModule</a> *&#160;</td>
          <td class="paramname"><em>module</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Applies a module to process data that is ready. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">module</td><td>Module to apply. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a></td><td>in same situations as <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ada778191d76b2826b57e7b30ecd7a296" title="Adds a module to process the data. ">addModule()</a>. </td></tr>
    <tr><td class="paramname">unspecified</td><td>Any exception thrown by <code>module</code> in its notification methods.</td></tr>
  </table>
  </dd>
</dl>
<p>This function works as <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ada778191d76b2826b57e7b30ecd7a296" title="Adds a module to process the data. ">addModule()</a>, except that it does not keep a reference to <code>module</code> within the data object after it returns. Also, it can only be called after the data is ready, and only if <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac97ab78a57e02aad95c9e679ef8b2798" title="Access stored data. ">getDataFrame()</a> gives access to all of the data. It is provided for additional flexibility in postprocessing in-memory data.</p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000004">Todo:</a></b></dt><dd>Currently, this method may not work correctly if <code>module</code> requests storage (<a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ada778191d76b2826b57e7b30ecd7a296" title="Adds a module to process the data. ">addModule()</a> has the same problem if called after data is started). </dd></dl>

</div>
</div>
<a class="anchor" id="a2b0e98a3d198fbb4786bb9dc900322d0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1AbstractAverageHistogram.xhtml">AbstractAverageHistogram</a> &amp; gmx::AnalysisDataWeightedHistogramModule::averager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the average histogram over all frames. </p>
<p>Can be called already before the histogram is calculated to customize the way the average histogram is calculated.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1AbstractAverageHistogram.xhtml" title="Base class for representing histograms averaged over frames. ">AbstractAverageHistogram</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ad0c3d329b51830be42ad0b447ac56d31"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::AbstractAnalysisData::columnCount </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dataSet</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the number of columns in a data set. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dataSet</td><td>Zero-based index of the data set to query. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The number of columns in the data.</dd></dl>
<p>If the number of columns is not yet known, returns 0. The returned value does not change after modules have been notified of data start, but may change multiple times before that, depending on the actual data class.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="ac5c4dbc7b71874e137e8af955fa09624"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::AbstractAnalysisData::columnCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the number of columns in the data. </p>
<dl class="section return"><dt>Returns</dt><dd>The number of columns in the data.</dd></dl>
<p>This is a convenience method for data objects with a single data set. Can only be called if <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#aa5e15c4c54a953a2d13855286ca1391e" title="Returns the number of data sets in the data object. ">dataSetCount()</a> == 1.</p>
<p>Does not throw.</p>
<dl class="section see"><dt>See Also</dt><dd>columnCount(int) </dd></dl>

</div>
</div>
<a class="anchor" id="ac7883928adfcfed54892d1d4c5e9746d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AnalysisDataWeightedHistogramModule::dataFinished </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called (once) when no more data is available. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">unspecified</td><td>Can throw any exception required by the implementing class to report errors. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classgmx_1_1AnalysisDataModuleParallel.xhtml#add45cffa28e066fb29d9bef2a4cbe128">gmx::AnalysisDataModuleParallel</a>.</p>

</div>
</div>
<a class="anchor" id="aa5e15c4c54a953a2d13855286ca1391e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::AbstractAnalysisData::dataSetCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the number of data sets in the data object. </p>
<dl class="section return"><dt>Returns</dt><dd>The number of data sets in the data.</dd></dl>
<p>If the number is not yet known, returns 0. The returned value does not change after modules have been notified of data start, but may change multiple times before that, depending on the actual data class.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a014c474b1932d26d37cd7b36c6c58ab9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::AnalysisDataWeightedHistogramModule::flags </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns properties supported by the module. </p>
<p>The return value of this method should not change after the module has been added to a data (this responsibility can, and in most cases must, be delegated to the user of the module).</p>
<p>The purpose of this method is to remove the need for common checks for data compatibility in the classes that implement the interface. Instead, <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml" title="Abstract base class for all objects that provide data. ">AbstractAnalysisData</a> performs these checks based on the flags provided.</p>
<p>Does not throw. </p>

<p>Implements <a class="el" href="classgmx_1_1AnalysisDataModuleParallel.xhtml#a33ca0a5e4edc05591face5316a78a03e">gmx::AnalysisDataModuleParallel</a>.</p>

</div>
</div>
<a class="anchor" id="a8a5ebdd0407a95e7dbb904f4ae5f4324"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::AnalysisDataWeightedHistogramModule::frameCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the total number of frames in the data. </p>
<dl class="section return"><dt>Returns</dt><dd>The total number of frames in the data.</dd></dl>
<p>This function returns the number of frames that the object has produced. If <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a99ba2f4072c75c8e56d1e377cb6b5f8c" title="Request storage of frames. ">requestStorage()</a> has been successfully called, tryGetDataframe() or <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac97ab78a57e02aad95c9e679ef8b2798" title="Access stored data. ">getDataFrame()</a> can be used to access some or all of these frames.</p>
<p>Does not throw. </p>

<p>Implements <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a49ff8cb5c6087a8081f72b436b9824e7">gmx::AbstractAnalysisData</a>.</p>

</div>
</div>
<a class="anchor" id="ae7745781a4c63a5c2ce40b7bdc8037a4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AnalysisDataWeightedHistogramModule::frameFinished </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1AnalysisDataFrameHeader.xhtml">AnalysisDataFrameHeader</a> &amp;&#160;</td>
          <td class="paramname"><em>header</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called when a data frame is finished. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">header</td><td>Header information for the frame that is ending. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">unspecified</td><td>Can throw any exception required by the implementing class to report errors. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classgmx_1_1AnalysisDataModuleParallel.xhtml#a19c9d392cb712341f3c66dcf6d6d09fb">gmx::AnalysisDataModuleParallel</a>.</p>

</div>
</div>
<a class="anchor" id="afb90d311cf374ad55fa3a7a6d0045ce7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AnalysisDataWeightedHistogramModule::frameFinishedSerial </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>frameIndex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called in sequential order for each frame after they are finished. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">frameIndex</td><td>Index of the next finished frame. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">unspecified</td><td>Can throw any exception required by the implementing class to report errors.</td></tr>
  </table>
  </dd>
</dl>
<p>This method is called after <a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#ae7745781a4c63a5c2ce40b7bdc8037a4" title="Called when a data frame is finished. ">frameFinished()</a>, but with an additional constraint that it is always called in serial and with an increasing <code>frameIndex</code>. Parallel data modules need this to serialize their data for downsteam serial modules; <a class="el" href="classgmx_1_1AnalysisDataModuleSerial.xhtml" title="Convenience base class for serial analysis data modules. ">AnalysisDataModuleSerial</a> provides an empty implementation, as there <a class="el" href="classgmx_1_1AnalysisDataWeightedHistogramModule.xhtml#ae7745781a4c63a5c2ce40b7bdc8037a4" title="Called when a data frame is finished. ">frameFinished()</a> can be used for the same purpose. </p>

<p>Implements <a class="el" href="classgmx_1_1AnalysisDataModuleParallel.xhtml#a48a6a63db19d9b91ea6682d1e2b20e7b">gmx::AnalysisDataModuleParallel</a>.</p>

</div>
</div>
<a class="anchor" id="acb77d880b0b206c456c4ed7ae47459cb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AnalysisDataWeightedHistogramModule::frameStarted </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1AnalysisDataFrameHeader.xhtml">AnalysisDataFrameHeader</a> &amp;&#160;</td>
          <td class="paramname"><em>frame</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called at the start of each data frame. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">frame</td><td>Header information for the frame that is starting. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">unspecified</td><td>Can throw any exception required by the implementing class to report errors. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classgmx_1_1AnalysisDataModuleParallel.xhtml#a070378d521d782c6e1eb3b8bb89b2586">gmx::AnalysisDataModuleParallel</a>.</p>

</div>
</div>
<a class="anchor" id="ac97ab78a57e02aad95c9e679ef8b2798"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1AnalysisDataFrameRef.xhtml">AnalysisDataFrameRef</a> gmx::AbstractAnalysisData::getDataFrame </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Access stored data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Zero-based frame index to access. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Frame reference to frame <code>index</code>. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a></td><td>if the requested frame is not accessible.</td></tr>
  </table>
  </dd>
</dl>
<p>If the data is not certainly available, use <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac7f670bd3e772d5055f485e9f0e51658" title="Access stored data. ">tryGetDataFrame()</a>.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a99ba2f4072c75c8e56d1e377cb6b5f8c" title="Request storage of frames. ">requestStorage()</a> </dd>
<dd>
<a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac7f670bd3e772d5055f485e9f0e51658" title="Access stored data. ">tryGetDataFrame()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="adadd173469be29d74a3a207bcb6d922f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AnalysisDataWeightedHistogramModule::init </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1AnalysisHistogramSettings.xhtml">AnalysisHistogramSettings</a> &amp;&#160;</td>
          <td class="paramname"><em>settings</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>(Re)initializes the histogram from settings. </p>

</div>
</div>
<a class="anchor" id="a3c84cd94769c773907605c53ba417a47"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::AbstractAnalysisData::isMultipoint </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Whether the data can have multiple points in the same column in the same frame. </p>
<dl class="section return"><dt>Returns</dt><dd><code>true</code> if multiple points in the same column are allowed within a single frame.</dd></dl>
<p>This kind of data can appear in many histogramming applications (e.g., RDFs), where each trajectory frame has several data points (possibly a different number for each frame). The current interface doesn't support storing such data, but this should rarely be necessary.</p>
<p>The returned value does not change after modules have been notified of data start.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a999025fb3ca712b3e42a658e6bff91d6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::AnalysisDataWeightedHistogramModule::parallelDataStarted </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml">AbstractAnalysisData</a> *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const AnalysisDataParallelOptions &amp;&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called (once) for parallel data when the data has been set up. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">data</td><td>Data object to which the module is added. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>Parallelization properties of the input data. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the module can process the input in non-sequential order. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a></td><td>if the provided data is not compatible. </td></tr>
    <tr><td class="paramname">unspecified</td><td>Can throw any exception required by the implementing class to report errors.</td></tr>
  </table>
  </dd>
</dl>
<p>This method is called instead of dataStarted() if the input data has the capability to present data in non-sequential order. If the method returns true, then the module accepts this and frame notification methods may be called in that non-sequential order. If the method returns false, then the frame notification methods are called in sequential order, as if dataStarted() had been called.</p>
<p>See dataStarted() for general information on initializing the data. That applies to this method as well, with the exception that calling <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a99ba2f4072c75c8e56d1e377cb6b5f8c" title="Request storage of frames. ">AbstractAnalysisData::requestStorage()</a> is currently not very well supported (or rather, accessing the requested storage doesn't work). </p>

<p>Implements <a class="el" href="classgmx_1_1AnalysisDataModuleParallel.xhtml#a9358c8ad5ca68f870170825024c79c9f">gmx::AnalysisDataModuleParallel</a>.</p>

</div>
</div>
<a class="anchor" id="a2c0f968b2ca8d8ad82e4e4ebe1bdf928"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AnalysisDataWeightedHistogramModule::pointsAdded </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1AnalysisDataPointSetRef.xhtml">AnalysisDataPointSetRef</a> &amp;&#160;</td>
          <td class="paramname"><em>points</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called one or more times during each data frame. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">points</td><td>Set of points added (also provides access to frame-level data). </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a></td><td>if the provided data is not compatible. </td></tr>
    <tr><td class="paramname">unspecified</td><td>Can throw any exception required by the implementing class to report errors.</td></tr>
  </table>
  </dd>
</dl>
<p>Can be called once or multiple times for a frame. For all data objects currently implemented in the library (and all objects that will use AnalysisDataStorage for internal implementation), it is called exactly once for each frame if the data is not multipoint, but currently this restriction is not enforced. </p>

<p>Implements <a class="el" href="classgmx_1_1AnalysisDataModuleParallel.xhtml#a06c9beccc773459c365d002c32fe0183">gmx::AnalysisDataModuleParallel</a>.</p>

</div>
</div>
<a class="anchor" id="a99ba2f4072c75c8e56d1e377cb6b5f8c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::AbstractAnalysisData::requestStorage </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nframes</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Request storage of frames. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">nframes</td><td>Request storing at least <code>nframes</code> previous frames (-1 = request storing all). Must be &gt;= -1. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the request could be satisfied.</dd></dl>
<p>If called multiple times, the largest request is honored.</p>
<p>Does not throw. Failure to honor the request is indicated through the return value.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac97ab78a57e02aad95c9e679ef8b2798" title="Access stored data. ">getDataFrame()</a> </dd>
<dd>
<a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac7f670bd3e772d5055f485e9f0e51658" title="Access stored data. ">tryGetDataFrame()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a32de78175630df494088f36e25886c3b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classgmx_1_1AnalysisHistogramSettings.xhtml">AnalysisHistogramSettings</a> &amp; gmx::AnalysisDataWeightedHistogramModule::settings </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns bin properties for the histogram. </p>

</div>
</div>
<a class="anchor" id="ac7f670bd3e772d5055f485e9f0e51658"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1AnalysisDataFrameRef.xhtml">AnalysisDataFrameRef</a> gmx::AbstractAnalysisData::tryGetDataFrame </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Access stored data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Zero-based frame index to access. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Frame reference to frame <code>index</code>, or an invalid reference if no such frame is available.</dd></dl>
<p>Does not throw. Failure to access a frame with the given index is indicated through the return value. Negative <code>index</code> is allowed, and will always result in an invalid reference being returned.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a99ba2f4072c75c8e56d1e377cb6b5f8c" title="Request storage of frames. ">requestStorage()</a> </dd>
<dd>
<a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#ac97ab78a57e02aad95c9e679ef8b2798" title="Access stored data. ">getDataFrame()</a> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/analysisdata/modules/<a class="el" href="histogram_8h.xhtml">histogram.h</a></li>
<li>src/gromacs/analysisdata/modules/histogram.cpp</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:54:36 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

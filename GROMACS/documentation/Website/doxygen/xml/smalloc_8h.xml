<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="smalloc_8h" kind="file">
    <compoundname>smalloc.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes refid="basedefinitions_8h" local="yes">gromacs/utility/basedefinitions.h</includes>
    <includedby refid="displacement_8cpp" local="yes">src/gromacs/analysisdata/modules/displacement.cpp</includedby>
    <includedby refid="unique__cptr_8h" local="yes">src/gromacs/utility/unique_cptr.h</includedby>
    <includedby refid="tests_2electricfield_8cpp" local="yes">src/gromacs/applied-forces/tests/electricfield.cpp</includedby>
    <includedby refid="biasstate_8cpp" local="yes">src/gromacs/awh/biasstate.cpp</includedby>
    <includedby refid="biaswriter_8cpp" local="yes">src/gromacs/awh/biaswriter.cpp</includedby>
    <includedby refid="grid_8cpp" local="yes">src/gromacs/awh/grid.cpp</includedby>
    <includedby refid="read-params_8cpp" local="yes">src/gromacs/awh/read-params.cpp</includedby>
    <includedby refid="tests_2biasstate_8cpp" local="yes">src/gromacs/awh/tests/biasstate.cpp</includedby>
    <includedby refid="cmdlineinit_8cpp" local="yes">src/gromacs/commandline/cmdlineinit.cpp</includedby>
    <includedby refid="filenm_8cpp" local="yes">src/gromacs/commandline/filenm.cpp</includedby>
    <includedby refid="pargs_8cpp" local="yes">src/gromacs/commandline/pargs.cpp</includedby>
    <includedby refid="autocorr_8cpp" local="yes">src/gromacs/correlationfunctions/autocorr.cpp</includedby>
    <includedby refid="crosscorr_8cpp" local="yes">src/gromacs/correlationfunctions/crosscorr.cpp</includedby>
    <includedby refid="expfit_8cpp" local="yes">src/gromacs/correlationfunctions/expfit.cpp</includedby>
    <includedby refid="tests_2autocorr_8cpp" local="yes">src/gromacs/correlationfunctions/tests/autocorr.cpp</includedby>
    <includedby refid="correlationdataset_8cpp" local="yes">src/gromacs/correlationfunctions/tests/correlationdataset.cpp</includedby>
    <includedby refid="tests_2expfit_8cpp" local="yes">src/gromacs/correlationfunctions/tests/expfit.cpp</includedby>
    <includedby refid="ga2la_8h" local="yes">src/gromacs/domdec/ga2la.h</includedby>
    <includedby refid="domdec_8cpp" local="yes">src/gromacs/domdec/domdec.cpp</includedby>
    <includedby refid="domdec__constraints_8cpp" local="yes">src/gromacs/domdec/domdec_constraints.cpp</includedby>
    <includedby refid="hash_8h" local="yes">src/gromacs/domdec/hash.h</includedby>
    <includedby refid="domdec__setup_8cpp" local="yes">src/gromacs/domdec/domdec_setup.cpp</includedby>
    <includedby refid="domdec__specatomcomm_8cpp" local="yes">src/gromacs/domdec/domdec_specatomcomm.cpp</includedby>
    <includedby refid="domdec__topology_8cpp" local="yes">src/gromacs/domdec/domdec_topology.cpp</includedby>
    <includedby refid="domdec__vsite_8cpp" local="yes">src/gromacs/domdec/domdec_vsite.cpp</includedby>
    <includedby refid="broadcaststructs_8h" local="yes">src/gromacs/mdlib/broadcaststructs.h</includedby>
    <includedby refid="edsam_8cpp" local="yes">src/gromacs/essentialdynamics/edsam.cpp</includedby>
    <includedby refid="calculate-spline-moduli_8cpp" local="yes">src/gromacs/ewald/calculate-spline-moduli.cpp</includedby>
    <includedby refid="ewald_8cpp" local="yes">src/gromacs/ewald/ewald.cpp</includedby>
    <includedby refid="pme-gather_8cpp" local="yes">src/gromacs/ewald/pme-gather.cpp</includedby>
    <includedby refid="pme-grid_8cpp" local="yes">src/gromacs/ewald/pme-grid.cpp</includedby>
    <includedby refid="pme-load-balancing_8cpp" local="yes">src/gromacs/ewald/pme-load-balancing.cpp</includedby>
    <includedby refid="pme-only_8cpp" local="yes">src/gromacs/ewald/pme-only.cpp</includedby>
    <includedby refid="pme-pp_8cpp" local="yes">src/gromacs/ewald/pme-pp.cpp</includedby>
    <includedby refid="pme-redistribute_8cpp" local="yes">src/gromacs/ewald/pme-redistribute.cpp</includedby>
    <includedby refid="pme-solve_8cpp" local="yes">src/gromacs/ewald/pme-solve.cpp</includedby>
    <includedby refid="pme-spline-work_8cpp" local="yes">src/gromacs/ewald/pme-spline-work.cpp</includedby>
    <includedby refid="pme-spread_8cpp" local="yes">src/gromacs/ewald/pme-spread.cpp</includedby>
    <includedby refid="pme_8cpp" local="yes">src/gromacs/ewald/pme.cpp</includedby>
    <includedby refid="fft5d_8cpp" local="yes">src/gromacs/fft/fft5d.cpp</includedby>
    <includedby refid="parallel__3dfft_8cpp" local="yes">src/gromacs/fft/parallel_3dfft.cpp</includedby>
    <includedby refid="checkpoint_8cpp" local="yes">src/gromacs/fileio/checkpoint.cpp</includedby>
    <includedby refid="confio_8cpp" local="yes">src/gromacs/fileio/confio.cpp</includedby>
    <includedby refid="enxio_8cpp" local="yes">src/gromacs/fileio/enxio.cpp</includedby>
    <includedby refid="espio_8cpp" local="yes">src/gromacs/fileio/espio.cpp</includedby>
    <includedby refid="g96io_8cpp" local="yes">src/gromacs/fileio/g96io.cpp</includedby>
    <includedby refid="gmxfio-xdr_8cpp" local="yes">src/gromacs/fileio/gmxfio-xdr.cpp</includedby>
    <includedby refid="gmxfio_8cpp" local="yes">src/gromacs/fileio/gmxfio.cpp</includedby>
    <includedby refid="groio_8cpp" local="yes">src/gromacs/fileio/groio.cpp</includedby>
    <includedby refid="matio_8cpp" local="yes">src/gromacs/fileio/matio.cpp</includedby>
    <includedby refid="mtxio_8cpp" local="yes">src/gromacs/fileio/mtxio.cpp</includedby>
    <includedby refid="oenv_8cpp" local="yes">src/gromacs/fileio/oenv.cpp</includedby>
    <includedby refid="pdbio_8cpp" local="yes">src/gromacs/fileio/pdbio.cpp</includedby>
    <includedby refid="readinp_8cpp" local="yes">src/gromacs/fileio/readinp.cpp</includedby>
    <includedby refid="tests_2confio_8cpp" local="yes">src/gromacs/fileio/tests/confio.cpp</includedby>
    <includedby refid="tests_2readinp_8cpp" local="yes">src/gromacs/fileio/tests/readinp.cpp</includedby>
    <includedby refid="tngio_8cpp" local="yes">src/gromacs/fileio/tngio.cpp</includedby>
    <includedby refid="tpxio_8cpp" local="yes">src/gromacs/fileio/tpxio.cpp</includedby>
    <includedby refid="trrio_8cpp" local="yes">src/gromacs/fileio/trrio.cpp</includedby>
    <includedby refid="trxio_8cpp" local="yes">src/gromacs/fileio/trxio.cpp</includedby>
    <includedby refid="vmdio_8cpp" local="yes">src/gromacs/fileio/vmdio.cpp</includedby>
    <includedby refid="warninp_8cpp" local="yes">src/gromacs/fileio/warninp.cpp</includedby>
    <includedby refid="writeps_8cpp" local="yes">src/gromacs/fileio/writeps.cpp</includedby>
    <includedby refid="xdrd_8cpp" local="yes">src/gromacs/fileio/xdrd.cpp</includedby>
    <includedby refid="xtcio_8cpp" local="yes">src/gromacs/fileio/xtcio.cpp</includedby>
    <includedby refid="xvgr_8cpp" local="yes">src/gromacs/fileio/xvgr.cpp</includedby>
    <includedby refid="anadih_8cpp" local="yes">src/gromacs/gmxana/anadih.cpp</includedby>
    <includedby refid="cmat_8cpp" local="yes">src/gromacs/gmxana/cmat.cpp</includedby>
    <includedby refid="dens__filter_8cpp" local="yes">src/gromacs/gmxana/dens_filter.cpp</includedby>
    <includedby refid="dlist_8cpp" local="yes">src/gromacs/gmxana/dlist.cpp</includedby>
    <includedby refid="eigio_8cpp" local="yes">src/gromacs/gmxana/eigio.cpp</includedby>
    <includedby refid="fitahx_8cpp" local="yes">src/gromacs/gmxana/fitahx.cpp</includedby>
    <includedby refid="gmx__anadock_8cpp" local="yes">src/gromacs/gmxana/gmx_anadock.cpp</includedby>
    <includedby refid="gmx__anaeig_8cpp" local="yes">src/gromacs/gmxana/gmx_anaeig.cpp</includedby>
    <includedby refid="gmx__analyze_8cpp" local="yes">src/gromacs/gmxana/gmx_analyze.cpp</includedby>
    <includedby refid="gmx__angle_8cpp" local="yes">src/gromacs/gmxana/gmx_angle.cpp</includedby>
    <includedby refid="gmx__awh_8cpp" local="yes">src/gromacs/gmxana/gmx_awh.cpp</includedby>
    <includedby refid="gmx__bar_8cpp" local="yes">src/gromacs/gmxana/gmx_bar.cpp</includedby>
    <includedby refid="gmx__bundle_8cpp" local="yes">src/gromacs/gmxana/gmx_bundle.cpp</includedby>
    <includedby refid="gmx__chi_8cpp" local="yes">src/gromacs/gmxana/gmx_chi.cpp</includedby>
    <includedby refid="gmx__cluster_8cpp" local="yes">src/gromacs/gmxana/gmx_cluster.cpp</includedby>
    <includedby refid="gmx__clustsize_8cpp" local="yes">src/gromacs/gmxana/gmx_clustsize.cpp</includedby>
    <includedby refid="gmx__confrms_8cpp" local="yes">src/gromacs/gmxana/gmx_confrms.cpp</includedby>
    <includedby refid="gmx__covar_8cpp" local="yes">src/gromacs/gmxana/gmx_covar.cpp</includedby>
    <includedby refid="gmx__current_8cpp" local="yes">src/gromacs/gmxana/gmx_current.cpp</includedby>
    <includedby refid="gmx__density_8cpp" local="yes">src/gromacs/gmxana/gmx_density.cpp</includedby>
    <includedby refid="gmx__densmap_8cpp" local="yes">src/gromacs/gmxana/gmx_densmap.cpp</includedby>
    <includedby refid="gmx__densorder_8cpp" local="yes">src/gromacs/gmxana/gmx_densorder.cpp</includedby>
    <includedby refid="gmx__dielectric_8cpp" local="yes">src/gromacs/gmxana/gmx_dielectric.cpp</includedby>
    <includedby refid="gmx__dipoles_8cpp" local="yes">src/gromacs/gmxana/gmx_dipoles.cpp</includedby>
    <includedby refid="gmx__disre_8cpp" local="yes">src/gromacs/gmxana/gmx_disre.cpp</includedby>
    <includedby refid="gmx__do__dssp_8cpp" local="yes">src/gromacs/gmxana/gmx_do_dssp.cpp</includedby>
    <includedby refid="gmx__dos_8cpp" local="yes">src/gromacs/gmxana/gmx_dos.cpp</includedby>
    <includedby refid="gmx__dyecoupl_8cpp" local="yes">src/gromacs/gmxana/gmx_dyecoupl.cpp</includedby>
    <includedby refid="gmx__dyndom_8cpp" local="yes">src/gromacs/gmxana/gmx_dyndom.cpp</includedby>
    <includedby refid="gmx__editconf_8cpp" local="yes">src/gromacs/gmxana/gmx_editconf.cpp</includedby>
    <includedby refid="gmx__eneconv_8cpp" local="yes">src/gromacs/gmxana/gmx_eneconv.cpp</includedby>
    <includedby refid="gmx__enemat_8cpp" local="yes">src/gromacs/gmxana/gmx_enemat.cpp</includedby>
    <includedby refid="gmx__energy_8cpp" local="yes">src/gromacs/gmxana/gmx_energy.cpp</includedby>
    <includedby refid="gmx__filter_8cpp" local="yes">src/gromacs/gmxana/gmx_filter.cpp</includedby>
    <includedby refid="gmx__genion_8cpp" local="yes">src/gromacs/gmxana/gmx_genion.cpp</includedby>
    <includedby refid="gmx__genpr_8cpp" local="yes">src/gromacs/gmxana/gmx_genpr.cpp</includedby>
    <includedby refid="gmx__gyrate_8cpp" local="yes">src/gromacs/gmxana/gmx_gyrate.cpp</includedby>
    <includedby refid="gmx__h2order_8cpp" local="yes">src/gromacs/gmxana/gmx_h2order.cpp</includedby>
    <includedby refid="gmx__hbond_8cpp" local="yes">src/gromacs/gmxana/gmx_hbond.cpp</includedby>
    <includedby refid="gmx__helix_8cpp" local="yes">src/gromacs/gmxana/gmx_helix.cpp</includedby>
    <includedby refid="gmx__helixorient_8cpp" local="yes">src/gromacs/gmxana/gmx_helixorient.cpp</includedby>
    <includedby refid="gmx__hydorder_8cpp" local="yes">src/gromacs/gmxana/gmx_hydorder.cpp</includedby>
    <includedby refid="gmx__lie_8cpp" local="yes">src/gromacs/gmxana/gmx_lie.cpp</includedby>
    <includedby refid="gmx__make__edi_8cpp" local="yes">src/gromacs/gmxana/gmx_make_edi.cpp</includedby>
    <includedby refid="gmx__make__ndx_8cpp" local="yes">src/gromacs/gmxana/gmx_make_ndx.cpp</includedby>
    <includedby refid="gmx__mdmat_8cpp" local="yes">src/gromacs/gmxana/gmx_mdmat.cpp</includedby>
    <includedby refid="gmx__mindist_8cpp" local="yes">src/gromacs/gmxana/gmx_mindist.cpp</includedby>
    <includedby refid="gmx__mk__angndx_8cpp" local="yes">src/gromacs/gmxana/gmx_mk_angndx.cpp</includedby>
    <includedby refid="gmx__morph_8cpp" local="yes">src/gromacs/gmxana/gmx_morph.cpp</includedby>
    <includedby refid="gmx__msd_8cpp" local="yes">src/gromacs/gmxana/gmx_msd.cpp</includedby>
    <includedby refid="gmx__nmeig_8cpp" local="yes">src/gromacs/gmxana/gmx_nmeig.cpp</includedby>
    <includedby refid="gmx__nmens_8cpp" local="yes">src/gromacs/gmxana/gmx_nmens.cpp</includedby>
    <includedby refid="gmx__nmr_8cpp" local="yes">src/gromacs/gmxana/gmx_nmr.cpp</includedby>
    <includedby refid="gmx__nmtraj_8cpp" local="yes">src/gromacs/gmxana/gmx_nmtraj.cpp</includedby>
    <includedby refid="gmx__order_8cpp" local="yes">src/gromacs/gmxana/gmx_order.cpp</includedby>
    <includedby refid="gmx__pme__error_8cpp" local="yes">src/gromacs/gmxana/gmx_pme_error.cpp</includedby>
    <includedby refid="gmx__polystat_8cpp" local="yes">src/gromacs/gmxana/gmx_polystat.cpp</includedby>
    <includedby refid="gmx__potential_8cpp" local="yes">src/gromacs/gmxana/gmx_potential.cpp</includedby>
    <includedby refid="gmx__principal_8cpp" local="yes">src/gromacs/gmxana/gmx_principal.cpp</includedby>
    <includedby refid="gmx__rama_8cpp" local="yes">src/gromacs/gmxana/gmx_rama.cpp</includedby>
    <includedby refid="gmx__rms_8cpp" local="yes">src/gromacs/gmxana/gmx_rms.cpp</includedby>
    <includedby refid="gmx__rmsdist_8cpp" local="yes">src/gromacs/gmxana/gmx_rmsdist.cpp</includedby>
    <includedby refid="gmx__rmsf_8cpp" local="yes">src/gromacs/gmxana/gmx_rmsf.cpp</includedby>
    <includedby refid="gmx__rotacf_8cpp" local="yes">src/gromacs/gmxana/gmx_rotacf.cpp</includedby>
    <includedby refid="gmx__rotmat_8cpp" local="yes">src/gromacs/gmxana/gmx_rotmat.cpp</includedby>
    <includedby refid="gmx__saltbr_8cpp" local="yes">src/gromacs/gmxana/gmx_saltbr.cpp</includedby>
    <includedby refid="gmx__sans_8cpp" local="yes">src/gromacs/gmxana/gmx_sans.cpp</includedby>
    <includedby refid="gmx__saxs_8cpp" local="yes">src/gromacs/gmxana/gmx_saxs.cpp</includedby>
    <includedby refid="gmx__sham_8cpp" local="yes">src/gromacs/gmxana/gmx_sham.cpp</includedby>
    <includedby refid="gmx__sigeps_8cpp" local="yes">src/gromacs/gmxana/gmx_sigeps.cpp</includedby>
    <includedby refid="gmx__sorient_8cpp" local="yes">src/gromacs/gmxana/gmx_sorient.cpp</includedby>
    <includedby refid="gmx__spatial_8cpp" local="yes">src/gromacs/gmxana/gmx_spatial.cpp</includedby>
    <includedby refid="gmx__spol_8cpp" local="yes">src/gromacs/gmxana/gmx_spol.cpp</includedby>
    <includedby refid="gmx__tcaf_8cpp" local="yes">src/gromacs/gmxana/gmx_tcaf.cpp</includedby>
    <includedby refid="gmx__traj_8cpp" local="yes">src/gromacs/gmxana/gmx_traj.cpp</includedby>
    <includedby refid="gmx__trjcat_8cpp" local="yes">src/gromacs/gmxana/gmx_trjcat.cpp</includedby>
    <includedby refid="gmx__trjconv_8cpp" local="yes">src/gromacs/gmxana/gmx_trjconv.cpp</includedby>
    <includedby refid="gmx__trjorder_8cpp" local="yes">src/gromacs/gmxana/gmx_trjorder.cpp</includedby>
    <includedby refid="gmx__tune__pme_8cpp" local="yes">src/gromacs/gmxana/gmx_tune_pme.cpp</includedby>
    <includedby refid="gmx__vanhove_8cpp" local="yes">src/gromacs/gmxana/gmx_vanhove.cpp</includedby>
    <includedby refid="gmx__velacc_8cpp" local="yes">src/gromacs/gmxana/gmx_velacc.cpp</includedby>
    <includedby refid="gmx__wham_8cpp" local="yes">src/gromacs/gmxana/gmx_wham.cpp</includedby>
    <includedby refid="gmx__wheel_8cpp" local="yes">src/gromacs/gmxana/gmx_wheel.cpp</includedby>
    <includedby refid="gmx__xpm2ps_8cpp" local="yes">src/gromacs/gmxana/gmx_xpm2ps.cpp</includedby>
    <includedby refid="hxprops_8cpp" local="yes">src/gromacs/gmxana/hxprops.cpp</includedby>
    <includedby refid="nrama_8cpp" local="yes">src/gromacs/gmxana/nrama.cpp</includedby>
    <includedby refid="nsfactor_8cpp" local="yes">src/gromacs/gmxana/nsfactor.cpp</includedby>
    <includedby refid="powerspect_8cpp" local="yes">src/gromacs/gmxana/powerspect.cpp</includedby>
    <includedby refid="pp2shift_8cpp" local="yes">src/gromacs/gmxana/pp2shift.cpp</includedby>
    <includedby refid="princ_8cpp" local="yes">src/gromacs/gmxana/princ.cpp</includedby>
    <includedby refid="sfactor_8cpp" local="yes">src/gromacs/gmxana/sfactor.cpp</includedby>
    <includedby refid="chargegroup_8cpp" local="yes">src/gromacs/gmxlib/chargegroup.cpp</includedby>
    <includedby refid="network_8cpp" local="yes">src/gromacs/gmxlib/network.cpp</includedby>
    <includedby refid="nb__kernel_8cpp" local="yes">src/gromacs/gmxlib/nonbonded/nb_kernel.cpp</includedby>
    <includedby refid="nb__kernel__allvsall_8c" local="yes">src/gromacs/gmxlib/nonbonded/nb_kernel_c/nb_kernel_allvsall.c</includedby>
    <includedby refid="nb__kernel__allvsallgb_8c" local="yes">src/gromacs/gmxlib/nonbonded/nb_kernel_c/nb_kernel_allvsallgb.c</includedby>
    <includedby refid="nonbonded_8cpp" local="yes">src/gromacs/gmxlib/nonbonded/nonbonded.cpp</includedby>
    <includedby refid="nrnb_8cpp" local="yes">src/gromacs/gmxlib/nrnb.cpp</includedby>
    <includedby refid="add__par_8cpp" local="yes">src/gromacs/gmxpreprocess/add_par.cpp</includedby>
    <includedby refid="convparm_8cpp" local="yes">src/gromacs/gmxpreprocess/convparm.cpp</includedby>
    <includedby refid="fflibutil_8cpp" local="yes">src/gromacs/gmxpreprocess/fflibutil.cpp</includedby>
    <includedby refid="gen__ad_8cpp" local="yes">src/gromacs/gmxpreprocess/gen_ad.cpp</includedby>
    <includedby refid="gen__maxwell__velocities_8cpp" local="yes">src/gromacs/gmxpreprocess/gen_maxwell_velocities.cpp</includedby>
    <includedby refid="gen__vsite_8cpp" local="yes">src/gromacs/gmxpreprocess/gen_vsite.cpp</includedby>
    <includedby refid="genconf_8cpp" local="yes">src/gromacs/gmxpreprocess/genconf.cpp</includedby>
    <includedby refid="genhydro_8cpp" local="yes">src/gromacs/gmxpreprocess/genhydro.cpp</includedby>
    <includedby refid="gmxcpp_8cpp" local="yes">src/gromacs/gmxpreprocess/gmxcpp.cpp</includedby>
    <includedby refid="gpp__atomtype_8cpp" local="yes">src/gromacs/gmxpreprocess/gpp_atomtype.cpp</includedby>
    <includedby refid="gpp__bond__atomtype_8cpp" local="yes">src/gromacs/gmxpreprocess/gpp_bond_atomtype.cpp</includedby>
    <includedby refid="gpp__nextnb_8cpp" local="yes">src/gromacs/gmxpreprocess/gpp_nextnb.cpp</includedby>
    <includedby refid="gromacs_2gmxpreprocess_2grompp_8cpp" local="yes">src/gromacs/gmxpreprocess/grompp.cpp</includedby>
    <includedby refid="h__db_8cpp" local="yes">src/gromacs/gmxpreprocess/h_db.cpp</includedby>
    <includedby refid="hackblock_8cpp" local="yes">src/gromacs/gmxpreprocess/hackblock.cpp</includedby>
    <includedby refid="hizzie_8cpp" local="yes">src/gromacs/gmxpreprocess/hizzie.cpp</includedby>
    <includedby refid="insert-molecules_8cpp" local="yes">src/gromacs/gmxpreprocess/insert-molecules.cpp</includedby>
    <includedby refid="nm2type_8cpp" local="yes">src/gromacs/gmxpreprocess/nm2type.cpp</includedby>
    <includedby refid="pdb2gmx_8cpp" local="yes">src/gromacs/gmxpreprocess/pdb2gmx.cpp</includedby>
    <includedby refid="pdb2top_8cpp" local="yes">src/gromacs/gmxpreprocess/pdb2top.cpp</includedby>
    <includedby refid="read-conformation_8cpp" local="yes">src/gromacs/gmxpreprocess/read-conformation.cpp</includedby>
    <includedby refid="readir_8cpp" local="yes">src/gromacs/gmxpreprocess/readir.cpp</includedby>
    <includedby refid="readpull_8cpp" local="yes">src/gromacs/gmxpreprocess/readpull.cpp</includedby>
    <includedby refid="readrot_8cpp" local="yes">src/gromacs/gmxpreprocess/readrot.cpp</includedby>
    <includedby refid="resall_8cpp" local="yes">src/gromacs/gmxpreprocess/resall.cpp</includedby>
    <includedby refid="solvate_8cpp" local="yes">src/gromacs/gmxpreprocess/solvate.cpp</includedby>
    <includedby refid="specbond_8cpp" local="yes">src/gromacs/gmxpreprocess/specbond.cpp</includedby>
    <includedby refid="ter__db_8cpp" local="yes">src/gromacs/gmxpreprocess/ter_db.cpp</includedby>
    <includedby refid="tomorse_8cpp" local="yes">src/gromacs/gmxpreprocess/tomorse.cpp</includedby>
    <includedby refid="topdirs_8cpp" local="yes">src/gromacs/gmxpreprocess/topdirs.cpp</includedby>
    <includedby refid="topio_8cpp" local="yes">src/gromacs/gmxpreprocess/topio.cpp</includedby>
    <includedby refid="toppush_8cpp" local="yes">src/gromacs/gmxpreprocess/toppush.cpp</includedby>
    <includedby refid="topshake_8cpp" local="yes">src/gromacs/gmxpreprocess/topshake.cpp</includedby>
    <includedby refid="toputil_8cpp" local="yes">src/gromacs/gmxpreprocess/toputil.cpp</includedby>
    <includedby refid="vsite__parm_8cpp" local="yes">src/gromacs/gmxpreprocess/vsite_parm.cpp</includedby>
    <includedby refid="x2top_8cpp" local="yes">src/gromacs/gmxpreprocess/x2top.cpp</includedby>
    <includedby refid="xlate_8cpp" local="yes">src/gromacs/gmxpreprocess/xlate.cpp</includedby>
    <includedby refid="gpu__utils__ocl_8cpp" local="yes">src/gromacs/gpu_utils/gpu_utils_ocl.cpp</includedby>
    <includedby refid="ocl__caching_8cpp" local="yes">src/gromacs/gpu_utils/ocl_caching.cpp</includedby>
    <includedby refid="ocl__compiler_8cpp" local="yes">src/gromacs/gpu_utils/ocl_compiler.cpp</includedby>
    <includedby refid="oclutils_8cpp" local="yes">src/gromacs/gpu_utils/oclutils.cpp</includedby>
    <includedby refid="gputest_8cpp" local="yes">src/gromacs/gpu_utils/tests/gputest.cpp</includedby>
    <includedby refid="pinnedmemorychecker_8cpp" local="yes">src/gromacs/gpu_utils/tests/pinnedmemorychecker.cpp</includedby>
    <includedby refid="detecthardware_8cpp" local="yes">src/gromacs/hardware/detecthardware.cpp</includedby>
    <includedby refid="imd_8cpp" local="yes">src/gromacs/imd/imd.cpp</includedby>
    <includedby refid="imdsocket_8cpp" local="yes">src/gromacs/imd/imdsocket.cpp</includedby>
    <includedby refid="eigensolver_8cpp" local="yes">src/gromacs/linearalgebra/eigensolver.cpp</includedby>
    <includedby refid="matrix_8cpp" local="yes">src/gromacs/linearalgebra/matrix.cpp</includedby>
    <includedby refid="nrjac_8cpp" local="yes">src/gromacs/linearalgebra/nrjac.cpp</includedby>
    <includedby refid="sparsematrix_8cpp" local="yes">src/gromacs/linearalgebra/sparsematrix.cpp</includedby>
    <includedby refid="bonded_8cpp" local="yes">src/gromacs/listed-forces/bonded.cpp</includedby>
    <includedby refid="disre_8cpp" local="yes">src/gromacs/listed-forces/disre.cpp</includedby>
    <includedby refid="listed-forces_8cpp" local="yes">src/gromacs/listed-forces/listed-forces.cpp</includedby>
    <includedby refid="manage-threading_8cpp" local="yes">src/gromacs/listed-forces/manage-threading.cpp</includedby>
    <includedby refid="orires_8cpp" local="yes">src/gromacs/listed-forces/orires.cpp</includedby>
    <includedby refid="do__fit_8cpp" local="yes">src/gromacs/math/do_fit.cpp</includedby>
    <includedby refid="broadcaststructs_8cpp" local="yes">src/gromacs/mdlib/broadcaststructs.cpp</includedby>
    <includedby refid="calc__verletbuf_8cpp" local="yes">src/gromacs/mdlib/calc_verletbuf.cpp</includedby>
    <includedby refid="clincs_8cpp" local="yes">src/gromacs/mdlib/clincs.cpp</includedby>
    <includedby refid="constr_8cpp" local="yes">src/gromacs/mdlib/constr.cpp</includedby>
    <includedby refid="coupling_8cpp" local="yes">src/gromacs/mdlib/coupling.cpp</includedby>
    <includedby refid="csettle_8cpp" local="yes">src/gromacs/mdlib/csettle.cpp</includedby>
    <includedby refid="ebin_8cpp" local="yes">src/gromacs/mdlib/ebin.cpp</includedby>
    <includedby refid="expanded_8cpp" local="yes">src/gromacs/mdlib/expanded.cpp</includedby>
    <includedby refid="force_8cpp" local="yes">src/gromacs/mdlib/force.cpp</includedby>
    <includedby refid="forcerec_8cpp" local="yes">src/gromacs/mdlib/forcerec.cpp</includedby>
    <includedby refid="genborn_8cpp" local="yes">src/gromacs/mdlib/genborn.cpp</includedby>
    <includedby refid="genborn__allvsall_8cpp" local="yes">src/gromacs/mdlib/genborn_allvsall.cpp</includedby>
    <includedby refid="groupcoord_8cpp" local="yes">src/gromacs/mdlib/groupcoord.cpp</includedby>
    <includedby refid="main_8cpp" local="yes">src/gromacs/mdlib/main.cpp</includedby>
    <includedby refid="md__support_8cpp" local="yes">src/gromacs/mdlib/md_support.cpp</includedby>
    <includedby refid="mdatoms_8cpp" local="yes">src/gromacs/mdlib/mdatoms.cpp</includedby>
    <includedby refid="mdebin_8cpp" local="yes">src/gromacs/mdlib/mdebin.cpp</includedby>
    <includedby refid="mdebin__bar_8cpp" local="yes">src/gromacs/mdlib/mdebin_bar.cpp</includedby>
    <includedby refid="mdoutf_8cpp" local="yes">src/gromacs/mdlib/mdoutf.cpp</includedby>
    <includedby refid="mdsetup_8cpp" local="yes">src/gromacs/mdlib/mdsetup.cpp</includedby>
    <includedby refid="minimize_8cpp" local="yes">src/gromacs/mdlib/minimize.cpp</includedby>
    <includedby refid="nbnxn__atomdata_8cpp" local="yes">src/gromacs/mdlib/nbnxn_atomdata.cpp</includedby>
    <includedby refid="nbnxn__grid_8cpp" local="yes">src/gromacs/mdlib/nbnxn_grid.cpp</includedby>
    <includedby refid="nbnxn__kernel__ref_8cpp" local="yes">src/gromacs/mdlib/nbnxn_kernels/nbnxn_kernel_ref.cpp</includedby>
    <includedby refid="nbnxn__ocl__data__mgmt_8cpp" local="yes">src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_data_mgmt.cpp</includedby>
    <includedby refid="nbnxn__search_8cpp" local="yes">src/gromacs/mdlib/nbnxn_search.cpp</includedby>
    <includedby refid="ns_8cpp" local="yes">src/gromacs/mdlib/ns.cpp</includedby>
    <includedby refid="nsgrid_8cpp" local="yes">src/gromacs/mdlib/nsgrid.cpp</includedby>
    <includedby refid="qm__orca_8cpp" local="yes">src/gromacs/mdlib/qm_orca.cpp</includedby>
    <includedby refid="qmmm_8cpp" local="yes">src/gromacs/mdlib/qmmm.cpp</includedby>
    <includedby refid="rbin_8cpp" local="yes">src/gromacs/mdlib/rbin.cpp</includedby>
    <includedby refid="shakef_8cpp" local="yes">src/gromacs/mdlib/shakef.cpp</includedby>
    <includedby refid="shellfc_8cpp" local="yes">src/gromacs/mdlib/shellfc.cpp</includedby>
    <includedby refid="sim__util_8cpp" local="yes">src/gromacs/mdlib/sim_util.cpp</includedby>
    <includedby refid="splitter_8cpp" local="yes">src/gromacs/mdlib/splitter.cpp</includedby>
    <includedby refid="stat_8cpp" local="yes">src/gromacs/mdlib/stat.cpp</includedby>
    <includedby refid="settle_8cpp" local="yes">src/gromacs/mdlib/tests/settle.cpp</includedby>
    <includedby refid="tgroup_8cpp" local="yes">src/gromacs/mdlib/tgroup.cpp</includedby>
    <includedby refid="tpi_8cpp" local="yes">src/gromacs/mdlib/tpi.cpp</includedby>
    <includedby refid="gromacs_2mdlib_2trajectory__writing_8cpp" local="yes">src/gromacs/mdlib/trajectory_writing.cpp</includedby>
    <includedby refid="update_8cpp" local="yes">src/gromacs/mdlib/update.cpp</includedby>
    <includedby refid="vcm_8cpp" local="yes">src/gromacs/mdlib/vcm.cpp</includedby>
    <includedby refid="vsite_8cpp" local="yes">src/gromacs/mdlib/vsite.cpp</includedby>
    <includedby refid="wall_8cpp" local="yes">src/gromacs/mdlib/wall.cpp</includedby>
    <includedby refid="wnblist_8cpp" local="yes">src/gromacs/mdlib/wnblist.cpp</includedby>
    <includedby refid="handlerestart_8cpp" local="yes">src/gromacs/mdrunutility/handlerestart.cpp</includedby>
    <includedby refid="mdmodules_8cpp" local="yes">src/gromacs/mdrunutility/mdmodules.cpp</includedby>
    <includedby refid="threadaffinitytest_8cpp" local="yes">src/gromacs/mdrunutility/tests/threadaffinitytest.cpp</includedby>
    <includedby refid="threadaffinity_8cpp" local="yes">src/gromacs/mdrunutility/threadaffinity.cpp</includedby>
    <includedby refid="df__history_8cpp" local="yes">src/gromacs/mdtypes/df_history.cpp</includedby>
    <includedby refid="inputrec_8cpp" local="yes">src/gromacs/mdtypes/inputrec.cpp</includedby>
    <includedby refid="state_8cpp" local="yes">src/gromacs/mdtypes/state.cpp</includedby>
    <includedby refid="mshift_8cpp" local="yes">src/gromacs/pbcutil/mshift.cpp</includedby>
    <includedby refid="pbc_8cpp" local="yes">src/gromacs/pbcutil/pbc.cpp</includedby>
    <includedby refid="rmpbc_8cpp" local="yes">src/gromacs/pbcutil/rmpbc.cpp</includedby>
    <includedby refid="pull_8cpp" local="yes">src/gromacs/pulling/pull.cpp</includedby>
    <includedby refid="pull__rotation_8cpp" local="yes">src/gromacs/pulling/pull_rotation.cpp</includedby>
    <includedby refid="pullutil_8cpp" local="yes">src/gromacs/pulling/pullutil.cpp</includedby>
    <includedby refid="tests_2pull_8cpp" local="yes">src/gromacs/pulling/tests/pull.cpp</includedby>
    <includedby refid="compiler_8cpp" local="yes">src/gromacs/selection/compiler.cpp</includedby>
    <includedby refid="evaluate_8cpp" local="yes">src/gromacs/selection/evaluate.cpp</includedby>
    <includedby refid="indexutil_8cpp" local="yes">src/gromacs/selection/indexutil.cpp</includedby>
    <includedby refid="mempool_8cpp" local="yes">src/gromacs/selection/mempool.cpp</includedby>
    <includedby refid="params_8cpp" local="yes">src/gromacs/selection/params.cpp</includedby>
    <includedby refid="parsetree_8cpp" local="yes">src/gromacs/selection/parsetree.cpp</includedby>
    <includedby refid="poscalc_8cpp" local="yes">src/gromacs/selection/poscalc.cpp</includedby>
    <includedby refid="position_8cpp" local="yes">src/gromacs/selection/position.cpp</includedby>
    <includedby refid="scanner__internal_8cpp" local="yes">src/gromacs/selection/scanner_internal.cpp</includedby>
    <includedby refid="selectioncollection_8cpp" local="yes">src/gromacs/selection/selectioncollection.cpp</includedby>
    <includedby refid="selelem_8cpp" local="yes">src/gromacs/selection/selelem.cpp</includedby>
    <includedby refid="selvalue_8cpp" local="yes">src/gromacs/selection/selvalue.cpp</includedby>
    <includedby refid="sm__compare_8cpp" local="yes">src/gromacs/selection/sm_compare.cpp</includedby>
    <includedby refid="sm__insolidangle_8cpp" local="yes">src/gromacs/selection/sm_insolidangle.cpp</includedby>
    <includedby refid="sm__keywords_8cpp" local="yes">src/gromacs/selection/sm_keywords.cpp</includedby>
    <includedby refid="sm__merge_8cpp" local="yes">src/gromacs/selection/sm_merge.cpp</includedby>
    <includedby refid="sm__permute_8cpp" local="yes">src/gromacs/selection/sm_permute.cpp</includedby>
    <includedby refid="sm__position_8cpp" local="yes">src/gromacs/selection/sm_position.cpp</includedby>
    <includedby refid="sm__same_8cpp" local="yes">src/gromacs/selection/sm_same.cpp</includedby>
    <includedby refid="tests_2nbsearch_8cpp" local="yes">src/gromacs/selection/tests/nbsearch.cpp</includedby>
    <includedby refid="tests_2poscalc_8cpp" local="yes">src/gromacs/selection/tests/poscalc.cpp</includedby>
    <includedby refid="toputils_8cpp" local="yes">src/gromacs/selection/tests/toputils.cpp</includedby>
    <includedby refid="statistics_8cpp" local="yes">src/gromacs/statistics/statistics.cpp</includedby>
    <includedby refid="gromacs_2swap_2swapcoords_8cpp" local="yes">src/gromacs/swap/swapcoords.cpp</includedby>
    <includedby refid="forcetable_8cpp" local="yes">src/gromacs/tables/forcetable.cpp</includedby>
    <includedby refid="wallcycle_8cpp" local="yes">src/gromacs/timing/wallcycle.cpp</includedby>
    <includedby refid="walltime__accounting_8cpp" local="yes">src/gromacs/timing/walltime_accounting.cpp</includedby>
    <includedby refid="check_8cpp" local="yes">src/gromacs/tools/check.cpp</includedby>
    <includedby refid="convert__tpr_8cpp" local="yes">src/gromacs/tools/convert_tpr.cpp</includedby>
    <includedby refid="dump_8cpp" local="yes">src/gromacs/tools/dump.cpp</includedby>
    <includedby refid="atomprop_8cpp" local="yes">src/gromacs/topology/atomprop.cpp</includedby>
    <includedby refid="atoms_8cpp" local="yes">src/gromacs/topology/atoms.cpp</includedby>
    <includedby refid="atomsbuilder_8cpp" local="yes">src/gromacs/topology/atomsbuilder.cpp</includedby>
    <includedby refid="block_8cpp" local="yes">src/gromacs/topology/block.cpp</includedby>
    <includedby refid="index_8cpp" local="yes">src/gromacs/topology/index.cpp</includedby>
    <includedby refid="invblock_8cpp" local="yes">src/gromacs/topology/invblock.cpp</includedby>
    <includedby refid="mtop__util_8cpp" local="yes">src/gromacs/topology/mtop_util.cpp</includedby>
    <includedby refid="residuetypes_8cpp" local="yes">src/gromacs/topology/residuetypes.cpp</includedby>
    <includedby refid="symtab_8cpp" local="yes">src/gromacs/topology/symtab.cpp</includedby>
    <includedby refid="topology_8cpp" local="yes">src/gromacs/topology/topology.cpp</includedby>
    <includedby refid="topsort_8cpp" local="yes">src/gromacs/topology/topsort.cpp</includedby>
    <includedby refid="trajectoryframe_8cpp" local="yes">src/gromacs/trajectory/trajectoryframe.cpp</includedby>
    <includedby refid="analysissettings_8cpp" local="yes">src/gromacs/trajectoryanalysis/analysissettings.cpp</includedby>
    <includedby refid="modules_2sasa_8cpp" local="yes">src/gromacs/trajectoryanalysis/modules/sasa.cpp</includedby>
    <includedby refid="modules_2select_8cpp" local="yes">src/gromacs/trajectoryanalysis/modules/select.cpp</includedby>
    <includedby refid="modules_2surfacearea_8cpp" local="yes">src/gromacs/trajectoryanalysis/modules/surfacearea.cpp</includedby>
    <includedby refid="runnercommon_8cpp" local="yes">src/gromacs/trajectoryanalysis/runnercommon.cpp</includedby>
    <includedby refid="tests_2surfacearea_8cpp" local="yes">src/gromacs/trajectoryanalysis/tests/surfacearea.cpp</includedby>
    <includedby refid="cstringutil_8cpp" local="yes">src/gromacs/utility/cstringutil.cpp</includedby>
    <includedby refid="directoryenumerator_8cpp" local="yes">src/gromacs/utility/directoryenumerator.cpp</includedby>
    <includedby refid="futil_8cpp" local="yes">src/gromacs/utility/futil.cpp</includedby>
    <includedby refid="pleasecite_8cpp" local="yes">src/gromacs/utility/pleasecite.cpp</includedby>
    <includedby refid="smalloc_8cpp" local="yes">src/gromacs/utility/smalloc.cpp</includedby>
    <includedby refid="strdb_8cpp" local="yes">src/gromacs/utility/strdb.cpp</includedby>
    <includedby refid="md_8cpp" local="yes">src/programs/mdrun/md.cpp</includedby>
    <includedby refid="mdrun_8cpp" local="yes">src/programs/mdrun/mdrun.cpp</includedby>
    <includedby refid="membed_8cpp" local="yes">src/programs/mdrun/membed.cpp</includedby>
    <includedby refid="repl__ex_8cpp" local="yes">src/programs/mdrun/repl_ex.cpp</includedby>
    <includedby refid="runner_8cpp" local="yes">src/programs/mdrun/runner.cpp</includedby>
    <includedby refid="3dview_8cpp" local="yes">src/programs/view/3dview.cpp</includedby>
    <includedby refid="buttons_8cpp" local="yes">src/programs/view/buttons.cpp</includedby>
    <includedby refid="dialogs_8cpp" local="yes">src/programs/view/dialogs.cpp</includedby>
    <includedby refid="fgrid_8cpp" local="yes">src/programs/view/fgrid.cpp</includedby>
    <includedby refid="filter_8cpp" local="yes">src/programs/view/filter.cpp</includedby>
    <includedby refid="logo_8cpp" local="yes">src/programs/view/logo.cpp</includedby>
    <includedby refid="manager_8cpp" local="yes">src/programs/view/manager.cpp</includedby>
    <includedby refid="molps_8cpp" local="yes">src/programs/view/molps.cpp</includedby>
    <includedby refid="nleg_8cpp" local="yes">src/programs/view/nleg.cpp</includedby>
    <includedby refid="nmol_8cpp" local="yes">src/programs/view/nmol.cpp</includedby>
    <includedby refid="popup_8cpp" local="yes">src/programs/view/popup.cpp</includedby>
    <includedby refid="pulldown_8cpp" local="yes">src/programs/view/pulldown.cpp</includedby>
    <includedby refid="view_8cpp" local="yes">src/programs/view/view.cpp</includedby>
    <includedby refid="x11_8cpp" local="yes">src/programs/view/x11.cpp</includedby>
    <includedby refid="xdlg_8cpp" local="yes">src/programs/view/xdlg.cpp</includedby>
    <includedby refid="xdlghi_8cpp" local="yes">src/programs/view/xdlghi.cpp</includedby>
    <includedby refid="xdlgitem_8cpp" local="yes">src/programs/view/xdlgitem.cpp</includedby>
    <includedby refid="xutil_8cpp" local="yes">src/programs/view/xutil.cpp</includedby>
    <incdepgraph>
      <node id="32721">
        <label>stdint.h</label>
      </node>
      <node id="32719">
        <label>stddef.h</label>
      </node>
      <node id="32718">
        <label>src/gromacs/utility/smalloc.h</label>
        <link refid="smalloc.h"/>
        <childnode refid="32719" relation="include">
        </childnode>
        <childnode refid="32720" relation="include">
        </childnode>
      </node>
      <node id="32720">
        <label>gromacs/utility/basedefinitions.h</label>
        <link refid="basedefinitions_8h"/>
        <childnode refid="32721" relation="include">
        </childnode>
        <childnode refid="32722" relation="include">
        </childnode>
      </node>
      <node id="32722">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="32775">
        <label>src/gromacs/gpu_utils/tests/gputest.cpp</label>
        <link refid="gputest_8cpp"/>
      </node>
      <node id="32738">
        <label>src/gromacs/gpu_utils/ocl_compiler.cpp</label>
        <link refid="ocl__compiler_8cpp"/>
      </node>
      <node id="32769">
        <label>src/gromacs/ewald/pme-pp.cpp</label>
        <link refid="pme-pp_8cpp"/>
      </node>
      <node id="32739">
        <label>src/gromacs/selection/params.cpp</label>
        <link refid="params_8cpp"/>
      </node>
      <node id="32748">
        <label>src/gromacs/applied-forces/tests/electricfield.cpp</label>
        <link refid="tests_2electricfield_8cpp"/>
      </node>
      <node id="32807">
        <label>src/gromacs/selection/tests/toputils.cpp</label>
        <link refid="toputils_8cpp"/>
      </node>
      <node id="32757">
        <label>src/gromacs/correlationfunctions/tests/expfit.cpp</label>
        <link refid="tests_2expfit_8cpp"/>
      </node>
      <node id="32753">
        <label>src/gromacs/correlationfunctions/crosscorr.cpp</label>
        <link refid="crosscorr_8cpp"/>
      </node>
      <node id="32797">
        <label>src/gromacs/selection/selvalue.cpp</label>
        <link refid="selvalue_8cpp"/>
      </node>
      <node id="32776">
        <label>src/gromacs/gpu_utils/tests/pinnedmemorychecker.cpp</label>
        <link refid="pinnedmemorychecker_8cpp"/>
      </node>
      <node id="32765">
        <label>src/gromacs/domdec/domdec_setup.cpp</label>
        <link refid="domdec__setup_8cpp"/>
      </node>
      <node id="32808">
        <label>src/gromacs/swap/swapcoords.cpp</label>
        <link refid="gromacs_2swap_2swapcoords_8cpp"/>
      </node>
      <node id="32731">
        <label>src/gromacs/ewald/tests/pmesolvetest.cpp</label>
        <link refid="pmesolvetest_8cpp"/>
      </node>
      <node id="32811">
        <label>src/gromacs/trajectoryanalysis/runnercommon.cpp</label>
        <link refid="runnercommon_8cpp"/>
      </node>
      <node id="32787">
        <label>src/gromacs/selection/compiler.cpp</label>
        <link refid="compiler_8cpp"/>
      </node>
      <node id="32733">
        <label>src/gromacs/ewald/tests/pmetestcommon.cpp</label>
        <link refid="pmetestcommon_8cpp"/>
      </node>
      <node id="32814">
        <label>src/programs/mdrun/mdrun.cpp</label>
        <link refid="mdrun_8cpp"/>
      </node>
      <node id="32791">
        <label>src/gromacs/selection/parsetree.cpp</label>
        <link refid="parsetree_8cpp"/>
      </node>
      <node id="32749">
        <label>src/gromacs/awh/biasstate.cpp</label>
        <link refid="biasstate_8cpp"/>
      </node>
      <node id="32793">
        <label>src/gromacs/selection/position.cpp</label>
        <link refid="position_8cpp"/>
      </node>
      <node id="32784">
        <label>src/gromacs/mdrunutility/handlerestart.cpp</label>
        <link refid="handlerestart_8cpp"/>
      </node>
      <node id="32782">
        <label>src/gromacs/mdlib/nbnxn_ocl/nbnxn_ocl_data_mgmt.cpp</label>
        <link refid="nbnxn__ocl__data__mgmt_8cpp"/>
      </node>
      <node id="32727">
        <label>src/gromacs/ewald/pme.cpp</label>
        <link refid="pme_8cpp"/>
      </node>
      <node id="32794">
        <label>src/gromacs/selection/scanner_internal.cpp</label>
        <link refid="scanner__internal_8cpp"/>
      </node>
      <node id="32726">
        <label>src/gromacs/analysisdata/modules/plot.cpp</label>
        <link refid="plot_8cpp"/>
      </node>
      <node id="32747">
        <label>src/programs/mdrun/tests/trajectoryreader.cpp</label>
        <link refid="trajectoryreader_8cpp"/>
      </node>
      <node id="32742">
        <label>src/programs/mdrun/tests/energyreader.h</label>
        <link refid="energyreader_8h"/>
        <childnode refid="32743" relation="include">
        </childnode>
        <childnode refid="32744" relation="include">
        </childnode>
        <childnode refid="32745" relation="include">
        </childnode>
      </node>
      <node id="32801">
        <label>src/gromacs/selection/sm_merge.cpp</label>
        <link refid="sm__merge_8cpp"/>
      </node>
      <node id="32772">
        <label>src/gromacs/gmxana/gmx_wham.cpp</label>
        <link refid="gmx__wham_8cpp"/>
      </node>
      <node id="32810">
        <label>src/gromacs/trajectoryanalysis/analysissettings.cpp</label>
        <link refid="analysissettings_8cpp"/>
      </node>
      <node id="32806">
        <label>src/gromacs/selection/tests/poscalc.cpp</label>
        <link refid="tests_2poscalc_8cpp"/>
      </node>
      <node id="32792">
        <label>src/gromacs/selection/poscalc.cpp</label>
        <link refid="poscalc_8cpp"/>
      </node>
      <node id="32766">
        <label>src/gromacs/mdlib/broadcaststructs.h</label>
        <link refid="broadcaststructs_8h"/>
        <childnode refid="32763" relation="include">
        </childnode>
      </node>
      <node id="32802">
        <label>src/gromacs/selection/sm_permute.cpp</label>
        <link refid="sm__permute_8cpp"/>
      </node>
      <node id="32759">
        <label>src/gromacs/domdec/domdec_constraints.cpp</label>
        <link refid="domdec__constraints_8cpp"/>
      </node>
      <node id="32778">
        <label>src/gromacs/listed-forces/bonded.cpp</label>
        <link refid="bonded_8cpp"/>
      </node>
      <node id="32755">
        <label>src/gromacs/correlationfunctions/tests/autocorr.cpp</label>
        <link refid="tests_2autocorr_8cpp"/>
      </node>
      <node id="32812">
        <label>src/gromacs/trajectoryanalysis/tests/surfacearea.cpp</label>
        <link refid="tests_2surfacearea_8cpp"/>
      </node>
      <node id="32788">
        <label>src/gromacs/selection/evaluate.cpp</label>
        <link refid="evaluate_8cpp"/>
      </node>
      <node id="32781">
        <label>src/gromacs/mdlib/minimize.cpp</label>
        <link refid="minimize_8cpp"/>
      </node>
      <node id="32777">
        <label>src/gromacs/imd/imdsocket.cpp</label>
        <link refid="imdsocket_8cpp"/>
      </node>
      <node id="32729">
        <label>src/gromacs/ewald/tests/pmebsplinetest.cpp</label>
        <link refid="pmebsplinetest_8cpp"/>
      </node>
      <node id="32758">
        <label>src/gromacs/domdec/ga2la.h</label>
        <link refid="ga2la_8h"/>
        <childnode refid="32759" relation="include">
        </childnode>
        <childnode refid="32760" relation="include">
        </childnode>
        <childnode refid="32761" relation="include">
        </childnode>
        <childnode refid="32762" relation="include">
        </childnode>
        <childnode refid="32763" relation="include">
        </childnode>
      </node>
      <node id="32803">
        <label>src/gromacs/selection/sm_position.cpp</label>
        <link refid="sm__position_8cpp"/>
      </node>
      <node id="32796">
        <label>src/gromacs/selection/selelem.cpp</label>
        <link refid="selelem_8cpp"/>
      </node>
      <node id="32741">
        <label>src/gromacs/trajectoryanalysis/modules/select.cpp</label>
        <link refid="modules_2select_8cpp"/>
      </node>
      <node id="32725">
        <label>src/gromacs/utility/unique_cptr.h</label>
        <link refid="unique__cptr_8h"/>
        <childnode refid="32726" relation="include">
        </childnode>
        <childnode refid="32727" relation="include">
        </childnode>
        <childnode refid="32728" relation="include">
        </childnode>
        <childnode refid="32734" relation="include">
        </childnode>
        <childnode refid="32735" relation="include">
        </childnode>
        <childnode refid="32736" relation="include">
        </childnode>
        <childnode refid="32737" relation="include">
        </childnode>
        <childnode refid="32738" relation="include">
        </childnode>
        <childnode refid="32739" relation="include">
        </childnode>
        <childnode refid="32740" relation="include">
        </childnode>
        <childnode refid="32741" relation="include">
        </childnode>
        <childnode refid="32742" relation="include">
        </childnode>
        <childnode refid="32746" relation="include">
        </childnode>
      </node>
      <node id="32767">
        <label>src/gromacs/ewald/ewald.cpp</label>
        <link refid="ewald_8cpp"/>
      </node>
      <node id="32771">
        <label>src/gromacs/gmxana/gmx_awh.cpp</label>
        <link refid="gmx__awh_8cpp"/>
      </node>
      <node id="32763">
        <label>src/gromacs/imd/imd.cpp</label>
        <link refid="imd_8cpp"/>
      </node>
      <node id="32745">
        <label>src/programs/mdrun/tests/pmetest.cpp</label>
        <link refid="pmetest_8cpp"/>
      </node>
      <node id="32813">
        <label>src/gromacs/utility/directoryenumerator.cpp</label>
        <link refid="directoryenumerator_8cpp"/>
      </node>
      <node id="32736">
        <label>src/gromacs/gmxpreprocess/tests/readir.cpp</label>
        <link refid="tests_2readir_8cpp"/>
      </node>
      <node id="32756">
        <label>src/gromacs/correlationfunctions/tests/correlationdataset.cpp</label>
        <link refid="correlationdataset_8cpp"/>
      </node>
      <node id="32798">
        <label>src/gromacs/selection/sm_compare.cpp</label>
        <link refid="sm__compare_8cpp"/>
      </node>
      <node id="32768">
        <label>src/gromacs/ewald/pme-load-balancing.cpp</label>
        <link refid="pme-load-balancing_8cpp"/>
      </node>
      <node id="32764">
        <label>src/gromacs/domdec/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="32759" relation="include">
        </childnode>
        <childnode refid="32760" relation="include">
        </childnode>
        <childnode refid="32762" relation="include">
        </childnode>
      </node>
      <node id="32805">
        <label>src/gromacs/selection/tests/nbsearch.cpp</label>
        <link refid="tests_2nbsearch_8cpp"/>
      </node>
      <node id="32799">
        <label>src/gromacs/selection/sm_insolidangle.cpp</label>
        <link refid="sm__insolidangle_8cpp"/>
      </node>
      <node id="32732">
        <label>src/gromacs/ewald/tests/pmesplinespreadtest.cpp</label>
        <link refid="pmesplinespreadtest_8cpp"/>
      </node>
      <node id="32762">
        <label>src/gromacs/domdec/domdec_vsite.cpp</label>
        <link refid="domdec__vsite_8cpp"/>
      </node>
      <node id="32743">
        <label>src/programs/mdrun/tests/energyreader.cpp</label>
        <link refid="energyreader_8cpp"/>
      </node>
      <node id="32723">
        <label>src/gromacs/utility/smalloc.h</label>
        <link refid="smalloc.h"/>
        <childnode refid="32724" relation="include">
        </childnode>
        <childnode refid="32725" relation="include">
        </childnode>
        <childnode refid="32748" relation="include">
        </childnode>
        <childnode refid="32749" relation="include">
        </childnode>
        <childnode refid="32750" relation="include">
        </childnode>
        <childnode refid="32751" relation="include">
        </childnode>
        <childnode refid="32752" relation="include">
        </childnode>
        <childnode refid="32753" relation="include">
        </childnode>
        <childnode refid="32754" relation="include">
        </childnode>
        <childnode refid="32755" relation="include">
        </childnode>
        <childnode refid="32756" relation="include">
        </childnode>
        <childnode refid="32757" relation="include">
        </childnode>
        <childnode refid="32758" relation="include">
        </childnode>
        <childnode refid="32759" relation="include">
        </childnode>
        <childnode refid="32764" relation="include">
        </childnode>
        <childnode refid="32765" relation="include">
        </childnode>
        <childnode refid="32760" relation="include">
        </childnode>
        <childnode refid="32761" relation="include">
        </childnode>
        <childnode refid="32762" relation="include">
        </childnode>
        <childnode refid="32766" relation="include">
        </childnode>
        <childnode refid="32767" relation="include">
        </childnode>
        <childnode refid="32768" relation="include">
        </childnode>
        <childnode refid="32769" relation="include">
        </childnode>
        <childnode refid="32727" relation="include">
        </childnode>
        <childnode refid="32770" relation="include">
        </childnode>
        <childnode refid="32735" relation="include">
        </childnode>
        <childnode refid="32771" relation="include">
        </childnode>
        <childnode refid="32772" relation="include">
        </childnode>
        <childnode refid="32773" relation="include">
        </childnode>
        <childnode refid="32737" relation="include">
        </childnode>
        <childnode refid="32738" relation="include">
        </childnode>
        <childnode refid="32774" relation="include">
        </childnode>
        <childnode refid="32775" relation="include">
        </childnode>
        <childnode refid="32776" relation="include">
        </childnode>
        <childnode refid="32763" relation="include">
        </childnode>
        <childnode refid="32777" relation="include">
        </childnode>
        <childnode refid="32778" relation="include">
        </childnode>
        <childnode refid="32779" relation="include">
        </childnode>
        <childnode refid="32780" relation="include">
        </childnode>
        <childnode refid="32781" relation="include">
        </childnode>
        <childnode refid="32782" relation="include">
        </childnode>
        <childnode refid="32783" relation="include">
        </childnode>
        <childnode refid="32784" relation="include">
        </childnode>
        <childnode refid="32785" relation="include">
        </childnode>
        <childnode refid="32786" relation="include">
        </childnode>
        <childnode refid="32787" relation="include">
        </childnode>
        <childnode refid="32788" relation="include">
        </childnode>
        <childnode refid="32789" relation="include">
        </childnode>
        <childnode refid="32790" relation="include">
        </childnode>
        <childnode refid="32739" relation="include">
        </childnode>
        <childnode refid="32791" relation="include">
        </childnode>
        <childnode refid="32792" relation="include">
        </childnode>
        <childnode refid="32793" relation="include">
        </childnode>
        <childnode refid="32794" relation="include">
        </childnode>
        <childnode refid="32795" relation="include">
        </childnode>
        <childnode refid="32796" relation="include">
        </childnode>
        <childnode refid="32797" relation="include">
        </childnode>
        <childnode refid="32798" relation="include">
        </childnode>
        <childnode refid="32799" relation="include">
        </childnode>
        <childnode refid="32800" relation="include">
        </childnode>
        <childnode refid="32801" relation="include">
        </childnode>
        <childnode refid="32802" relation="include">
        </childnode>
        <childnode refid="32803" relation="include">
        </childnode>
        <childnode refid="32804" relation="include">
        </childnode>
        <childnode refid="32805" relation="include">
        </childnode>
        <childnode refid="32806" relation="include">
        </childnode>
        <childnode refid="32807" relation="include">
        </childnode>
        <childnode refid="32808" relation="include">
        </childnode>
        <childnode refid="32809" relation="include">
        </childnode>
        <childnode refid="32810" relation="include">
        </childnode>
        <childnode refid="32740" relation="include">
        </childnode>
        <childnode refid="32741" relation="include">
        </childnode>
        <childnode refid="32811" relation="include">
        </childnode>
        <childnode refid="32812" relation="include">
        </childnode>
        <childnode refid="32813" relation="include">
        </childnode>
        <childnode refid="32814" relation="include">
        </childnode>
        <childnode refid="32815" relation="include">
        </childnode>
      </node>
      <node id="32779">
        <label>src/gromacs/listed-forces/listed-forces.cpp</label>
        <link refid="listed-forces_8cpp"/>
      </node>
      <node id="32790">
        <label>src/gromacs/selection/mempool.cpp</label>
        <link refid="mempool_8cpp"/>
      </node>
      <node id="32809">
        <label>src/gromacs/topology/atomsbuilder.cpp</label>
        <link refid="atomsbuilder_8cpp"/>
      </node>
      <node id="32761">
        <label>src/gromacs/domdec/domdec_topology.cpp</label>
        <link refid="domdec__topology_8cpp"/>
      </node>
      <node id="32744">
        <label>src/programs/mdrun/tests/initialconstraints.cpp</label>
        <link refid="initialconstraints_8cpp"/>
      </node>
      <node id="32795">
        <label>src/gromacs/selection/selectioncollection.cpp</label>
        <link refid="selectioncollection_8cpp"/>
      </node>
      <node id="32789">
        <label>src/gromacs/selection/indexutil.cpp</label>
        <link refid="indexutil_8cpp"/>
      </node>
      <node id="32780">
        <label>src/gromacs/listed-forces/manage-threading.cpp</label>
        <link refid="manage-threading_8cpp"/>
      </node>
      <node id="32751">
        <label>src/gromacs/commandline/cmdlineinit.cpp</label>
        <link refid="cmdlineinit_8cpp"/>
      </node>
      <node id="32724">
        <label>src/gromacs/analysisdata/modules/displacement.cpp</label>
        <link refid="displacement_8cpp"/>
      </node>
      <node id="32773">
        <label>src/gromacs/gpu_utils/gpu_utils_ocl.cpp</label>
        <link refid="gpu__utils__ocl_8cpp"/>
      </node>
      <node id="32754">
        <label>src/gromacs/correlationfunctions/expfit.cpp</label>
        <link refid="expfit_8cpp"/>
      </node>
      <node id="32730">
        <label>src/gromacs/ewald/tests/pmegathertest.cpp</label>
        <link refid="pmegathertest_8cpp"/>
      </node>
      <node id="32815">
        <label>src/programs/mdrun/runner.cpp</label>
        <link refid="runner_8cpp"/>
      </node>
      <node id="32734">
        <label>src/gromacs/ewald/tests/testhardwarecontexts.cpp</label>
        <link refid="testhardwarecontexts_8cpp"/>
      </node>
      <node id="32783">
        <label>src/gromacs/mdlib/tpi.cpp</label>
        <link refid="tpi_8cpp"/>
      </node>
      <node id="32728">
        <label>src/gromacs/ewald/tests/pmetestcommon.h</label>
        <link refid="pmetestcommon_8h"/>
        <childnode refid="32729" relation="include">
        </childnode>
        <childnode refid="32730" relation="include">
        </childnode>
        <childnode refid="32731" relation="include">
        </childnode>
        <childnode refid="32732" relation="include">
        </childnode>
        <childnode refid="32733" relation="include">
        </childnode>
      </node>
      <node id="32774">
        <label>src/gromacs/gpu_utils/oclutils.cpp</label>
        <link refid="oclutils_8cpp"/>
      </node>
      <node id="32750">
        <label>src/gromacs/awh/grid.cpp</label>
        <link refid="grid_8cpp"/>
      </node>
      <node id="32804">
        <label>src/gromacs/selection/sm_same.cpp</label>
        <link refid="sm__same_8cpp"/>
      </node>
      <node id="32786">
        <label>src/gromacs/pulling/tests/pull.cpp</label>
        <link refid="tests_2pull_8cpp"/>
      </node>
      <node id="32770">
        <label>src/gromacs/fileio/tests/confio.cpp</label>
        <link refid="tests_2confio_8cpp"/>
      </node>
      <node id="32800">
        <label>src/gromacs/selection/sm_keywords.cpp</label>
        <link refid="sm__keywords_8cpp"/>
      </node>
      <node id="32740">
        <label>src/gromacs/trajectoryanalysis/modules/sasa.cpp</label>
        <link refid="modules_2sasa_8cpp"/>
      </node>
      <node id="32752">
        <label>src/gromacs/correlationfunctions/autocorr.cpp</label>
        <link refid="autocorr_8cpp"/>
      </node>
      <node id="32746">
        <label>src/programs/mdrun/tests/trajectoryreader.h</label>
        <link refid="trajectoryreader_8h"/>
        <childnode refid="32747" relation="include">
        </childnode>
      </node>
      <node id="32735">
        <label>src/gromacs/fileio/tests/readinp.cpp</label>
        <link refid="tests_2readinp_8cpp"/>
      </node>
      <node id="32737">
        <label>src/gromacs/gpu_utils/ocl_caching.cpp</label>
        <link refid="ocl__caching_8cpp"/>
      </node>
      <node id="32785">
        <label>src/gromacs/pbcutil/pbc.cpp</label>
        <link refid="pbc_8cpp"/>
      </node>
      <node id="32760">
        <label>src/gromacs/domdec/domdec_specatomcomm.cpp</label>
        <link refid="domdec__specatomcomm_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="user-defined">
      <header>Implementation templates for C++ memory allocation macros</header>
      <description><para>These templates are used to implement the <ref refid="smalloc_8h_1a11f5e6d285a313414a895fb84c8c7194" kindref="member">snew()</ref> etc. macros for C++, where an explicit cast is needed from <computeroutput>void *</computeroutput> (the return value of the allocation wrapper functions) to the thpe of <computeroutput>ptr</computeroutput>.</para><para>Having these as <computeroutput>static</computeroutput> avoid some obscure bugs if several files define distinct data structures with identical names and allocate memory for them using <ref refid="smalloc_8h_1a11f5e6d285a313414a895fb84c8c7194" kindref="member">snew()</ref>. By the C++ standard, such declarations cause undefined behavior, but can be difficult to spot in the existing C code. Without the <computeroutput>static</computeroutput> (and if the compiler does not inline the calls), the linker cannot that data structures with identical names are actually different and links calls to these template functions incorrectly, which can result in allocation of an incorrect amount of memory if the element size is computed within the function.</para><para>The size cannot be passed as a parameter to the function either, since that provokes warnings from cppcheck for some invocations, where a complex expression is passed as <computeroutput>ptr</computeroutput>. </para></description>
      <memberdef kind="function" id="smalloc_8h_1a025c76ece08d940d4c0e80b80f172406" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void gmx_snew_impl</definition>
        <argsstring>(const char *name, const char *file, int line, T *&amp;ptr, size_t nelem)</argsstring>
        <name>gmx_snew_impl</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>T *&amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nelem</declname>
        </param>
        <briefdescription>
<para>C++ helper for <ref refid="smalloc_8h_1a11f5e6d285a313414a895fb84c8c7194" kindref="member">snew()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="227" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" bodystart="227" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="smalloc_8h_1af0b4413e808c7423d8353c4f2275c41a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void gmx_srenew_impl</definition>
        <argsstring>(const char *name, const char *file, int line, T *&amp;ptr, size_t nelem)</argsstring>
        <name>gmx_srenew_impl</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>T *&amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nelem</declname>
        </param>
        <briefdescription>
<para>C++ helper for <ref refid="smalloc_8h_1a7fceb0e6af50dcbbb99b270951be060e" kindref="member">srenew()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="237" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" bodystart="237" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="smalloc_8h_1a8374537132dfaed2c6e60bb9f9be4f32" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void gmx_smalloc_impl</definition>
        <argsstring>(const char *name, const char *file, int line, T *&amp;ptr, size_t size)</argsstring>
        <name>gmx_smalloc_impl</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>T *&amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>C++ helper for <ref refid="smalloc_8h_1a435ad4efd4f0ff20e7ade4cc86e2969c" kindref="member">smalloc()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="247" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" bodystart="247" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="smalloc_8h_1a985f947dafcff93415c1df6d6afd3b37" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void gmx_snew_aligned_impl</definition>
        <argsstring>(const char *name, const char *file, int line, T *&amp;ptr, size_t nelem, size_t alignment)</argsstring>
        <name>gmx_snew_aligned_impl</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>T *&amp;</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nelem</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>alignment</declname>
        </param>
        <briefdescription>
<para>C++ helper for <ref refid="smalloc_8h_1a5288c209907ae6db0870ce0412103d0c" kindref="member">snew_aligned()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="257" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" bodystart="257" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="smalloc_8h_1a03ae07ddaa1467cc9443197680c008c6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void gmx_sfree_impl</definition>
        <argsstring>(const char *name, const char *file, int line, T *ptr)</argsstring>
        <name>gmx_sfree_impl</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>C++ helper for <ref refid="smalloc_8h_1acd9f9223d6d8cad01c8f42a416d3292d" kindref="member">sfree()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="267" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" bodystart="267" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="smalloc_8h_1a371f24f59fb6a4b4da36273a9e654093" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void gmx_sfree_aligned_impl</definition>
        <argsstring>(const char *name, const char *file, int line, T *ptr)</argsstring>
        <name>gmx_sfree_aligned_impl</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>C++ helper for <ref refid="smalloc_8h_1a746540f663a9e22da12123b3edaaefef" kindref="member">sfree_aligned()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="277" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" bodystart="277" bodyend="284"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="smalloc_8h_1a11f5e6d285a313414a895fb84c8c7194" prot="public" static="no">
        <name>snew</name>
        <param><defname>ptr</defname></param>
        <param><defname>nelem</defname></param>
        <briefdescription>
<para>Allocates memory for a given number of elements. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to allocate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nelem</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements to allocate.</para></parameterdescription>
</parameteritem>
</parameterlist>
Allocates memory for <computeroutput>nelem</computeroutput> elements of type <computeroutput>*ptr</computeroutput> and sets this to <computeroutput>ptr</computeroutput>. The allocated memory is initialized to zeros. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="364" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="smalloc_8h_1a7fceb0e6af50dcbbb99b270951be060e" prot="public" static="no">
        <name>srenew</name>
        <param><defname>ptr</defname></param>
        <param><defname>nelem</defname></param>
        <briefdescription>
<para>Reallocates memory for a given number of elements. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to allocate/reallocate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nelem</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements to allocate.</para></parameterdescription>
</parameteritem>
</parameterlist>
(Re)allocates memory for <computeroutput>ptr</computeroutput> such that it can hold <computeroutput>nelem</computeroutput> elements of type <computeroutput>*ptr</computeroutput>, and sets the new pointer to <computeroutput>ptr</computeroutput>. If <computeroutput>ptr</computeroutput> is <computeroutput>NULL</computeroutput>, memory is allocated as if it was new. If <computeroutput>nelem</computeroutput> is zero, <computeroutput>ptr</computeroutput> is freed (if not <computeroutput>NULL</computeroutput>). Note that the allocated memory is not initialized, unlike with <ref refid="smalloc_8h_1a11f5e6d285a313414a895fb84c8c7194" kindref="member">snew()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="366" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="smalloc_8h_1a435ad4efd4f0ff20e7ade4cc86e2969c" prot="public" static="no">
        <name>smalloc</name>
        <param><defname>ptr</defname></param>
        <param><defname>size</defname></param>
        <briefdescription>
<para>Allocates memory for a given number of bytes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to allocate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to allocate.</para></parameterdescription>
</parameteritem>
</parameterlist>
Allocates memory for <computeroutput>size</computeroutput> bytes and sets this to <computeroutput>ptr</computeroutput>. The allocated memory is initialized to zero. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="368" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="smalloc_8h_1a5288c209907ae6db0870ce0412103d0c" prot="public" static="no">
        <name>snew_aligned</name>
        <param><defname>ptr</defname></param>
        <param><defname>nelem</defname></param>
        <param><defname>alignment</defname></param>
        <briefdescription>
<para>Allocates aligned memory for a given number of elements. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to allocate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nelem</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements to allocate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alignment</parametername>
</parameternamelist>
<parameterdescription>
<para>Requested alignment in bytes.</para></parameterdescription>
</parameteritem>
</parameterlist>
Allocates memory for <computeroutput>nelem</computeroutput> elements of type <computeroutput>*ptr</computeroutput> and sets this to <computeroutput>ptr</computeroutput>. The returned pointer is <computeroutput>alignment</computeroutput>-byte aligned. The allocated memory is initialized to zeros.</para><para>The returned pointer should only be freed with <ref refid="smalloc_8h_1a746540f663a9e22da12123b3edaaefef" kindref="member">sfree_aligned()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="370" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="smalloc_8h_1acd9f9223d6d8cad01c8f42a416d3292d" prot="public" static="no">
        <name>sfree</name>
        <param><defname>ptr</defname></param>
        <briefdescription>
<para>Frees memory referenced by <computeroutput>ptr</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>ptr</computeroutput> is allowed to be NULL, in which case nothing is done. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="372" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="smalloc_8h_1a746540f663a9e22da12123b3edaaefef" prot="public" static="no">
        <name>sfree_aligned</name>
        <param><defname>ptr</defname></param>
        <briefdescription>
<para>Frees aligned memory referenced by <computeroutput>ptr</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This must only be called with a pointer obtained through <ref refid="smalloc_8h_1a5288c209907ae6db0870ce0412103d0c" kindref="member">snew_aligned()</ref>. <computeroutput>ptr</computeroutput> is allowed to be NULL, in which case nothing is done. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="374" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="smalloc_8h_1aa53ceb6b38a4499f6698b3e02005075c" prot="public" static="no">
        <name>OVER_ALLOC_FAC</name>
        <initializer>1.19</initializer>
        <briefdescription>
<para>Over allocation factor for memory allocations. </para>        </briefdescription>
        <detaileddescription>
<para>Memory (re)allocation can be VERY slow, especially with some MPI libraries that replace the standard malloc and realloc calls. To avoid slow memory allocation we use over_alloc to set the memory allocation size for large data blocks. Since this scales the size with a factor, we use log(n) realloc calls instead of n. This can reduce allocation times from minutes to seconds.</para><para>This factor leads to 4 realloc calls to double the array size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="409" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="smalloc_8h_1a2fc73ec3a4b633f7483b99167c25ca01" prot="public" static="no">
        <name>over_alloc_small</name>
        <param><defname>n</defname></param>
        <initializer>(int)(<ref refid="smalloc_8h_1aa53ceb6b38a4499f6698b3e02005075c" kindref="member">OVER_ALLOC_FAC</ref>*(n) + 8000)</initializer>
        <briefdescription>
<para>Over allocation for small data types: int, real etc. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="431" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="smalloc_8h_1aa651045991ec92103783ba4ebaf20bca" prot="public" static="no">
        <name>over_alloc_large</name>
        <param><defname>n</defname></param>
        <initializer>(int)(<ref refid="smalloc_8h_1aa53ceb6b38a4499f6698b3e02005075c" kindref="member">OVER_ALLOC_FAC</ref>*(n) + 1000)</initializer>
        <briefdescription>
<para>Over allocation for large data types: complex structs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="434" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" bodystart="434" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="smalloc_8h_1a6e678051bdba16b4a5db399c8cc0c128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* save_malloc</definition>
        <argsstring>(const char *name, const char *file, int line, size_t size)</argsstring>
        <name>save_malloc</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>GROMACS wrapper for malloc(). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable name identifying the allocation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>Source code file where the allocation originates from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">line</parametername>
</parameternamelist>
<parameterdescription>
<para>Source code line where the allocation originates from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to allocate. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the allocated space.</para></simplesect>
This should generally be called through <ref refid="smalloc_8h_1a435ad4efd4f0ff20e7ade4cc86e2969c" kindref="member">smalloc()</ref>, not directly. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="93" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.cpp" bodystart="119" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="smalloc_8h_1a6e6d52179c08b1acafb1e2dcb3aadd23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* save_calloc</definition>
        <argsstring>(const char *name, const char *file, int line, size_t nelem, size_t elsize)</argsstring>
        <name>save_calloc</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nelem</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elsize</declname>
        </param>
        <briefdescription>
<para>GROMACS wrapper for calloc(). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable name identifying the allocation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>Source code file where the allocation originates from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">line</parametername>
</parameternamelist>
<parameterdescription>
<para>Source code line where the allocation originates from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nelem</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements to allocate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes per element. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the allocated space.</para></simplesect>
This should generally be called through <ref refid="smalloc_8h_1a11f5e6d285a313414a895fb84c8c7194" kindref="member">snew()</ref>, not directly. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="106" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.cpp" bodystart="145" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="smalloc_8h_1a50f9a1ae3317f66f3bb40f25fe9bd6ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* save_realloc</definition>
        <argsstring>(const char *name, const char *file, int line, void *ptr, size_t nelem, size_t elsize)</argsstring>
        <name>save_realloc</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nelem</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elsize</declname>
        </param>
        <briefdescription>
<para>GROMACS wrapper for realloc(). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable name identifying the allocation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>Source code file where the allocation originates from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">line</parametername>
</parameternamelist>
<parameterdescription>
<para>Source code line where the allocation originates from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the previously allocated memory (can be NULL). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nelem</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements to allocate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes per element. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the allocated space.</para></simplesect>
As with realloc(), if <computeroutput>ptr</computeroutput> is NULL, memory is allocated as if malloc() was called. This should generally be called through <ref refid="smalloc_8h_1a7fceb0e6af50dcbbb99b270951be060e" kindref="member">srenew()</ref>, not directly.</para><para>Note that the allocated memory is not initialized to zero. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="125" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.cpp" bodystart="195" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="smalloc_8h_1a1a8ebd96b293ca1f67b3dd41ff1eb43a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void save_free</definition>
        <argsstring>(const char *name, const char *file, int line, void *ptr)</argsstring>
        <name>save_free</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>GROMACS wrapper for free(). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable name identifying the deallocation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>Source code file where the deallocation originates from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">line</parametername>
</parameternamelist>
<parameterdescription>
<para>Source code line where the deallocation originates from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the allocated memory (can be NULL).</para></parameterdescription>
</parameteritem>
</parameterlist>
If <computeroutput>ptr</computeroutput> is NULL, does nothing. This should generally be called through <ref refid="smalloc_8h_1acd9f9223d6d8cad01c8f42a416d3292d" kindref="member">sfree()</ref>, not directly. This never fails. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="139" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.cpp" bodystart="238" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="smalloc_8h_1a70925c108d1c6a8be40614483a58825b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* save_malloc_aligned</definition>
        <argsstring>(const char *name, const char *file, int line, size_t nelem, size_t elsize, size_t alignment)</argsstring>
        <name>save_malloc_aligned</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nelem</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elsize</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>alignment</declname>
        </param>
        <briefdescription>
<para>GROMACS wrapper for allocating aligned memory. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable name identifying the allocation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>Source code file where the allocation originates from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">line</parametername>
</parameternamelist>
<parameterdescription>
<para>Source code line where the allocation originates from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nelem</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements to allocate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes per element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alignment</parametername>
</parameternamelist>
<parameterdescription>
<para>Requested alignment in bytes. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the allocated space, aligned at <computeroutput>alignment</computeroutput>-byte boundary.</para></simplesect>
There is no macro that invokes this function.</para><para>The returned pointer should only be freed with a call to <ref refid="smalloc_8h_1ae35d52a2d595ae960055674b4a0d566a" kindref="member">save_free_aligned()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="157" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.cpp" bodystart="254" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="smalloc_8h_1a073f66115e277b397e07c2ad86ee4075" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* save_calloc_aligned</definition>
        <argsstring>(const char *name, const char *file, int line, size_t nelem, size_t elsize, size_t alignment)</argsstring>
        <name>save_calloc_aligned</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nelem</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elsize</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>alignment</declname>
        </param>
        <briefdescription>
<para>GROMACS wrapper for allocating zero-initialized aligned memory. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable name identifying the allocation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>Source code file where the allocation originates from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">line</parametername>
</parameternamelist>
<parameterdescription>
<para>Source code line where the allocation originates from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nelem</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements to allocate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">elsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes per element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">alignment</parametername>
</parameternamelist>
<parameterdescription>
<para>Requested alignment in bytes. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the allocated space, aligned at <computeroutput>alignment</computeroutput>-byte boundary.</para></simplesect>
This should generally be called through <ref refid="smalloc_8h_1a5288c209907ae6db0870ce0412103d0c" kindref="member">snew_aligned()</ref>, not directly.</para><para>The returned pointer should only be freed with a call to <ref refid="smalloc_8h_1ae35d52a2d595ae960055674b4a0d566a" kindref="member">save_free_aligned()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="175" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.cpp" bodystart="299" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="smalloc_8h_1ae35d52a2d595ae960055674b4a0d566a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void save_free_aligned</definition>
        <argsstring>(const char *name, const char *file, int line, void *ptr)</argsstring>
        <name>save_free_aligned</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>GROMACS wrapper for freeing aligned memory. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable name identifying the deallocation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">file</parametername>
</parameternamelist>
<parameterdescription>
<para>Source code file where the deallocation originates from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">line</parametername>
</parameternamelist>
<parameterdescription>
<para>Source code line where the deallocation originates from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the allocated memory (can be NULL).</para></parameterdescription>
</parameteritem>
</parameterlist>
If <computeroutput>ptr</computeroutput> is NULL, does nothing. <computeroutput>ptr</computeroutput> should have been allocated with <ref refid="smalloc_8h_1a70925c108d1c6a8be40614483a58825b" kindref="member">save_malloc_aligned()</ref> or <ref refid="smalloc_8h_1a073f66115e277b397e07c2ad86ee4075" kindref="member">save_calloc_aligned()</ref>. This should generally be called through <ref refid="smalloc_8h_1a746540f663a9e22da12123b3edaaefef" kindref="member">sfree_aligned()</ref>, not directly. This never fails. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="191" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.cpp" bodystart="311" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="smalloc_8h_1ab3d98b1efa6c2b42d2c0d216eafafec5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_over_alloc_dd</definition>
        <argsstring>(gmx_bool set)</argsstring>
        <name>set_over_alloc_dd</name>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Turns over allocation for variable size atoms/cg/top arrays on or off, default is off. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000102"><xreftitle>Todo</xreftitle><xrefdescription><para>This is mdrun-specific, so it might be better to put this and <ref refid="smalloc_8h_1af1533c63c1d40c5bb9bfaaa6d898369a" kindref="member">over_alloc_dd()</ref> much higher up. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="419" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.cpp" bodystart="316" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="smalloc_8h_1af1533c63c1d40c5bb9bfaaa6d898369a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int over_alloc_dd</definition>
        <argsstring>(int n)</argsstring>
        <name>over_alloc_dd</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Returns new allocation count for domain decomposition allocations. </para>        </briefdescription>
        <detaileddescription>
<para>Returns n when domain decomposition over allocation is off. Returns OVER_ALLOC_FAC*n + 100 when over allocation in on. This is to avoid frequent reallocation during domain decomposition in mdrun. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h" line="428" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.cpp" bodystart="325" bodyend="335"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>C memory allocation routines for GROMACS. </para>    </briefdescription>
    <detaileddescription>
<para>This header provides macros <ref refid="smalloc_8h_1a11f5e6d285a313414a895fb84c8c7194" kindref="member">snew()</ref>, <ref refid="smalloc_8h_1a7fceb0e6af50dcbbb99b270951be060e" kindref="member">srenew()</ref>, <ref refid="smalloc_8h_1a435ad4efd4f0ff20e7ade4cc86e2969c" kindref="member">smalloc()</ref>, and <ref refid="smalloc_8h_1acd9f9223d6d8cad01c8f42a416d3292d" kindref="member">sfree()</ref> for C memory management. Additionally, <ref refid="smalloc_8h_1a5288c209907ae6db0870ce0412103d0c" kindref="member">snew_aligned()</ref> and <ref refid="smalloc_8h_1a746540f663a9e22da12123b3edaaefef" kindref="member">sfree_aligned()</ref> are provided for managing memory with a specified byte alignment.</para><para>If an allocation fails, the program is halted by calling <ref refid="fatalerror_8h_1a3f6ee0e1ac19bfb1ebb1bbdd0b1e3852" kindref="member">gmx_fatal()</ref>, which outputs source file and line number and the name of the variable involved. This frees calling code from the trouble of checking the result of the allocations everywhere. It also provides a location for centrally logging memory allocations for diagnosing memory usage (currently can only enabled by changing the source code). Additionally, <ref refid="smalloc_8h_1acd9f9223d6d8cad01c8f42a416d3292d" kindref="member">sfree()</ref> works also with a <computeroutput>NULL</computeroutput> parameter, which standard free() does not.</para><para>The macros forward the calls to functions <ref refid="smalloc_8h_1a6e678051bdba16b4a5db399c8cc0c128" kindref="member">save_malloc()</ref>, <ref refid="smalloc_8h_1a6e6d52179c08b1acafb1e2dcb3aadd23" kindref="member">save_calloc()</ref>, <ref refid="smalloc_8h_1a50f9a1ae3317f66f3bb40f25fe9bd6ac" kindref="member">save_realloc()</ref>, <ref refid="smalloc_8h_1a1a8ebd96b293ca1f67b3dd41ff1eb43a" kindref="member">save_free()</ref>, <ref refid="smalloc_8h_1a073f66115e277b397e07c2ad86ee4075" kindref="member">save_calloc_aligned()</ref>, and <ref refid="smalloc_8h_1ae35d52a2d595ae960055674b4a0d566a" kindref="member">save_free_aligned()</ref>. There are a few low-level locations in GROMACS that call these directly, but generally the macros should be used. <ref refid="smalloc_8h_1a70925c108d1c6a8be40614483a58825b" kindref="member">save_malloc_aligned()</ref> exists for this purpose, although there is no macro to invoke it.</para><para>As an implementation detail, the macros need a different internal implementation for C and C++ code. This is because C accepts conversions from <computeroutput>void *</computeroutput> to any pointer type, but C++ doesn&apos;t. And in order to cast the returned pointer to a correct type, a C++ template needs to be used to get access to the type. </para>    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/smalloc.h"/>
  </compounddef>
</doxygen>

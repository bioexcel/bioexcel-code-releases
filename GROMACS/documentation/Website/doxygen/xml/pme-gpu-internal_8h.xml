<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="pme-gpu-internal_8h" kind="file">
    <compoundname>pme-gpu-internal.h</compoundname>
    <includes refid="fft_8h" local="yes">gromacs/fft/fft.h</includes>
    <includes refid="gpu__macros_8h" local="yes">gromacs/gpu_utils/gpu_macros.h</includes>
    <includes refid="arrayref_8h" local="yes">gromacs/utility/arrayref.h</includes>
    <includes refid="pme-gpu-types_8h" local="yes">pme-gpu-types.h</includes>
    <includedby refid="pme-gpu-internal_8cpp" local="yes">src/gromacs/ewald/pme-gpu-internal.cpp</includedby>
    <includedby refid="pme-gpu_8cpp" local="yes">src/gromacs/ewald/pme-gpu.cpp</includedby>
    <includedby refid="pme_8cpp" local="yes">src/gromacs/ewald/pme.cpp</includedby>
    <includedby refid="pmetestcommon_8h" local="yes">src/gromacs/ewald/tests/pmetestcommon.h</includedby>
    <includedby refid="pmetestcommon_8cpp" local="yes">src/gromacs/ewald/tests/pmetestcommon.cpp</includedby>
    <incdepgraph>
      <node id="4786">
        <label>gromacs/utility/current_function.h</label>
        <link refid="current__function_8h"/>
      </node>
      <node id="4778">
        <label>iterator</label>
      </node>
      <node id="4784">
        <label>stdint.h</label>
      </node>
      <node id="4794">
        <label>gromacs/gpu_utils/hostallocator.h</label>
        <link refid="hostallocator_8h"/>
        <childnode refid="4776" relation="include">
        </childnode>
        <childnode refid="4789" relation="include">
        </childnode>
        <childnode refid="4781" relation="include">
        </childnode>
        <childnode refid="4795" relation="include">
        </childnode>
        <childnode refid="4798" relation="include">
        </childnode>
      </node>
      <node id="4790">
        <label>gromacs/ewald/pme.h</label>
        <link refid="pme_8h"/>
        <childnode refid="4791" relation="include">
        </childnode>
        <childnode refid="4775" relation="include">
        </childnode>
        <childnode refid="4783" relation="include">
        </childnode>
        <childnode refid="4774" relation="include">
        </childnode>
      </node>
      <node id="4792">
        <label>gromacs/gpu_utils/gpu_utils.h</label>
        <link refid="gpu__utils_8h"/>
        <childnode refid="4793" relation="include">
        </childnode>
        <childnode refid="4791" relation="include">
        </childnode>
        <childnode refid="4781" relation="include">
        </childnode>
        <childnode refid="4783" relation="include">
        </childnode>
      </node>
      <node id="4779">
        <label>stdexcept</label>
      </node>
      <node id="4791">
        <label>string</label>
      </node>
      <node id="4795">
        <label>gromacs/utility/alignedallocator.h</label>
        <link refid="alignedallocator_8h"/>
        <childnode refid="4776" relation="include">
        </childnode>
        <childnode refid="4796" relation="include">
        </childnode>
      </node>
      <node id="4803">
        <label>gromacs/utility/classhelpers.h</label>
        <link refid="classhelpers_8h"/>
        <childnode refid="4789" relation="include">
        </childnode>
      </node>
      <node id="4800">
        <label>exception</label>
      </node>
      <node id="4782">
        <label>gromacs/utility/gmxassert.h</label>
        <link refid="gmxassert_8h"/>
        <childnode refid="4783" relation="include">
        </childnode>
        <childnode refid="4786" relation="include">
        </childnode>
      </node>
      <node id="4793">
        <label>cstdio</label>
      </node>
      <node id="4774">
        <label>gromacs/utility/real.h</label>
        <link refid="real_8h"/>
      </node>
      <node id="4771">
        <label>src/gromacs/ewald/pme-gpu-internal.h</label>
        <link refid="pme-gpu-internal.h"/>
        <childnode refid="4772" relation="include">
        </childnode>
        <childnode refid="4775" relation="include">
        </childnode>
        <childnode refid="4787" relation="include">
        </childnode>
      </node>
      <node id="4781">
        <label>vector</label>
      </node>
      <node id="4797">
        <label>new</label>
      </node>
      <node id="4780">
        <label>utility</label>
      </node>
      <node id="4777">
        <label>array</label>
      </node>
      <node id="4783">
        <label>gromacs/utility/basedefinitions.h</label>
        <link refid="basedefinitions_8h"/>
        <childnode refid="4784" relation="include">
        </childnode>
        <childnode refid="4785" relation="include">
        </childnode>
      </node>
      <node id="4799">
        <label>cstdlib</label>
      </node>
      <node id="4798">
        <label>gromacs/utility/exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="4793" relation="include">
        </childnode>
        <childnode refid="4799" relation="include">
        </childnode>
        <childnode refid="4800" relation="include">
        </childnode>
        <childnode refid="4789" relation="include">
        </childnode>
        <childnode refid="4791" relation="include">
        </childnode>
        <childnode refid="4801" relation="include">
        </childnode>
        <childnode refid="4802" relation="include">
        </childnode>
        <childnode refid="4781" relation="include">
        </childnode>
        <childnode refid="4783" relation="include">
        </childnode>
        <childnode refid="4803" relation="include">
        </childnode>
        <childnode refid="4786" relation="include">
        </childnode>
        <childnode refid="4782" relation="include">
        </childnode>
      </node>
      <node id="4775">
        <label>gromacs/utility/arrayref.h</label>
        <link refid="arrayref_8h"/>
        <childnode refid="4776" relation="include">
        </childnode>
        <childnode refid="4777" relation="include">
        </childnode>
        <childnode refid="4778" relation="include">
        </childnode>
        <childnode refid="4779" relation="include">
        </childnode>
        <childnode refid="4780" relation="include">
        </childnode>
        <childnode refid="4781" relation="include">
        </childnode>
        <childnode refid="4782" relation="include">
        </childnode>
      </node>
      <node id="4776">
        <label>cstddef</label>
      </node>
      <node id="4772">
        <label>gromacs/fft/fft.h</label>
        <link refid="fft_8h"/>
        <childnode refid="4773" relation="include">
        </childnode>
        <childnode refid="4774" relation="include">
        </childnode>
      </node>
      <node id="4796">
        <label>gromacs/utility/allocator.h</label>
        <link refid="allocator_8h"/>
        <childnode refid="4776" relation="include">
        </childnode>
        <childnode refid="4789" relation="include">
        </childnode>
        <childnode refid="4797" relation="include">
        </childnode>
        <childnode refid="4783" relation="include">
        </childnode>
      </node>
      <node id="4787">
        <label>pme-gpu-types.h</label>
        <link refid="pme-gpu-types_8h"/>
        <childnode refid="4788" relation="include">
        </childnode>
        <childnode refid="4789" relation="include">
        </childnode>
        <childnode refid="4781" relation="include">
        </childnode>
        <childnode refid="4790" relation="include">
        </childnode>
        <childnode refid="4792" relation="include">
        </childnode>
        <childnode refid="4794" relation="include">
        </childnode>
        <childnode refid="4783" relation="include">
        </childnode>
      </node>
      <node id="4801">
        <label>type_traits</label>
      </node>
      <node id="4788">
        <label>config.h</label>
      </node>
      <node id="4773">
        <label>stdio.h</label>
      </node>
      <node id="4789">
        <label>memory</label>
      </node>
      <node id="4785">
        <label>inttypes.h</label>
      </node>
      <node id="4802">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4811">
        <label>src/gromacs/ewald/tests/pmesolvetest.cpp</label>
        <link refid="pmesolvetest_8cpp"/>
      </node>
      <node id="4813">
        <label>src/gromacs/ewald/tests/pmetestcommon.cpp</label>
        <link refid="pmetestcommon_8cpp"/>
      </node>
      <node id="4805">
        <label>src/gromacs/ewald/pme-gpu-internal.cpp</label>
        <link refid="pme-gpu-internal_8cpp"/>
      </node>
      <node id="4807">
        <label>src/gromacs/ewald/pme.cpp</label>
        <link refid="pme_8cpp"/>
      </node>
      <node id="4809">
        <label>src/gromacs/ewald/tests/pmebsplinetest.cpp</label>
        <link refid="pmebsplinetest_8cpp"/>
      </node>
      <node id="4812">
        <label>src/gromacs/ewald/tests/pmesplinespreadtest.cpp</label>
        <link refid="pmesplinespreadtest_8cpp"/>
      </node>
      <node id="4804">
        <label>src/gromacs/ewald/pme-gpu-internal.h</label>
        <link refid="pme-gpu-internal.h"/>
        <childnode refid="4805" relation="include">
        </childnode>
        <childnode refid="4806" relation="include">
        </childnode>
        <childnode refid="4807" relation="include">
        </childnode>
        <childnode refid="4808" relation="include">
        </childnode>
        <childnode refid="4813" relation="include">
        </childnode>
      </node>
      <node id="4806">
        <label>src/gromacs/ewald/pme-gpu.cpp</label>
        <link refid="pme-gpu_8cpp"/>
      </node>
      <node id="4810">
        <label>src/gromacs/ewald/tests/pmegathertest.cpp</label>
        <link refid="pmegathertest_8cpp"/>
      </node>
      <node id="4808">
        <label>src/gromacs/ewald/tests/pmetestcommon.h</label>
        <link refid="pmetestcommon_8h"/>
        <childnode refid="4809" relation="include">
        </childnode>
        <childnode refid="4810" relation="include">
        </childnode>
        <childnode refid="4811" relation="include">
        </childnode>
        <childnode refid="4812" relation="include">
        </childnode>
        <childnode refid="4813" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacegmx">gmx</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="pme-gpu-internal_8h_1a0f754eebaa9461af5829e9d32c8156cb" prot="public" static="no">
        <name>PmeSplineDataType</name>
        <enumvalue id="pme-gpu-internal_8h_1a0f754eebaa9461af5829e9d32c8156cbac82a6100dace2b41087ba6cf99a5976a" prot="public">
          <name>Values</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pme-gpu-internal_8h_1a0f754eebaa9461af5829e9d32c8156cba2a7f1476b6ddab6d53b03d77dacdbd1e" prot="public">
          <name>Derivatives</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Type of spline data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="69" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" bodystart="68" bodyend="72"/>
      </memberdef>
      <memberdef kind="enum" id="pme-gpu-internal_8h_1a68be0dbcc0dc3960694fc024c5996d79" prot="public" static="no">
        <name>GridOrdering</name>
        <enumvalue id="pme-gpu-internal_8h_1a68be0dbcc0dc3960694fc024c5996d79ac7c57bc52d896f142cae9c01bc84b6fe" prot="public">
          <name>YZX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pme-gpu-internal_8h_1a68be0dbcc0dc3960694fc024c5996d79ae65075d550f9b5bf9992fa1d71a131be" prot="public">
          <name>XYZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PME grid dimension ordering (from major to minor) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="76" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="enum" id="pme-gpu-internal_8h_1a8e828a9e22c6ef7676e82bbf2fbd2dec" prot="public" static="no">
        <name>PmeLayoutTransform</name>
        <enumvalue id="pme-gpu-internal_8h_1a8e828a9e22c6ef7676e82bbf2fbd2decad296947ed52345c4c2ee3231ee6ad88d" prot="public">
          <name>GpuToHost</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pme-gpu-internal_8h_1a8e828a9e22c6ef7676e82bbf2fbd2deca297f34b74ee094953276067334816b13" prot="public">
          <name>HostToGpu</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>A binary enum for spline data layout transformation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="614" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" bodystart="613" bodyend="617"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pme-gpu-internal_8h_1a60318df7520b83876d039831680929c8" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool c_usePadding</definition>
        <argsstring></argsstring>
        <name>c_usePadding</name>
        <initializer>= true</initializer>
        <briefdescription>
<para> <libinternal />  false: The atom data GPU buffers are sized precisely according to the number of atoms. (Except GPU spline data layout which is regardless intertwined for 2 atoms per warp). The atom index checks in the spread/gather code potentially hinder the performance. true: The atom data GPU buffers are padded with zeroes so that the possible number of atoms fitting in is divisible by PME_ATOM_DATA_ALIGNMENT. The atom index checks are not performed. There should be a performance win, but how big is it, remains to be seen. Additional cudaMemsetAsync calls are done occasionally (only charges/coordinates; spline data is always recalculated now). </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000019"><xreftitle>Todo</xreftitle><xrefdescription><para>Estimate performance differences </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="93" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pme-gpu-internal_8h_1afa408814d8c61c4e88c26ed74b27f97b" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool c_skipNeutralAtoms</definition>
        <argsstring></argsstring>
        <name>c_skipNeutralAtoms</name>
        <initializer>= false</initializer>
        <briefdescription>
<para> <libinternal />  false: Atoms with zero charges are processed by PME. Could introduce some overhead. true: Atoms with zero charges are not processed by PME. Adds branching to the spread/gather. Could be good for performance in specific systems with lots of neutral atoms. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000020"><xreftitle>Todo</xreftitle><xrefdescription><para>Estimate performance differences. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="101" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pme-gpu-internal_8h_1a855e8e4c292a1588af619f7342e1d690" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int c_virialAndEnergyCount</definition>
        <argsstring></argsstring>
        <name>c_virialAndEnergyCount</name>
        <initializer>= 7</initializer>
        <briefdescription>
<para> <libinternal />  Number of PME solve output floating point numbers. 6 for symmetric virial matrix + 1 for reciprocal energy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="107" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pme-gpu-internal_8h_1a05193e01dc0479ad49401b1732d86639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pme_gpu_get_atom_data_alignment</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_get_atom_data_alignment</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Returns the number of atoms per chunk in the atom charges/coordinates data layout. Depends on CUDA-specific block sizes, needed for the atom data padding. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of atoms in a single GPU atom data chunk. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1aad1216680366effd5fd9a016f8abd21b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pme_gpu_get_atoms_per_warp</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_get_atoms_per_warp</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Returns the number of atoms per chunk in the atom spline theta/dtheta data layout. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of atoms in a single GPU atom spline data chunk. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1af988b8256d624cfccf2fa2e4d0f7718f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_synchronize</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_synchronize</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Synchronizes the current computation, waiting for the GPU kernels/transfers to finish. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1aedb575cbd90b3246bc7f144fbbf8354a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_alloc_energy_virial</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_alloc_energy_virial</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Allocates the fixed size energy and virial buffer both on GPU and CPU. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1abf81c931d4564000972c2c860ac5e64b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_free_energy_virial</definition>
        <argsstring>(PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_free_energy_virial</name>
        <param>
          <type><ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Frees the energy and virial memory both on GPU and CPU. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1ab88677e1a5388251916282db3659dac6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_clear_energy_virial</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_clear_energy_virial</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Clears the energy and virial memory on GPU with 0. Should be called at the end of PME computation which returned energy/virial. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a226b7e3d43ba272c1a11886f08598187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_realloc_and_copy_bspline_values</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_realloc_and_copy_bspline_values</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Reallocates and copies the pre-computed B-spline values to the GPU. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1acc35829e3a2514ca9d0c567efe46d814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_free_bspline_values</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_free_bspline_values</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Frees the pre-computed B-spline values on the GPU (and the transfer CPU buffers). </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a5272eaf88e7b1110676df6cf6acc95e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_realloc_forces</definition>
        <argsstring>(PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_realloc_forces</name>
        <param>
          <type><ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Reallocates the GPU buffer for the PME forces. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a59705d17c95ae26dcf4e5c9d3cad7686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_free_forces</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_free_forces</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Frees the GPU buffer for the PME forces. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a5db280d2fe0d5ea1ab7784b55d7b5326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_copy_input_forces</definition>
        <argsstring>(PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_copy_input_forces</name>
        <param>
          <type><ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Copies the forces from the CPU buffer to the GPU (to reduce them with the PME GPU gathered forces). To be called e.g. after the bonded calculations. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a6aa284d4700ed885ff6fbcf30028edec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_copy_output_forces</definition>
        <argsstring>(PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_copy_output_forces</name>
        <param>
          <type><ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Copies the forces from the GPU to the CPU buffer. To be called after the gathering stage. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1aded614c4f44ad3c29689336a46f06c00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pme_gpu_stream_query</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_stream_query</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Checks whether work in the PME GPU stream has completed. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if work in the PME stream has completed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a73a5947c0ad0cb08d33b954fb3a5f503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_realloc_coordinates</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_realloc_coordinates</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Reallocates the input coordinates buffer on the GPU (and clears the padded part if needed). </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure.</para></parameterdescription>
</parameteritem>
</parameterlist>
Needs to be called on every DD step/in the beginning. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a4a9ae10ae4389bcf436fac531e892707" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_copy_input_coordinates</definition>
        <argsstring>(const PmeGpu *pmeGpu, const rvec *h_coordinates)</argsstring>
        <name>pme_gpu_copy_input_coordinates</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <param>
          <type>const rvec *</type>
          <declname>h_coordinates</declname>
        </param>
        <briefdescription>
<para>Copies the input coordinates from the CPU buffer onto the GPU. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">h_coordinates</parametername>
</parameternamelist>
<parameterdescription>
<para>Input coordinates (XYZ rvec array).</para></parameterdescription>
</parameteritem>
</parameterlist>
Needs to be called for every PME computation. The coordinates are then used in the spline calculation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a958fd0c6ec6b0956e464f4ce664d6aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_free_coordinates</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_free_coordinates</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Frees the coordinates on the GPU. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a030300386acd47a107e6aaa89d7a87f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_realloc_and_copy_input_coefficients</definition>
        <argsstring>(const PmeGpu *pmeGpu, const float *h_coefficients)</argsstring>
        <name>pme_gpu_realloc_and_copy_input_coefficients</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>h_coefficients</declname>
        </param>
        <briefdescription>
<para>Reallocates the buffer on the GPU and copies the charges/coefficients from the CPU buffer. Clears the padded part if needed. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">h_coefficients</parametername>
</parameternamelist>
<parameterdescription>
<para>The input atom charges/coefficients.</para></parameterdescription>
</parameteritem>
</parameterlist>
Does not need to be done for every PME computation, only whenever the local charges change. (So, in the beginning of the run, or on DD step). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="246" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a55eee0cd4c26cf7dc543c2812476e64a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_free_coefficients</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_free_coefficients</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Frees the charges/coefficients on the GPU. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="254" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a820996b09dec5d75dda475d63564fad7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_realloc_spline_data</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_realloc_spline_data</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Reallocates the buffers on the GPU and the host for the atoms spline data. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="261" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a482fd2b7060518e96c528a60241b5733" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_free_spline_data</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_free_spline_data</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Frees the buffers on the GPU for the atoms spline data. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a89b9c510e5f884da85eb1aac7d12d548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_realloc_grid_indices</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_realloc_grid_indices</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Reallocates the buffers on the GPU and the host for the particle gridline indices. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1ac4cb36ed8fd4dc8add0ae484502e701a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_free_grid_indices</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_free_grid_indices</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Frees the buffer on the GPU for the particle gridline indices. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="282" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a39b72f968b9907393e23b9d9ce37fd6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_realloc_grids</definition>
        <argsstring>(PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_realloc_grids</name>
        <param>
          <type><ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Reallocates the real space grid and the complex reciprocal grid (if needed) on the GPU. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="289" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a28da8afcd93cb6b68e56927b91f58971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_free_grids</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_free_grids</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Frees the real space grid and the complex reciprocal grid (if needed) on the GPU. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="296" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1adad2de39f6b338c2b757f7ead3e06c19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_clear_grids</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_clear_grids</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Clears the real space grid on the GPU. Should be called at the end of each computation. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="304" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1abd6254378ab90de1dff115c61d0c9931" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_realloc_and_copy_fract_shifts</definition>
        <argsstring>(PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_realloc_and_copy_fract_shifts</name>
        <param>
          <type><ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Reallocates and copies the pre-computed fractional coordinates&apos; shifts to the GPU. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="311" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a4b9dbf91825ee5a1dcd10832622bc6cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_free_fract_shifts</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_free_fract_shifts</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Frees the pre-computed fractional coordinates&apos; shifts on the GPU. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="318" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1ac3861e7817283870059f011c2b382759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_copy_input_gather_grid</definition>
        <argsstring>(const PmeGpu *pmeGpu, float *h_grid)</argsstring>
        <name>pme_gpu_copy_input_gather_grid</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>h_grid</declname>
        </param>
        <briefdescription>
<para>Copies the input real-space grid from the host to the GPU. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">h_grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The host-side grid buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a71a34b1e785bc25733856310173b4380" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_copy_output_spread_grid</definition>
        <argsstring>(const PmeGpu *pmeGpu, float *h_grid)</argsstring>
        <name>pme_gpu_copy_output_spread_grid</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>h_grid</declname>
        </param>
        <briefdescription>
<para>Copies the output real-space grid from the GPU to the host. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">h_grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The host-side grid buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a8367e50be41bc42df58802095d615091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_copy_output_spread_atom_data</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_copy_output_spread_atom_data</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Copies the spread output spline data and gridline indices from the GPU to the host. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="343" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a0f637186d789670a691718b6e2093dcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_copy_input_gather_atom_data</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_copy_input_gather_atom_data</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Copies the gather input spline data and gridline indices from the host to the GPU. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="350" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a9f7ceb99dc4b03f7af55cb2d244629cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_sync_spread_grid</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_sync_spread_grid</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Waits for the grid copying to the host-side buffer after spreading to finish. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="357" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1ad13bf9ff1045e60dd7d3d4c5be3ea5bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_init_internal</definition>
        <argsstring>(PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_init_internal</name>
        <param>
          <type><ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Does the one-time GPU-framework specific PME initialization. For CUDA, the PME stream is created with the highest priority. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="365" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a9de6cbe75f1b38a5d6fb17a83d77dc3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_destroy_specific</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_destroy_specific</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Destroys the PME GPU-framework specific data. Should be called last in the PME GPU destructor. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="373" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a4a5d907676bd77a83006abb2d08d5827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_init_sync_events</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_init_sync_events</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Initializes the PME GPU synchronization events. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1af45fb5e4496345143b9daf14b6c33463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_destroy_sync_events</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_destroy_sync_events</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Destroys the PME GPU synchronization events. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="387" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1ad9aa90037c75c67926f87351dd081d5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_reinit_3dfft</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_reinit_3dfft</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Initializes the CUDA FFT structures. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="394" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a04c25cffa052c81d0c7b201e40da4010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_destroy_3dfft</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_destroy_3dfft</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Destroys the CUDA FFT structures. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="401" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a0588378ce36eda8bc7a685875ba4b3ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_update_timings</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_update_timings</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Finalizes all the active PME GPU stage timings for the current computation. Should be called at the end of every computation. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="410" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1aa77fc00ad1c62f0e0acb03b644e2bc1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_reinit_timings</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_reinit_timings</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Updates the internal list of active PME GPU stages (if timings are enabled). </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU data structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1ac9c5c53ccebc4b241b0de1b0d3ca5fc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_reset_timings</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_reset_timings</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Resets the PME GPU timings. To be called at the reset MD step. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="424" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1ac600d44fbeb29e467155b1b193410908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_get_timings</definition>
        <argsstring>(const PmeGpu *pmeGpu, gmx_wallclock_gpu_pme_t *timings)</argsstring>
        <name>pme_gpu_get_timings</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <param>
          <type><ref refid="structgmx__wallclock__gpu__pme__t" kindref="compound">gmx_wallclock_gpu_pme_t</ref> *</type>
          <declname>timings</declname>
        </param>
        <briefdescription>
<para>Copies the PME GPU timings to the gmx_wallclock_gpu_t structure (for log output). To be called at the run end. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timings</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="structgmx__wallclock__gpu__pme__t" kindref="compound">gmx_wallclock_gpu_pme_t</ref> structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="432" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1ab826c78869c7ea686932c79c718ee785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_spread</definition>
        <argsstring>(const PmeGpu *pmeGpu, int gridIndex, real *h_grid, bool computeSplines, bool spreadCharges)</argsstring>
        <name>pme_gpu_spread</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gridIndex</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> *</type>
          <declname>h_grid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>computeSplines</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>spreadCharges</declname>
        </param>
        <briefdescription>
<para>A GPU spline computation and charge spreading function. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gridIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the PME grid - unused, assumed to be 0. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">h_grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The host-side grid buffer (used only if the result of the spread is expected on the host, e.g. testing or host-side FFT) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">computeSplines</parametername>
</parameternamelist>
<parameterdescription>
<para>Should the computation of spline parameters and gridline indices be performed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">spreadCharges</parametername>
</parameternamelist>
<parameterdescription>
<para>Should the charges/coefficients be spread on the grid. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="447" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a7a3dfd8ef120496bb8e2de24f439719f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_3dfft</definition>
        <argsstring>(const PmeGpu *pmeGpu, enum gmx_fft_direction direction, const int gridIndex)</argsstring>
        <name>pme_gpu_3dfft</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <param>
          <type>enum <ref refid="fft_8h_1af2aa0b3a5f3a4339ecb2bd67cb8f8302" kindref="member">gmx_fft_direction</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>gridIndex</declname>
        </param>
        <briefdescription>
<para>3D FFT R2C/C2R routine. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Transform direction (real-to-complex or complex-to-real) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gridIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the PME grid - unused, assumed to be 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="460" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a8d5e0aac3ae4e01d565a8f6dc04000ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_solve</definition>
        <argsstring>(const PmeGpu *pmeGpu, t_complex *h_grid, GridOrdering gridOrdering, bool computeEnergyAndVirial)</argsstring>
        <name>pme_gpu_solve</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <param>
          <type><ref refid="structt__complex" kindref="compound">t_complex</ref> *</type>
          <declname>h_grid</declname>
        </param>
        <param>
          <type><ref refid="pme-gpu-internal_8h_1a68be0dbcc0dc3960694fc024c5996d79" kindref="member">GridOrdering</ref></type>
          <declname>gridOrdering</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>computeEnergyAndVirial</declname>
        </param>
        <briefdescription>
<para>A GPU Fourier space solving function. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">h_grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The host-side input and output Fourier grid buffer (used only with testing or host-side FFT) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gridOrdering</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the dimenion ordering of the complex grid. TODO: store this information? </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">computeEnergyAndVirial</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if the energy and virial computation should also be performed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="472" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a9f77ad3d3f962d38d4e39008dd897d74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_gather</definition>
        <argsstring>(PmeGpu *pmeGpu, PmeForceOutputHandling forceTreatment, const float *h_grid)</argsstring>
        <name>pme_gpu_gather</name>
        <param>
          <type><ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <param>
          <type><ref refid="pme_8h_1acbcd1495b351f6a99fa2bf5b10aca640" kindref="member">PmeForceOutputHandling</ref></type>
          <declname>forceTreatment</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>h_grid</declname>
        </param>
        <briefdescription>
<para>A GPU force gathering function. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">forceTreatment</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells how data in h_forces should be treated. TODO: determine efficiency/balance of host/device-side reductions. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">h_grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The host-side grid buffer (used only in testing mode) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="485" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a466c37f38b87548e12409e53c5454782" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pme_gpu_uses_dd</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_uses_dd</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Tells if PME runs on multiple GPUs with the decomposition. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if PME runs on multiple GPUs, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="499" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" bodystart="499" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1af125ef6f5b90c0a65ab54d876486270b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pme_gpu_performs_gather</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_performs_gather</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Tells if PME performs the gathering stage on GPU. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the gathering is performed on GPU, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="510" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" bodystart="510" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1aa880aaf9f6d9fef892cb81a3f2cdee8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pme_gpu_performs_FFT</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_performs_FFT</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Tells if PME performs the FFT stages on GPU. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if FFT is performed on GPU, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="521" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" bodystart="521" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a82946cfc6acbb5da584359aec1f5e0b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pme_gpu_performs_wrapping</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_performs_wrapping</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Tells if PME performs the grid (un-)wrapping on GPU. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if (un-)wrapping is performed on GPU, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="532" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" bodystart="532" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a331cf91d6afe3e6a24c3af0e6d87fefb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pme_gpu_performs_solve</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_performs_solve</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Tells if PME performs the grid solving on GPU. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if solving is performed on GPU, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="543" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" bodystart="543" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a09e861258a4869a92963dd6c30147491" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_set_testing</definition>
        <argsstring>(PmeGpu *pmeGpu, bool testing)</argsstring>
        <name>pme_gpu_set_testing</name>
        <param>
          <type><ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>testing</declname>
        </param>
        <briefdescription>
<para>Enables or disables the testing mode. Testing mode only implies copying all the outputs, even the intermediate ones, to the host, and also makes the copies synchronous. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">testing</parametername>
</parameternamelist>
<parameterdescription>
<para>Should the testing mode be enabled, or disabled. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="556" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" bodystart="556" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a2eea8129ee6f44acdaf39e1b71cbf819" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pme_gpu_is_testing</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_is_testing</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Tells if PME is in the testing mode. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if testing mode is enabled, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="568" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" bodystart="568" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a88c3c7cfd40227a0314f6e997521afed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">gmx::ArrayRef</ref>&lt; <ref refid="namespacegmx_1a139c1919a9680de4ad1450f42e37d33b" kindref="member">gmx::RVec</ref> &gt;</type>
        <definition>gmx::ArrayRef&lt;gmx::RVec&gt; pme_gpu_get_forces</definition>
        <argsstring>(PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_get_forces</name>
        <param>
          <type><ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Returns the GPU gathering staging forces buffer. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The input/output forces. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="581" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.cpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a1bea55789e0572d1ff0c4f78cdb6e8ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_get_energy_virial</definition>
        <argsstring>(const PmeGpu *pmeGpu, real *energy, matrix virial)</argsstring>
        <name>pme_gpu_get_energy_virial</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> *</type>
          <declname>energy</declname>
        </param>
        <param>
          <type>matrix</type>
          <declname>virial</declname>
        </param>
        <briefdescription>
<para>Returns the output virial and energy of the PME solving. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">energy</parametername>
</parameternamelist>
<parameterdescription>
<para>The output energy. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">virial</parametername>
</parameternamelist>
<parameterdescription>
<para>The output virial matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="590" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.cpp" bodystart="85" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a79575e51e673f2d13315370dba0e7191" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_update_input_box</definition>
        <argsstring>(PmeGpu *pmeGpu, const matrix box)</argsstring>
        <name>pme_gpu_update_input_box</name>
        <param>
          <type><ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <param>
          <type>const matrix</type>
          <declname>box</declname>
        </param>
        <briefdescription>
<para>Updates the unit cell parameters. Does not check if update is necessary - that is done in <ref refid="pme-gpu_8cpp_1a2db9507955e1908ed647984a9c62f641" kindref="member">pme_gpu_prepare_computation()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">box</parametername>
</parameternamelist>
<parameterdescription>
<para>The unit cell box. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="598" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.cpp" bodystart="103" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1ab247f00ef7f36e9fbd3fb3c49e2cb6a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_finish_computation</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_finish_computation</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Finishes the PME GPU computation, waiting for the output forces and/or energy/virial to be copied to the host. If forces were computed, they will have arrived at the external host buffer provided to gather. If virial/energy were computed, they will have arrived into the internal staging buffer (even though that should have already happened before even launching the gather). Finally, cudaEvent_t based GPU timers get updated if enabled. They also need stream synchronization for correctness. Additionally, device-side buffers are cleared asynchronously for the next computation. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="610" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a55174cd4bc39d7f14fe375a38ee811ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_transform_spline_atom_data</definition>
        <argsstring>(const PmeGpu *pmeGpu, const pme_atomcomm_t *atc, PmeSplineDataType type, int dimIndex, PmeLayoutTransform transform)</argsstring>
        <name>pme_gpu_transform_spline_atom_data</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <param>
          <type>const pme_atomcomm_t *</type>
          <declname>atc</declname>
        </param>
        <param>
          <type><ref refid="pme-gpu-internal_8h_1a0f754eebaa9461af5829e9d32c8156cb" kindref="member">PmeSplineDataType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dimIndex</declname>
        </param>
        <param>
          <type><ref refid="pme-gpu-internal_8h_1a8e828a9e22c6ef7676e82bbf2fbd2dec" kindref="member">PmeLayoutTransform</ref></type>
          <declname>transform</declname>
        </param>
        <briefdescription>
<para>Rearranges the atom spline data between the GPU and host layouts. Only used for test purposes so far, likely to be horribly slow. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">atc</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME CPU atom data structure (with a single-threaded layout). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>The spline data type (values or derivatives). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dimIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension index. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">transform</parametername>
</parameternamelist>
<parameterdescription>
<para>Layout transform type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="629" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.cpp" bodystart="314" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a7ba882d2de50fa957af00828162dd06e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_get_real_grid_sizes</definition>
        <argsstring>(const PmeGpu *pmeGpu, gmx::IVec *gridSize, gmx::IVec *paddedGridSize)</argsstring>
        <name>pme_gpu_get_real_grid_sizes</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1a9699d31c62e2a4cc2c730793a1224411" kindref="member">gmx::IVec</ref> *</type>
          <declname>gridSize</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1a9699d31c62e2a4cc2c730793a1224411" kindref="member">gmx::IVec</ref> *</type>
          <declname>paddedGridSize</declname>
        </param>
        <briefdescription>
<para>Get the normal/padded grid dimensions of the real-space PME grid on GPU. Only used in tests. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">gridSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the grid dimensions to fill in. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">paddedGridSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the padded grid dimensions to fill in. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="639" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.cpp" bodystart="372" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1ae81445001fbc385bc2868fcbb4eb226b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_reinit</definition>
        <argsstring>(gmx_pme_t *pme, gmx_device_info_t *gpuInfo)</argsstring>
        <name>pme_gpu_reinit</name>
        <param>
          <type>gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="structgmx__device__info__t" kindref="compound">gmx_device_info_t</ref> *</type>
          <declname>gpuInfo</declname>
        </param>
        <briefdescription>
<para>(Re-)initializes the PME GPU data at the beginning of the run or on DLB. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">pme</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">gpuInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>The GPU information structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1NotImplementedError" kindref="compound">gmx::NotImplementedError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if this generally valid PME structure is not valid for GPU runs. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="648" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.cpp" bodystart="385" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a7e5ef8957b2366acbb1eb097aa06d755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_destroy</definition>
        <argsstring>(PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_destroy</name>
        <param>
          <type><ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para>Destroys the PME GPU data at the end of the run. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="655" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.cpp" bodystart="417" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a4e377588a4bede4919cdcf5ef29ae9b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_reinit_atoms</definition>
        <argsstring>(PmeGpu *pmeGpu, const int nAtoms, const real *charges)</argsstring>
        <name>pme_gpu_reinit_atoms</name>
        <param>
          <type><ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>nAtoms</declname>
        </param>
        <param>
          <type>const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> *</type>
          <declname>charges</declname>
        </param>
        <briefdescription>
<para>Reallocates the local atoms data (charges, coordinates, etc.). Copies the charges to the GPU. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nAtoms</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of particles. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">charges</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the host-side array of particle charges.</para></parameterdescription>
</parameteritem>
</parameterlist>
This is a function that should only be called in the beginning of the run and on domain decomposition. Should be called before the pme_gpu_set_io_ranges. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="667" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.cpp" bodystart="439" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="pme-gpu-internal_8h_1a69066d5a6d2bd3cfd48c22a7da4fd88b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_gpu_reinit_computation</definition>
        <argsstring>(const PmeGpu *pmeGpu)</argsstring>
        <name>pme_gpu_reinit_computation</name>
        <param>
          <type>const <ref refid="structPmeGpu" kindref="compound">PmeGpu</ref> *</type>
          <declname>pmeGpu</declname>
        </param>
        <briefdescription>
<para> <libinternal />  The PME GPU reinitialization function that is called both at the end of any PME computation and on any load balancing. </para>        </briefdescription>
        <detaileddescription>
<para>This clears the device-side working buffers in preparation for new computation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pmeGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>The PME GPU structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h" line="678" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.cpp" bodystart="136" bodyend="140"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file contains internal function definitions for performing the PME calculations on GPU. These are not meant to be exposed outside of the PME GPU code. As of now, their bodies are still in the common <ref refid="pme-gpu_8cpp" kindref="compound">pme-gpu.cpp</ref> files. </para>    </briefdescription>
    <detaileddescription>
<internal><para><simplesect kind="author"><para>Aleksei Iupinov <ulink url="mailto:a.yupinov@gmail.com">a.yupinov@gmail.com</ulink> </para></simplesect>
</para></internal>
    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-gpu-internal.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1HostAllocationPolicy_1_1Impl" kind="class" prot="public">
    <compoundname>gmx::HostAllocationPolicy::Impl</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgmx_1_1HostAllocationPolicy_1_1Impl_1a78ad1ba127a9d1ae21d5399ee8b85b13" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* gmx::HostAllocationPolicy::Impl::pointer_</definition>
        <argsstring></argsstring>
        <name>pointer_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>Pointer to the last unfreed allocation, or nullptr if no allocation exists. </para>        </briefdescription>
        <detaileddescription>
<para>Note that during e.g. std::vector.resize() a call to its allocator&apos;s allocate() function precedes the call to its allocator&apos;s deallocate() function for freeing the old buffer after the data has been copied from it. So in general, pointer_ will not match the argument received by <ref refid="classgmx_1_1HostAllocationPolicy_1ae9eebd779172275fb09af48d4985fb4d" kindref="member">free()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/hostallocator.cpp" line="72" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/hostallocator.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1HostAllocationPolicy_1_1Impl_1a9517b3335b82e2e800848c9b5398f757" prot="public" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t gmx::HostAllocationPolicy::Impl::numBytes_</definition>
        <argsstring></argsstring>
        <name>numBytes_</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Number of bytes in the last unfreed allocation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/hostallocator.cpp" line="74" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/hostallocator.cpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1HostAllocationPolicy_1_1Impl_1ae3957f666cb9a699923dd2d940f7f1ad" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* gmx::HostAllocationPolicy::Impl::pinnedPointer_</definition>
        <argsstring></argsstring>
        <name>pinnedPointer_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>The pointer to any storage that has been pinned, or nullptr if none has been pinned. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/hostallocator.cpp" line="76" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/hostallocator.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1HostAllocationPolicy_1_1Impl_1ace172bdc6086dcbcf10700b65f0ba43f" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegmx_1abe4caed0469c0de84e0c1c1a81972b38" kindref="member">PinningPolicy</ref></type>
        <definition>PinningPolicy gmx::HostAllocationPolicy::Impl::pinningPolicy_</definition>
        <argsstring></argsstring>
        <name>pinningPolicy_</name>
        <initializer>= PinningPolicy::CannotBePinned</initializer>
        <briefdescription>
<para>Whether this object is in mode where new allocations will be pinned by default. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/hostallocator.cpp" line="78" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/hostallocator.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Private implementation class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/hostallocator.cpp" line="61" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/hostallocator.cpp" bodystart="60" bodyend="79"/>
    <listofallmembers>
      <member refid="classgmx_1_1HostAllocationPolicy_1_1Impl_1a9517b3335b82e2e800848c9b5398f757" prot="public" virt="non-virtual"><scope>gmx::HostAllocationPolicy::Impl</scope><name>numBytes_</name></member>
      <member refid="classgmx_1_1HostAllocationPolicy_1_1Impl_1ae3957f666cb9a699923dd2d940f7f1ad" prot="public" virt="non-virtual"><scope>gmx::HostAllocationPolicy::Impl</scope><name>pinnedPointer_</name></member>
      <member refid="classgmx_1_1HostAllocationPolicy_1_1Impl_1ace172bdc6086dcbcf10700b65f0ba43f" prot="public" virt="non-virtual"><scope>gmx::HostAllocationPolicy::Impl</scope><name>pinningPolicy_</name></member>
      <member refid="classgmx_1_1HostAllocationPolicy_1_1Impl_1a78ad1ba127a9d1ae21d5399ee8b85b13" prot="public" virt="non-virtual"><scope>gmx::HostAllocationPolicy::Impl</scope><name>pointer_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

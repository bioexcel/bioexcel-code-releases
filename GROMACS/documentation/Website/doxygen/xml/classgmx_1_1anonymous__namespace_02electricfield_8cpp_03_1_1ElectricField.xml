<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField" kind="class" prot="public" final="yes">
    <compoundname>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</compoundname>
    <basecompoundref refid="classgmx_1_1IMDModule" prot="public" virt="non-virtual">gmx::IMDModule</basecompoundref>
    <basecompoundref refid="classgmx_1_1IMdpOptionProvider" prot="public" virt="non-virtual">gmx::IMdpOptionProvider</basecompoundref>
    <basecompoundref refid="classgmx_1_1IMDOutputProvider" prot="public" virt="non-virtual">gmx::IMDOutputProvider</basecompoundref>
    <basecompoundref refid="classgmx_1_1IForceProvider" prot="public" virt="non-virtual">gmx::IForceProvider</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a72b7deb95974295643a01e00059b6c56" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricFieldData" kindref="compound">ElectricFieldData</ref></type>
        <definition>ElectricFieldData gmx::anonymous_namespace{electricfield.cpp}::ElectricField::efield_[3]</definition>
        <argsstring>[3]</argsstring>
        <name>efield_</name>
        <briefdescription>
<para>The field strength in each dimension. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="249" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a07b37cf82aff341e77ff40e38e353472" prot="private" static="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* gmx::anonymous_namespace{electricfield.cpp}::ElectricField::fpField_</definition>
        <argsstring></argsstring>
        <name>fpField_</name>
        <briefdescription>
<para><ref refid="classgmx_1_1File" kindref="compound">File</ref> pointer for electric field. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="251" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a260e1da3a8eff542e0b2707b565af35e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::anonymous_namespace{electricfield.cpp}::ElectricField::ElectricField</definition>
        <argsstring>()</argsstring>
        <name>ElectricField</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="172" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a1e5984e4c46bc7c95e45b02d2f354139" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classgmx_1_1IMdpOptionProvider" kindref="compound">IMdpOptionProvider</ref> *</type>
        <definition>IMdpOptionProvider* gmx::anonymous_namespace{electricfield.cpp}::ElectricField::mdpOptionProvider</definition>
        <argsstring>() override</argsstring>
        <name>mdpOptionProvider</name>
        <reimplements refid="classgmx_1_1IMDModule_1a6c23ad73636fe4e2ff51b89ef8314277">mdpOptionProvider</reimplements>
        <briefdescription>
<para>Returns an interface for handling mdp input (and tpr I/O). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="175" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="175" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1aae68c9e2476faa352352af8c1ff19076" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classgmx_1_1IMDOutputProvider" kindref="compound">IMDOutputProvider</ref> *</type>
        <definition>IMDOutputProvider* gmx::anonymous_namespace{electricfield.cpp}::ElectricField::outputProvider</definition>
        <argsstring>() override</argsstring>
        <name>outputProvider</name>
        <reimplements refid="classgmx_1_1IMDModule_1a83402c2eb4355e16eaace5afd6ea6f84">outputProvider</reimplements>
        <briefdescription>
<para>Returns an interface for handling output files during simulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="176" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a2365fdf2da1f8b85f533584e0aa2760d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void gmx::anonymous_namespace{electricfield.cpp}::ElectricField::initForceProviders</definition>
        <argsstring>(ForceProviders *forceProviders) override</argsstring>
        <name>initForceProviders</name>
        <reimplements refid="classgmx_1_1IMDModule_1a3f7c49b16958e7dcf005675e0db044f4">initForceProviders</reimplements>
        <param>
          <type><ref refid="structForceProviders" kindref="compound">ForceProviders</ref> *</type>
          <declname>forceProviders</declname>
        </param>
        <briefdescription>
<para>Initializes force providers from this module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="177" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="177" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1ab2e66a7e28040e5d9148ed0fd13af2ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gmx::anonymous_namespace{electricfield.cpp}::ElectricField::initMdpTransform</definition>
        <argsstring>(IKeyValueTreeTransformRules *transform) override</argsstring>
        <name>initMdpTransform</name>
        <reimplements refid="classgmx_1_1IMdpOptionProvider_1ab26ec412b0abbf4ca56f472e9315aa52">initMdpTransform</reimplements>
        <param>
          <type><ref refid="classgmx_1_1IKeyValueTreeTransformRules" kindref="compound">IKeyValueTreeTransformRules</ref> *</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
<para>Initializes a transform from mdp values to sectioned options. </para>        </briefdescription>
        <detaileddescription>
<para>The transform is specified from a flat <ref refid="classgmx_1_1KeyValueTreeObject" kindref="compound">KeyValueTreeObject</ref> that contains each mdp value as a property, to a structured key-value tree that should match the options defined in <ref refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a4719a7530cc1f19ce7c6a8279c3e2e26" kindref="member">initMdpOptions()</ref>.</para><para>This method may be removed once the flat mdp file is replaced with a more structure input file (that can be directly read into the internal key-value tree), and there is no longer any need for backward compatibility with old files. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="186" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="273" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a4719a7530cc1f19ce7c6a8279c3e2e26" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gmx::anonymous_namespace{electricfield.cpp}::ElectricField::initMdpOptions</definition>
        <argsstring>(IOptionsContainerWithSections *options) override</argsstring>
        <name>initMdpOptions</name>
        <reimplements refid="classgmx_1_1IMdpOptionProvider_1a80115d8cd098b416887a70e053e08bd9">initMdpOptions</reimplements>
        <param>
          <type><ref refid="classgmx_1_1IOptionsContainerWithSections" kindref="compound">IOptionsContainerWithSections</ref> *</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Initializes options that declare input (mdp) parameters for this module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="187" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="283" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a8dd77d1193911607b03d70b7fc5cfbf9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gmx::anonymous_namespace{electricfield.cpp}::ElectricField::buildMdpOutput</definition>
        <argsstring>(KeyValueTreeObjectBuilder *builder) const override</argsstring>
        <name>buildMdpOutput</name>
        <reimplements refid="classgmx_1_1IMdpOptionProvider_1a00de9c5cad0d03a01a0ecf640a44421c">buildMdpOutput</reimplements>
        <param>
          <type><ref refid="classgmx_1_1KeyValueTreeObjectBuilder" kindref="compound">KeyValueTreeObjectBuilder</ref> *</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
<para>Prepares to write a flat key-value tree like an mdp file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="188" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="291" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1ae106ba42051277fdb3593bce3fa122bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gmx::anonymous_namespace{electricfield.cpp}::ElectricField::initOutput</definition>
        <argsstring>(FILE *fplog, int nfile, const t_filenm fnm[], bool bAppendFiles, const gmx_output_env_t *oenv) override</argsstring>
        <name>initOutput</name>
        <reimplements refid="classgmx_1_1IMDOutputProvider_1a3cf6c8e8ca782581ba8f3e303fd5ecb4">initOutput</reimplements>
        <param>
          <type>FILE *</type>
          <declname>fplog</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nfile</declname>
        </param>
        <param>
          <type>const <ref refid="structt__filenm" kindref="compound">t_filenm</ref></type>
          <declname>fnm</declname>
          <array>[]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>bAppendFiles</declname>
        </param>
        <param>
          <type>const <ref refid="structgmx__output__env__t" kindref="compound">gmx_output_env_t</ref> *</type>
          <declname>oenv</declname>
        </param>
        <briefdescription>
<para>Initializes file output from a simulation run. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fplog</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1File" kindref="compound">File</ref> pointer for log messages </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nfile</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of files </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fnm</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of filenames and properties </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bAppendFiles</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not we should append to files </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">oenv</parametername>
</parameternamelist>
<parameterdescription>
<para>The output environment for xvg files </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="191" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="306" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a91166d609465655b2cf8dd57a9da7c99" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gmx::anonymous_namespace{electricfield.cpp}::ElectricField::finishOutput</definition>
        <argsstring>() override</argsstring>
        <name>finishOutput</name>
        <reimplements refid="classgmx_1_1IMDOutputProvider_1af377d260cb3b2db23f2d4f3ce10ace2c">finishOutput</reimplements>
        <briefdescription>
<para>Finalizes output from a simulation run. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="193" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="330" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a68e364d813d26ea04734efa247070a08" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gmx::anonymous_namespace{electricfield.cpp}::ElectricField::calculateForces</definition>
        <argsstring>(const t_commrec *cr, const t_mdatoms *mdatoms, const matrix box, double t, const rvec *x, gmx::ForceWithVirial *forceWithVirial) override</argsstring>
        <name>calculateForces</name>
        <reimplements refid="classgmx_1_1IForceProvider_1a10a494b516486a24f065a0694558299b">calculateForces</reimplements>
        <param>
          <type>const <ref refid="structt__commrec" kindref="compound">t_commrec</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>const <ref refid="structt__mdatoms" kindref="compound">t_mdatoms</ref> *</type>
          <declname>mdatoms</declname>
        </param>
        <param>
          <type>const matrix</type>
          <declname>box</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const rvec *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1ForceWithVirial" kindref="compound">gmx::ForceWithVirial</ref> *</type>
          <declname>forceWithVirial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="197" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="359" bodyend="390"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a9e30ce7bee96d3070fd8a9786f122d7d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::anonymous_namespace{electricfield.cpp}::ElectricField::isActive</definition>
        <argsstring>() const </argsstring>
        <name>isActive</name>
        <briefdescription>
<para>Return whether or not to apply a field. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="206" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="346" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a749da8159e2959ff880995736c661d6c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>real gmx::anonymous_namespace{electricfield.cpp}::ElectricField::field</definition>
        <argsstring>(int dim, real t) const </argsstring>
        <name>field</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Return the field strength. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The spatial direction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time (ps) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The field strength in V/nm units </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="214" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="341" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a1c46617dfb563fe915951bb94de6ed20" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>real gmx::anonymous_namespace{electricfield.cpp}::ElectricField::a</definition>
        <argsstring>(int dim) const </argsstring>
        <name>a</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
<para>Return amplitude of field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dim</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction of the field (XX, YY, ZZ) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Amplitude of the field </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="221" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="221" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a1ba7e2c9ba106791812f3ba0f683f990" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>real gmx::anonymous_namespace{electricfield.cpp}::ElectricField::omega</definition>
        <argsstring>(int dim) const </argsstring>
        <name>omega</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
<para>Return frequency of field (1/ps) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dim</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction of the field (XX, YY, ZZ) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Frequency of the field </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="227" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="227" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a8dbaaea42f0fadd5fcfe34a4b0f2b60d" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>real gmx::anonymous_namespace{electricfield.cpp}::ElectricField::t0</definition>
        <argsstring>(int dim) const </argsstring>
        <name>t0</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
<para>Return time of pulse peak. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dim</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction of the field (XX, YY, ZZ) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Time of pulse peak </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="233" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="233" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1aa6548a1ac10825124b48b94464a9405e" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>real gmx::anonymous_namespace{electricfield.cpp}::ElectricField::sigma</definition>
        <argsstring>(int dim) const </argsstring>
        <name>sigma</name>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
<para>Return width of the pulse. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dim</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction of the field (XX, YY, ZZ) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Width of the pulse </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="239" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="239" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a77bfaa45bd4da58edda4a90b4e5358fa" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::anonymous_namespace{electricfield.cpp}::ElectricField::printComponents</definition>
        <argsstring>(double t) const </argsstring>
        <name>printComponents</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Print the field components to a file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time Will throw and exit with fatal error if file is not open. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="246" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="353" bodyend="357"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describe time dependent electric field. </para>    </briefdescription>
    <detaileddescription>
<internal><para>Class that implements a force to be evaluated in mdrun. The electric field can be pulsed and oscillating, simply oscillating, or static, in each of X,Y,Z directions. </para></internal>
    </detaileddescription>
    <inheritancegraph>
      <node id="1229">
        <label>gmx::IForceProvider</label>
        <link refid="classgmx_1_1IForceProvider"/>
      </node>
      <node id="1227">
        <label>gmx::IMdpOptionProvider</label>
        <link refid="classgmx_1_1IMdpOptionProvider"/>
      </node>
      <node id="1228">
        <label>gmx::IMDOutputProvider</label>
        <link refid="classgmx_1_1IMDOutputProvider"/>
      </node>
      <node id="1226">
        <label>gmx::IMDModule</label>
        <link refid="classgmx_1_1IMDModule"/>
      </node>
      <node id="1225">
        <label>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</label>
        <link refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField"/>
        <childnode refid="1226" relation="public-inheritance">
        </childnode>
        <childnode refid="1227" relation="public-inheritance">
        </childnode>
        <childnode refid="1228" relation="public-inheritance">
        </childnode>
        <childnode refid="1229" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1234">
        <label>gmx::IForceProvider</label>
        <link refid="classgmx_1_1IForceProvider"/>
      </node>
      <node id="1232">
        <label>gmx::IMdpOptionProvider</label>
        <link refid="classgmx_1_1IMdpOptionProvider"/>
      </node>
      <node id="1233">
        <label>gmx::IMDOutputProvider</label>
        <link refid="classgmx_1_1IMDOutputProvider"/>
      </node>
      <node id="1231">
        <label>gmx::IMDModule</label>
        <link refid="classgmx_1_1IMDModule"/>
      </node>
      <node id="1230">
        <label>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</label>
        <link refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
        <childnode refid="1232" relation="public-inheritance">
        </childnode>
        <childnode refid="1233" relation="public-inheritance">
        </childnode>
        <childnode refid="1234" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" line="170" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/applied-forces/electricfield.cpp" bodystart="167" bodyend="252"/>
    <listofallmembers>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a1c46617dfb563fe915951bb94de6ed20" prot="private" virt="non-virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>a</name></member>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a8dd77d1193911607b03d70b7fc5cfbf9" prot="public" virt="virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>buildMdpOutput</name></member>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a68e364d813d26ea04734efa247070a08" prot="public" virt="virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>calculateForces</name></member>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a72b7deb95974295643a01e00059b6c56" prot="private" virt="non-virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>efield_</name></member>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a260e1da3a8eff542e0b2707b565af35e" prot="public" virt="non-virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>ElectricField</name></member>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a749da8159e2959ff880995736c661d6c" prot="private" virt="non-virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>field</name></member>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a91166d609465655b2cf8dd57a9da7c99" prot="public" virt="virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>finishOutput</name></member>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a07b37cf82aff341e77ff40e38e353472" prot="private" virt="non-virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>fpField_</name></member>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a2365fdf2da1f8b85f533584e0aa2760d" prot="public" virt="virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>initForceProviders</name></member>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a4719a7530cc1f19ce7c6a8279c3e2e26" prot="public" virt="virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>initMdpOptions</name></member>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1ab2e66a7e28040e5d9148ed0fd13af2ce" prot="public" virt="virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>initMdpTransform</name></member>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1ae106ba42051277fdb3593bce3fa122bb" prot="public" virt="virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>initOutput</name></member>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a9e30ce7bee96d3070fd8a9786f122d7d" prot="private" virt="non-virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>isActive</name></member>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a1e5984e4c46bc7c95e45b02d2f354139" prot="public" virt="virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>mdpOptionProvider</name></member>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a1ba7e2c9ba106791812f3ba0f683f990" prot="private" virt="non-virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>omega</name></member>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1aae68c9e2476faa352352af8c1ff19076" prot="public" virt="virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>outputProvider</name></member>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a77bfaa45bd4da58edda4a90b4e5358fa" prot="private" virt="non-virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>printComponents</name></member>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1aa6548a1ac10825124b48b94464a9405e" prot="private" virt="non-virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>sigma</name></member>
      <member refid="classgmx_1_1anonymous__namespace_02electricfield_8cpp_03_1_1ElectricField_1a8dbaaea42f0fadd5fcfe34a4b0f2b60d" prot="private" virt="non-virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>t0</name></member>
      <member refid="classgmx_1_1IForceProvider_1aa5f0c059c4ae56f5d851c38fdaceb95b" prot="protected" virt="non-virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>~IForceProvider</name></member>
      <member refid="classgmx_1_1IMDModule_1aa520363069cd037bfe2d99454318c00c" prot="public" virt="virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>~IMDModule</name></member>
      <member refid="classgmx_1_1IMDOutputProvider_1ad80765ebce4d1cad02aa1afd47e9131c" prot="protected" virt="non-virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>~IMDOutputProvider</name></member>
      <member refid="classgmx_1_1IMdpOptionProvider_1a3b8131a42ecc641ba1f83e13d8a8a671" prot="protected" virt="non-virtual"><scope>gmx::anonymous_namespace{electricfield.cpp}::ElectricField</scope><name>~IMdpOptionProvider</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

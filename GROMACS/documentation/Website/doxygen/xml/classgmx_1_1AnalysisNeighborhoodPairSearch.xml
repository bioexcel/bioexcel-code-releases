<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1AnalysisNeighborhoodPairSearch" kind="class" prot="public">
    <compoundname>gmx::AnalysisNeighborhoodPairSearch</compoundname>
    <includes local="no">gromacs/selection/nbsearch.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgmx_1_1AnalysisNeighborhoodPairSearch_1a7d32aa4f25d0473c76d6ae30434779fb" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classgmx_1_1internal_1_1AnalysisNeighborhoodPairSearchImpl" kindref="compound">internal::AnalysisNeighborhoodPairSearchImpl</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;internal::AnalysisNeighborhoodPairSearchImpl&gt; gmx::AnalysisNeighborhoodPairSearch::ImplPointer</definition>
        <argsstring></argsstring>
        <name>ImplPointer</name>
        <briefdescription>
<para>Internal short-hand type for a pointer to the implementation class. </para>        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classgmx_1_1AnalysisNeighborhoodSearch_1a5148f4912747720780cce5bece02a343" kindref="member">AnalysisNeighborhoodSearch::ImplPointer</ref> for rationale of using shared_ptr and ownership semantics. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/nbsearch.h" line="581" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/nbsearch.h" bodystart="581" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1AnalysisNeighborhoodPairSearch_1a8312218e4169ca7daa6e62a65b2b34f7" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1AnalysisNeighborhoodPairSearch_1a7d32aa4f25d0473c76d6ae30434779fb" kindref="member">ImplPointer</ref></type>
        <definition>ImplPointer gmx::AnalysisNeighborhoodPairSearch::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/nbsearch.h" line="618" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/nbsearch.h" bodystart="618" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1AnalysisNeighborhoodPairSearch_1a67b366d946795493ef57b488ec68baac" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::AnalysisNeighborhoodPairSearch::AnalysisNeighborhoodPairSearch</definition>
        <argsstring>(const ImplPointer &amp;impl)</argsstring>
        <name>AnalysisNeighborhoodPairSearch</name>
        <param>
          <type>const <ref refid="classgmx_1_1AnalysisNeighborhoodPairSearch_1a7d32aa4f25d0473c76d6ae30434779fb" kindref="member">ImplPointer</ref> &amp;</type>
          <declname>impl</declname>
        </param>
        <briefdescription>
<para>Internally initialize the search. </para>        </briefdescription>
        <detaileddescription>
<para>Used to implement <ref refid="classgmx_1_1AnalysisNeighborhoodSearch_1a05376f41b50379732ce9bebba6c0e728" kindref="member">AnalysisNeighborhoodSearch::startPairSearch()</ref>. Cannot be called from user code. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/nbsearch.h" line="589" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/nbsearch.cpp" bodystart="1453" bodyend="1457"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisNeighborhoodPairSearch_1a81be6dbaf5dc3d8d0f8276c70c4cf042" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::AnalysisNeighborhoodPairSearch::findNextPair</definition>
        <argsstring>(AnalysisNeighborhoodPair *pair)</argsstring>
        <name>findNextPair</name>
        <param>
          <type><ref refid="classgmx_1_1AnalysisNeighborhoodPair" kindref="compound">AnalysisNeighborhoodPair</ref> *</type>
          <declname>pair</declname>
        </param>
        <briefdescription>
<para>Finds the next pair within the cutoff. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">pair</parametername>
</parameternamelist>
<parameterdescription>
<para>Information about the found pair. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if there were no more pairs.</para></simplesect>
If the method returns false, <computeroutput>pair</computeroutput> will be invalid.</para><para><simplesect kind="see"><para><ref refid="classgmx_1_1AnalysisNeighborhoodPair" kindref="compound">AnalysisNeighborhoodPair</ref> </para><simplesectsep/><para><ref refid="classgmx_1_1AnalysisNeighborhoodSearch_1a05376f41b50379732ce9bebba6c0e728" kindref="member">AnalysisNeighborhoodSearch::startPairSearch()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/nbsearch.h" line="602" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/nbsearch.cpp" bodystart="1459" bodyend="1464"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisNeighborhoodPairSearch_1a159ad8765ce636a1c438af9c57bf87a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::AnalysisNeighborhoodPairSearch::skipRemainingPairsForTestPosition</definition>
        <argsstring>()</argsstring>
        <name>skipRemainingPairsForTestPosition</name>
        <briefdescription>
<para>Skip remaining pairs for a test position in the search. </para>        </briefdescription>
        <detaileddescription>
<para>When called after <ref refid="classgmx_1_1AnalysisNeighborhoodPairSearch_1a81be6dbaf5dc3d8d0f8276c70c4cf042" kindref="member">findNextPair()</ref>, makes subsequent calls to <ref refid="classgmx_1_1AnalysisNeighborhoodPairSearch_1a81be6dbaf5dc3d8d0f8276c70c4cf042" kindref="member">findNextPair()</ref> skip any pairs that have the same test position as that previously returned. This is useful if the caller wants to search whether any reference position within the cutoff satisfies some condition. This method can be used to skip remaining pairs after the first such position has been found if the remaining pairs would not have an effect on the outcome. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/nbsearch.h" line="615" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/nbsearch.cpp" bodystart="1466" bodyend="1469"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Initialized neighborhood pair search with a fixed set of positions. </para>    </briefdescription>
    <detaileddescription>
<para>This class is used to loop through pairs of neighbors within the cutoff provided to <ref refid="classgmx_1_1AnalysisNeighborhood" kindref="compound">AnalysisNeighborhood</ref>. The following code demonstrates its use: <programlisting><codeline><highlight class="normal"><sp/><sp/><ref refid="classgmx_1_1AnalysisNeighborhood" kindref="compound">gmx::AnalysisNeighborhood</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>nb.<ref refid="classgmx_1_1AnalysisNeighborhood_1ac7efef66604d09e0c4e127dbed2533ea" kindref="member">setCutoff</ref>(cutoff);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classgmx_1_1AnalysisNeighborhoodPositions" kindref="compound">gmx::AnalysisNeighborhoodPositions</ref><sp/>refPos(xref,<sp/>nref);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classgmx_1_1AnalysisNeighborhoodSearch" kindref="compound">gmx::AnalysisNeighborhoodSearch</ref><sp/>search<sp/>=<sp/>nb.<ref refid="classgmx_1_1AnalysisNeighborhood_1ac11ba1b44a1c777677276f6ec664a82d" kindref="member">initSearch</ref>(pbc,<sp/>refPos);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classgmx_1_1AnalysisNeighborhoodPairSearch" kindref="compound">gmx::AnalysisNeighborhoodPairSearch</ref><sp/>pairSearch<sp/>=<sp/>search.<ref refid="classgmx_1_1AnalysisNeighborhoodSearch_1a05376f41b50379732ce9bebba6c0e728" kindref="member">startPairSearch</ref>(selection);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classgmx_1_1AnalysisNeighborhoodPair" kindref="compound">gmx::AnalysisNeighborhoodPair</ref><sp/>pair;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pairSearch.<ref refid="classgmx_1_1AnalysisNeighborhoodPairSearch_1a81be6dbaf5dc3d8d0f8276c70c4cf042" kindref="member">findNextPair</ref>(&amp;pair))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;do<sp/>something<sp/>for<sp/>each<sp/>found<sp/>pair<sp/>the<sp/>information<sp/>in<sp/>pair&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">*<sp/></highlight></codeline>
</programlisting></para><para>It is not possible to use a single search object from multiple threads concurrently.</para><para>This class works like a pointer: copies of it point to the same search. In general, avoid creating copies, and only use the copy/assignment support for moving the variable around. With C++11, this class would best be movable.</para><para>Methods in this class do not throw. </para>    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/nbsearch.h" line="572" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/nbsearch.h" bodystart="571" bodyend="619"/>
    <listofallmembers>
      <member refid="classgmx_1_1AnalysisNeighborhoodPairSearch_1a67b366d946795493ef57b488ec68baac" prot="public" virt="non-virtual"><scope>gmx::AnalysisNeighborhoodPairSearch</scope><name>AnalysisNeighborhoodPairSearch</name></member>
      <member refid="classgmx_1_1AnalysisNeighborhoodPairSearch_1a81be6dbaf5dc3d8d0f8276c70c4cf042" prot="public" virt="non-virtual"><scope>gmx::AnalysisNeighborhoodPairSearch</scope><name>findNextPair</name></member>
      <member refid="classgmx_1_1AnalysisNeighborhoodPairSearch_1a8312218e4169ca7daa6e62a65b2b34f7" prot="private" virt="non-virtual"><scope>gmx::AnalysisNeighborhoodPairSearch</scope><name>impl_</name></member>
      <member refid="classgmx_1_1AnalysisNeighborhoodPairSearch_1a7d32aa4f25d0473c76d6ae30434779fb" prot="public" virt="non-virtual"><scope>gmx::AnalysisNeighborhoodPairSearch</scope><name>ImplPointer</name></member>
      <member refid="classgmx_1_1AnalysisNeighborhoodPairSearch_1a159ad8765ce636a1c438af9c57bf87a9" prot="public" virt="non-virtual"><scope>gmx::AnalysisNeighborhoodPairSearch</scope><name>skipRemainingPairsForTestPosition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

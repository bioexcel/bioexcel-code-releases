<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="dlbtiming_8cpp" kind="file">
    <compoundname>dlbtiming.cpp</compoundname>
    <includes refid="gmxpre_8h" local="yes">gmxpre.h</includes>
    <includes refid="dlbtiming_8h" local="yes">dlbtiming.h</includes>
    <includes refid="domdec_8h" local="yes">gromacs/domdec/domdec.h</includes>
    <includes refid="gmxassert_8h" local="yes">gromacs/utility/gmxassert.h</includes>
    <includes refid="domdec__internal_8h" local="yes">domdec_internal.h</includes>
    <incdepgraph>
      <node id="3923">
        <label>gromacs/utility/current_function.h</label>
        <link refid="current__function_8h"/>
      </node>
      <node id="3916">
        <label>iterator</label>
      </node>
      <node id="3907">
        <label>src/gromacs/domdec/dlbtiming.cpp</label>
        <link refid="dlbtiming.cpp"/>
        <childnode refid="3908" relation="include">
        </childnode>
        <childnode refid="3909" relation="include">
        </childnode>
        <childnode refid="3910" relation="include">
        </childnode>
        <childnode refid="3919" relation="include">
        </childnode>
        <childnode refid="3925" relation="include">
        </childnode>
      </node>
      <node id="3909">
        <label>dlbtiming.h</label>
        <link refid="dlbtiming_8h"/>
      </node>
      <node id="3929">
        <label>gromacs/timing/cyclecounter.h</label>
        <link refid="cyclecounter_8h"/>
        <childnode refid="3926" relation="include">
        </childnode>
      </node>
      <node id="3921">
        <label>stdint.h</label>
      </node>
      <node id="3917">
        <label>stdexcept</label>
      </node>
      <node id="3925">
        <label>domdec_internal.h</label>
        <link refid="domdec__internal_8h"/>
        <childnode refid="3926" relation="include">
        </childnode>
        <childnode refid="3910" relation="include">
        </childnode>
        <childnode refid="3927" relation="include">
        </childnode>
        <childnode refid="3929" relation="include">
        </childnode>
      </node>
      <node id="3928">
        <label>gromacs/utility/gmxmpi.h</label>
        <link refid="gmxmpi_8h"/>
        <childnode refid="3926" relation="include">
        </childnode>
      </node>
      <node id="3919">
        <label>gromacs/utility/gmxassert.h</label>
        <link refid="gmxassert_8h"/>
        <childnode refid="3920" relation="include">
        </childnode>
        <childnode refid="3923" relation="include">
        </childnode>
      </node>
      <node id="3924">
        <label>gromacs/utility/real.h</label>
        <link refid="real_8h"/>
      </node>
      <node id="3912">
        <label>vector</label>
      </node>
      <node id="3908">
        <label>gmxpre.h</label>
        <link refid="gmxpre_8h"/>
      </node>
      <node id="3918">
        <label>utility</label>
      </node>
      <node id="3915">
        <label>array</label>
      </node>
      <node id="3920">
        <label>gromacs/utility/basedefinitions.h</label>
        <link refid="basedefinitions_8h"/>
        <childnode refid="3921" relation="include">
        </childnode>
        <childnode refid="3922" relation="include">
        </childnode>
      </node>
      <node id="3913">
        <label>gromacs/utility/arrayref.h</label>
        <link refid="arrayref_8h"/>
        <childnode refid="3914" relation="include">
        </childnode>
        <childnode refid="3915" relation="include">
        </childnode>
        <childnode refid="3916" relation="include">
        </childnode>
        <childnode refid="3917" relation="include">
        </childnode>
        <childnode refid="3918" relation="include">
        </childnode>
        <childnode refid="3912" relation="include">
        </childnode>
        <childnode refid="3919" relation="include">
        </childnode>
      </node>
      <node id="3914">
        <label>cstddef</label>
      </node>
      <node id="3927">
        <label>gromacs/domdec/domdec_struct.h</label>
        <link refid="domdec__struct_8h"/>
        <childnode refid="3914" relation="include">
        </childnode>
        <childnode refid="3920" relation="include">
        </childnode>
        <childnode refid="3928" relation="include">
        </childnode>
        <childnode refid="3924" relation="include">
        </childnode>
      </node>
      <node id="3926">
        <label>config.h</label>
      </node>
      <node id="3910">
        <label>gromacs/domdec/domdec.h</label>
        <link refid="domdec_8h"/>
        <childnode refid="3911" relation="include">
        </childnode>
        <childnode refid="3912" relation="include">
        </childnode>
        <childnode refid="3913" relation="include">
        </childnode>
        <childnode refid="3920" relation="include">
        </childnode>
        <childnode refid="3924" relation="include">
        </childnode>
      </node>
      <node id="3911">
        <label>stdio.h</label>
      </node>
      <node id="3922">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structBalanceRegion" prot="public">BalanceRegion</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="dlbtiming_8cpp_1a3e947d7078ad0590b620ffd531131ae7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structBalanceRegion" kindref="compound">BalanceRegion</ref> *</type>
        <definition>BalanceRegion* ddBalanceRegionAllocate</definition>
        <argsstring>()</argsstring>
        <name>ddBalanceRegionAllocate</name>
        <briefdescription>
<para>Returns a pointer to a constructed <computeroutput><ref refid="structBalanceRegion" kindref="compound">BalanceRegion</ref></computeroutput> struct. </para>        </briefdescription>
        <detaileddescription>
<para>Should be replaced by a proper constructor once <ref refid="structBalanceRegion" kindref="compound">BalanceRegion</ref> is a proper class (requires restructering in domdec.cpp). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/domdec/dlbtiming.cpp" line="65" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/domdec/dlbtiming.cpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="dlbtiming_8cpp_1aea844d1f736d0593a4fbff5ad717d4a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structBalanceRegion" kindref="compound">BalanceRegion</ref> *</type>
        <definition>static BalanceRegion* getBalanceRegion</definition>
        <argsstring>(const gmx_domdec_t *dd)</argsstring>
        <name>getBalanceRegion</name>
        <param>
          <type>const <ref refid="structgmx__domdec__t" kindref="compound">gmx_domdec_t</ref> *</type>
          <declname>dd</declname>
        </param>
        <briefdescription>
<para>Returns the pointer to the balance region. </para>        </briefdescription>
        <detaileddescription>
<para>This should be replaced by a properly managed <ref refid="structBalanceRegion" kindref="compound">BalanceRegion</ref> class, but that requires a lot of refactoring in domdec.cpp. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/domdec/dlbtiming.cpp" line="75" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/domdec/dlbtiming.cpp" bodystart="75" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="dlbtiming_8cpp_1a4d3d272c97439edb30af355212cbec66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ddOpenBalanceRegionCpu</definition>
        <argsstring>(const gmx_domdec_t *dd, DdAllowBalanceRegionReopen allowReopen)</argsstring>
        <name>ddOpenBalanceRegionCpu</name>
        <param>
          <type>const <ref refid="structgmx__domdec__t" kindref="compound">gmx_domdec_t</ref> *</type>
          <declname>dd</declname>
        </param>
        <param>
          <type><ref refid="dlbtiming_8h_1a4c394e83d3a1d89ac14e90553e54dff4" kindref="member">DdAllowBalanceRegionReopen</ref></type>
          <declname>allowReopen</declname>
        </param>
        <briefdescription>
<para>Open the load balance timing region on the CPU. </para>        </briefdescription>
        <detaileddescription>
<para>Opens the balancing region for timing how much time it takes to perform the (balancable part of) the MD step. This should be called right after the last communication during the previous step to maximize the region. In practice this means right after the force communication finished or just before neighbor search at search steps. It is assumed that computation done in the region either scales along with the domain size or takes constant time.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">dd</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain decomposition struct </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">allowReopen</parametername>
</parameternamelist>
<parameterdescription>
<para>Allows calling with a potentially already opened region </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/domdec/dlbtiming.cpp" line="83" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/domdec/dlbtiming.cpp" bodystart="83" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="dlbtiming_8cpp_1aec1d7f9fa80911cece8fa7634ce34f4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ddOpenBalanceRegionGpu</definition>
        <argsstring>(const gmx_domdec_t *dd)</argsstring>
        <name>ddOpenBalanceRegionGpu</name>
        <param>
          <type>const <ref refid="structgmx__domdec__t" kindref="compound">gmx_domdec_t</ref> *</type>
          <declname>dd</declname>
        </param>
        <briefdescription>
<para>Open the load balance timing region for the CPU. </para>        </briefdescription>
        <detaileddescription>
<para>This can only be called within a region that is open on the CPU side. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/domdec/dlbtiming.cpp" line="98" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/domdec/dlbtiming.cpp" bodystart="98" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="dlbtiming_8cpp_1a73df0ce2d73d76962ec17c425c8e22c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ddReopenBalanceRegionCpu</definition>
        <argsstring>(const gmx_domdec_t *dd)</argsstring>
        <name>ddReopenBalanceRegionCpu</name>
        <param>
          <type>const <ref refid="structgmx__domdec__t" kindref="compound">gmx_domdec_t</ref> *</type>
          <declname>dd</declname>
        </param>
        <briefdescription>
<para>Re-open the, already opened, load balance timing region. </para>        </briefdescription>
        <detaileddescription>
<para>This function should be called after every MPI communication that occurs in the main MD loop. Note that the current setup assumes that all MPI communication acts like a global barrier. But if some ranks don&apos;t participate in communication or if some ranks communicate faster with neighbors than others, the obtained timings might not accurately reflect the computation time.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">dd</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain decomposition struct </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/domdec/dlbtiming.cpp" line="108" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/domdec/dlbtiming.cpp" bodystart="108" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="dlbtiming_8cpp_1a9db3bd2076fc9160ed86edf809777c07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ddCloseBalanceRegionCpu</definition>
        <argsstring>(const gmx_domdec_t *dd)</argsstring>
        <name>ddCloseBalanceRegionCpu</name>
        <param>
          <type>const <ref refid="structgmx__domdec__t" kindref="compound">gmx_domdec_t</ref> *</type>
          <declname>dd</declname>
        </param>
        <briefdescription>
<para>Close the load balance timing region on the CPU side. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">dd</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain decomposition struct </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/domdec/dlbtiming.cpp" line="118" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/domdec/dlbtiming.cpp" bodystart="118" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="dlbtiming_8cpp_1a711403ae8d0c0d3af029b3e0d7d06f08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ddCloseBalanceRegionGpu</definition>
        <argsstring>(const gmx_domdec_t *dd, float waitGpuCyclesInCpuRegion, DdBalanceRegionWaitedForGpu waitedForGpu)</argsstring>
        <name>ddCloseBalanceRegionGpu</name>
        <param>
          <type>const <ref refid="structgmx__domdec__t" kindref="compound">gmx_domdec_t</ref> *</type>
          <declname>dd</declname>
        </param>
        <param>
          <type>float</type>
          <declname>waitCyclesGpuInCpuRegion</declname>
          <defname>waitGpuCyclesInCpuRegion</defname>
        </param>
        <param>
          <type><ref refid="dlbtiming_8h_1a187697058dfa34f355e4ee2e8fcf1dc1" kindref="member">DdBalanceRegionWaitedForGpu</ref></type>
          <declname>waitedForGpu</declname>
        </param>
        <briefdescription>
<para>Close the load balance timing region on the GPU side. </para>        </briefdescription>
        <detaileddescription>
<para>This should be called after the CPU receives the last (local) results from the GPU. The wait time for these results is estimated, depending on the <computeroutput>waitedForGpu</computeroutput> parameter. If called on an already closed region, this call does nothing.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">dd</parametername>
</parameternamelist>
<parameterdescription>
<para>The domain decomposition struct </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">waitCyclesGpuInCpuRegion</parametername>
</parameternamelist>
<parameterdescription>
<para>The time we waited for the GPU earlier, overlapping completely with the open CPU region </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">waitedForGpu</parametername>
</parameternamelist>
<parameterdescription>
<para>Tells if we waited for the GPU to finish now </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/domdec/dlbtiming.cpp" line="142" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/domdec/dlbtiming.cpp" bodystart="142" bodyend="172"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/domdec/dlbtiming.cpp"/>
  </compounddef>
</doxygen>

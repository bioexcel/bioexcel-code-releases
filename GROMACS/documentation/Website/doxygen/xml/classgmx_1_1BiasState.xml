<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1BiasState" kind="class" prot="public">
    <compoundname>gmx::BiasState</compoundname>
    <includes local="no">gromacs/awh/biasstate.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1BiasState_1a20b39a363e9d20cb7853afa98c5b11c5" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1CoordState" kindref="compound">CoordState</ref></type>
        <definition>CoordState gmx::BiasState::coordState_</definition>
        <argsstring></argsstring>
        <name>coordState_</name>
        <briefdescription>
<para>The Current coordinate state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="525" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" bodystart="521" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1BiasState_1a92228f625b12cf0c307185ae764beeb3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classgmx_1_1PointState" kindref="compound">PointState</ref> &gt;</type>
        <definition>std::vector&lt;PointState&gt; gmx::BiasState::points_</definition>
        <argsstring></argsstring>
        <name>points_</name>
        <briefdescription>
<para>Vector of state of the grid points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="528" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" bodystart="528" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1BiasState_1a8b0df05675e383524444d2512909a597" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; gmx::BiasState::weightSumCovering_</definition>
        <argsstring></argsstring>
        <name>weightSumCovering_</name>
        <briefdescription>
<para>Accumulated weights for covering checks. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="531" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" bodystart="531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1BiasState_1a53456dc3d3cf7341daca42cd28e69a5a" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1HistogramSize" kindref="compound">HistogramSize</ref></type>
        <definition>HistogramSize gmx::BiasState::histogramSize_</definition>
        <argsstring></argsstring>
        <name>histogramSize_</name>
        <briefdescription>
<para>Global histogram size related values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="533" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" bodystart="533" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1BiasState_1a846834b4316c1235586316a96bc53915" prot="private" static="no" mutable="no">
        <type><ref refid="namespacegmx_1a74baae008f9132c5e0daf2a02b122b3b" kindref="member">awh_ivec</ref></type>
        <definition>awh_ivec gmx::BiasState::originUpdatelist_</definition>
        <argsstring></argsstring>
        <name>originUpdatelist_</name>
        <briefdescription>
<para>The origin of the rectangular region that has been sampled since last update. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="536" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" bodystart="536" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1BiasState_1a8b7b2724223b18588368ce973528324d" prot="private" static="no" mutable="no">
        <type><ref refid="namespacegmx_1a74baae008f9132c5e0daf2a02b122b3b" kindref="member">awh_ivec</ref></type>
        <definition>awh_ivec gmx::BiasState::endUpdatelist_</definition>
        <argsstring></argsstring>
        <name>endUpdatelist_</name>
        <briefdescription>
<para>The end of the rectangular region that has been sampled since last update. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="537" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" bodystart="537" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1BiasState_1af2b7c8ef670b4107c27d6b7292de2e3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::BiasState::BiasState</definition>
        <argsstring>(const AwhBiasParams &amp;awhBiasParams, double histogramSizeInitial, const std::vector&lt; DimParams &gt; &amp;dimParams, const Grid &amp;grid)</argsstring>
        <name>BiasState</name>
        <param>
          <type>const AwhBiasParams &amp;</type>
          <declname>awhBiasParams</declname>
        </param>
        <param>
          <type>double</type>
          <declname>histogramSizeInitial</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structgmx_1_1DimParams" kindref="compound">DimParams</ref> &gt; &amp;</type>
          <declname>dimParams</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Constructs the global state and the point states on a provided geometric grid passed in <computeroutput>grid</computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">awhBiasParams</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classgmx_1_1Bias" kindref="compound">Bias</ref> parameters from inputrec. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">histogramSizeInitial</parametername>
</parameternamelist>
<parameterdescription>
<para>The estimated initial histogram size. This is floating-point, since histograms use weighted entries and grow by a floating-point scaling factor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dimParams</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias grid. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="108" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="1678" bodyend="1694"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a76314d7126ef1644b32204140346ee10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::BiasState::restoreFromHistory</definition>
        <argsstring>(const AwhBiasHistory &amp;biasHistory, const Grid &amp;grid)</argsstring>
        <name>restoreFromHistory</name>
        <param>
          <type>const AwhBiasHistory &amp;</type>
          <declname>biasHistory</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
<para>Restore the bias state from history. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">biasHistory</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Bias" kindref="compound">Bias</ref> history struct. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias grid. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="119" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="1347" bodyend="1372"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1ae162a66283708c47cda9fccf70545750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::BiasState::broadcast</definition>
        <argsstring>(const t_commrec *commRecord)</argsstring>
        <name>broadcast</name>
        <param>
          <type>const <ref refid="structt__commrec" kindref="compound">t_commrec</ref> *</type>
          <declname>commRecord</declname>
        </param>
        <briefdescription>
<para>Broadcast the bias state over the MPI ranks in this simulation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">commRecord</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct for communication. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="127" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="1374" bodyend="1383"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a08affe673e22a51463eb1b99a638fe50" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::BiasState::initHistoryFromState</definition>
        <argsstring>(AwhBiasHistory *biasHistory) const </argsstring>
        <name>initHistoryFromState</name>
        <param>
          <type>AwhBiasHistory *</type>
          <declname>biasHistory</declname>
        </param>
        <briefdescription>
<para>Allocate and initialize a bias history with the given bias state. </para>        </briefdescription>
        <detaileddescription>
<para>This function will be called at the start of a new simulation. Note that this only sets the correct size and does produce a valid history object, but with all data set to zero. Actual history data is set by <ref refid="classgmx_1_1BiasState_1a458a7b8536e1880302bbc8d00ea6a412" kindref="member">updateHistory</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">biasHistory</parametername>
</parameternamelist>
<parameterdescription>
<para>AWH history to initialize. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="139" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="1317" bodyend="1320"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a458a7b8536e1880302bbc8d00ea6a412" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::BiasState::updateHistory</definition>
        <argsstring>(AwhBiasHistory *biasHistory, const Grid &amp;grid) const </argsstring>
        <name>updateHistory</name>
        <param>
          <type>AwhBiasHistory *</type>
          <declname>biasHistory</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
<para>Update the bias state history with the current state. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">biasHistory</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Bias" kindref="compound">Bias</ref> history struct. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias grid. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="147" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="1322" bodyend="1345"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a967bd0741cfba5ce740d4232db9b6444" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::BiasState::initGridPointState</definition>
        <argsstring>(const AwhBiasParams &amp;awhBiasParams, const std::vector&lt; DimParams &gt; &amp;dimParams, const Grid &amp;grid, const BiasParams &amp;params, const std::string &amp;filename, int numBias)</argsstring>
        <name>initGridPointState</name>
        <param>
          <type>const AwhBiasParams &amp;</type>
          <declname>awhBiasParams</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structgmx_1_1DimParams" kindref="compound">DimParams</ref> &gt; &amp;</type>
          <declname>dimParams</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1BiasParams" kindref="compound">BiasParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numBias</declname>
        </param>
        <briefdescription>
<para>Initialize the state of grid coordinate points. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">awhBiasParams</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Bias" kindref="compound">Bias</ref> parameters from inputrec. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dimParams</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of file to read PMF and target from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numBias</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of biases. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="191" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="1630" bodyend="1676"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a4c4a2b114f25064f825fd74c95264278" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx::BiasState::warnForHistogramAnomalies</definition>
        <argsstring>(const Grid &amp;grid, int biasIndex, double t, FILE *fplog, int maxNumWarnings) const </argsstring>
        <name>warnForHistogramAnomalies</name>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>biasIndex</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fplog</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxNumWarnings</declname>
        </param>
        <briefdescription>
<para>Performs statistical checks on the collected histograms and warns if issues are detected. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">biasIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the bias we are checking for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>Time. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">fplog</parametername>
</parameternamelist>
<parameterdescription>
<para>Output file for warnings. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxNumWarnings</parametername>
</parameternamelist>
<parameterdescription>
<para>Don&apos;t issue more than this number of warnings. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of warnings issued. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="208" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="349" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1ad44816f83e9b5fc0376f88df5570763e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double gmx::BiasState::calcUmbrellaForceAndPotential</definition>
        <argsstring>(const std::vector&lt; DimParams &gt; &amp;dimParams, const Grid &amp;grid, int point, gmx::ArrayRef&lt; double &gt; force) const </argsstring>
        <name>calcUmbrellaForceAndPotential</name>
        <param>
          <type>const std::vector&lt; <ref refid="structgmx_1_1DimParams" kindref="compound">DimParams</ref> &gt; &amp;</type>
          <declname>dimParams</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>point</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">gmx::ArrayRef</ref>&lt; double &gt;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Calculates and sets the force the coordinate experiences from an umbrella centered at the given point. </para>        </briefdescription>
        <detaileddescription>
<para>The umbrella potential is an harmonic potential given by 0.5k(coord value - point value)^2. This value is also returned.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dimParams</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias dimensions parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">point</parametername>
</parameternamelist>
<parameterdescription>
<para>Point for umbrella center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">force</parametername>
</parameternamelist>
<parameterdescription>
<para>Force vector to set. Returns the umbrella potential. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="226" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="424" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a06b5ebaa9bbec441c7f23e0a6829b855" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::BiasState::calcConvolvedForce</definition>
        <argsstring>(const std::vector&lt; DimParams &gt; &amp;dimParams, const Grid &amp;grid, gmx::ArrayRef&lt; const double &gt; probWeightNeighbor, gmx::ArrayRef&lt; double &gt; forceWorkBuffer, gmx::ArrayRef&lt; double &gt; force) const </argsstring>
        <name>calcConvolvedForce</name>
        <param>
          <type>const std::vector&lt; <ref refid="structgmx_1_1DimParams" kindref="compound">DimParams</ref> &gt; &amp;</type>
          <declname>dimParams</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">gmx::ArrayRef</ref>&lt; const double &gt;</type>
          <declname>probWeightNeighbor</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">gmx::ArrayRef</ref>&lt; double &gt;</type>
          <declname>forceWorkBuffer</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">gmx::ArrayRef</ref>&lt; double &gt;</type>
          <declname>force</declname>
        </param>
        <briefdescription>
<para>Calculates and sets the convolved force acting on the coordinate. </para>        </briefdescription>
        <detaileddescription>
<para>The convolved force is the weighted sum of forces from umbrellas located at each point in the grid.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dimParams</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias dimensions parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">probWeightNeighbor</parametername>
</parameternamelist>
<parameterdescription>
<para>Probability weights of the neighbors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">forceWorkBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Force work buffer, values only used internally. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">force</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Bias" kindref="compound">Bias</ref> force vector to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="243" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="444" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1adf7aa1e2f28a69878cb925b9a37f635b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double gmx::BiasState::moveUmbrella</definition>
        <argsstring>(const std::vector&lt; DimParams &gt; &amp;dimParams, const Grid &amp;grid, gmx::ArrayRef&lt; const double &gt; probWeightNeighbor, gmx::ArrayRef&lt; double &gt; biasForce, gmx_int64_t step, gmx_int64_t seed, int indexSeed)</argsstring>
        <name>moveUmbrella</name>
        <param>
          <type>const std::vector&lt; <ref refid="structgmx_1_1DimParams" kindref="compound">DimParams</ref> &gt; &amp;</type>
          <declname>dimParams</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">gmx::ArrayRef</ref>&lt; const double &gt;</type>
          <declname>probWeightNeighbor</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">gmx::ArrayRef</ref>&lt; double &gt;</type>
          <declname>biasForce</declname>
        </param>
        <param>
          <type>gmx_int64_t</type>
          <declname>step</declname>
        </param>
        <param>
          <type>gmx_int64_t</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexSeed</declname>
        </param>
        <briefdescription>
<para>Move the center point of the umbrella potential. </para>        </briefdescription>
        <detaileddescription>
<para>A new umbrella center is sampled from the biased distibution. Also, the bias force is updated and the new potential is return.</para><para>This function should only be called when the bias force is not being convolved. It is assumed that the probability distribution has been updated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dimParams</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Bias" kindref="compound">Bias</ref> dimension parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">probWeightNeighbor</parametername>
</parameternamelist>
<parameterdescription>
<para>Probability weights of the neighbors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">biasForce</parametername>
</parameternamelist>
<parameterdescription>
<para>The AWH bias force. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">step</parametername>
</parameternamelist>
<parameterdescription>
<para>Step number, needed for the random number generator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">seed</parametername>
</parameternamelist>
<parameterdescription>
<para>Random seed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indexSeed</parametername>
</parameternamelist>
<parameterdescription>
<para>Second random seed, should be the bias Index. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new potential value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="267" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="475" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1ac082fcce52b440dfa32ef11064ad225e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::BiasState::doSkippedUpdatesForAllPoints</definition>
        <argsstring>(const BiasParams &amp;params)</argsstring>
        <name>doSkippedUpdatesForAllPoints</name>
        <param>
          <type>const <ref refid="classgmx_1_1BiasParams" kindref="compound">BiasParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Do all previously skipped updates. Public for use by tests. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias parameters. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="294" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="573" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a8e883b5fa0f4a4e9cb21cb71ea88ef84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::BiasState::doSkippedUpdatesInNeighborhood</definition>
        <argsstring>(const BiasParams &amp;params, const Grid &amp;grid)</argsstring>
        <name>doSkippedUpdatesInNeighborhood</name>
        <param>
          <type>const <ref refid="classgmx_1_1BiasParams" kindref="compound">BiasParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
<para>Do previously skipped updates in this neighborhood. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The grid. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="302" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="592" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a911f6af343d16f5f549fd24f8b03f6f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::BiasState::setCoordValue</definition>
        <argsstring>(const Grid &amp;grid, const awh_dvec coordValue)</argsstring>
        <name>setCoordValue</name>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegmx_1a079fa4aee8e4c6663f35aa1d0f4bac4b" kindref="member">awh_dvec</ref></type>
          <declname>coordValue</declname>
        </param>
        <briefdescription>
<para>Update the reaction coordinate value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coordValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The current reaction coordinate value (there are no limits on allowed values). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="378" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" bodystart="378" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a2b04a169195d0b043aff9c063aba74c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::BiasState::updateFreeEnergyAndAddSamplesToHistogram</definition>
        <argsstring>(const std::vector&lt; DimParams &gt; &amp;dimParams, const Grid &amp;grid, const BiasParams &amp;params, const t_commrec *commRecord, const gmx_multisim_t *ms, double t, gmx_int64_t step, FILE *fplog, std::vector&lt; int &gt; *updateList)</argsstring>
        <name>updateFreeEnergyAndAddSamplesToHistogram</name>
        <param>
          <type>const std::vector&lt; <ref refid="structgmx_1_1DimParams" kindref="compound">DimParams</ref> &gt; &amp;</type>
          <declname>dimParams</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1BiasParams" kindref="compound">BiasParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const <ref refid="structt__commrec" kindref="compound">t_commrec</ref> *</type>
          <declname>commRecord</declname>
        </param>
        <param>
          <type>const <ref refid="structgmx__multisim__t" kindref="compound">gmx_multisim_t</ref> *</type>
          <declname>ms</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>gmx_int64_t</type>
          <declname>step</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fplog</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; *</type>
          <declname>updateList</declname>
        </param>
        <briefdescription>
<para>Performs an update of the bias. </para>        </briefdescription>
        <detaileddescription>
<para>The objective of the update is to use collected samples (probability weights) to improve the free energy estimate. For sake of efficiency, the update is local whenever possible, meaning that only points that have actually been sampled are accessed and updated here. For certain AWH settings or at certain steps however, global need to be performed. Besides the actual free energy update, this function takes care of ensuring future convergence of the free energy. Convergence is obtained by increasing the size of the reference weight histogram in a controlled (sometimes dynamic) manner. Also, there are AWH variables that are direct functions of the free energy or sampling history that need to be updated here, namely the target distribution and the bias function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dimParams</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">commRecord</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct for intra-simulation communication. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ms</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct for multi-simulation communication. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>Time. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">step</parametername>
</parameternamelist>
<parameterdescription>
<para>Time step. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">fplog</parametername>
</parameternamelist>
<parameterdescription>
<para>Log file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">updateList</parametername>
</parameternamelist>
<parameterdescription>
<para>Work space to store a temporary list. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="408" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="1008" bodyend="1152"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1ab4475843ac17da2d88e5b1afe827ea29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double gmx::BiasState::updateProbabilityWeightsAndConvolvedBias</definition>
        <argsstring>(const std::vector&lt; DimParams &gt; &amp;dimParams, const Grid &amp;grid, std::vector&lt; double, AlignedAllocator&lt; double &gt;&gt; *weight) const </argsstring>
        <name>updateProbabilityWeightsAndConvolvedBias</name>
        <param>
          <type>const std::vector&lt; <ref refid="structgmx_1_1DimParams" kindref="compound">DimParams</ref> &gt; &amp;</type>
          <declname>dimParams</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>std::vector&lt; double, <ref refid="namespacegmx_1ac3ca6adcfda5170180c2140c7b2f9d47" kindref="member">AlignedAllocator</ref>&lt; double &gt;&gt; *</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Update the probability weights and the convolved bias. </para>        </briefdescription>
        <detaileddescription>
<para>Given a coordinate value, each grid point is assigned a probability weight, w(point|value), that depends on the current bias function. The sum of these weights is needed for normalizing the probability sum to 1 but also equals the effective, or convolved, biasing weight for this coordinate value. The convolved bias is needed e.g. for extracting the PMF, so we save it here since this saves us from doing extra exponential function evaluations later on.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dimParams</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias dimensions parameters </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">weight</parametername>
</parameternamelist>
<parameterdescription>
<para>Probability weights of the neighbors, SIMD aligned. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the convolved bias. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="435" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="1154" bodyend="1209"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1ac7a9cbe562a93e106131cfde4eb3dcb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::BiasState::sampleProbabilityWeights</definition>
        <argsstring>(const Grid &amp;grid, gmx::ArrayRef&lt; const double &gt; probWeightNeighbor)</argsstring>
        <name>sampleProbabilityWeights</name>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">gmx::ArrayRef</ref>&lt; const double &gt;</type>
          <declname>probWeightNeighbor</declname>
        </param>
        <briefdescription>
<para>Take samples of the current probability weights for future updates and analysis. </para>        </briefdescription>
        <detaileddescription>
<para>Points in the current neighborhood will now have data meaning they need to be included in the local update list of the next update. Therefore, the local update range is also update here.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">probWeightNeighbor</parametername>
</parameternamelist>
<parameterdescription>
<para>Probability weights of the neighbors. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="449" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="1232" bodyend="1285"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a2086c2717683f61be6796d41a3f25911" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::BiasState::sampleCoordAndPmf</definition>
        <argsstring>(const Grid &amp;grid, gmx::ArrayRef&lt; const double &gt; probWeightNeighbor, double convolvedBias)</argsstring>
        <name>sampleCoordAndPmf</name>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">gmx::ArrayRef</ref>&lt; const double &gt;</type>
          <declname>probWeightNeighbor</declname>
        </param>
        <param>
          <type>double</type>
          <declname>convolvedBias</declname>
        </param>
        <briefdescription>
<para>Sample the reaction coordinate and PMF for future updates or analysis. </para>        </briefdescription>
        <detaileddescription>
<para>These samples do not affect the (future) sampling and are thus pure observables. Statisics of these are stored in the energy file.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">probWeightNeighbor</parametername>
</parameternamelist>
<parameterdescription>
<para>Probability weights of the neighbors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">convolvedBias</parametername>
</parameternamelist>
<parameterdescription>
<para>The convolved bias. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="462" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="1287" bodyend="1315"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a080053b5debb4af52a54ce787d2705c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double gmx::BiasState::calcConvolvedBias</definition>
        <argsstring>(const std::vector&lt; DimParams &gt; &amp;dimParams, const Grid &amp;grid, const awh_dvec &amp;coordValue) const </argsstring>
        <name>calcConvolvedBias</name>
        <param>
          <type>const std::vector&lt; <ref refid="structgmx_1_1DimParams" kindref="compound">DimParams</ref> &gt; &amp;</type>
          <declname>dimParams</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegmx_1a079fa4aee8e4c6663f35aa1d0f4bac4b" kindref="member">awh_dvec</ref> &amp;</type>
          <declname>coordValue</declname>
        </param>
        <briefdescription>
<para>Calculates the convolved bias for a given coordinate value. </para>        </briefdescription>
        <detaileddescription>
<para>The convolved bias is the effective bias acting on the coordinate. Since the bias here has arbitrary normalization, this only makes sense as a relative, to other coordinate values, measure of the bias.</para><para><simplesect kind="note"><para>If it turns out to be costly to calculate this pointwise the convolved bias for the whole grid could be returned instead.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dimParams</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias dimensions parameters </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coordValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the convolved bias &gt;= -GMX_FLOAT_MAX. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="480" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="1211" bodyend="1230"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a491ac07baa597e3dbc207e4f7db54665" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::BiasState::getPmf</definition>
        <argsstring>(gmx::ArrayRef&lt; float &gt;) const </argsstring>
        <name>getPmf</name>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">gmx::ArrayRef</ref>&lt; float &gt;</type>
          <defname>pmf</defname>
        </param>
        <briefdescription>
<para>Fills the given array with PMF values. </para>        </briefdescription>
        <detaileddescription>
<para>Points outside of the biasing target region will get PMF = GMX_FLOAT_MAX. <simplesect kind="note"><para>: The PMF is in single precision, because it is a statistical quantity and therefore never reaches full float precision.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">pmf</parametername>
</parameternamelist>
<parameterdescription>
<para>Array(ref) to be filled with the PMF values, should have the same size as the bias grid. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="493" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="79" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a62b95dffc27c243512fac68c0ccb4cdc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classgmx_1_1CoordState" kindref="compound">CoordState</ref> &amp;</type>
        <definition>const CoordState&amp; gmx::BiasState::coordState</definition>
        <argsstring>() const </argsstring>
        <name>coordState</name>
        <briefdescription>
<para>Returns the current coordinate state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="497" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" bodystart="497" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a9032131c602a3c39c077f5d8f3a793df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classgmx_1_1PointState" kindref="compound">PointState</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;PointState&gt;&amp; gmx::BiasState::points</definition>
        <argsstring>() const </argsstring>
        <name>points</name>
        <briefdescription>
<para>Returns a const reference to the point state. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="504" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" bodystart="504" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a61d3e06a039f9c145357f520b372f2f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::BiasState::inInitialStage</definition>
        <argsstring>() const </argsstring>
        <name>inInitialStage</name>
        <briefdescription>
<para>Returns true if we are in the initial stage. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="511" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" bodystart="511" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a6de4d309893ac59e2d18eca540efc39c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1HistogramSize" kindref="compound">HistogramSize</ref></type>
        <definition>HistogramSize gmx::BiasState::histogramSize</definition>
        <argsstring>() const </argsstring>
        <name>histogramSize</name>
        <briefdescription>
<para>Returns the current histogram size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="518" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" bodystart="518" bodyend="521"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgmx_1_1BiasState_1a24eaf9d8068076888e13f19dc650447d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::BiasState::calcConvolvedPmf</definition>
        <argsstring>(const std::vector&lt; DimParams &gt; &amp;dimParams, const Grid &amp;grid, std::vector&lt; float &gt; *convolvedPmf) const </argsstring>
        <name>calcConvolvedPmf</name>
        <param>
          <type>const std::vector&lt; <ref refid="structgmx_1_1DimParams" kindref="compound">DimParams</ref> &gt; &amp;</type>
          <declname>dimParams</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>std::vector&lt; float &gt; *</type>
          <declname>convolvedPmf</declname>
        </param>
        <briefdescription>
<para>Convolves the given PMF using the given AWH bias. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>: The PMF is in single precision, because it is a statistical quantity and therefore never reaches full float precision.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dimParams</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias dimensions parameters </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">convolvedPmf</parametername>
</parameternamelist>
<parameterdescription>
<para>Array returned will be of the same length as the AWH grid to store the convolved PMF in. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="160" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="247" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1ac3990ce2ba621189b1e0d050b9f53e3b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::BiasState::setFreeEnergyToConvolvedPmf</definition>
        <argsstring>(const std::vector&lt; DimParams &gt; &amp;dimParams, const Grid &amp;grid)</argsstring>
        <name>setFreeEnergyToConvolvedPmf</name>
        <param>
          <type>const std::vector&lt; <ref refid="structgmx_1_1DimParams" kindref="compound">DimParams</ref> &gt; &amp;</type>
          <declname>dimParams</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
<para>Convolves the PMF and sets the initial free energy to its convolution. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dimParams</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias dimensions parameters </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias grid. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="170" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="1385" bodyend="1396"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a65b3b9d18a0ed8e33933276f3004c51c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::BiasState::normalizePmf</definition>
        <argsstring>(int numSharingSims)</argsstring>
        <name>normalizePmf</name>
        <param>
          <type>int</type>
          <declname>numSharingSims</declname>
        </param>
        <briefdescription>
<para>Normalize the PMF histogram. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">numSharingSims</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of simulations sharing the bias. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="178" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="1599" bodyend="1628"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a85b5f53525560941ce7db5e15e0a0140" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::BiasState::getSkippedUpdateHistogramScaleFactors</definition>
        <argsstring>(const BiasParams &amp;params, double *weighthistScaling, double *logPmfsumScaling) const </argsstring>
        <name>getSkippedUpdateHistogramScaleFactors</name>
        <param>
          <type>const <ref refid="classgmx_1_1BiasParams" kindref="compound">BiasParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>weighthistScaling</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>logPmfsumScaling</declname>
        </param>
        <briefdescription>
<para>Gets the histogram rescaling factors needed for skipped updates. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">weighthistScaling</parametername>
</parameternamelist>
<parameterdescription>
<para>Scaling factor for the reference weight histogram. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">logPmfsumScaling</parametername>
</parameternamelist>
<parameterdescription>
<para>Log of the scaling factor for the PMF histogram. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="283" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="551" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a57c2f99eef2664c53f2e1bb78927e0f3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::BiasState::resetLocalUpdateRange</definition>
        <argsstring>(const Grid &amp;grid)</argsstring>
        <name>resetLocalUpdateRange</name>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
<para>Reset the range used to make the local update list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The grid. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="311" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="700" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1add0312da3056cf7d810c78b897b2a1a3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double gmx::BiasState::newHistogramSizeInitialStage</definition>
        <argsstring>(const BiasParams &amp;params, double t, bool detectedCovering, FILE *fplog)</argsstring>
        <name>newHistogramSizeInitialStage</name>
        <param>
          <type>const <ref refid="classgmx_1_1BiasParams" kindref="compound">BiasParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>detectedCovering</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fplog</declname>
        </param>
        <briefdescription>
<para>Returns the new size of the reference weight histogram in the initial stage. </para>        </briefdescription>
        <detaileddescription>
<para>This function also takes care resetting the histogram used for covering checks and for exiting the initial stage.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>Time. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">detectedCovering</parametername>
</parameternamelist>
<parameterdescription>
<para>True if we detected that the sampling interval has been sufficiently covered. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">fplog</parametername>
</parameternamelist>
<parameterdescription>
<para>Log file. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new histogram size. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="325" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a5f647a3dc82e95d26094a1383f80f0b5" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::BiasState::isSamplingRegionCovered</definition>
        <argsstring>(const BiasParams &amp;params, const std::vector&lt; DimParams &gt; &amp;dimParams, const Grid &amp;grid, const t_commrec *commRecord, const gmx_multisim_t *multiSimComm) const </argsstring>
        <name>isSamplingRegionCovered</name>
        <param>
          <type>const <ref refid="classgmx_1_1BiasParams" kindref="compound">BiasParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structgmx_1_1DimParams" kindref="compound">DimParams</ref> &gt; &amp;</type>
          <declname>dimParams</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1Grid" kindref="compound">Grid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>const <ref refid="structt__commrec" kindref="compound">t_commrec</ref> *</type>
          <declname>commRecord</declname>
        </param>
        <param>
          <type>const <ref refid="structgmx__multisim__t" kindref="compound">gmx_multisim_t</ref> *</type>
          <declname>multiSimComm</declname>
        </param>
        <briefdescription>
<para>Check if the sampling region has been covered &quot;enough&quot; or not. </para>        </briefdescription>
        <detaileddescription>
<para>A one-dimensional interval is defined as covered if each point has accumulated the same weight as is in the peak of a discretized normal distribution. For multiple dimensions, the weights are simply projected onto each dimension and the multidimensional space is covered if each dimension is.</para><para><simplesect kind="note"><para>The covering criterion for multiple dimensions could improved, e.g. by using a path finding algorithm.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dimParams</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Bias" kindref="compound">Bias</ref> dimension parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">grid</parametername>
</parameternamelist>
<parameterdescription>
<para>The grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">commRecord</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct for intra-simulation communication. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">multiSimComm</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct for multi-simulation communication. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if covered. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="349" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.cpp" bodystart="886" bodyend="991"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1BiasState_1a962b40e13611f3396b64d2c41080862f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double gmx::BiasState::newHistogramSize</definition>
        <argsstring>(const BiasParams &amp;params, double t, bool covered, FILE *fplog)</argsstring>
        <name>newHistogramSize</name>
        <param>
          <type>const <ref refid="classgmx_1_1BiasParams" kindref="compound">BiasParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>covered</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fplog</declname>
        </param>
        <briefdescription>
<para>Return the new reference weight histogram size for the current update. </para>        </briefdescription>
        <detaileddescription>
<para>This function also takes care of checking for covering in the initial stage.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>The bias parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>Time. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">covered</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the sampling interval has been covered enough. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">fplog</parametername>
</parameternamelist>
<parameterdescription>
<para>Log file. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the new histogram size. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="366" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The state of a bias. </para>    </briefdescription>
    <detaileddescription>
<internal><para>The bias state has the current coordinate state: its value and the grid point it maps to (the grid point of the umbrella potential if needed). It contains a vector with the state for each point on the grid. It also counts the number of updates issued and tracks which points have been sampled since last update. Finally, the convergence state is a global property set ultimately by the histogram size histogramSize in the sub-class <ref refid="classgmx_1_1HistogramSize" kindref="compound">HistogramSize</ref>, since the update sizes are ~ 1/histogramSize. </para></internal>
    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" line="94" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/biasstate.h" bodystart="93" bodyend="538"/>
    <listofallmembers>
      <member refid="classgmx_1_1BiasState_1af2b7c8ef670b4107c27d6b7292de2e3a" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>BiasState</name></member>
      <member refid="classgmx_1_1BiasState_1ae162a66283708c47cda9fccf70545750" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>broadcast</name></member>
      <member refid="classgmx_1_1BiasState_1a080053b5debb4af52a54ce787d2705c3" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>calcConvolvedBias</name></member>
      <member refid="classgmx_1_1BiasState_1a06b5ebaa9bbec441c7f23e0a6829b855" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>calcConvolvedForce</name></member>
      <member refid="classgmx_1_1BiasState_1a24eaf9d8068076888e13f19dc650447d" prot="private" virt="non-virtual"><scope>gmx::BiasState</scope><name>calcConvolvedPmf</name></member>
      <member refid="classgmx_1_1BiasState_1ad44816f83e9b5fc0376f88df5570763e" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>calcUmbrellaForceAndPotential</name></member>
      <member refid="classgmx_1_1BiasState_1a62b95dffc27c243512fac68c0ccb4cdc" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>coordState</name></member>
      <member refid="classgmx_1_1BiasState_1a20b39a363e9d20cb7853afa98c5b11c5" prot="private" virt="non-virtual"><scope>gmx::BiasState</scope><name>coordState_</name></member>
      <member refid="classgmx_1_1BiasState_1ac082fcce52b440dfa32ef11064ad225e" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>doSkippedUpdatesForAllPoints</name></member>
      <member refid="classgmx_1_1BiasState_1a8e883b5fa0f4a4e9cb21cb71ea88ef84" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>doSkippedUpdatesInNeighborhood</name></member>
      <member refid="classgmx_1_1BiasState_1a8b7b2724223b18588368ce973528324d" prot="private" virt="non-virtual"><scope>gmx::BiasState</scope><name>endUpdatelist_</name></member>
      <member refid="classgmx_1_1BiasState_1a491ac07baa597e3dbc207e4f7db54665" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>getPmf</name></member>
      <member refid="classgmx_1_1BiasState_1a85b5f53525560941ce7db5e15e0a0140" prot="private" virt="non-virtual"><scope>gmx::BiasState</scope><name>getSkippedUpdateHistogramScaleFactors</name></member>
      <member refid="classgmx_1_1BiasState_1a6de4d309893ac59e2d18eca540efc39c" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>histogramSize</name></member>
      <member refid="classgmx_1_1BiasState_1a53456dc3d3cf7341daca42cd28e69a5a" prot="private" virt="non-virtual"><scope>gmx::BiasState</scope><name>histogramSize_</name></member>
      <member refid="classgmx_1_1BiasState_1a61d3e06a039f9c145357f520b372f2f3" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>inInitialStage</name></member>
      <member refid="classgmx_1_1BiasState_1a967bd0741cfba5ce740d4232db9b6444" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>initGridPointState</name></member>
      <member refid="classgmx_1_1BiasState_1a08affe673e22a51463eb1b99a638fe50" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>initHistoryFromState</name></member>
      <member refid="classgmx_1_1BiasState_1a5f647a3dc82e95d26094a1383f80f0b5" prot="private" virt="non-virtual"><scope>gmx::BiasState</scope><name>isSamplingRegionCovered</name></member>
      <member refid="classgmx_1_1BiasState_1adf7aa1e2f28a69878cb925b9a37f635b" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>moveUmbrella</name></member>
      <member refid="classgmx_1_1BiasState_1a962b40e13611f3396b64d2c41080862f" prot="private" virt="non-virtual"><scope>gmx::BiasState</scope><name>newHistogramSize</name></member>
      <member refid="classgmx_1_1BiasState_1add0312da3056cf7d810c78b897b2a1a3" prot="private" virt="non-virtual"><scope>gmx::BiasState</scope><name>newHistogramSizeInitialStage</name></member>
      <member refid="classgmx_1_1BiasState_1a65b3b9d18a0ed8e33933276f3004c51c" prot="private" virt="non-virtual"><scope>gmx::BiasState</scope><name>normalizePmf</name></member>
      <member refid="classgmx_1_1BiasState_1a846834b4316c1235586316a96bc53915" prot="private" virt="non-virtual"><scope>gmx::BiasState</scope><name>originUpdatelist_</name></member>
      <member refid="classgmx_1_1BiasState_1a9032131c602a3c39c077f5d8f3a793df" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>points</name></member>
      <member refid="classgmx_1_1BiasState_1a92228f625b12cf0c307185ae764beeb3" prot="private" virt="non-virtual"><scope>gmx::BiasState</scope><name>points_</name></member>
      <member refid="classgmx_1_1BiasState_1a57c2f99eef2664c53f2e1bb78927e0f3" prot="private" virt="non-virtual"><scope>gmx::BiasState</scope><name>resetLocalUpdateRange</name></member>
      <member refid="classgmx_1_1BiasState_1a76314d7126ef1644b32204140346ee10" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>restoreFromHistory</name></member>
      <member refid="classgmx_1_1BiasState_1a2086c2717683f61be6796d41a3f25911" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>sampleCoordAndPmf</name></member>
      <member refid="classgmx_1_1BiasState_1ac7a9cbe562a93e106131cfde4eb3dcb6" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>sampleProbabilityWeights</name></member>
      <member refid="classgmx_1_1BiasState_1a911f6af343d16f5f549fd24f8b03f6f0" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>setCoordValue</name></member>
      <member refid="classgmx_1_1BiasState_1ac3990ce2ba621189b1e0d050b9f53e3b" prot="private" virt="non-virtual"><scope>gmx::BiasState</scope><name>setFreeEnergyToConvolvedPmf</name></member>
      <member refid="classgmx_1_1BiasState_1a2b04a169195d0b043aff9c063aba74c3" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>updateFreeEnergyAndAddSamplesToHistogram</name></member>
      <member refid="classgmx_1_1BiasState_1a458a7b8536e1880302bbc8d00ea6a412" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>updateHistory</name></member>
      <member refid="classgmx_1_1BiasState_1ab4475843ac17da2d88e5b1afe827ea29" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>updateProbabilityWeightsAndConvolvedBias</name></member>
      <member refid="classgmx_1_1BiasState_1a4c4a2b114f25064f825fd74c95264278" prot="public" virt="non-virtual"><scope>gmx::BiasState</scope><name>warnForHistogramAnomalies</name></member>
      <member refid="classgmx_1_1BiasState_1a8b0df05675e383524444d2512909a597" prot="private" virt="non-virtual"><scope>gmx::BiasState</scope><name>weightSumCovering_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

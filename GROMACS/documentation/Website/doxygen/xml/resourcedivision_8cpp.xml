<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="resourcedivision_8cpp" kind="file">
    <compoundname>resourcedivision.cpp</compoundname>
    <includes refid="gmxpre_8h" local="yes">gmxpre.h</includes>
    <includes refid="resourcedivision_8h" local="yes">resourcedivision.h</includes>
    <includes local="yes">config.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">algorithm</includes>
    <includes refid="pme_8h" local="yes">gromacs/ewald/pme.h</includes>
    <includes refid="cpuinfo_8h" local="yes">gromacs/hardware/cpuinfo.h</includes>
    <includes refid="detecthardware_8h" local="yes">gromacs/hardware/detecthardware.h</includes>
    <includes refid="hardwaretopology_8h" local="yes">gromacs/hardware/hardwaretopology.h</includes>
    <includes refid="hw__info_8h" local="yes">gromacs/hardware/hw_info.h</includes>
    <includes refid="functions_8h" local="yes">gromacs/math/functions.h</includes>
    <includes refid="gmx__omp__nthreads_8h" local="yes">gromacs/mdlib/gmx_omp_nthreads.h</includes>
    <includes refid="commrec_8h" local="yes">gromacs/mdtypes/commrec.h</includes>
    <includes refid="inputrec_8h" local="yes">gromacs/mdtypes/inputrec.h</includes>
    <includes refid="md__enums_8h" local="yes">gromacs/mdtypes/md_enums.h</includes>
    <includes refid="mtop__util_8h" local="yes">gromacs/topology/mtop_util.h</includes>
    <includes refid="topology_8h" local="yes">gromacs/topology/topology.h</includes>
    <includes refid="baseversion_8h" local="yes">gromacs/utility/baseversion.h</includes>
    <includes refid="fatalerror_8h" local="yes">gromacs/utility/fatalerror.h</includes>
    <includes refid="gmxassert_8h" local="yes">gromacs/utility/gmxassert.h</includes>
    <includes refid="logger_8h" local="yes">gromacs/utility/logger.h</includes>
    <includes refid="stringutil_8h" local="yes">gromacs/utility/stringutil.h</includes>
    <incdepgraph>
      <node id="25780">
        <label>stdarg.h</label>
      </node>
      <node id="25764">
        <label>gromacs/utility/current_function.h</label>
        <link refid="current__function_8h"/>
      </node>
      <node id="25757">
        <label>iterator</label>
      </node>
      <node id="25774">
        <label>cstdint</label>
      </node>
      <node id="25762">
        <label>stdint.h</label>
      </node>
      <node id="25767">
        <label>stdlib.h</label>
      </node>
      <node id="25773">
        <label>gromacs/hardware/hardwaretopology.h</label>
        <link refid="hardwaretopology_8h"/>
        <childnode refid="25774" relation="include">
        </childnode>
        <childnode refid="25751" relation="include">
        </childnode>
      </node>
      <node id="25752">
        <label>gromacs/ewald/pme.h</label>
        <link refid="pme_8h"/>
        <childnode refid="25753" relation="include">
        </childnode>
        <childnode refid="25754" relation="include">
        </childnode>
        <childnode refid="25761" relation="include">
        </childnode>
        <childnode refid="25765" relation="include">
        </childnode>
      </node>
      <node id="25776">
        <label>cmath</label>
      </node>
      <node id="25758">
        <label>stdexcept</label>
      </node>
      <node id="25784">
        <label>cstdarg</label>
      </node>
      <node id="25753">
        <label>string</label>
      </node>
      <node id="25771">
        <label>map</label>
      </node>
      <node id="25760">
        <label>gromacs/utility/gmxassert.h</label>
        <link refid="gmxassert_8h"/>
        <childnode refid="25761" relation="include">
        </childnode>
        <childnode refid="25764" relation="include">
        </childnode>
      </node>
      <node id="25768">
        <label>string.h</label>
      </node>
      <node id="25750">
        <label>cstdio</label>
      </node>
      <node id="25747">
        <label>src/gromacs/taskassignment/resourcedivision.cpp</label>
        <link refid="resourcedivision.cpp"/>
        <childnode refid="25748" relation="include">
        </childnode>
        <childnode refid="25749" relation="include">
        </childnode>
        <childnode refid="25766" relation="include">
        </childnode>
        <childnode refid="25767" relation="include">
        </childnode>
        <childnode refid="25768" relation="include">
        </childnode>
        <childnode refid="25769" relation="include">
        </childnode>
        <childnode refid="25752" relation="include">
        </childnode>
        <childnode refid="25770" relation="include">
        </childnode>
        <childnode refid="25773" relation="include">
        </childnode>
        <childnode refid="25775" relation="include">
        </childnode>
        <childnode refid="25777" relation="include">
        </childnode>
        <childnode refid="25778" relation="include">
        </childnode>
        <childnode refid="25779" relation="include">
        </childnode>
        <childnode refid="25760" relation="include">
        </childnode>
        <childnode refid="25782" relation="include">
        </childnode>
        <childnode refid="25783" relation="include">
        </childnode>
      </node>
      <node id="25765">
        <label>gromacs/utility/real.h</label>
        <link refid="real_8h"/>
      </node>
      <node id="25751">
        <label>vector</label>
      </node>
      <node id="25777">
        <label>gromacs/mdtypes/md_enums.h</label>
        <link refid="md__enums_8h"/>
        <childnode refid="25761" relation="include">
        </childnode>
      </node>
      <node id="25748">
        <label>gmxpre.h</label>
        <link refid="gmxpre_8h"/>
      </node>
      <node id="25759">
        <label>utility</label>
      </node>
      <node id="25756">
        <label>array</label>
      </node>
      <node id="25778">
        <label>gromacs/utility/baseversion.h</label>
        <link refid="baseversion_8h"/>
      </node>
      <node id="25783">
        <label>gromacs/utility/stringutil.h</label>
        <link refid="stringutil_8h"/>
        <childnode refid="25784" relation="include">
        </childnode>
        <childnode refid="25785" relation="include">
        </childnode>
        <childnode refid="25753" relation="include">
        </childnode>
        <childnode refid="25751" relation="include">
        </childnode>
      </node>
      <node id="25761">
        <label>gromacs/utility/basedefinitions.h</label>
        <link refid="basedefinitions_8h"/>
        <childnode refid="25762" relation="include">
        </childnode>
        <childnode refid="25763" relation="include">
        </childnode>
      </node>
      <node id="25754">
        <label>gromacs/utility/arrayref.h</label>
        <link refid="arrayref_8h"/>
        <childnode refid="25755" relation="include">
        </childnode>
        <childnode refid="25756" relation="include">
        </childnode>
        <childnode refid="25757" relation="include">
        </childnode>
        <childnode refid="25758" relation="include">
        </childnode>
        <childnode refid="25759" relation="include">
        </childnode>
        <childnode refid="25751" relation="include">
        </childnode>
        <childnode refid="25760" relation="include">
        </childnode>
      </node>
      <node id="25755">
        <label>cstddef</label>
      </node>
      <node id="25782">
        <label>gromacs/utility/logger.h</label>
        <link refid="logger_8h"/>
        <childnode refid="25753" relation="include">
        </childnode>
      </node>
      <node id="25770">
        <label>gromacs/hardware/cpuinfo.h</label>
        <link refid="cpuinfo_8h"/>
        <childnode refid="25771" relation="include">
        </childnode>
        <childnode refid="25772" relation="include">
        </childnode>
        <childnode refid="25753" relation="include">
        </childnode>
        <childnode refid="25751" relation="include">
        </childnode>
      </node>
      <node id="25749">
        <label>resourcedivision.h</label>
        <link refid="resourcedivision_8h"/>
        <childnode refid="25750" relation="include">
        </childnode>
        <childnode refid="25751" relation="include">
        </childnode>
        <childnode refid="25752" relation="include">
        </childnode>
        <childnode refid="25761" relation="include">
        </childnode>
      </node>
      <node id="25775">
        <label>gromacs/math/functions.h</label>
        <link refid="functions_8h"/>
        <childnode refid="25776" relation="include">
        </childnode>
        <childnode refid="25774" relation="include">
        </childnode>
        <childnode refid="25765" relation="include">
        </childnode>
      </node>
      <node id="25772">
        <label>set</label>
      </node>
      <node id="25766">
        <label>config.h</label>
      </node>
      <node id="25779">
        <label>gromacs/utility/fatalerror.h</label>
        <link refid="fatalerror_8h"/>
        <childnode refid="25780" relation="include">
        </childnode>
        <childnode refid="25781" relation="include">
        </childnode>
        <childnode refid="25761" relation="include">
        </childnode>
      </node>
      <node id="25769">
        <label>algorithm</label>
      </node>
      <node id="25781">
        <label>stdio.h</label>
      </node>
      <node id="25785">
        <label>cstring</label>
      </node>
      <node id="25763">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classanonymous__namespace_02resourcedivision_8cpp_03_1_1SingleRankChecker" prot="public">anonymous_namespace{resourcedivision.cpp}::SingleRankChecker</innerclass>
    <innernamespace refid="namespaceanonymous__namespace_02resourcedivision_8cpp_03">anonymous_namespace{resourcedivision.cpp}</innernamespace>
      <sectiondef kind="user-defined">
      <memberdef kind="variable" id="resourcedivision_8cpp_1a3033c37db108cd370e909336e4f354f8" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int nthreads_omp_faster_default</definition>
        <argsstring></argsstring>
        <name>nthreads_omp_faster_default</name>
        <initializer>=  8</initializer>
        <briefdescription>
<para>Constants for implementing default divisions of threads. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="116" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="resourcedivision_8cpp_1aef832f3aa930e4ba4a60b9f658ebb323" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int nthreads_omp_faster_Nehalem</definition>
        <argsstring></argsstring>
        <name>nthreads_omp_faster_Nehalem</name>
        <initializer>= 12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="117" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="resourcedivision_8cpp_1a9b98e49bf885de87837115d0f5f77024" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int nthreads_omp_faster_Intel_AVX</definition>
        <argsstring></argsstring>
        <name>nthreads_omp_faster_Intel_AVX</name>
        <initializer>= 16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="118" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="resourcedivision_8cpp_1a836a1589d20762d98f4ea80bd5fcabc7" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int nthreads_omp_faster_AMD_Ryzen</definition>
        <argsstring></argsstring>
        <name>nthreads_omp_faster_AMD_Ryzen</name>
        <initializer>= 16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="119" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="resourcedivision_8cpp_1a5851d8e82ba30d6e147b81fe2f6c5e38" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int nthreads_omp_faster_gpu_fac</definition>
        <argsstring></argsstring>
        <name>nthreads_omp_faster_gpu_fac</name>
        <initializer>=  2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="126" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="resourcedivision_8cpp_1a26e15a18dd7ddb2d30d3d7cabedde363" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int nthreads_omp_mpi_ok_min_gpu</definition>
        <argsstring></argsstring>
        <name>nthreads_omp_mpi_ok_min_gpu</name>
        <initializer>=  2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="140" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="resourcedivision_8cpp_1a7bc24b44f8fc6f13d02b9c262ab81b54" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int nthreads_omp_mpi_target_max</definition>
        <argsstring></argsstring>
        <name>nthreads_omp_mpi_target_max</name>
        <initializer>=  6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="141" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="resourcedivision_8cpp_1a5f734c33c160acb0bed1191b4288ba88" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool bHasOmpSupport</definition>
        <argsstring></argsstring>
        <name>bHasOmpSupport</name>
        <initializer>= GMX_OPENMP</initializer>
        <briefdescription>
<para>Constant used to help minimize preprocessed code. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="84" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="resourcedivision_8cpp_1a18ab2e0f50bf3e617261f27a8383a7cc" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int min_atoms_per_mpi_thread</definition>
        <argsstring></argsstring>
        <name>min_atoms_per_mpi_thread</name>
        <initializer>=  90</initializer>
        <briefdescription>
<para>The minimum number of atoms per thread-MPI thread when GPUs are present. With fewer atoms than this, the number of thread-MPI ranks will get lowered. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="90" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="resourcedivision_8cpp_1a839925421eb35bafbc2e820ef6943b15" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int min_atoms_per_gpu</definition>
        <argsstring></argsstring>
        <name>min_atoms_per_gpu</name>
        <initializer>= 900</initializer>
        <briefdescription>
<para>The minimum number of atoms per GPU with thread-MPI active. With fewer atoms than this, the number of thread-MPI ranks will get lowered. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="95" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="resourcedivision_8cpp_1af87ca3f2c6023095f05523e66e5615fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int nthreads_omp_faster</definition>
        <argsstring>(const gmx::CpuInfo &amp;cpuInfo, gmx_bool bUseGPU)</argsstring>
        <name>nthreads_omp_faster</name>
        <param>
          <type>const <ref refid="classgmx_1_1CpuInfo" kindref="compound">gmx::CpuInfo</ref> &amp;</type>
          <declname>cpuInfo</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bUseGPU</declname>
        </param>
        <briefdescription>
<para>Returns the maximum OpenMP thread count for which using a single MPI rank should be faster than using multiple ranks with the same total thread count. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="148" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="148" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="resourcedivision_8cpp_1a4e5fc26ce414c227c4f1aa83e420a6ea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int nthreads_omp_efficient_max</definition>
        <argsstring>(int nrank, const gmx::CpuInfo &amp;cpuInfo, gmx_bool bUseGPU)</argsstring>
        <name>nthreads_omp_efficient_max</name>
        <param>
          <type>int</type>
          <declname>nrank</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1CpuInfo" kindref="compound">gmx::CpuInfo</ref> &amp;</type>
          <declname>cpuInfo</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bUseGPU</declname>
        </param>
        <briefdescription>
<para>Returns that maximum OpenMP thread count that passes the efficiency check. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="183" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="183" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="resourcedivision_8cpp_1a568ccfa2d85f02fa3204ceaf505384f0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_tmpi_omp_thread_division</definition>
        <argsstring>(const gmx_hw_info_t *hwinfo, const gmx_hw_opt_t &amp;hw_opt, int nthreads_tot, int ngpu)</argsstring>
        <name>get_tmpi_omp_thread_division</name>
        <param>
          <type>const <ref refid="structgmx__hw__info__t" kindref="compound">gmx_hw_info_t</ref> *</type>
          <declname>hwinfo</declname>
        </param>
        <param>
          <type>const <ref refid="structgmx__hw__opt__t" kindref="compound">gmx_hw_opt_t</ref> &amp;</type>
          <declname>hw_opt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nthreads_tot</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ngpu</declname>
        </param>
        <briefdescription>
<para>Return the number of thread-MPI ranks to use. This is chosen such that we can always obey our own efficiency checks. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="202" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="202" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="resourcedivision_8cpp_1a4d9215c9d3ec85dd5fc4c147d8200d13" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool gmxSmtIsEnabled</definition>
        <argsstring>(const gmx::HardwareTopology &amp;hwTop)</argsstring>
        <name>gmxSmtIsEnabled</name>
        <param>
          <type>const <ref refid="classgmx_1_1HardwareTopology" kindref="compound">gmx::HardwareTopology</ref> &amp;</type>
          <declname>hwTop</declname>
        </param>
        <briefdescription>
<para>Return whether hyper threading is enabled. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="293" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="293" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="resourcedivision_8cpp_1a38da969f76b23e65e63d6c278c2c3783" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_nthreads_mpi</definition>
        <argsstring>(const gmx_hw_info_t *hwinfo, gmx_hw_opt_t *hw_opt, const std::vector&lt; int &gt; &amp;gpuIdsToUse, bool nonbondedOnGpu, bool pmeOnGpu, const t_inputrec *inputrec, const gmx_mtop_t *mtop, const gmx::MDLogger &amp;mdlog, bool doMembed)</argsstring>
        <name>get_nthreads_mpi</name>
        <param>
          <type>const <ref refid="structgmx__hw__info__t" kindref="compound">gmx_hw_info_t</ref> *</type>
          <declname>hwinfo</declname>
        </param>
        <param>
          <type><ref refid="structgmx__hw__opt__t" kindref="compound">gmx_hw_opt_t</ref> *</type>
          <declname>hw_opt</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>gpuIdsToUse</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>nonbondedOnGpu</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pmeOnGpu</declname>
        </param>
        <param>
          <type>const <ref refid="structt__inputrec" kindref="compound">t_inputrec</ref> *</type>
          <declname>inputrec</declname>
        </param>
        <param>
          <type>const <ref refid="structgmx__mtop__t" kindref="compound">gmx_mtop_t</ref> *</type>
          <declname>mtop</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1MDLogger" kindref="compound">gmx::MDLogger</ref> &amp;</type>
          <declname>mdlog</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>doMembed</declname>
        </param>
        <briefdescription>
<para>Return the number of threads to use for thread-MPI based on how many were requested, which algorithms we&apos;re using, and how many particles there are. At the point we have already called check_and_update_hw_opt. Thus all options should be internally consistent and consistent with the hardware, except that ntmpi could be larger than number of GPUs. If necessary, this function will modify hw_opt-&gt;nthreads_omp. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="344" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="344" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="resourcedivision_8cpp_1a25ab037bd5b969db021a42baecd21a7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_resource_division_efficiency</definition>
        <argsstring>(const gmx_hw_info_t *hwinfo, bool willUsePhysicalGpu, gmx_bool bNtOmpOptionSet, t_commrec *cr, const gmx::MDLogger &amp;mdlog)</argsstring>
        <name>check_resource_division_efficiency</name>
        <param>
          <type>const <ref refid="structgmx__hw__info__t" kindref="compound">gmx_hw_info_t</ref> *</type>
          <declname>hwinfo</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>willUsePhysicalGpu</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bNtOmpOptionSet</declname>
        </param>
        <param>
          <type><ref refid="structt__commrec" kindref="compound">t_commrec</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1MDLogger" kindref="compound">gmx::MDLogger</ref> &amp;</type>
          <declname>mdlog</declname>
        </param>
        <briefdescription>
<para>Check if the number of OpenMP threads is within reasonable range considering the hardware used. This is a crude check, but mainly intended to catch cases where the user starts 1 MPI rank per hardware thread or 1 rank per physical node. With a sub-optimal setup a note is printed to fplog and stderr when bNtOmpSet==TRUE; with bNtOptOptionSet==FALSE a fatal error is issued. This function should be called after thread-MPI and OpenMP are set up. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="541" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="541" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="resourcedivision_8cpp_1a90ae2a7ea859b444a8c7e167334a2f04" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void print_hw_opt</definition>
        <argsstring>(FILE *fp, const gmx_hw_opt_t *hw_opt)</argsstring>
        <name>print_hw_opt</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>const <ref refid="structgmx__hw__opt__t" kindref="compound">gmx_hw_opt_t</ref> *</type>
          <declname>hw_opt</declname>
        </param>
        <briefdescription>
<para>Dump a <computeroutput>hw_opt</computeroutput> to <computeroutput>fp</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="642" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="642" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="resourcedivision_8cpp_1abe9cc899c0172b6bd56af0b592880e47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_and_update_hw_opt_1</definition>
        <argsstring>(const gmx::MDLogger &amp;mdlog, gmx_hw_opt_t *hw_opt, const t_commrec *cr, int nPmeRanks)</argsstring>
        <name>check_and_update_hw_opt_1</name>
        <param>
          <type>const <ref refid="classgmx_1_1MDLogger" kindref="compound">gmx::MDLogger</ref> &amp;</type>
          <declname>mdlog</declname>
        </param>
        <param>
          <type><ref refid="structgmx__hw__opt__t" kindref="compound">gmx_hw_opt_t</ref> *</type>
          <declname>hw_opt</declname>
        </param>
        <param>
          <type>const <ref refid="structt__commrec" kindref="compound">t_commrec</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nPmeRanks</declname>
        </param>
        <briefdescription>
<para>Checks we can do when we don&apos;t (yet) know the cut-off scheme. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="653" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="653" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="resourcedivision_8cpp_1aceb1c631099fde7f6e7a0dbe3b290881" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_and_update_hw_opt_2</definition>
        <argsstring>(gmx_hw_opt_t *hw_opt, int cutoff_scheme)</argsstring>
        <name>check_and_update_hw_opt_2</name>
        <param>
          <type><ref refid="structgmx__hw__opt__t" kindref="compound">gmx_hw_opt_t</ref> *</type>
          <declname>hw_opt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cutoff_scheme</declname>
        </param>
        <briefdescription>
<para>Checks we can do when we know the cut-off scheme. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="781" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="781" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="resourcedivision_8cpp_1a34de6cd9f0f582087967f2348507dd7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void checkAndUpdateRequestedNumOpenmpThreads</definition>
        <argsstring>(gmx_hw_opt_t *hw_opt, const gmx_hw_info_t &amp;hwinfo, const t_commrec *cr, PmeRunMode pmeRunMode, const gmx_mtop_t &amp;mtop)</argsstring>
        <name>checkAndUpdateRequestedNumOpenmpThreads</name>
        <param>
          <type><ref refid="structgmx__hw__opt__t" kindref="compound">gmx_hw_opt_t</ref> *</type>
          <declname>hw_opt</declname>
        </param>
        <param>
          <type>const <ref refid="structgmx__hw__info__t" kindref="compound">gmx_hw_info_t</ref> &amp;</type>
          <declname>hwinfo</declname>
        </param>
        <param>
          <type>const <ref refid="structt__commrec" kindref="compound">t_commrec</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type><ref refid="pme_8h_1adc082ed1af9a4868af13352373ed3791" kindref="member">PmeRunMode</ref></type>
          <declname>pmeRunMode</declname>
        </param>
        <param>
          <type>const <ref refid="structgmx__mtop__t" kindref="compound">gmx_mtop_t</ref> &amp;</type>
          <declname>mtop</declname>
        </param>
        <briefdescription>
<para>Check, and if necessary update, the number of OpenMP threads requested. </para>        </briefdescription>
        <detaileddescription>
<para>Should be called when we know the MPI rank count and PME run mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="797" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="797" bodyend="877"/>
      </memberdef>
      <memberdef kind="function" id="resourcedivision_8cpp_1acfd3d9aa180894e77178f6ccb79f943a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void checkHardwareOversubscription</definition>
        <argsstring>(int numThreadsOnThisRank, const gmx::HardwareTopology &amp;hwTop, const t_commrec *cr, const gmx::MDLogger &amp;mdlog)</argsstring>
        <name>checkHardwareOversubscription</name>
        <param>
          <type>int</type>
          <declname>numThreadsOnThisRank</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1HardwareTopology" kindref="compound">gmx::HardwareTopology</ref> &amp;</type>
          <declname>hwTop</declname>
        </param>
        <param>
          <type>const <ref refid="structt__commrec" kindref="compound">t_commrec</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1MDLogger" kindref="compound">gmx::MDLogger</ref> &amp;</type>
          <declname>mdlog</declname>
        </param>
        <briefdescription>
<para>Warns for oversubscribing the hardware threads, when that is the case. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" line="879" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp" bodystart="879" bodyend="941"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines utility functionality for dividing resources and checking for consistency and usefulness. </para>    </briefdescription>
    <detaileddescription>
<internal><para><simplesect kind="author"><para>Mark Abraham <ulink url="mailto:mark.j.abraham@gmail.com">mark.j.abraham@gmail.com</ulink> </para></simplesect>
</para></internal>
    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/taskassignment/resourcedivision.cpp"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="oclutils_8cpp" kind="file">
    <compoundname>oclutils.cpp</compoundname>
    <includes refid="gmxpre_8h" local="yes">gmxpre.h</includes>
    <includes refid="oclutils_8h" local="yes">oclutils.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">cassert</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">string</includes>
    <includes refid="gpu__utils_8h" local="yes">gromacs/gpu_utils/gpu_utils.h</includes>
    <includes refid="fatalerror_8h" local="yes">gromacs/utility/fatalerror.h</includes>
    <includes refid="smalloc_8h" local="yes">gromacs/utility/smalloc.h</includes>
    <incdepgraph>
      <node id="12299">
        <label>stdarg.h</label>
      </node>
      <node id="12292">
        <label>gromacs/utility/current_function.h</label>
        <link refid="current__function_8h"/>
      </node>
      <node id="12286">
        <label>gromacs/gpu_utils/gmxopencl.h</label>
        <link refid="gmxopencl_8h"/>
        <childnode refid="12287" relation="include">
        </childnode>
      </node>
      <node id="12290">
        <label>stdint.h</label>
      </node>
      <node id="12293">
        <label>stdlib.h</label>
      </node>
      <node id="12296">
        <label>gromacs/gpu_utils/gpu_utils.h</label>
        <link refid="gpu__utils_8h"/>
        <childnode refid="12295" relation="include">
        </childnode>
        <childnode refid="12285" relation="include">
        </childnode>
        <childnode refid="12297" relation="include">
        </childnode>
        <childnode refid="12289" relation="include">
        </childnode>
      </node>
      <node id="12294">
        <label>cassert</label>
      </node>
      <node id="12285">
        <label>string</label>
      </node>
      <node id="12302">
        <label>stddef.h</label>
      </node>
      <node id="12288">
        <label>gromacs/utility/gmxassert.h</label>
        <link refid="gmxassert_8h"/>
        <childnode refid="12289" relation="include">
        </childnode>
        <childnode refid="12292" relation="include">
        </childnode>
      </node>
      <node id="12287">
        <label>CL/opencl.h</label>
      </node>
      <node id="12295">
        <label>cstdio</label>
      </node>
      <node id="12301">
        <label>gromacs/utility/smalloc.h</label>
        <link refid="smalloc_8h"/>
        <childnode refid="12302" relation="include">
        </childnode>
        <childnode refid="12289" relation="include">
        </childnode>
      </node>
      <node id="12297">
        <label>vector</label>
      </node>
      <node id="12283">
        <label>gmxpre.h</label>
        <link refid="gmxpre_8h"/>
      </node>
      <node id="12289">
        <label>gromacs/utility/basedefinitions.h</label>
        <link refid="basedefinitions_8h"/>
        <childnode refid="12290" relation="include">
        </childnode>
        <childnode refid="12291" relation="include">
        </childnode>
      </node>
      <node id="12284">
        <label>oclutils.h</label>
        <link refid="oclutils_8h"/>
        <childnode refid="12285" relation="include">
        </childnode>
        <childnode refid="12286" relation="include">
        </childnode>
        <childnode refid="12288" relation="include">
        </childnode>
      </node>
      <node id="12282">
        <label>src/gromacs/gpu_utils/oclutils.cpp</label>
        <link refid="oclutils.cpp"/>
        <childnode refid="12283" relation="include">
        </childnode>
        <childnode refid="12284" relation="include">
        </childnode>
        <childnode refid="12293" relation="include">
        </childnode>
        <childnode refid="12294" relation="include">
        </childnode>
        <childnode refid="12295" relation="include">
        </childnode>
        <childnode refid="12285" relation="include">
        </childnode>
        <childnode refid="12296" relation="include">
        </childnode>
        <childnode refid="12298" relation="include">
        </childnode>
        <childnode refid="12301" relation="include">
        </childnode>
      </node>
      <node id="12298">
        <label>gromacs/utility/fatalerror.h</label>
        <link refid="fatalerror_8h"/>
        <childnode refid="12299" relation="include">
        </childnode>
        <childnode refid="12300" relation="include">
        </childnode>
        <childnode refid="12289" relation="include">
        </childnode>
      </node>
      <node id="12300">
        <label>stdio.h</label>
      </node>
      <node id="12291">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="oclutils_8cpp_1aca67b8c5b0888638281ad4f4852db58c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ocl_copy_H2D</definition>
        <argsstring>(cl_mem d_dest, void *h_src, size_t offset, size_t bytes, GpuApiCallBehavior transferKind, cl_command_queue command_queue, cl_event *copy_event)</argsstring>
        <name>ocl_copy_H2D</name>
        <param>
          <type>cl_mem</type>
          <declname>d_dest</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>h_src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type><ref refid="gpu__utils_8h_1adc305319540d3e36bec5adedeec9645c" kindref="member">GpuApiCallBehavior</ref></type>
          <declname>transferKind</declname>
        </param>
        <param>
          <type>cl_command_queue</type>
          <declname>command_queue</declname>
        </param>
        <param>
          <type>cl_event *</type>
          <declname>copy_event</declname>
        </param>
        <briefdescription>
<para>Launches synchronous or asynchronous host to device memory copy. </para>        </briefdescription>
        <detaileddescription>
<para>If copy_event is not NULL, on return it will contain an event object identifying this particular host to device operation. The event can further be used to queue a wait for this operation or to query profiling information. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/oclutils.cpp" line="55" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/oclutils.cpp" bodystart="55" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="oclutils_8cpp_1aaa350f06928478dd3a9f3939b393363e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ocl_copy_H2D_async</definition>
        <argsstring>(cl_mem d_dest, void *h_src, size_t offset, size_t bytes, cl_command_queue command_queue, cl_event *copy_event)</argsstring>
        <name>ocl_copy_H2D_async</name>
        <param>
          <type>cl_mem</type>
          <declname>d_dest</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>h_src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>cl_command_queue</type>
          <declname>command_queue</declname>
        </param>
        <param>
          <type>cl_event *</type>
          <declname>copy_event</declname>
        </param>
        <briefdescription>
<para>Launches asynchronous host to device memory copy. </para>        </briefdescription>
        <detaileddescription>
<para>If copy_event is not NULL, on return it will contain an event object identifying this particular host to device operation. The event can further be used to queue a wait for this operation or to query profiling information. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/oclutils.cpp" line="95" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/oclutils.cpp" bodystart="95" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="oclutils_8cpp_1a40ffa70010dd8cd012bb267f440397f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ocl_copy_H2D_sync</definition>
        <argsstring>(cl_mem d_dest, void *h_src, size_t offset, size_t bytes, cl_command_queue command_queue)</argsstring>
        <name>ocl_copy_H2D_sync</name>
        <param>
          <type>cl_mem</type>
          <declname>d_dest</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>h_src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>cl_command_queue</type>
          <declname>command_queue</declname>
        </param>
        <briefdescription>
<para>Launches synchronous host to device memory copy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/oclutils.cpp" line="105" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/oclutils.cpp" bodystart="105" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="oclutils_8cpp_1a6a7a01c9399a761d8fec8cd8123d7ca9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ocl_copy_D2H</definition>
        <argsstring>(void *h_dest, cl_mem d_src, size_t offset, size_t bytes, GpuApiCallBehavior transferKind, cl_command_queue command_queue, cl_event *copy_event)</argsstring>
        <name>ocl_copy_D2H</name>
        <param>
          <type>void *</type>
          <declname>h_dest</declname>
        </param>
        <param>
          <type>cl_mem</type>
          <declname>d_src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type><ref refid="gpu__utils_8h_1adc305319540d3e36bec5adedeec9645c" kindref="member">GpuApiCallBehavior</ref></type>
          <declname>transferKind</declname>
        </param>
        <param>
          <type>cl_command_queue</type>
          <declname>command_queue</declname>
        </param>
        <param>
          <type>cl_event *</type>
          <declname>copy_event</declname>
        </param>
        <briefdescription>
<para>Launches synchronous or asynchronous device to host memory copy. </para>        </briefdescription>
        <detaileddescription>
<para>If copy_event is not NULL, on return it will contain an event object identifying this particular device to host operation. The event can further be used to queue a wait for this operation or to query profiling information. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/oclutils.cpp" line="112" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/oclutils.cpp" bodystart="112" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="oclutils_8cpp_1ac7fa62d677b4780005d6ab88268291c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ocl_copy_D2H_async</definition>
        <argsstring>(void *h_dest, cl_mem d_src, size_t offset, size_t bytes, cl_command_queue command_queue, cl_event *copy_event)</argsstring>
        <name>ocl_copy_D2H_async</name>
        <param>
          <type>void *</type>
          <declname>h_dest</declname>
        </param>
        <param>
          <type>cl_mem</type>
          <declname>d_src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>cl_command_queue</type>
          <declname>command_queue</declname>
        </param>
        <param>
          <type>cl_event *</type>
          <declname>copy_event</declname>
        </param>
        <briefdescription>
<para>Launches asynchronous device to host memory copy. </para>        </briefdescription>
        <detaileddescription>
<para>If copy_event is not NULL, on return it will contain an event object identifying this particular host to device operation. The event can further be used to queue a wait for this operation or to query profiling information. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/oclutils.cpp" line="152" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/oclutils.cpp" bodystart="152" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="oclutils_8cpp_1a820dcad2db335a788636545ba5769adf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ocl_pmalloc</definition>
        <argsstring>(void **h_ptr, size_t nbytes)</argsstring>
        <name>ocl_pmalloc</name>
        <param>
          <type>void **</type>
          <declname>h_ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
<para>Allocates nbytes of host memory. Use ocl_free to free memory allocated with this function. </para>        </briefdescription>
        <detaileddescription>
<para>Allocate host memory in malloc style.</para><para><xrefsect id="todo_1_todo000035"><xreftitle>Todo</xreftitle><xrefdescription><para>This function should allocate page-locked memory to help reduce D2H and H2D transfer times, similar with pmalloc from pmalloc_cuda.cu.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">h_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer where to store the address of the newly allocated buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nbytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Size in bytes of the buffer to be allocated. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/oclutils.cpp" line="169" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/oclutils.cpp" bodystart="169" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="oclutils_8cpp_1a44d6e2bc98cadbcb22619668bee73ebe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ocl_pfree</definition>
        <argsstring>(void *h_ptr)</argsstring>
        <name>ocl_pfree</name>
        <param>
          <type>void *</type>
          <declname>h_ptr</declname>
        </param>
        <briefdescription>
<para>Frees memory allocated with ocl_pmalloc. </para>        </briefdescription>
        <detaileddescription>
<para>Free host memory in malloc style.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">h_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer allocated with ocl_pmalloc that needs to be freed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/oclutils.cpp" line="188" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/oclutils.cpp" bodystart="188" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="oclutils_8cpp_1a1393b72bfedda92c51c2205085c4c6f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ocl_get_error_string</definition>
        <argsstring>(cl_int error)</argsstring>
        <name>ocl_get_error_string</name>
        <param>
          <type>cl_int</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Convert error code to diagnostic string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/oclutils.cpp" line="199" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/oclutils.cpp" bodystart="199" bodyend="276"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Define utility routines for OpenCL. </para>    </briefdescription>
    <detaileddescription>
<internal><para><simplesect kind="author"><para>Anca Hamuraru <ulink url="mailto:anca@streamcomputing.eu">anca@streamcomputing.eu</ulink> </para></simplesect>
</para></internal>
    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/oclutils.cpp"/>
  </compounddef>
</doxygen>

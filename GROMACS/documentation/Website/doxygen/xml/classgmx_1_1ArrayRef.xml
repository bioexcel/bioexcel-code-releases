<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1ArrayRef" kind="class" prot="public">
    <compoundname>gmx::ArrayRef</compoundname>
    <includes local="no">gromacs/utility/arrayref.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1a830f66ddf148488309fe6de17574eaa7" prot="public" static="no">
        <type>T</type>
        <definition>typedef T gmx::ArrayRef&lt; T &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
<para>Type of values stored in the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="116" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1a12524b640e7173078bb983a450022346" prot="public" static="no">
        <type>size_t</type>
        <definition>typedef size_t gmx::ArrayRef&lt; T &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
<para>Type for representing size of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="118" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1a8895b8b6139fe648d37ea4e7e6bab050" prot="public" static="no">
        <type>ptrdiff_t</type>
        <definition>typedef ptrdiff_t gmx::ArrayRef&lt; T &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
<para>Type for representing difference between two container indices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="120" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1aa523e3e573d94dfb5f1c72b884c4174b" prot="public" static="no">
        <type>const T &amp;</type>
        <definition>typedef const T&amp; gmx::ArrayRef&lt; T &gt;::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
<para>Const reference to a container element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="122" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1a813d9d7b5e1974c2062e990e096aca62" prot="public" static="no">
        <type>const T *</type>
        <definition>typedef const T* gmx::ArrayRef&lt; T &gt;::const_pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
<para>Const pointer to a container element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="124" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1adf23600a1fe8cb879fe29ee366f6bb9d" prot="public" static="no">
        <type>const T *</type>
        <definition>typedef const T* gmx::ArrayRef&lt; T &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
<para>Const iterator type for the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="126" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1aaa7f6ef205b5793ab33635f887e9f0bb" prot="public" static="no">
        <type>T &amp;</type>
        <definition>typedef T&amp; gmx::ArrayRef&lt; T &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
<para>Reference to a container element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="128" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1a7d3b7bcef0b244efc5d3da2fe2278390" prot="public" static="no">
        <type>T *</type>
        <definition>typedef T* gmx::ArrayRef&lt; T &gt;::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
<para>Pointer to a container element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="130" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1a4340dee5b6fad7c05e609f156ea54958" prot="public" static="no">
        <type>T *</type>
        <definition>typedef T* gmx::ArrayRef&lt; T &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
<para>Iterator type for the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="132" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1a0a3dbf927d466898190de4a40584e96a" prot="public" static="no">
        <type>std::reverse_iterator&lt; <ref refid="classgmx_1_1ArrayRef_1a4340dee5b6fad7c05e609f156ea54958" kindref="member">iterator</ref> &gt;</type>
        <definition>typedef std::reverse_iterator&lt;iterator&gt; gmx::ArrayRef&lt; T &gt;::reverse_iterator</definition>
        <argsstring></argsstring>
        <name>reverse_iterator</name>
        <briefdescription>
<para>Standard reverse iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="134" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgmx_1_1ArrayRef_1af942afb4b73e5d3071f8d55e0a820595" prot="public" static="no">
        <type>std::reverse_iterator&lt; <ref refid="classgmx_1_1ArrayRef_1adf23600a1fe8cb879fe29ee366f6bb9d" kindref="member">const_iterator</ref> &gt;</type>
        <definition>typedef std::reverse_iterator&lt;const_iterator&gt; gmx::ArrayRef&lt; T &gt;::const_reverse_iterator</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <briefdescription>
<para>Standard reverse iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="136" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1ArrayRef_1a0526d023b3ebecdded53563aaefd2fe3" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1ArrayRef_1a7d3b7bcef0b244efc5d3da2fe2278390" kindref="member">pointer</ref></type>
        <definition>pointer gmx::ArrayRef&lt; T &gt;::begin_</definition>
        <argsstring></argsstring>
        <name>begin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="261" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1ArrayRef_1a95003c0bc87c2a0db30f98c9fd36aaef" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1ArrayRef_1a7d3b7bcef0b244efc5d3da2fe2278390" kindref="member">pointer</ref></type>
        <definition>pointer gmx::ArrayRef&lt; T &gt;::end_</definition>
        <argsstring></argsstring>
        <name>end_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="262" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1ad114f59f4d3ab734ba5460ead18a110e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::ArrayRef&lt; T &gt;::ArrayRef</definition>
        <argsstring>()</argsstring>
        <name>ArrayRef</name>
        <briefdescription>
<para>Constructs an empty reference. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="141" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a1d71d8ba14566b55336d666b3666684c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::ArrayRef&lt; T &gt;::ArrayRef</definition>
        <argsstring>(const EmptyArrayRef &amp;)</argsstring>
        <name>ArrayRef</name>
        <param>
          <type>const <ref refid="structgmx_1_1EmptyArrayRef" kindref="compound">EmptyArrayRef</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Constructs an empty reference. </para>        </briefdescription>
        <detaileddescription>
<para>This is provided for convenience, such that <ref refid="structgmx_1_1EmptyArrayRef" kindref="compound">EmptyArrayRef</ref> can be used to initialize any <ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>, without specifying the template type. It is not explicit to enable that usage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="149" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a5c3b09727267265b3ca1b024fdc31516" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;                         std::is_convertible&lt;typename std::remove_reference&lt;U&gt;::type::pointer,                                             <ref refid="classgmx_1_1ArrayRef_1a7d3b7bcef0b244efc5d3da2fe2278390" kindref="member">pointer</ref>&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>gmx::ArrayRef&lt; T &gt;::ArrayRef</definition>
        <argsstring>(U &amp;&amp;o)</argsstring>
        <name>ArrayRef</name>
        <param>
          <type>U &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Constructs a reference to a container or reference. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">o</parametername>
</parameternamelist>
<parameterdescription>
<para>container to reference.</para></parameterdescription>
</parameteritem>
</parameterlist>
Can be used to create a reference to a whole vector, std::array or an <ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>. The destination has to have a convertible pointer type (identical besides const or base class).</para><para>Passed container must remain valid and not be reallocated for the lifetime of this object.</para><para>This constructor is not explicit to allow directly passing a container to a method that takes <ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="169" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="169" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1aed10da86fd23acfb22a64c7c6699a5e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::ArrayRef&lt; T &gt;::ArrayRef</definition>
        <argsstring>(pointer begin, pointer end)</argsstring>
        <name>ArrayRef</name>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef_1a7d3b7bcef0b244efc5d3da2fe2278390" kindref="member">pointer</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef_1a7d3b7bcef0b244efc5d3da2fe2278390" kindref="member">pointer</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Constructs a reference to a particular range. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the beginning of a range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the end of a range.</para></parameterdescription>
</parameteritem>
</parameterlist>
Passed pointers must remain valid for the lifetime of this object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="178" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="178" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a51deb1155148a8ff4d5fa135de5ae4ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref></type>
        <definition>ArrayRef gmx::ArrayRef&lt; T &gt;::subArray</definition>
        <argsstring>(size_type start, size_type count) const </argsstring>
        <name>subArray</name>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef_1a12524b640e7173078bb983a450022346" kindref="member">size_type</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef_1a12524b640e7173078bb983a450022346" kindref="member">size_type</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Returns a reference to part of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="209" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a636969a931ec85c6f9b2e54e9bae11fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1a4340dee5b6fad7c05e609f156ea54958" kindref="member">iterator</ref></type>
        <definition>iterator gmx::ArrayRef&lt; T &gt;::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns an iterator to the beginning of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="214" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="214" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a93c4352348369bd6e6274c34c3a4462e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1a4340dee5b6fad7c05e609f156ea54958" kindref="member">iterator</ref></type>
        <definition>iterator gmx::ArrayRef&lt; T &gt;::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns an iterator to the end of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="216" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a43e83ba6a7944e7e55123c4d4ab0435c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1a0a3dbf927d466898190de4a40584e96a" kindref="member">reverse_iterator</ref></type>
        <definition>reverse_iterator gmx::ArrayRef&lt; T &gt;::rbegin</definition>
        <argsstring>() const </argsstring>
        <name>rbegin</name>
        <briefdescription>
<para>Returns an iterator to the reverse beginning of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="218" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="218" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a7e924e1aa00418f3079d16980ee3a9d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1a0a3dbf927d466898190de4a40584e96a" kindref="member">reverse_iterator</ref></type>
        <definition>reverse_iterator gmx::ArrayRef&lt; T &gt;::rend</definition>
        <argsstring>() const </argsstring>
        <name>rend</name>
        <briefdescription>
<para>Returns an iterator to the reverse end of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="220" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a064803b42a30e450dba3e20cc16b87d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1a12524b640e7173078bb983a450022346" kindref="member">size_type</ref></type>
        <definition>size_type gmx::ArrayRef&lt; T &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the size of the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="223" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1aa8f4798e07e54a2ceb053ccd1f8ad65e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1a12524b640e7173078bb983a450022346" kindref="member">size_type</ref></type>
        <definition>size_type gmx::ArrayRef&lt; T &gt;::capacity</definition>
        <argsstring>() const </argsstring>
        <name>capacity</name>
        <briefdescription>
<para>Identical to <ref refid="classgmx_1_1ArrayRef_1a064803b42a30e450dba3e20cc16b87d8" kindref="member">size()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="225" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="225" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a556df99ffcf4512ae8be245d6af788bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::ArrayRef&lt; T &gt;::empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
<para>Whether the container is empty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="227" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="227" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a590c0297f10a6ba489bb2f96a6cc143d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1aaa7f6ef205b5793ab33635f887e9f0bb" kindref="member">reference</ref></type>
        <definition>reference gmx::ArrayRef&lt; T &gt;::operator[]</definition>
        <argsstring>(size_type n) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef_1a12524b640e7173078bb983a450022346" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Access container element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="230" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="230" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a99d798862329c2e48fe28beaf0b23815" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1aaa7f6ef205b5793ab33635f887e9f0bb" kindref="member">reference</ref></type>
        <definition>reference gmx::ArrayRef&lt; T &gt;::at</definition>
        <argsstring>(size_type n) const </argsstring>
        <name>at</name>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef_1a12524b640e7173078bb983a450022346" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Access container element (throws on out-of-range error). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="232" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="232" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1aa8d0bf3c91184f9cfc458b00036c6229" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1aaa7f6ef205b5793ab33635f887e9f0bb" kindref="member">reference</ref></type>
        <definition>reference gmx::ArrayRef&lt; T &gt;::front</definition>
        <argsstring>() const </argsstring>
        <name>front</name>
        <briefdescription>
<para>Returns the first element in the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="241" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a1a9d019764cd022cc69df3cefe602ac4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1aaa7f6ef205b5793ab33635f887e9f0bb" kindref="member">reference</ref></type>
        <definition>reference gmx::ArrayRef&lt; T &gt;::back</definition>
        <argsstring>() const </argsstring>
        <name>back</name>
        <briefdescription>
<para>Returns the first element in the container. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="243" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="243" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a88cc45d7039d1f6f738cf66463d18f81" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1ArrayRef_1a7d3b7bcef0b244efc5d3da2fe2278390" kindref="member">pointer</ref></type>
        <definition>pointer gmx::ArrayRef&lt; T &gt;::data</definition>
        <argsstring>() const </argsstring>
        <name>data</name>
        <briefdescription>
<para>Returns a raw pointer to the contents of the array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="246" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="246" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a6b0d543799e64b307d4832545e16f6f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::ArrayRef&lt; T &gt;::swap</definition>
        <argsstring>(ArrayRef&lt; T &gt; &amp;other)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Swaps referenced memory with the other object. </para>        </briefdescription>
        <detaileddescription>
<para>The actual memory areas are not modified, only the references are swapped. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="254" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="254" bodyend="258"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a24928de2a6e2169edd97fc08e557cf95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>&lt; T &gt;</type>
        <definition>ArrayRef&lt; T &gt; arrayRefFromArray</definition>
        <argsstring>(T *begin, size_t size)</argsstring>
        <name>arrayRefFromArray</name>
        <param>
          <type>T *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="268" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="268" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1ArrayRef_1a3ad7566d3e99e1e1b3f6360d3ae89314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>&lt; const T &gt;</type>
        <definition>ArrayRef&lt; const T &gt; constArrayRefFromArray</definition>
        <argsstring>(const T *begin, size_t size)</argsstring>
        <name>constArrayRefFromArray</name>
        <param>
          <type>const T *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" line="276" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/arrayref.h" bodystart="276" bodyend="279"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>STL-like container for an interface to a C array of T (or part of a std::vector&lt;T, A&gt; or std::array&lt;T&gt;). </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>Value type of elements.</para></parameterdescription>
</parameteritem>
</parameterlist>
This class provides an interface similar to <computeroutput>std::vector&lt;T, A&gt;</computeroutput>, with the following main differences:<itemizedlist>
<listitem><para>This class does not have its own storage. Instead, it references an existing array of values (either a C-style array or part of an existing std::vector&lt;T, A&gt; or std::array&lt;T&gt;).</para></listitem><listitem><para>It is only possible to modify the values themselves through <ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>; it is not possible to add or remove values.</para></listitem><listitem><para>Copying objects of this type is cheap, and the copies behave identically to the original object: the copy references the same set of values.</para></listitem></itemizedlist>
</para><para>This class is useful for writing wrappers that expose a view of the internal data stored as a single vector/array, which can be a whole or part of the underlying storage.</para><para>Methods in this class do not throw, except where indicated.</para><para>Note that due to a Doxygen limitation, the constructor that takes a C array whose size is known at compile time does not appear in the documentation.</para><para>To refer to const data of type T, ArrayRef&lt;const T&gt; is used. For both const and non-const std::vector and std::array an <ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref> view can be created. Attempting to create a non-const <ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref> of a const vector/array will result in a compiler error in the respective constructor.</para><para>For SIMD types there is template specialization available (e.g. ArrayRef&lt;SimdReal&gt;) in <ref refid="simd__memory_8h" kindref="compound">gromacs/simd/simd_memory.h</ref> which should have the same functionality as much as possible.</para><para><xrefsect id="todo_1_todo000096"><xreftitle>Todo</xreftitle><xrefdescription><para>This class is not complete. There are likely also methods missing (not required for current usage).</para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.h" line="56" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.h" bodystart="56" bodyend="-1"/>
    <listofallmembers>
      <member refid="classgmx_1_1ArrayRef_1ad114f59f4d3ab734ba5460ead18a110e" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>ArrayRef</name></member>
      <member refid="classgmx_1_1ArrayRef_1a1d71d8ba14566b55336d666b3666684c" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>ArrayRef</name></member>
      <member refid="classgmx_1_1ArrayRef_1a5c3b09727267265b3ca1b024fdc31516" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>ArrayRef</name></member>
      <member refid="classgmx_1_1ArrayRef_1aed10da86fd23acfb22a64c7c6699a5e3" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>ArrayRef</name></member>
      <member refid="classgmx_1_1ArrayRef_1a24928de2a6e2169edd97fc08e557cf95" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>arrayRefFromArray</name></member>
      <member refid="classgmx_1_1ArrayRef_1a99d798862329c2e48fe28beaf0b23815" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>at</name></member>
      <member refid="classgmx_1_1ArrayRef_1a1a9d019764cd022cc69df3cefe602ac4" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>back</name></member>
      <member refid="classgmx_1_1ArrayRef_1a636969a931ec85c6f9b2e54e9bae11fb" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>begin</name></member>
      <member refid="classgmx_1_1ArrayRef_1a0526d023b3ebecdded53563aaefd2fe3" prot="private" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>begin_</name></member>
      <member refid="classgmx_1_1ArrayRef_1aa8f4798e07e54a2ceb053ccd1f8ad65e" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>capacity</name></member>
      <member refid="classgmx_1_1ArrayRef_1adf23600a1fe8cb879fe29ee366f6bb9d" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>const_iterator</name></member>
      <member refid="classgmx_1_1ArrayRef_1a813d9d7b5e1974c2062e990e096aca62" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>const_pointer</name></member>
      <member refid="classgmx_1_1ArrayRef_1aa523e3e573d94dfb5f1c72b884c4174b" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>const_reference</name></member>
      <member refid="classgmx_1_1ArrayRef_1af942afb4b73e5d3071f8d55e0a820595" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>const_reverse_iterator</name></member>
      <member refid="classgmx_1_1ArrayRef_1a3ad7566d3e99e1e1b3f6360d3ae89314" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>constArrayRefFromArray</name></member>
      <member refid="classgmx_1_1ArrayRef_1a88cc45d7039d1f6f738cf66463d18f81" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>data</name></member>
      <member refid="classgmx_1_1ArrayRef_1a8895b8b6139fe648d37ea4e7e6bab050" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>difference_type</name></member>
      <member refid="classgmx_1_1ArrayRef_1a556df99ffcf4512ae8be245d6af788bf" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>empty</name></member>
      <member refid="classgmx_1_1ArrayRef_1a93c4352348369bd6e6274c34c3a4462e" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>end</name></member>
      <member refid="classgmx_1_1ArrayRef_1a95003c0bc87c2a0db30f98c9fd36aaef" prot="private" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>end_</name></member>
      <member refid="classgmx_1_1ArrayRef_1aa8d0bf3c91184f9cfc458b00036c6229" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>front</name></member>
      <member refid="classgmx_1_1ArrayRef_1a4340dee5b6fad7c05e609f156ea54958" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>iterator</name></member>
      <member refid="classgmx_1_1ArrayRef_1a590c0297f10a6ba489bb2f96a6cc143d" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>operator[]</name></member>
      <member refid="classgmx_1_1ArrayRef_1a7d3b7bcef0b244efc5d3da2fe2278390" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>pointer</name></member>
      <member refid="classgmx_1_1ArrayRef_1a43e83ba6a7944e7e55123c4d4ab0435c" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>rbegin</name></member>
      <member refid="classgmx_1_1ArrayRef_1aaa7f6ef205b5793ab33635f887e9f0bb" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>reference</name></member>
      <member refid="classgmx_1_1ArrayRef_1a7e924e1aa00418f3079d16980ee3a9d6" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>rend</name></member>
      <member refid="classgmx_1_1ArrayRef_1a0a3dbf927d466898190de4a40584e96a" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>reverse_iterator</name></member>
      <member refid="classgmx_1_1ArrayRef_1a064803b42a30e450dba3e20cc16b87d8" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>size</name></member>
      <member refid="classgmx_1_1ArrayRef_1a12524b640e7173078bb983a450022346" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>size_type</name></member>
      <member refid="classgmx_1_1ArrayRef_1a51deb1155148a8ff4d5fa135de5ae4ff" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>subArray</name></member>
      <member refid="classgmx_1_1ArrayRef_1a6b0d543799e64b307d4832545e16f6f7" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>swap</name></member>
      <member refid="classgmx_1_1ArrayRef_1a830f66ddf148488309fe6de17574eaa7" prot="public" virt="non-virtual"><scope>gmx::ArrayRef</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

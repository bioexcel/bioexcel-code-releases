<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1test_1_1CommandLineTestHelper" kind="class" prot="public">
    <compoundname>gmx::test::CommandLineTestHelper</compoundname>
    <includes local="no">testutils/cmdlinetest.h</includes>
    <innerclass refid="classgmx_1_1test_1_1CommandLineTestHelper_1_1Impl" prot="public">gmx::test::CommandLineTestHelper::Impl</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1test_1_1CommandLineTestHelper_1a436ceaf727447d1624381f2e01c20e9f" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1PrivateImplPointer" kindref="compound">PrivateImplPointer</ref>&lt; <ref refid="classgmx_1_1test_1_1CommandLineTestHelper_1_1Impl" kindref="compound">Impl</ref> &gt;</type>
        <definition>PrivateImplPointer&lt;Impl&gt; gmx::test::CommandLineTestHelper::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.h" line="354" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgmx_1_1test_1_1CommandLineTestHelper_1a53aa890fc717cc97b4c100464b4a9dad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx::test::CommandLineTestHelper::runModuleDirect</definition>
        <argsstring>(ICommandLineModule *module, CommandLine *commandLine)</argsstring>
        <name>runModuleDirect</name>
        <param>
          <type><ref refid="classgmx_1_1ICommandLineModule" kindref="compound">ICommandLineModule</ref> *</type>
          <declname>module</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1test_1_1CommandLine" kindref="compound">CommandLine</ref> *</type>
          <declname>commandLine</declname>
        </param>
        <briefdescription>
<para>Runs a command-line program that implements <ref refid="classgmx_1_1ICommandLineModule" kindref="compound">ICommandLineModule</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">module</parametername>
</parameternamelist>
<parameterdescription>
<para>Module to run. The function does not take ownership. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">commandLine</parametername>
</parameternamelist>
<parameterdescription>
<para>Command line parameters to pass. This is only modified if <computeroutput>module</computeroutput> modifies it. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The return value of the module. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>unspecified</parametername>
</parameternamelist>
<parameterdescription>
<para>Any exception thrown by the module. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.h" line="233" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.cpp" bodystart="277" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1CommandLineTestHelper_1a552184baa5cad3cd9bf45c068a34fa11" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx::test::CommandLineTestHelper::runModuleDirect</definition>
        <argsstring>(std::unique_ptr&lt; ICommandLineOptionsModule &gt; module, CommandLine *commandLine)</argsstring>
        <name>runModuleDirect</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classgmx_1_1ICommandLineOptionsModule" kindref="compound">ICommandLineOptionsModule</ref> &gt;</type>
          <declname>module</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1test_1_1CommandLine" kindref="compound">CommandLine</ref> *</type>
          <declname>commandLine</declname>
        </param>
        <briefdescription>
<para>Runs a command-line program that implements <ref refid="classgmx_1_1ICommandLineOptionsModule" kindref="compound">ICommandLineOptionsModule</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">module</parametername>
</parameternamelist>
<parameterdescription>
<para>Module to run. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">commandLine</parametername>
</parameternamelist>
<parameterdescription>
<para>Command line parameters to pass. This is only modified if <computeroutput>module</computeroutput> modifies it. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The return value of the module. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>unspecified</parametername>
</parameternamelist>
<parameterdescription>
<para>Any exception thrown by the module. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.h" line="245" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.cpp" bodystart="286" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1CommandLineTestHelper_1a31f8d02f226f3a79fa48c68bcfd24ada" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx::test::CommandLineTestHelper::runModuleFactory</definition>
        <argsstring>(std::function&lt; std::unique_ptr&lt; ICommandLineOptionsModule &gt;()&gt; factory, CommandLine *commandLine)</argsstring>
        <name>runModuleFactory</name>
        <param>
          <type>std::function&lt; std::unique_ptr&lt; <ref refid="classgmx_1_1ICommandLineOptionsModule" kindref="compound">ICommandLineOptionsModule</ref> &gt;()&gt;</type>
          <declname>factory</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1test_1_1CommandLine" kindref="compound">CommandLine</ref> *</type>
          <declname>commandLine</declname>
        </param>
        <briefdescription>
<para>Runs a command-line program that implements <ref refid="classgmx_1_1ICommandLineOptionsModule" kindref="compound">ICommandLineOptionsModule</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">factory</parametername>
</parameternamelist>
<parameterdescription>
<para>Factory method for the module to run. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">commandLine</parametername>
</parameternamelist>
<parameterdescription>
<para>Command line parameters to pass. This is only modified if the module modifies it. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The return value of the module. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>unspecified</parametername>
</parameternamelist>
<parameterdescription>
<para>Any exception thrown by the factory or the module. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.h" line="259" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.cpp" bodystart="296" bodyend="301"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1test_1_1CommandLineTestHelper_1aff6fd2523ae1245870bd5cff112859f9" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::test::CommandLineTestHelper::CommandLineTestHelper</definition>
        <argsstring>(TestFileManager *fileManager)</argsstring>
        <name>CommandLineTestHelper</name>
        <param>
          <type><ref refid="classgmx_1_1test_1_1TestFileManager" kindref="compound">TestFileManager</ref> *</type>
          <declname>fileManager</declname>
        </param>
        <briefdescription>
<para>Initializes an instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileManager</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1File" kindref="compound">File</ref> manager to use for generating temporary file names and to track temporary files. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.h" line="268" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.cpp" bodystart="303" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1CommandLineTestHelper_1ad1032ba0f2088310e6579592877a3382" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::test::CommandLineTestHelper::~CommandLineTestHelper</definition>
        <argsstring>()</argsstring>
        <name>~CommandLineTestHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.h" line="269" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.cpp" bodystart="308" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1CommandLineTestHelper_1a4e7a9dd4bbcd57f9554185b7c84aa022" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::CommandLineTestHelper::setInputFileContents</definition>
        <argsstring>(CommandLine *args, const char *option, const char *extension, const std::string &amp;contents)</argsstring>
        <name>setInputFileContents</name>
        <param>
          <type><ref refid="classgmx_1_1test_1_1CommandLine" kindref="compound">CommandLine</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>option</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>extension</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>contents</declname>
        </param>
        <briefdescription>
<para>Generates and sets an input file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">args</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1test_1_1CommandLine" kindref="compound">CommandLine</ref> to which to add the option. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>Option to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">extension</parametername>
</parameternamelist>
<parameterdescription>
<para>Extension for the file to create. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">contents</parametername>
</parameternamelist>
<parameterdescription>
<para>Text to write to the input file.</para></parameterdescription>
</parameteritem>
</parameterlist>
Creates a temporary file with contents from <computeroutput>contents</computeroutput>, and adds <computeroutput>option</computeroutput> to <computeroutput>args</computeroutput> with a value that points to the generated file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.h" line="282" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.cpp" bodystart="312" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1CommandLineTestHelper_1a07778891c320be23549b34ebd90f3278" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::CommandLineTestHelper::setInputFileContents</definition>
        <argsstring>(CommandLine *args, const char *option, const char *extension, const ArrayRef&lt; const char *const  &gt; &amp;contents)</argsstring>
        <name>setInputFileContents</name>
        <param>
          <type><ref refid="classgmx_1_1test_1_1CommandLine" kindref="compound">CommandLine</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>option</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>extension</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>&lt; const char *const  &gt; &amp;</type>
          <declname>contents</declname>
        </param>
        <briefdescription>
<para>Generates and sets an input file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">args</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1test_1_1CommandLine" kindref="compound">CommandLine</ref> to which to add the option. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>Option to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">extension</parametername>
</parameternamelist>
<parameterdescription>
<para>Extension for the file to create. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">contents</parametername>
</parameternamelist>
<parameterdescription>
<para>Text to write to the input file.</para></parameterdescription>
</parameteritem>
</parameterlist>
Creates a temporary file with contents from <computeroutput>contents</computeroutput> (each array entry on its own line), and adds <computeroutput>option</computeroutput> to <computeroutput>args</computeroutput> with a value that points to the generated file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.h" line="297" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.cpp" bodystart="323" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1CommandLineTestHelper_1a4d9a0e1150be7ba9faea9522fc1bd274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::CommandLineTestHelper::setOutputFile</definition>
        <argsstring>(CommandLine *args, const char *option, const char *filename, const ITextBlockMatcherSettings &amp;matcher)</argsstring>
        <name>setOutputFile</name>
        <param>
          <type><ref refid="classgmx_1_1test_1_1CommandLine" kindref="compound">CommandLine</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>option</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1test_1_1ITextBlockMatcherSettings" kindref="compound">ITextBlockMatcherSettings</ref> &amp;</type>
          <declname>matcher</declname>
        </param>
        <briefdescription>
<para>Sets an output file parameter and adds it to the set of tested files. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">args</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1test_1_1CommandLine" kindref="compound">CommandLine</ref> to which to add the option. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>Option to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the output file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">matcher</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies how the contents of the file are tested.</para></parameterdescription>
</parameteritem>
</parameterlist>
This method does the following:<itemizedlist>
<listitem><para>Adds <computeroutput>option</computeroutput> to <computeroutput>args</computeroutput> to point a temporary file name constructed from <computeroutput>filename</computeroutput>.</para></listitem><listitem><para>Makes <ref refid="classgmx_1_1test_1_1CommandLineTestHelper_1a03dcf4f3e2400defe8eb88d99af452ec" kindref="member">checkOutputFiles()</ref> to check the contents of the file against reference data, using <computeroutput>matcher</computeroutput>.</para></listitem><listitem><para>Marks the temporary file for removal at test teardown.</para></listitem></itemizedlist>
</para><para><computeroutput>filename</computeroutput> is given to TestTemporaryFileManager to make a unique filename for the temporary file. If <computeroutput>filename</computeroutput> starts with a dot, a unique number is prefixed (such that it is possible to create multiple files with the same extension by just specifying the extension for every call of <ref refid="classgmx_1_1test_1_1CommandLineTestHelper_1a4d9a0e1150be7ba9faea9522fc1bd274" kindref="member">setOutputFile()</ref>).</para><para>If the output file is needed to trigger some computation, or is unconditionally produced by the code under test, but the contents are not interesting for the test, use <ref refid="classgmx_1_1test_1_1NoContentsMatch" kindref="compound">NoContentsMatch</ref> as the matcher. Note that the existence of the output file is still verified. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.h" line="327" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.cpp" bodystart="340" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1CommandLineTestHelper_1a27d92ff7ecc403ac99102dce89d0cf2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::CommandLineTestHelper::setOutputFile</definition>
        <argsstring>(CommandLine *args, const char *option, const char *filename, const IFileMatcherSettings &amp;matcher)</argsstring>
        <name>setOutputFile</name>
        <param>
          <type><ref refid="classgmx_1_1test_1_1CommandLine" kindref="compound">CommandLine</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>option</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1test_1_1IFileMatcherSettings" kindref="compound">IFileMatcherSettings</ref> &amp;</type>
          <declname>matcher</declname>
        </param>
        <briefdescription>
<para>Sets an output file parameter and adds it to the set of tested files. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">args</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1test_1_1CommandLine" kindref="compound">CommandLine</ref> to which to add the option. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>Option to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the output file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">matcher</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies how the contents of the file are tested.</para></parameterdescription>
</parameteritem>
</parameterlist>
This method does the following:<itemizedlist>
<listitem><para>Adds <computeroutput>option</computeroutput> to <computeroutput>args</computeroutput> to point a temporary file name constructed from <computeroutput>filename</computeroutput>.</para></listitem><listitem><para>Makes <ref refid="classgmx_1_1test_1_1CommandLineTestHelper_1a03dcf4f3e2400defe8eb88d99af452ec" kindref="member">checkOutputFiles()</ref> to check the contents of the file against reference data, using <computeroutput>matcher</computeroutput>.</para></listitem><listitem><para>Marks the temporary file for removal at test teardown.</para></listitem></itemizedlist>
</para><para><computeroutput>filename</computeroutput> is given to TestTemporaryFileManager to make a unique filename for the temporary file. If <computeroutput>filename</computeroutput> starts with a dot, a unique number is prefixed (such that it is possible to create multiple files with the same extension by just specifying the extension for every call of <ref refid="classgmx_1_1test_1_1CommandLineTestHelper_1a4d9a0e1150be7ba9faea9522fc1bd274" kindref="member">setOutputFile()</ref>).</para><para>If the output file is needed to trigger some computation, or is unconditionally produced by the code under test, but the contents are not interesting for the test, use <ref refid="classgmx_1_1test_1_1NoContentsMatch" kindref="compound">NoContentsMatch</ref> as the matcher. Note that the existence of the output file is still verified. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.h" line="331" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.cpp" bodystart="347" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1CommandLineTestHelper_1a03dcf4f3e2400defe8eb88d99af452ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::CommandLineTestHelper::checkOutputFiles</definition>
        <argsstring>(TestReferenceChecker checker) const </argsstring>
        <name>checkOutputFiles</name>
        <param>
          <type><ref refid="classgmx_1_1test_1_1TestReferenceChecker" kindref="compound">TestReferenceChecker</ref></type>
          <declname>checker</declname>
        </param>
        <briefdescription>
<para>Checks output files added with <ref refid="classgmx_1_1test_1_1CommandLineTestHelper_1a4d9a0e1150be7ba9faea9522fc1bd274" kindref="member">setOutputFile()</ref> against reference data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>checker</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference data root location where the reference data is stored.</para></parameterdescription>
</parameteritem>
</parameterlist>
The file contents are tested verbatim, using direct string comparison. The text can be found verbatim in the reference data XML files for manual inspection.</para><para>Generates non-fatal test failures if some output file contents do not match the reference data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.h" line="349" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.cpp" bodystart="361" bodyend="375"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper class for tests that construct command lines that need to reference existing files. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal /> This class provides helper methods for:</para><para><orderedlist>
<listitem><para>Adding input files to a <ref refid="classgmx_1_1test_1_1CommandLine" kindref="compound">CommandLine</ref> instance by generating them from a string provided in the test (<ref refid="classgmx_1_1test_1_1CommandLineTestHelper_1a4e7a9dd4bbcd57f9554185b7c84aa022" kindref="member">setInputFileContents()</ref>).</para></listitem><listitem><para>Adding output files to a <ref refid="classgmx_1_1test_1_1CommandLine" kindref="compound">CommandLine</ref> instance (<ref refid="classgmx_1_1test_1_1CommandLineTestHelper_1a4d9a0e1150be7ba9faea9522fc1bd274" kindref="member">setOutputFile()</ref>).</para></listitem><listitem><para>Checking the contents of some of the output files using <ref refid="classgmx_1_1test_1_1TestReferenceData" kindref="compound">TestReferenceData</ref> (<ref refid="classgmx_1_1test_1_1CommandLineTestHelper_1a4d9a0e1150be7ba9faea9522fc1bd274" kindref="member">setOutputFile()</ref> and <ref refid="classgmx_1_1test_1_1CommandLineTestHelper_1a03dcf4f3e2400defe8eb88d99af452ec" kindref="member">checkOutputFiles()</ref>).</para></listitem><listitem><para>Static methods for easily executing command-line modules (various overloads of runModule()).</para></listitem></orderedlist>
</para><para>All files created during the test are cleaned up at the end of the test.</para><para>All methods can throw std::bad_alloc.</para><para><simplesect kind="see"><para><ref refid="classgmx_1_1test_1_1TestFileManager" kindref="compound">TestFileManager</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.h" line="220" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/cmdlinetest.h" bodystart="219" bodyend="355"/>
    <listofallmembers>
      <member refid="classgmx_1_1test_1_1CommandLineTestHelper_1a03dcf4f3e2400defe8eb88d99af452ec" prot="public" virt="non-virtual"><scope>gmx::test::CommandLineTestHelper</scope><name>checkOutputFiles</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestHelper_1aff6fd2523ae1245870bd5cff112859f9" prot="public" virt="non-virtual"><scope>gmx::test::CommandLineTestHelper</scope><name>CommandLineTestHelper</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestHelper_1a436ceaf727447d1624381f2e01c20e9f" prot="private" virt="non-virtual"><scope>gmx::test::CommandLineTestHelper</scope><name>impl_</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestHelper_1a53aa890fc717cc97b4c100464b4a9dad" prot="public" virt="non-virtual"><scope>gmx::test::CommandLineTestHelper</scope><name>runModuleDirect</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestHelper_1a552184baa5cad3cd9bf45c068a34fa11" prot="public" virt="non-virtual"><scope>gmx::test::CommandLineTestHelper</scope><name>runModuleDirect</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestHelper_1a31f8d02f226f3a79fa48c68bcfd24ada" prot="public" virt="non-virtual"><scope>gmx::test::CommandLineTestHelper</scope><name>runModuleFactory</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestHelper_1a4e7a9dd4bbcd57f9554185b7c84aa022" prot="public" virt="non-virtual"><scope>gmx::test::CommandLineTestHelper</scope><name>setInputFileContents</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestHelper_1a07778891c320be23549b34ebd90f3278" prot="public" virt="non-virtual"><scope>gmx::test::CommandLineTestHelper</scope><name>setInputFileContents</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestHelper_1a4d9a0e1150be7ba9faea9522fc1bd274" prot="public" virt="non-virtual"><scope>gmx::test::CommandLineTestHelper</scope><name>setOutputFile</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestHelper_1a27d92ff7ecc403ac99102dce89d0cf2f" prot="public" virt="non-virtual"><scope>gmx::test::CommandLineTestHelper</scope><name>setOutputFile</name></member>
      <member refid="classgmx_1_1test_1_1CommandLineTestHelper_1ad1032ba0f2088310e6579592877a3382" prot="public" virt="non-virtual"><scope>gmx::test::CommandLineTestHelper</scope><name>~CommandLineTestHelper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

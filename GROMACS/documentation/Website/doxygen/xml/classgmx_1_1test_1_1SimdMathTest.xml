<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1test_1_1SimdMathTest" kind="class" prot="public">
    <compoundname>gmx::test::SimdMathTest</compoundname>
    <basecompoundref refid="classgmx_1_1test_1_1SimdTest" prot="public" virt="non-virtual">gmx::test::SimdTest</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="group__module__simd_1gaeaec328d2c8d1608e316b6de425ec635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::testing::AssertionResult</type>
        <definition>testing::AssertionResult gmx::test::SimdMathTest::compareSimdMathFunction</definition>
        <argsstring>(const char *refFuncExpr, const char *simdFuncExpr, const char *denormalsToZeroExpr, real refFunc(real x), SimdReal gmx_simdcall simdFunc(SimdReal x), bool denormalsToZero)</argsstring>
        <name>compareSimdMathFunction</name>
        <param>
          <type>const char *</type>
          <declname>refFuncExpr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>simdFuncExpr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>denormalsToZeroExpr</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> </type>
          <declname>refFunc</declname>
          <array>real x</array>
        </param>
        <param>
          <type><ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref> gmx_simdcall </type>
          <declname>simdFunc</declname>
          <array>SimdReal x</array>
        </param>
        <param>
          <type>bool</type>
          <declname>denormalsToZero</declname>
        </param>
        <briefdescription>
<para>Implementation routine to compare SIMD vs reference functions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>refFuncExpr</parametername>
</parameternamelist>
<parameterdescription>
<para>Description of reference function expression </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>simdFuncExpr</parametername>
</parameternamelist>
<parameterdescription>
<para>Description of SIMD function expression </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>denormalsToZeroExpr</parametername>
</parameternamelist>
<parameterdescription>
<para>Description of denormal-to-zero setting </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>refFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference math function pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>simdFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>SIMD math function pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>denormalsToZero</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the function will consider denormal values equivalent to 0.0.</para></parameterdescription>
</parameteritem>
</parameterlist>
The function will be tested with the range and tolerances specified in the <ref refid="classgmx_1_1test_1_1SimdBaseTest" kindref="compound">SimdBaseTest</ref> class. You should not never call this function directly, but use the macro <ref refid="group__module__simd_1ga52e86f7ed302cc3025eec9b4c5021076" kindref="member">GMX_EXPECT_SIMD_FUNC_NEAR(refFunc,tstFunc)</ref> instead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd_math.cpp" line="69" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd_math.cpp" bodystart="111" bodyend="220"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3248">
        <label>gmx::test::SimdBaseTest</label>
        <link refid="classgmx_1_1test_1_1SimdBaseTest"/>
        <childnode refid="3249" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3246">
        <label>gmx::test::SimdMathTest</label>
        <link refid="classgmx_1_1test_1_1SimdMathTest"/>
        <childnode refid="3247" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3249">
        <label>Test</label>
      </node>
      <node id="3247">
        <label>gmx::test::SimdTest</label>
        <link refid="classgmx_1_1test_1_1SimdTest"/>
        <childnode refid="3248" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3252">
        <label>gmx::test::SimdBaseTest</label>
        <link refid="classgmx_1_1test_1_1SimdBaseTest"/>
        <childnode refid="3253" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3250">
        <label>gmx::test::SimdMathTest</label>
        <link refid="classgmx_1_1test_1_1SimdMathTest"/>
        <childnode refid="3251" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3253">
        <label>Test</label>
      </node>
      <node id="3251">
        <label>gmx::test::SimdTest</label>
        <link refid="classgmx_1_1test_1_1SimdTest"/>
        <childnode refid="3252" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd_math.cpp" line="66" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd_math.cpp" bodystart="65" bodyend="75"/>
    <listofallmembers>
      <member refid="classgmx_1_1test_1_1SimdBaseTest_1a67e1769c0ddf3a84103a1cd47f065bae" prot="protected" virt="non-virtual"><scope>gmx::test::SimdMathTest</scope><name>absTol_</name></member>
      <member refid="group__module__simd_1ga9248661b1f7bbea40e61887a2374218f" prot="public" virt="non-virtual"><scope>gmx::test::SimdMathTest</scope><name>compareSimdEq</name></member>
      <member refid="group__module__simd_1gae651e858d6d0caab1962a3d2548f0c71" prot="public" virt="non-virtual"><scope>gmx::test::SimdMathTest</scope><name>compareSimdEq</name></member>
      <member refid="group__module__simd_1gaeaec328d2c8d1608e316b6de425ec635" prot="public" virt="non-virtual"><scope>gmx::test::SimdMathTest</scope><name>compareSimdMathFunction</name></member>
      <member refid="group__module__simd_1ga001cf162308616c323787bc47a4bb0f3" prot="public" virt="non-virtual"><scope>gmx::test::SimdMathTest</scope><name>compareSimdRealUlp</name></member>
      <member refid="classgmx_1_1test_1_1SimdBaseTest_1a22fabd98b32ffe360fa267d8c0e6ac9d" prot="public" virt="non-virtual"><scope>gmx::test::SimdMathTest</scope><name>compareVectorEq</name></member>
      <member refid="group__module__simd_1ga44ad308730db9d832e68ee9864f83c21" prot="public" virt="non-virtual"><scope>gmx::test::SimdMathTest</scope><name>compareVectorRealUlp</name></member>
      <member refid="classgmx_1_1test_1_1SimdBaseTest_1a9d70ac319ae213a906f501b0fa63ed34" prot="protected" virt="non-virtual"><scope>gmx::test::SimdMathTest</scope><name>range_</name></member>
      <member refid="group__module__simd_1ga8a2a543330f7b970d26162dcdd99ee01" prot="public" virt="non-virtual"><scope>gmx::test::SimdMathTest</scope><name>s_nPoints</name></member>
      <member refid="classgmx_1_1test_1_1SimdBaseTest_1aba2dcd7ec0563e05aafd6c176fb286c4" prot="public" virt="non-virtual"><scope>gmx::test::SimdMathTest</scope><name>setAbsTol</name></member>
      <member refid="classgmx_1_1test_1_1SimdBaseTest_1a668d22ee1cb32b9bdd226f95479124f0" prot="public" virt="non-virtual"><scope>gmx::test::SimdMathTest</scope><name>setRange</name></member>
      <member refid="classgmx_1_1test_1_1SimdBaseTest_1a379ab155d44071bc98d3fd71b3b76449" prot="public" virt="non-virtual"><scope>gmx::test::SimdMathTest</scope><name>setUlpTol</name></member>
      <member refid="classgmx_1_1test_1_1SimdBaseTest_1a293b4002e1c6a4e9863c1f50994f694e" prot="public" virt="non-virtual"><scope>gmx::test::SimdMathTest</scope><name>SimdBaseTest</name></member>
      <member refid="classgmx_1_1test_1_1SimdBaseTest_1a9e2abac54e05356364ecdb0751e8665b" prot="protected" virt="non-virtual"><scope>gmx::test::SimdMathTest</scope><name>ulpTol_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

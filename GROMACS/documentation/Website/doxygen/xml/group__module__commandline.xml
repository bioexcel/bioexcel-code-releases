<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="group__module__commandline" kind="group">
    <compoundname>module_commandline</compoundname>
    <title>Command Line Program Management (commandline)</title>
    <innerfile refid="cmdlinehelpcontext_8cpp">cmdlinehelpcontext.cpp</innerfile>
    <innerfile refid="cmdlinehelpcontext_8h">cmdlinehelpcontext.h</innerfile>
    <innerfile refid="cmdlinehelpmodule_8cpp">cmdlinehelpmodule.cpp</innerfile>
    <innerfile refid="cmdlinehelpmodule_8h">cmdlinehelpmodule.h</innerfile>
    <innerfile refid="cmdlinehelpwriter_8cpp">cmdlinehelpwriter.cpp</innerfile>
    <innerfile refid="cmdlinehelpwriter_8h">cmdlinehelpwriter.h</innerfile>
    <innerfile refid="cmdlineinit_8cpp">cmdlineinit.cpp</innerfile>
    <innerfile refid="cmdlineinit_8h">cmdlineinit.h</innerfile>
    <innerfile refid="cmdlinemodule_8cpp">cmdlinemodule.cpp</innerfile>
    <innerfile refid="cmdlinemodule_8h">cmdlinemodule.h</innerfile>
    <innerfile refid="cmdlinemodulemanager-impl_8h">cmdlinemodulemanager-impl.h</innerfile>
    <innerfile refid="cmdlinemodulemanager_8cpp">cmdlinemodulemanager.cpp</innerfile>
    <innerfile refid="cmdlinemodulemanager_8h">cmdlinemodulemanager.h</innerfile>
    <innerfile refid="cmdlineoptionsmodule_8cpp">cmdlineoptionsmodule.cpp</innerfile>
    <innerfile refid="cmdlineoptionsmodule_8h">cmdlineoptionsmodule.h</innerfile>
    <innerfile refid="cmdlineparser_8cpp">cmdlineparser.cpp</innerfile>
    <innerfile refid="cmdlineparser_8h">cmdlineparser.h</innerfile>
    <innerfile refid="cmdlineprogramcontext_8cpp">cmdlineprogramcontext.cpp</innerfile>
    <innerfile refid="cmdlineprogramcontext_8h">cmdlineprogramcontext.h</innerfile>
    <innerfile refid="filenm_8h">filenm.h</innerfile>
    <innerfile refid="pargs_8h">pargs.h</innerfile>
    <innerfile refid="shellcompletions_8cpp">shellcompletions.cpp</innerfile>
    <innerfile refid="shellcompletions_8h">shellcompletions.h</innerfile>
    <innerfile refid="tests_2cmdlinehelpmodule_8cpp">cmdlinehelpmodule.cpp</innerfile>
    <innerfile refid="tests_2cmdlinehelpwriter_8cpp">cmdlinehelpwriter.cpp</innerfile>
    <innerfile refid="tests_2cmdlinemodulemanager_8cpp">cmdlinemodulemanager.cpp</innerfile>
    <innerfile refid="cmdlinemodulemanagertest_8cpp">cmdlinemodulemanagertest.cpp</innerfile>
    <innerfile refid="cmdlinemodulemanagertest_8h">cmdlinemodulemanagertest.h</innerfile>
    <innerfile refid="tests_2cmdlineparser_8cpp">cmdlineparser.cpp</innerfile>
    <innerfile refid="tests_2cmdlineprogramcontext_8cpp">cmdlineprogramcontext.cpp</innerfile>
    <innerfile refid="tests_2pargs_8cpp">pargs.cpp</innerfile>
    <innerfile refid="viewit_8h">viewit.h</innerfile>
    <innerfile refid="commandline_8h">commandline.h</innerfile>
    <innerclass refid="classgmx_1_1CommandLineHelpContext_1_1Impl" prot="public">gmx::CommandLineHelpContext::Impl</innerclass>
    <innerclass refid="classgmx_1_1CommandLineHelpContext" prot="public">gmx::CommandLineHelpContext</innerclass>
    <innerclass refid="classgmx_1_1anonymous__namespace_02cmdlinehelpmodule_8cpp_03_1_1RootHelpTopic" prot="public">gmx::anonymous_namespace{cmdlinehelpmodule.cpp}::RootHelpTopic</innerclass>
    <innerclass refid="classgmx_1_1anonymous__namespace_02cmdlinehelpmodule_8cpp_03_1_1IHelpExport" prot="public">gmx::anonymous_namespace{cmdlinehelpmodule.cpp}::IHelpExport</innerclass>
    <innerclass refid="classgmx_1_1anonymous__namespace_02cmdlinehelpmodule_8cpp_03_1_1CommandsHelpTopic" prot="public">gmx::anonymous_namespace{cmdlinehelpmodule.cpp}::CommandsHelpTopic</innerclass>
    <innerclass refid="classgmx_1_1anonymous__namespace_02cmdlinehelpmodule_8cpp_03_1_1ModuleHelpTopic" prot="public">gmx::anonymous_namespace{cmdlinehelpmodule.cpp}::ModuleHelpTopic</innerclass>
    <innerclass refid="classgmx_1_1anonymous__namespace_02cmdlinehelpmodule_8cpp_03_1_1HelpExportReStructuredText" prot="public">gmx::anonymous_namespace{cmdlinehelpmodule.cpp}::HelpExportReStructuredText</innerclass>
    <innerclass refid="classgmx_1_1anonymous__namespace_02cmdlinehelpmodule_8cpp_03_1_1HelpExportCompletion" prot="public">gmx::anonymous_namespace{cmdlinehelpmodule.cpp}::HelpExportCompletion</innerclass>
    <innerclass refid="classgmx_1_1CommandLineHelpModule" prot="public">gmx::CommandLineHelpModule</innerclass>
    <innerclass refid="classgmx_1_1anonymous__namespace_02cmdlinehelpwriter_8cpp_03_1_1IOptionsFormatter" prot="public">gmx::anonymous_namespace{cmdlinehelpwriter.cpp}::IOptionsFormatter</innerclass>
    <innerclass refid="classgmx_1_1anonymous__namespace_02cmdlinehelpwriter_8cpp_03_1_1OptionsFilter" prot="public">gmx::anonymous_namespace{cmdlinehelpwriter.cpp}::OptionsFilter</innerclass>
    <innerclass refid="classgmx_1_1anonymous__namespace_02cmdlinehelpwriter_8cpp_03_1_1CommonFormatterData" prot="public">gmx::anonymous_namespace{cmdlinehelpwriter.cpp}::CommonFormatterData</innerclass>
    <innerclass refid="classgmx_1_1anonymous__namespace_02cmdlinehelpwriter_8cpp_03_1_1SynopsisFormatter" prot="public">gmx::anonymous_namespace{cmdlinehelpwriter.cpp}::SynopsisFormatter</innerclass>
    <innerclass refid="classgmx_1_1anonymous__namespace_02cmdlinehelpwriter_8cpp_03_1_1OptionsListFormatter" prot="public">gmx::anonymous_namespace{cmdlinehelpwriter.cpp}::OptionsListFormatter</innerclass>
    <innerclass refid="classgmx_1_1CommandLineHelpWriter" prot="public">gmx::CommandLineHelpWriter</innerclass>
    <innerclass refid="classgmx_1_1CommandLineModuleSettings" prot="public">gmx::CommandLineModuleSettings</innerclass>
    <innerclass refid="classgmx_1_1ICommandLineModule" prot="public">gmx::ICommandLineModule</innerclass>
    <innerclass refid="classgmx_1_1CommandLineModuleGroupData" prot="public">gmx::CommandLineModuleGroupData</innerclass>
    <innerclass refid="classgmx_1_1CommandLineCommonOptionsHolder" prot="public">gmx::CommandLineCommonOptionsHolder</innerclass>
    <innerclass refid="classgmx_1_1anonymous__namespace_02cmdlinemodulemanager_8cpp_03_1_1CMainCommandLineModule" prot="public">gmx::anonymous_namespace{cmdlinemodulemanager.cpp}::CMainCommandLineModule</innerclass>
    <innerclass refid="classgmx_1_1CommandLineModuleManager" prot="public">gmx::CommandLineModuleManager</innerclass>
    <innerclass refid="classgmx_1_1CommandLineModuleGroup" prot="public">gmx::CommandLineModuleGroup</innerclass>
    <innerclass refid="classgmx_1_1ICommandLineOptionsModuleSettings" prot="public">gmx::ICommandLineOptionsModuleSettings</innerclass>
    <innerclass refid="classgmx_1_1ICommandLineOptionsModule" prot="public">gmx::ICommandLineOptionsModule</innerclass>
    <innerclass refid="classgmx_1_1CommandLineParser" prot="public">gmx::CommandLineParser</innerclass>
    <innerclass refid="classgmx_1_1anonymous__namespace_02cmdlineprogramcontext_8cpp_03_1_1DefaultExecutableEnvironment" prot="public">gmx::anonymous_namespace{cmdlineprogramcontext.cpp}::DefaultExecutableEnvironment</innerclass>
    <innerclass refid="classgmx_1_1IExecutableEnvironment" prot="public">gmx::IExecutableEnvironment</innerclass>
    <innerclass refid="classgmx_1_1CommandLineProgramContext" prot="public">gmx::CommandLineProgramContext</innerclass>
    <innerclass refid="structt__filenm" prot="public">t_filenm</innerclass>
    <innerclass refid="classgmx_1_1anonymous__namespace_02pargs_8cpp_03_1_1OptionsAdapter" prot="public">gmx::anonymous_namespace{pargs.cpp}::OptionsAdapter</innerclass>
    <innerclass refid="structt__pargs" prot="public">t_pargs</innerclass>
    <innerclass refid="classgmx_1_1test_1_1MockModule" prot="public">gmx::test::MockModule</innerclass>
    <innerclass refid="classgmx_1_1test_1_1MockOptionsModule" prot="public">gmx::test::MockOptionsModule</innerclass>
    <innerclass refid="classgmx_1_1test_1_1CommandLineModuleManagerTestBase" prot="public">gmx::test::CommandLineModuleManagerTestBase</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__module__commandline_1ga06fc87d81c62e9abb8790b6e5713c55b" prot="public" static="no">
        <name>@0</name>
        <enumvalue id="group__module__commandline_1gga06fc87d81c62e9abb8790b6e5713c55bae3483609ccd90d325454582c5cdab554" prot="public">
          <name>etINT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__module__commandline_1gga06fc87d81c62e9abb8790b6e5713c55ba36095543b621983063bc1c47b6a8fad1" prot="public">
          <name>etINT64</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__module__commandline_1gga06fc87d81c62e9abb8790b6e5713c55baa6b53a9a1634f8e46b1433eba84f0cb1" prot="public">
          <name>etREAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__module__commandline_1gga06fc87d81c62e9abb8790b6e5713c55bad237e6e36e4628b5087962ede9873a5b" prot="public">
          <name>etTIME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__module__commandline_1gga06fc87d81c62e9abb8790b6e5713c55ba0abb4bb4beb7364f119282b2228d6984" prot="public">
          <name>etSTR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__module__commandline_1gga06fc87d81c62e9abb8790b6e5713c55baedd9dc75df7db304ba2a626a4841b3cd" prot="public">
          <name>etBOOL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__module__commandline_1gga06fc87d81c62e9abb8790b6e5713c55ba090e6802c5ddba1598e54136c8f7f25a" prot="public">
          <name>etRVEC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__module__commandline_1gga06fc87d81c62e9abb8790b6e5713c55ba29e160da974f97015986506c06727218" prot="public">
          <name>etENUM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__module__commandline_1gga06fc87d81c62e9abb8790b6e5713c55ba948957f4a989f54875d2b88ee0be4eda" prot="public">
          <name>etNR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Command line argument type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="66" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="enum" id="group__module__commandline_1ga996baa646a1074569194ee226c23efae" prot="public" static="no">
        <name>ShellCompletionFormat</name>
        <enumvalue id="group__module__commandline_1gga996baa646a1074569194ee226c23efaead37d9ad080b97ba93b14096c95d722be" prot="public">
          <name>eShellCompletionFormat_Bash</name>
          <briefdescription>
<para>Shell completions for bash. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Output format for <ref refid="classgmx_1_1ShellCompletionWriter" kindref="compound">ShellCompletionWriter</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/shellcompletions.h" line="65" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/shellcompletions.h" bodystart="64" bodyend="67"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__module__commandline_1ga1f47492bbdb0412052613d0096a20c0b" prot="public" static="no">
        <type>std::map&lt; std::string, CommandLineModulePointer &gt;</type>
        <definition>typedef std::map&lt;std::string, CommandLineModulePointer&gt; gmx::CommandLineModuleMap</definition>
        <argsstring></argsstring>
        <name>CommandLineModuleMap</name>
        <briefdescription>
<para>Container type for mapping module names to module objects. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinemodulemanager-impl.h" line="64" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinemodulemanager-impl.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__module__commandline_1gadc9ea6aca3a54c2691284aa39cdd294d" prot="public" static="no">
        <type>std::unique_ptr&lt; CommandLineModuleGroupData &gt;</type>
        <definition>typedef std::unique_ptr&lt;CommandLineModuleGroupData&gt; gmx::CommandLineModuleGroupDataPointer</definition>
        <argsstring></argsstring>
        <name>CommandLineModuleGroupDataPointer</name>
        <briefdescription>
<para>Smart pointer type for managing a <ref refid="classgmx_1_1CommandLineModuleGroup" kindref="compound">CommandLineModuleGroup</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinemodulemanager-impl.h" line="131" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinemodulemanager-impl.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__module__commandline_1ga7098a58b563a17889eef62c80fae42bf" prot="public" static="no">
        <type>std::vector&lt; CommandLineModuleGroupDataPointer &gt;</type>
        <definition>typedef std::vector&lt;CommandLineModuleGroupDataPointer&gt; gmx::CommandLineModuleGroupList</definition>
        <argsstring></argsstring>
        <name>CommandLineModuleGroupList</name>
        <briefdescription>
<para>Container type for keeping a list of module groups. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinemodulemanager-impl.h" line="134" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinemodulemanager-impl.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__module__commandline_1ga92d17acbe7afad4effeda8d9be200305" prot="public" static="no">
        <type>std::unique_ptr&lt; ICommandLineModule &gt;</type>
        <definition>typedef std::unique_ptr&lt;ICommandLineModule&gt; gmx::CommandLineModulePointer</definition>
        <argsstring></argsstring>
        <name>CommandLineModulePointer</name>
        <briefdescription>
<para>Smart pointer type for managing a <ref refid="classgmx_1_1ICommandLineModule" kindref="compound">ICommandLineModule</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinemodulemanager.h" line="66" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinemodulemanager.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__module__commandline_1gac522eb6a6c382e39345834c796201098" prot="public" static="no">
        <type>std::unique_ptr&lt; IExecutableEnvironment &gt;</type>
        <definition>typedef std::unique_ptr&lt;IExecutableEnvironment&gt; gmx::ExecutableEnvironmentPointer</definition>
        <argsstring></argsstring>
        <name>ExecutableEnvironmentPointer</name>
        <briefdescription>
<para>Shorthand for a smart pointer to <ref refid="classgmx_1_1IExecutableEnvironment" kindref="compound">IExecutableEnvironment</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" line="93" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__module__commandline_1ga4689c083a58f103882739ede559ef5a0" prot="public" static="no" mutable="no">
        <type>const CommandLineHelpContext *</type>
        <definition>const CommandLineHelpContext* gmx::anonymous_namespace{cmdlinehelpcontext.cpp}::g_globalContext</definition>
        <argsstring></argsstring>
        <name>g_globalContext</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>Stores the global context set with <ref refid="classgmx_1_1GlobalCommandLineHelpContext" kindref="compound">GlobalCommandLineHelpContext</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This is not protected by a mutex, since it is only used in command-line start-up (i.e., single-threaded context), and is inherently not thread-safe. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpcontext.cpp" line="64" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpcontext.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__commandline_1ga10a7afe73ceecf07106a7f6927a556d8" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; CommandLineProgramContext &gt;</type>
        <definition>std::unique_ptr&lt;CommandLineProgramContext&gt; gmx::anonymous_namespace{cmdlineinit.cpp}::g_commandLineContext</definition>
        <argsstring></argsstring>
        <name>g_commandLineContext</name>
        <briefdescription>
<para>Global context instance initialized in <ref refid="group__module__commandline_1ga8c376f5f94bd1a63a3a97e288c4be50d" kindref="member">initForCommandLine()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineinit.cpp" line="73" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineinit.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__commandline_1ga33346910e95cbc4a08a74fb94c6ff741" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; DataFileFinder &gt;</type>
        <definition>std::unique_ptr&lt;DataFileFinder&gt; gmx::anonymous_namespace{cmdlineinit.cpp}::g_libFileFinder</definition>
        <argsstring></argsstring>
        <name>g_libFileFinder</name>
        <briefdescription>
<para>Global library data file finder that respects GMXLIB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineinit.cpp" line="75" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineinit.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__commandline_1gae009d421694b39470c699736d85acca0" prot="private" static="no" mutable="no">
        <type>PrivateImplPointer&lt; Impl &gt;</type>
        <definition>PrivateImplPointer&lt;Impl&gt; gmx::CommandLineProgramContext::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" line="216" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__module__commandline_1ga3c1fa775933b1b038506a2cafffd76e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::anonymous_namespace{cmdlinehelpmodule.cpp}::initProgramLinks</definition>
        <argsstring>(HelpLinks *links, const CommandLineHelpModuleImpl &amp;helpModule)</argsstring>
        <name>initProgramLinks</name>
        <param>
          <type>HelpLinks *</type>
          <declname>links</declname>
        </param>
        <param>
          <type>const CommandLineHelpModuleImpl &amp;</type>
          <declname>helpModule</declname>
        </param>
        <briefdescription>
<para>Adds hyperlinks to modules within this binary. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">links</parametername>
</parameternamelist>
<parameterdescription>
<para>Links are added here. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">helpModule</parametername>
</parameternamelist>
<parameterdescription>
<para>Help module to get module information from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory.</para></parameterdescription>
</parameteritem>
</parameterlist>
Initializes a <ref refid="classgmx_1_1HelpLinks" kindref="compound">HelpLinks</ref> object with links to modules defined in <computeroutput>helpModule</computeroutput>. </para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpmodule.cpp" line="490" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpmodule.cpp" bodystart="490" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga3ddcb033e8cd6b9c9f70781eb6881145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::anonymous_namespace{cmdlinehelpwriter.cpp}::formatOptionNameAndValue</definition>
        <argsstring>(const OptionInfo &amp;option, std::string *name, std::string *value)</argsstring>
        <name>formatOptionNameAndValue</name>
        <param>
          <type>const OptionInfo &amp;</type>
          <declname>option</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Formats option name and value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" line="224" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" bodystart="224" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga416bd3b633f1de53246abd19ea9c8626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gmx::anonymous_namespace{cmdlinehelpwriter.cpp}::defaultOptionValue</definition>
        <argsstring>(const OptionInfo &amp;option)</argsstring>
        <name>defaultOptionValue</name>
        <param>
          <type>const OptionInfo &amp;</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Formats the default option value as a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" line="251" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" bodystart="251" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga154ea0c7090cb0af81ce284fcec7a65a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gmx::anonymous_namespace{cmdlinehelpwriter.cpp}::fileOptionFlagsAsString</definition>
        <argsstring>(const FileNameOptionInfo &amp;option, bool bAbbrev)</argsstring>
        <name>fileOptionFlagsAsString</name>
        <param>
          <type>const FileNameOptionInfo &amp;</type>
          <declname>option</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bAbbrev</declname>
        </param>
        <briefdescription>
<para>Formats the flags for a file option as a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" line="258" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" bodystart="258" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gafaaf978f9092c4e61c8413eb51388ced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gmx::anonymous_namespace{cmdlinehelpwriter.cpp}::descriptionWithOptionDetails</definition>
        <argsstring>(const CommonFormatterData &amp;common, const OptionInfo &amp;option)</argsstring>
        <name>descriptionWithOptionDetails</name>
        <param>
          <type>const CommonFormatterData &amp;</type>
          <declname>common</declname>
        </param>
        <param>
          <type>const OptionInfo &amp;</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Formats the description for an option as a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" line="278" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" bodystart="278" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga0bfc2a36f954dd2a0a7a3c00300aa734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::anonymous_namespace{cmdlineinit.cpp}::broadcastArguments</definition>
        <argsstring>(int *argc, char ***argv)</argsstring>
        <name>broadcastArguments</name>
        <param>
          <type>int *</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Broadcasts command-line arguments to all ranks. </para>        </briefdescription>
        <detaileddescription>
<para>MPI does not ensure that command-line arguments would be passed on any other rank than zero, but our code wants to parse them on each rank separately. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineinit.cpp" line="84" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineinit.cpp" bodystart="84" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga8c376f5f94bd1a63a3a97e288c4be50d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CommandLineProgramContext &amp;</type>
        <definition>CommandLineProgramContext &amp; gmx::initForCommandLine</definition>
        <argsstring>(int *argc, char ***argv)</argsstring>
        <name>initForCommandLine</name>
        <param>
          <type>int *</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Initializes the GROMACS library for command-line use. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">argc</parametername>
</parameternamelist>
<parameterdescription>
<para>argc value passed to <ref refid="test__selection_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main()</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">argv</parametername>
</parameternamelist>
<parameterdescription>
<para>argv array passed to <ref refid="test__selection_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main()</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to initialized program context object.</para></simplesect>
This function is tailored for use in command line applications. For other usage, combination of <ref refid="group__module__utility_1gae00d174a8ddd5325460d74dc663711c0" kindref="member">gmx::init()</ref> and <ref refid="group__module__utility_1ga2cf34635c815cc712b6291c2c8da2555" kindref="member">gmx::setProgramContext()</ref> provides more flexible initialization alternatives. Unlike <ref refid="group__module__utility_1gae00d174a8ddd5325460d74dc663711c0" kindref="member">gmx::init()</ref>, calls to this method cannot be nested.</para><para>The command line arguments are communicated so that they can be parsed on each processor. <computeroutput>argc</computeroutput> and <computeroutput>argv</computeroutput> are passed to <ref refid="group__module__utility_1gae00d174a8ddd5325460d74dc663711c0" kindref="member">gmx::init()</ref>; see there for additional discussion. This method does not place any additional limitations, but generally there should be no need to pass NULL values.</para><para>Does not throw. Terminates the program on out-of-memory error.</para><para>This method is not thread-safe, since it is intended to be the first method called. See <ref refid="group__module__utility_1ga2cf34635c815cc712b6291c2c8da2555" kindref="member">setProgramContext()</ref> for additional discussion.</para><para><simplesect kind="see"><para><ref refid="group__module__utility_1gae00d174a8ddd5325460d74dc663711c0" kindref="member">gmx::init()</ref> </para><simplesectsep/><para><ref refid="group__module__utility_1ga2cf34635c815cc712b6291c2c8da2555" kindref="member">setProgramContext()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineinit.cpp" line="117" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineinit.cpp" bodystart="117" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga49311a4a4e3f3ec07a9ae925fb63151f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::finalizeForCommandLine</definition>
        <argsstring>()</argsstring>
        <name>finalizeForCommandLine</name>
        <briefdescription>
<para>Deinitializes the GROMACS library after <ref refid="group__module__commandline_1ga8c376f5f94bd1a63a3a97e288c4be50d" kindref="member">initForCommandLine()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Calls <ref refid="group__module__utility_1gaa0a90b2770cb4b69e16229daa271a1af" kindref="member">gmx::finalize()</ref> and additionally undoes the work done by <ref refid="group__module__commandline_1ga8c376f5f94bd1a63a3a97e288c4be50d" kindref="member">initForCommandLine()</ref>.</para><para><simplesect kind="see"><para><ref refid="group__module__utility_1gaa0a90b2770cb4b69e16229daa271a1af" kindref="member">gmx::finalize()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineinit.cpp" line="141" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineinit.cpp" bodystart="141" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gaf25f64b0a1dde1a8e6774f93e0bae0e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::writeCommandLineHelpCMain</definition>
        <argsstring>(const CommandLineHelpContext &amp;context, const char *name, int(*mainFunction)(int argc, char *argv[]))</argsstring>
        <name>writeCommandLineHelpCMain</name>
        <param>
          <type>const CommandLineHelpContext &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int(*)(int argc, char *argv[])</type>
          <declname>mainFunction</declname>
        </param>
        <briefdescription>
<para>Helper to implement <ref refid="classgmx_1_1ICommandLineModule_1a947eea9c2e648aa837d385fcbe01c1bd" kindref="member">ICommandLineModule::writeHelp()</ref> with a C-like <ref refid="test__selection_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main()</ref> function that calls <ref refid="group__module__commandline_1ga5140c89919960e8e1e218a5b0d881cd5" kindref="member">parse_common_args()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context object for writing the help. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the module. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mainFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>C-like <ref refid="test__selection_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main()</ref> function that calls <ref refid="group__module__commandline_1ga5140c89919960e8e1e218a5b0d881cd5" kindref="member">parse_common_args()</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinemodule.cpp" line="79" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinemodule.cpp" bodystart="79" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga76aea6d15d47658948021b0237d7dcc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gmx::anonymous_namespace{cmdlineprogramcontext.cpp}::quoteIfNecessary</definition>
        <argsstring>(const char *str)</argsstring>
        <name>quoteIfNecessary</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Quotes a string if it contains spaces. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" line="76" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" bodystart="76" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga304b861051e2dbc5acf0e93d5f6a2e77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gmx::anonymous_namespace{cmdlineprogramcontext.cpp}::findFullBinaryPath</definition>
        <argsstring>(const std::string &amp;invokedName, const IExecutableEnvironment &amp;env)</argsstring>
        <name>findFullBinaryPath</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>invokedName</declname>
        </param>
        <param>
          <type>const IExecutableEnvironment &amp;</type>
          <declname>env</declname>
        </param>
        <briefdescription>
<para>Finds the absolute path of the binary from <computeroutput>argv</computeroutput>[0]. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">invokedName</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>argv</computeroutput>[0] the binary was invoked with. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">env</parametername>
</parameternamelist>
<parameterdescription>
<para>Executable environment. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The full path of the binary.</para></simplesect>
If a binary with the given name cannot be located, <computeroutput>invokedName</computeroutput> is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" line="129" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" bodystart="129" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gad07ea94ff9a375025a6305c09e6a8630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::anonymous_namespace{cmdlineprogramcontext.cpp}::isAcceptableLibraryPath</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>isAcceptableLibraryPath</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Returns whether given path contains files from <computeroutput>share/top/</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Only checks for a single file that has an uncommon enough name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" line="172" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gaf409a26191c220f2e8a312b24e5b95a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::anonymous_namespace{cmdlineprogramcontext.cpp}::isAcceptableLibraryPathPrefix</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>isAcceptableLibraryPathPrefix</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Returns whether given path prefix contains files from <computeroutput>share/top/</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> prefix to check. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>path</computeroutput> contains the data files.</para></simplesect>
Checks whether <computeroutput>path</computeroutput> could be the installation prefix where <computeroutput>share/top/</computeroutput> files have been installed: appends the relative installation path of the data files and calls <ref refid="group__module__commandline_1gad07ea94ff9a375025a6305c09e6a8630" kindref="member">isAcceptableLibraryPath()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" line="187" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" bodystart="187" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga1f9147fe32579a8337aefbd852974cf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gmx::anonymous_namespace{cmdlineprogramcontext.cpp}::findFallbackInstallationPrefixPath</definition>
        <argsstring>()</argsstring>
        <name>findFallbackInstallationPrefixPath</name>
        <briefdescription>
<para>Returns a fallback installation prefix path. </para>        </briefdescription>
        <detaileddescription>
<para>Checks a few standard locations for the data files before returning a configure-time hard-coded path. The hard-coded path is preferred if it actually contains the data files, though. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" line="204" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" bodystart="204" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga3646677841300ae1be7d7482d916da02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gmx::anonymous_namespace{cmdlineprogramcontext.cpp}::findInstallationPrefixPath</definition>
        <argsstring>(const std::string &amp;binaryPath, bool *bSourceLayout)</argsstring>
        <name>findInstallationPrefixPath</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>binaryPath</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>bSourceLayout</declname>
        </param>
        <briefdescription>
<para>Generic function to find data files based on path of the binary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">binaryPath</parametername>
</parameternamelist>
<parameterdescription>
<para>Absolute path to the binary. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">bSourceLayout</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to <computeroutput>true</computeroutput> if the binary is run from the build tree and the original source directory can be found. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> to the <computeroutput>share/top/</computeroutput> data files.</para></simplesect>
The search based on the path only works if the binary is in the same relative path as the installed GROMACS binaries. If the binary is somewhere else, a hard-coded fallback is used. This doesn&apos;t work if the binaries are somewhere else than the path given during configure time...</para><para>Extra logic is present to allow running binaries from the build tree such that they use up-to-date data files from the source tree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" line="242" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" bodystart="242" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga2fed0446037403aed03c8bab1dcc2483" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual gmx::IExecutableEnvironment::~IExecutableEnvironment</definition>
        <argsstring>()</argsstring>
        <name>~IExecutableEnvironment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" line="77" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gab9c547a4645239997097eadde2931008" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string gmx::IExecutableEnvironment::getWorkingDirectory</definition>
        <argsstring>() const =0</argsstring>
        <name>getWorkingDirectory</name>
        <reimplementedby refid="classanonymous__namespace_02cmdlineprogramcontext_8cpp_03_1_1TestExecutableEnvironment_1af4a794d54890a60c8fcf8ee79a5b6948">getWorkingDirectory</reimplementedby>
        <reimplementedby refid="classgmx_1_1anonymous__namespace_02cmdlineprogramcontext_8cpp_03_1_1DefaultExecutableEnvironment_1a3a27fbe17c2ccc4c96e68d2e7513ca13">getWorkingDirectory</reimplementedby>
        <briefdescription>
<para>Returns the working directory when the program was launched. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga260d919d3caa2962abe4481dd9b3a62a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>virtual std::vector&lt;std::string&gt; gmx::IExecutableEnvironment::getExecutablePaths</definition>
        <argsstring>() const =0</argsstring>
        <name>getExecutablePaths</name>
        <reimplementedby refid="classanonymous__namespace_02cmdlineprogramcontext_8cpp_03_1_1TestExecutableEnvironment_1ac43b5923d68e4808c2de8449d8a1a1a3">getExecutablePaths</reimplementedby>
        <reimplementedby refid="classgmx_1_1anonymous__namespace_02cmdlineprogramcontext_8cpp_03_1_1DefaultExecutableEnvironment_1a76021439132334e1781d4266de52d24c">getExecutablePaths</reimplementedby>
        <briefdescription>
<para>Returns list of paths where executables are searched for. </para>        </briefdescription>
        <detaileddescription>
<para>The returned list should be in priority order. An empty string in the returned list corresponds to getWorkindDirectory(). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gaa1e5312c47534788a14090c55b7dbc0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::CommandLineProgramContext::CommandLineProgramContext</definition>
        <argsstring>()</argsstring>
        <name>CommandLineProgramContext</name>
        <briefdescription>
<para>Constructs an empty context object. </para>        </briefdescription>
        <detaileddescription>
<para>All methods in the constructed object return dummy values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" line="118" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" bodystart="361" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga18e39255f8afcf4b4c2530fc4a0b1ad7" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::CommandLineProgramContext::CommandLineProgramContext</definition>
        <argsstring>(const char *binaryName)</argsstring>
        <name>CommandLineProgramContext</name>
        <param>
          <type>const char *</type>
          <declname>binaryName</declname>
        </param>
        <briefdescription>
<para>Initializes a program context object with binary name only. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">binaryName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the binary.</para></parameterdescription>
</parameteritem>
</parameterlist>
This is needed for unit testing purposes. The constructed object works as if the command line consisted of only of the binary name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" line="128" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" bodystart="366" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga513a07555560450ca0d98e090cfceada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::CommandLineProgramContext::CommandLineProgramContext</definition>
        <argsstring>(int argc, const char *const argv[])</argsstring>
        <name>CommandLineProgramContext</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const char *const</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Initializes a program context object based on command line. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">argc</parametername>
</parameternamelist>
<parameterdescription>
<para>argc value passed to <ref refid="test__selection_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main()</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">argv</parametername>
</parameternamelist>
<parameterdescription>
<para>argv array passed to <ref refid="test__selection_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main()</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" line="135" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" bodystart="371" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga8119d76767f82520df037d50330017cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::CommandLineProgramContext::CommandLineProgramContext</definition>
        <argsstring>(int argc, const char *const argv[], ExecutableEnvironmentPointer env)</argsstring>
        <name>CommandLineProgramContext</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const char *const</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <param>
          <type>ExecutableEnvironmentPointer</type>
          <declname>env</declname>
        </param>
        <briefdescription>
<para>Initializes a program context object based on command line. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">argc</parametername>
</parameternamelist>
<parameterdescription>
<para>argc value passed to <ref refid="test__selection_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main()</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">argv</parametername>
</parameternamelist>
<parameterdescription>
<para>argv array passed to <ref refid="test__selection_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main()</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">env</parametername>
</parameternamelist>
<parameterdescription>
<para>Customizes the way the binary name is handled.</para></parameterdescription>
</parameteritem>
</parameterlist>
This overload allows one to customize the way the binary is located by providing a custom <ref refid="classgmx_1_1IExecutableEnvironment" kindref="compound">IExecutableEnvironment</ref> implementation. This is mainly useful for testing purposes to make it possible to test different paths without setting environment variables, changing the working directory or doing other process-wide operations. It may also be useful for making Gromacs behave better when linked into a non-Gromacs executable (with possible extensions in <ref refid="classgmx_1_1IExecutableEnvironment" kindref="compound">IExecutableEnvironment</ref>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" line="152" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" bodystart="377" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gad28b3b7dd9373039162997fcccbfa732" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>gmx::CommandLineProgramContext::~CommandLineProgramContext</definition>
        <argsstring>()</argsstring>
        <name>~CommandLineProgramContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" line="154" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" bodystart="383" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga6cb367921f318985d9c8b369e36060d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::CommandLineProgramContext::setDisplayName</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>setDisplayName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Sets a display name for the binary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory.</para></parameterdescription>
</parameteritem>
</parameterlist>
This is used with the wrapper binary to add the name of the invoked module to the name of the binary shown.</para><para>It is not threadsafe if there are concurrent calls to <ref refid="group__module__commandline_1gad4a598a1052ae416d05ce25e516dfd2e" kindref="member">displayName()</ref> before this method has returned. Thread safety is not required for the normal initialization sequence of command line programs; it is called in the wrapper binary before the control passes to the actual module which may create threads. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" line="170" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" bodystart="387" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gaeab3d8df1129225a277449eae8fe3340" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const char *</type>
        <definition>const char * gmx::CommandLineProgramContext::programName</definition>
        <argsstring>() const </argsstring>
        <name>programName</name>
        <reimplements refid="classgmx_1_1IProgramContext_1a26af3ba471321756753297d624c21d0d">programName</reimplements>
        <briefdescription>
<para>Returns the name of the binary as it was invoked without any path. </para>        </briefdescription>
        <detaileddescription>
<para>Does not throw. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" line="177" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" bodystart="394" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gad4a598a1052ae416d05ce25e516dfd2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const char *</type>
        <definition>const char * gmx::CommandLineProgramContext::displayName</definition>
        <argsstring>() const </argsstring>
        <name>displayName</name>
        <reimplements refid="classgmx_1_1IProgramContext_1a66ba95d75a6eefd4cc76b677130a48eb">displayName</reimplements>
        <briefdescription>
<para>Returns a display name of the current module. </para>        </briefdescription>
        <detaileddescription>
<para>The returned value equals <ref refid="group__module__commandline_1gaeab3d8df1129225a277449eae8fe3340" kindref="member">programName()</ref>, unless a separate display name has been set with <ref refid="group__module__commandline_1ga6cb367921f318985d9c8b369e36060d2" kindref="member">setDisplayName()</ref>.</para><para>Does not throw. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" line="186" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" bodystart="399" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga5957348c4bc5a91748e16a84625d5c84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const char *</type>
        <definition>const char * gmx::CommandLineProgramContext::fullBinaryPath</definition>
        <argsstring>() const </argsstring>
        <name>fullBinaryPath</name>
        <reimplements refid="classgmx_1_1IProgramContext_1afaca282ab5e0bc99c6da555c0c7f4434">fullBinaryPath</reimplements>
        <briefdescription>
<para>Returns the full path of the running binary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tMPI::system_error</parametername>
</parameternamelist>
<parameterdescription>
<para>on thread synchronization errors.</para></parameterdescription>
</parameteritem>
</parameterlist>
Returns argv[0] if there was an error in finding the absolute path. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" line="195" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" bodystart="411" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga04d4684f9c807f5f191a53477a85646d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>InstallationPrefixInfo</type>
        <definition>InstallationPrefixInfo gmx::CommandLineProgramContext::installationPrefix</definition>
        <argsstring>() const </argsstring>
        <name>installationPrefix</name>
        <reimplements refid="classgmx_1_1IProgramContext_1ada732144a05c8faa224b5ad0d904df6f">installationPrefix</reimplements>
        <briefdescription>
<para>Returns the installation prefix (for finding GROMACS data files). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tMPI::system_error</parametername>
</parameternamelist>
<parameterdescription>
<para>on thread synchronization errors.</para></parameterdescription>
</parameteritem>
</parameterlist>
Returns a hardcoded path set during configuration time if there is an error in finding the library data files. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" line="205" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" bodystart="418" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gaf923ae4442dffcada736934cb5c73dbb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const char *</type>
        <definition>const char * gmx::CommandLineProgramContext::commandLine</definition>
        <argsstring>() const </argsstring>
        <name>commandLine</name>
        <reimplements refid="classgmx_1_1IProgramContext_1a2512c75e34337df80e3a1e994d17a8cc">commandLine</reimplements>
        <briefdescription>
<para>Returns the full command line used to invoke the binary. </para>        </briefdescription>
        <detaileddescription>
<para>Does not throw. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.h" line="211" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlineprogramcontext.cpp" bodystart="406" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gaceda5669e2fd4abf13b12d25327f80cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* opt2fn</definition>
        <argsstring>(const char *opt, int nfile, const t_filenm fnm[])</argsstring>
        <name>opt2fn</name>
        <param>
          <type>const char *</type>
          <declname>opt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nfile</declname>
        </param>
        <param>
          <type>const <ref refid="structt__filenm" kindref="compound">t_filenm</ref></type>
          <declname>fnm</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Returns the filename belonging to cmd-line option opt, or NULL when no such option. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="107" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.cpp" bodystart="68" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga4d7edc8da01e211a7963908036e805af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int opt2fns</definition>
        <argsstring>(char **fns[], const char *opt, int nfile, const t_filenm fnm[])</argsstring>
        <name>opt2fns</name>
        <param>
          <type>char **</type>
          <declname>fns</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const char *</type>
          <declname>opt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nfile</declname>
        </param>
        <param>
          <type>const <ref refid="structt__filenm" kindref="compound">t_filenm</ref></type>
          <declname>fnm</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Returns the filenames belonging to cmd-line option opt, or NULL when no such option. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="113" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.cpp" bodystart="85" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gaf2ee3f91ad7b63f0a5ab47b2b19c919d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structt__filenm" kindref="compound">t_filenm</ref> *</type>
        <definition>const t_filenm* getFilenm</definition>
        <argsstring>(const char *opt, int nfile, const t_filenm fnm[])</argsstring>
        <name>getFilenm</name>
        <param>
          <type>const char *</type>
          <declname>opt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nfile</declname>
        </param>
        <param>
          <type>const <ref refid="structt__filenm" kindref="compound">t_filenm</ref></type>
          <declname>fnm</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Return a pointer to the <ref refid="structt__filenm" kindref="compound">t_filenm</ref> data structure of filenames belonging to command-line option opt, or NULL when no such option was used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="120" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.cpp" bodystart="53" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gab30cf06ad824963bae14691400b3b1cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ftp2fn</definition>
        <argsstring>(int ftp, int nfile, const t_filenm fnm[])</argsstring>
        <name>ftp2fn</name>
        <param>
          <type>int</type>
          <declname>ftp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nfile</declname>
        </param>
        <param>
          <type>const <ref refid="structt__filenm" kindref="compound">t_filenm</ref></type>
          <declname>fnm</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Returns the first file name with type ftp, or NULL when none found. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="126" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.cpp" bodystart="102" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gad92c14b4fbae5c01d441fe4011f94bdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ftp2fns</definition>
        <argsstring>(char **fns[], int ftp, int nfile, const t_filenm fnm[])</argsstring>
        <name>ftp2fns</name>
        <param>
          <type>char **</type>
          <declname>fns</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>ftp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nfile</declname>
        </param>
        <param>
          <type>const <ref refid="structt__filenm" kindref="compound">t_filenm</ref></type>
          <declname>fnm</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Returns the number of files for the first option with type ftp and the files in **fns[] (will be allocated), or NULL when none found. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="132" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.cpp" bodystart="118" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gacd355c9cce678c9fa0089ee393ee17f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
        <definition>gmx_bool ftp2bSet</definition>
        <argsstring>(int ftp, int nfile, const t_filenm fnm[])</argsstring>
        <name>ftp2bSet</name>
        <param>
          <type>int</type>
          <declname>ftp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nfile</declname>
        </param>
        <param>
          <type>const <ref refid="structt__filenm" kindref="compound">t_filenm</ref></type>
          <declname>fnm</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Returns TRUE when this file type has been found on the cmd-line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="138" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.cpp" bodystart="135" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga71a0200008ec51b9db8de5c9df6d7570" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
        <definition>gmx_bool opt2bSet</definition>
        <argsstring>(const char *opt, int nfile, const t_filenm fnm[])</argsstring>
        <name>opt2bSet</name>
        <param>
          <type>const char *</type>
          <declname>opt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nfile</declname>
        </param>
        <param>
          <type>const <ref refid="structt__filenm" kindref="compound">t_filenm</ref></type>
          <declname>fnm</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Returns TRUE when this option has been found on the cmd-line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="141" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.cpp" bodystart="152" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga28f02ef4f34a2db676adb221eff7b100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* opt2fn_null</definition>
        <argsstring>(const char *opt, int nfile, const t_filenm fnm[])</argsstring>
        <name>opt2fn_null</name>
        <param>
          <type>const char *</type>
          <declname>opt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nfile</declname>
        </param>
        <param>
          <type>const <ref refid="structt__filenm" kindref="compound">t_filenm</ref></type>
          <declname>fnm</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Returns the file name belonging top cmd-line option opt, or NULL when no such option. </para>        </briefdescription>
        <detaileddescription>
<para>Also return NULL when opt is optional and option is not set. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="149" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.cpp" bodystart="169" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga874faae93dcc497c9160b068a68c879c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ftp2fn_null</definition>
        <argsstring>(int ftp, int nfile, const t_filenm fnm[])</argsstring>
        <name>ftp2fn_null</name>
        <param>
          <type>int</type>
          <declname>ftp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nfile</declname>
        </param>
        <param>
          <type>const <ref refid="structt__filenm" kindref="compound">t_filenm</ref></type>
          <declname>fnm</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Returns the first file name with type ftp, or NULL when none found. </para>        </briefdescription>
        <detaileddescription>
<para>Also return NULL when ftp is optional and option is not set. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="156" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.cpp" bodystart="191" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga71bb042a7e65c318aa23d4864f01a192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
        <definition>gmx_bool is_optional</definition>
        <argsstring>(const t_filenm *fnm)</argsstring>
        <name>is_optional</name>
        <param>
          <type>const <ref refid="structt__filenm" kindref="compound">t_filenm</ref> *</type>
          <declname>fnm</declname>
        </param>
        <briefdescription>
<para>Returns whether or not this filenm is optional. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="159" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.cpp" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga735e0e7269de8a54bdad84e93b49f774" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
        <definition>gmx_bool is_output</definition>
        <argsstring>(const t_filenm *fnm)</argsstring>
        <name>is_output</name>
        <param>
          <type>const <ref refid="structt__filenm" kindref="compound">t_filenm</ref> *</type>
          <declname>fnm</declname>
        </param>
        <briefdescription>
<para>Returns whether or not this filenm is output. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="162" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.cpp" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gad19c3f0a0ae3e9352189882b993d3fa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
        <definition>gmx_bool is_set</definition>
        <argsstring>(const t_filenm *fnm)</argsstring>
        <name>is_set</name>
        <param>
          <type>const <ref refid="structt__filenm" kindref="compound">t_filenm</ref> *</type>
          <declname>fnm</declname>
        </param>
        <briefdescription>
<para>Returns whether or not this filenm is set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="165" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.cpp" bodystart="223" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gaf48efa6fc3e0ba73fcca2634b991d481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int add_suffix_to_output_names</definition>
        <argsstring>(t_filenm *fnm, int nfile, const char *suffix)</argsstring>
        <name>add_suffix_to_output_names</name>
        <param>
          <type><ref refid="structt__filenm" kindref="compound">t_filenm</ref> *</type>
          <declname>fnm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nfile</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>suffix</declname>
        </param>
        <briefdescription>
<para>When we do checkpointing, this routine is called to check for previous output files and append a &apos;.partNNNN&apos; suffix before the (output) file extensions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="171" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.cpp" bodystart="228" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga25e56055d288f5fe5959b8e9c92f66ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structt__filenm" kindref="compound">t_filenm</ref> *</type>
        <definition>t_filenm* dup_tfn</definition>
        <argsstring>(int nf, const t_filenm tfn[])</argsstring>
        <name>dup_tfn</name>
        <param>
          <type>int</type>
          <declname>nf</declname>
        </param>
        <param>
          <type>const <ref refid="structt__filenm" kindref="compound">t_filenm</ref></type>
          <declname>tfn</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Duplicates the filename list (to make a private copy for each thread, for example). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="177" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.cpp" bodystart="254" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gaaf278fa5c4743f67e729d22ecb540bd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void done_filenms</definition>
        <argsstring>(int nf, t_filenm fnm[])</argsstring>
        <name>done_filenms</name>
        <param>
          <type>int</type>
          <declname>nf</declname>
        </param>
        <param>
          <type><ref refid="structt__filenm" kindref="compound">t_filenm</ref></type>
          <declname>fnm</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Frees memory allocated for file names by <ref refid="group__module__commandline_1ga5140c89919960e8e1e218a5b0d881cd5" kindref="member">parse_common_args()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="180" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.cpp" bodystart="293" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga6a0c7a94ac731a8c08957d1e2422b562" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx::anonymous_namespace{pargs.cpp}::getDefaultXvgFormat</definition>
        <argsstring>(gmx::ArrayRef&lt; const char *const  &gt; xvgFormats)</argsstring>
        <name>getDefaultXvgFormat</name>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">gmx::ArrayRef</ref>&lt; const char *const  &gt;</type>
          <declname>xvgFormats</declname>
        </param>
        <briefdescription>
<para>Returns the index of the default xvg format. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.cpp" line="204" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.cpp" bodystart="204" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga0a74f7c7945af63c38f88e41b4313d58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nenum</definition>
        <argsstring>(const char *const enumc[])</argsstring>
        <name>nenum</name>
        <param>
          <type>const char *const</type>
          <declname>enumc</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Returns ordinal number for an etENUM argument. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">enumc</parametername>
</parameternamelist>
<parameterdescription>
<para>Array passed to <computeroutput><ref refid="structt__pargs" kindref="compound">t_pargs</ref></computeroutput> for an etENUM argument. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Index of selected enum value in the array.</para></simplesect>
See t_pargs::u::c for the expected format of the array, including how the first element should be initialized. Note that the return value starts at one instead of zero: if the first enum value is selected, this returns 1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="144" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.cpp" bodystart="73" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga2ab323b1fe839d8675911091bcf7cf26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int opt2parg_int</definition>
        <argsstring>(const char *option, int nparg, t_pargs pa[])</argsstring>
        <name>opt2parg_int</name>
        <param>
          <type>const char *</type>
          <declname>option</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nparg</declname>
        </param>
        <param>
          <type><ref refid="structt__pargs" kindref="compound">t_pargs</ref></type>
          <declname>pa</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Returns value of an etINT option. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of etINT argument to query. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nparg</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in <computeroutput>pa</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pa</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of arguments. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of <computeroutput>option</computeroutput>.</para></simplesect>
<computeroutput>option</computeroutput> must specify a valid argument in <computeroutput>pa</computeroutput> of the correct type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="156" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.cpp" bodystart="87" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga5b473004c09d447e281c1c818b4bce9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
        <definition>gmx_bool opt2parg_bool</definition>
        <argsstring>(const char *option, int nparg, t_pargs pa[])</argsstring>
        <name>opt2parg_bool</name>
        <param>
          <type>const char *</type>
          <declname>option</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nparg</declname>
        </param>
        <param>
          <type><ref refid="structt__pargs" kindref="compound">t_pargs</ref></type>
          <declname>pa</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Returns value of an etBOOL option. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of etBOOL argument to query. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nparg</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in <computeroutput>pa</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pa</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of arguments. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of <computeroutput>option</computeroutput>.</para></simplesect>
<computeroutput>option</computeroutput> must specify a valid argument in <computeroutput>pa</computeroutput> of the correct type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="168" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.cpp" bodystart="104" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gae89406e3a37c9f5ef580a3362fce2cd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>real opt2parg_real</definition>
        <argsstring>(const char *option, int nparg, t_pargs pa[])</argsstring>
        <name>opt2parg_real</name>
        <param>
          <type>const char *</type>
          <declname>option</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nparg</declname>
        </param>
        <param>
          <type><ref refid="structt__pargs" kindref="compound">t_pargs</ref></type>
          <declname>pa</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Returns value of an etREAL/etTIME option. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of etREAL/etTIME argument to query. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nparg</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in <computeroutput>pa</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pa</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of arguments. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of <computeroutput>option</computeroutput>.</para></simplesect>
<computeroutput>option</computeroutput> must specify a valid argument in <computeroutput>pa</computeroutput> of the correct type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="180" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.cpp" bodystart="121" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gad273bdbe4bec307803f2e61894d5b539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* opt2parg_str</definition>
        <argsstring>(const char *option, int nparg, t_pargs pa[])</argsstring>
        <name>opt2parg_str</name>
        <param>
          <type>const char *</type>
          <declname>option</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nparg</declname>
        </param>
        <param>
          <type><ref refid="structt__pargs" kindref="compound">t_pargs</ref></type>
          <declname>pa</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Returns value of an etSTR option. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of etSTR argument to query. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nparg</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in <computeroutput>pa</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pa</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of arguments. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of <computeroutput>option</computeroutput>.</para></simplesect>
<computeroutput>option</computeroutput> must specify a valid argument in <computeroutput>pa</computeroutput> of the correct type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="192" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.cpp" bodystart="138" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gafd636cecffc7c0e215497b35ec32de92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* opt2parg_enum</definition>
        <argsstring>(const char *option, int nparg, t_pargs pa[])</argsstring>
        <name>opt2parg_enum</name>
        <param>
          <type>const char *</type>
          <declname>option</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nparg</declname>
        </param>
        <param>
          <type><ref refid="structt__pargs" kindref="compound">t_pargs</ref></type>
          <declname>pa</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Returns value of an etENUM option. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of etENUM argument to query. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nparg</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in <computeroutput>pa</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pa</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of arguments. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of <computeroutput>option</computeroutput>.</para></simplesect>
<computeroutput>option</computeroutput> must specify a valid argument in <computeroutput>pa</computeroutput> of the correct type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="204" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.cpp" bodystart="172" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga034da57ae2e4bc74eba89e0fe4f93723" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
        <definition>gmx_bool opt2parg_bSet</definition>
        <argsstring>(const char *option, int nparg, const t_pargs *pa)</argsstring>
        <name>opt2parg_bSet</name>
        <param>
          <type>const char *</type>
          <declname>option</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nparg</declname>
        </param>
        <param>
          <type>const <ref refid="structt__pargs" kindref="compound">t_pargs</ref> *</type>
          <declname>pa</declname>
        </param>
        <briefdescription>
<para>Returns whether an argument has been set. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">option</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of argument to check. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nparg</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in <computeroutput>pa</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pa</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of arguments. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if <computeroutput>option</computeroutput> has been set.</para></simplesect>
<computeroutput>option</computeroutput> must specify a valid argument in <computeroutput>pa</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="216" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.cpp" bodystart="155" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga5140c89919960e8e1e218a5b0d881cd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
        <definition>gmx_bool parse_common_args</definition>
        <argsstring>(int *argc, char *argv[], unsigned long Flags, int nfile, t_filenm fnm[], int npargs, t_pargs *pa, int ndesc, const char **desc, int nbugs, const char **bugs, gmx_output_env_t **oenv)</argsstring>
        <name>parse_common_args</name>
        <param>
          <type>int *</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>Flags</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nfile</declname>
        </param>
        <param>
          <type><ref refid="structt__filenm" kindref="compound">t_filenm</ref></type>
          <declname>fnm</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>npargs</declname>
        </param>
        <param>
          <type><ref refid="structt__pargs" kindref="compound">t_pargs</ref> *</type>
          <declname>pa</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndesc</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbugs</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>bugs</declname>
        </param>
        <param>
          <type><ref refid="structgmx__output__env__t" kindref="compound">gmx_output_env_t</ref> **</type>
          <declname>oenv</declname>
        </param>
        <briefdescription>
<para>Parse command-line arguments. </para>        </briefdescription>
        <detaileddescription>
<para>Some common default arguments are also recognized in addition to those provided through <computeroutput>pa</computeroutput>. The set of recognized default arguments is affected by <computeroutput>Flags</computeroutput>.</para><para>Recognized arguments are removed from the list.</para><para>For full functionality, this function needs to be used within a function that is passed to <ref refid="cmdlineinit_8cpp_1aa51379f681880e0cb70a072f7ea5abe5" kindref="member">gmx_run_cmain()</ref>. It should be called as the first thing in that function. Initialization code can be executed before it, but you need to be aware that if the program is executed with -h and MPI, the code before <ref refid="group__module__commandline_1ga5140c89919960e8e1e218a5b0d881cd5" kindref="member">parse_common_args()</ref> only executes on the master node.</para><para>If the return value is <computeroutput>FALSE</computeroutput>, the program should return immediately (this is necessary for -h and a few other cases).</para><para><simplesect kind="see"><para><ref refid="cmdlineinit_8cpp_1aa51379f681880e0cb70a072f7ea5abe5" kindref="member">gmx_run_cmain()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="260" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.cpp" bodystart="477" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga34ad6a307fb2c34d808b82239c48e6cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void anonymous_namespace{cmdlinehelpmodule.cpp}::initOptionsBasic</definition>
        <argsstring>(gmx::IOptionsContainer *options, gmx::ICommandLineOptionsModuleSettings *settings)</argsstring>
        <name>initOptionsBasic</name>
        <param>
          <type><ref refid="classgmx_1_1IOptionsContainer" kindref="compound">gmx::IOptionsContainer</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1ICommandLineOptionsModuleSettings" kindref="compound">gmx::ICommandLineOptionsModuleSettings</ref> *</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Initializes Options for help export tests. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/tests/cmdlinehelpmodule.cpp" line="110" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/tests/cmdlinehelpmodule.cpp" bodystart="110" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga09d8666830e9f82670d216855020161c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::anonymous_namespace{cmdlinemodulemanagertest.cpp}::disableNice</definition>
        <argsstring>(gmx::CommandLineModuleSettings *settings)</argsstring>
        <name>disableNice</name>
        <param>
          <type><ref refid="classgmx_1_1CommandLineModuleSettings" kindref="compound">gmx::CommandLineModuleSettings</ref> *</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Helper method to disable nice() calls from <ref refid="classgmx_1_1CommandLineModuleManager" kindref="compound">CommandLineModuleManager</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/tests/cmdlinemodulemanagertest.cpp" line="75" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/tests/cmdlinemodulemanagertest.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gafda0e4db6ceac953ba387938fb1dae15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::anonymous_namespace{cmdlinehelpwriter.cpp}::OptionsFilter::formatSelected</definition>
        <argsstring>(FilterType type, IOptionsFormatter *formatter, const Options &amp;options)</argsstring>
        <name>formatSelected</name>
        <param>
          <type>FilterType</type>
          <declname>type</declname>
        </param>
        <param>
          <type>IOptionsFormatter *</type>
          <declname>formatter</declname>
        </param>
        <param>
          <type>const Options &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Formats selected options using the formatter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" line="135" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" bodystart="150" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga18696584d0ef6b990f71e4e37cef57ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gmx::anonymous_namespace{cmdlinehelpwriter.cpp}::OptionsFilter::visitSection</definition>
        <argsstring>(const OptionSectionInfo &amp;section)</argsstring>
        <name>visitSection</name>
        <reimplements refid="classgmx_1_1OptionsVisitor_1a90a752f6580724b0fc50721aacee3d04">visitSection</reimplements>
        <param>
          <type>const OptionSectionInfo &amp;</type>
          <declname>section</declname>
        </param>
        <briefdescription>
<para>Called for each section. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" line="139" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" bodystart="159" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gaea9cab53d21ba97895ade7f58df4491a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gmx::anonymous_namespace{cmdlinehelpwriter.cpp}::OptionsFilter::visitOption</definition>
        <argsstring>(const OptionInfo &amp;option)</argsstring>
        <name>visitOption</name>
        <reimplements refid="classgmx_1_1OptionsVisitor_1a133c1828a678c495b42c7ebe5ddf0379">visitOption</reimplements>
        <param>
          <type>const OptionInfo &amp;</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Called for each option. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" line="140" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" bodystart="166" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga1339914f8f438ae8021d32f5234a2329" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::anonymous_namespace{cmdlinehelpwriter.cpp}::SynopsisFormatter::start</definition>
        <argsstring>(const char *name)</argsstring>
        <name>start</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Starts formatting the synopsis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" line="313" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" bodystart="329" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga467e446cb4b381c3a02ef8d20e0aee05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::anonymous_namespace{cmdlinehelpwriter.cpp}::SynopsisFormatter::finish</definition>
        <argsstring>()</argsstring>
        <name>finish</name>
        <briefdescription>
<para>Finishes formatting the synopsis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" line="315" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" bodystart="354" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga7470cbb31c6f53a772655a43368eef29" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gmx::anonymous_namespace{cmdlinehelpwriter.cpp}::SynopsisFormatter::formatOption</definition>
        <argsstring>(const OptionInfo &amp;option)</argsstring>
        <name>formatOption</name>
        <reimplements refid="classgmx_1_1anonymous__namespace_02cmdlinehelpwriter_8cpp_03_1_1IOptionsFormatter_1a3035ef8ba9640e3d63f33de007f9dd71">formatOption</reimplements>
        <param>
          <type>const OptionInfo &amp;</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Formats a single option option. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" line="317" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" bodystart="359" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1gae57df389ee654625f4f37889feb0d1af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::anonymous_namespace{cmdlinehelpwriter.cpp}::OptionsListFormatter::OptionsListFormatter</definition>
        <argsstring>(const HelpWriterContext &amp;context, const CommonFormatterData &amp;common, const char *title)</argsstring>
        <name>OptionsListFormatter</name>
        <param>
          <type>const HelpWriterContext &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const CommonFormatterData &amp;</type>
          <declname>common</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Creates a helper object for formatting options. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" line="395" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" bodystart="446" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="group__module__commandline_1ga5c6873676a75b8da559d0627cc0f91bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gmx::anonymous_namespace{cmdlinehelpwriter.cpp}::OptionsListFormatter::formatOption</definition>
        <argsstring>(const OptionInfo &amp;option)</argsstring>
        <name>formatOption</name>
        <reimplements refid="classgmx_1_1anonymous__namespace_02cmdlinehelpwriter_8cpp_03_1_1IOptionsFormatter_1a3035ef8ba9640e3d63f33de007f9dd71">formatOption</reimplements>
        <param>
          <type>const OptionInfo &amp;</type>
          <declname>option</declname>
        </param>
        <briefdescription>
<para>Formats a single option option. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" line="414" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/cmdlinehelpwriter.cpp" bodystart="455" bodyend="470"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__module__commandline_1ga2c4d042aa134c0ffb23a1553a335fc2c" prot="public" static="no">
        <name>ffSET</name>
        <initializer>1&lt;&lt;0</initializer>
        <briefdescription>
<para>Whether a file name option is set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="69" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1ga329a4f1bb6cd80a0630547b0d027e24f" prot="public" static="no">
        <name>ffREAD</name>
        <initializer>1&lt;&lt;1</initializer>
        <briefdescription>
<para>Whether a file name option specifies an input file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="71" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1ga7631b25f5be9959c84dd7acc96bc04dd" prot="public" static="no">
        <name>ffWRITE</name>
        <initializer>1&lt;&lt;2</initializer>
        <briefdescription>
<para>Whether a file name option specifies an output file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="73" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1ga070f4190c2bc4a6af08333851ddf42ac" prot="public" static="no">
        <name>ffOPT</name>
        <initializer>1&lt;&lt;3</initializer>
        <briefdescription>
<para>Whether a file name option specifies an optional file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="75" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1gabcfe164407bc1fff8164f4779f0fe3ce" prot="public" static="no">
        <name>ffLIB</name>
        <initializer>1&lt;&lt;4</initializer>
        <briefdescription>
<para>Whether a file name option specifies a library file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="77" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1ga50cb2de9aec8429fb44074a1bfdb19b2" prot="public" static="no">
        <name>ffMULT</name>
        <initializer>1&lt;&lt;5</initializer>
        <briefdescription>
<para>Whether a file name option accepts multiple file names. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="79" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1gaae8f2f42809cc00c087b4359507abb81" prot="public" static="no">
        <name>ffALLOW_MISSING</name>
        <initializer>1&lt;&lt;6</initializer>
        <briefdescription>
<para>Whether an input file name option accepts non-existent files. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="81" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1gaff009165cc0826ee5f5e9069f5606cec" prot="public" static="no">
        <name>ffRW</name>
        <initializer>(<ref refid="group__module__commandline_1ga329a4f1bb6cd80a0630547b0d027e24f" kindref="member">ffREAD</ref> | <ref refid="group__module__commandline_1ga7631b25f5be9959c84dd7acc96bc04dd" kindref="member">ffWRITE</ref>)</initializer>
        <briefdescription>
<para>Convenience flag for an input/output file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="83" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1gaad72aa2d7b50f99b14435510ca044302" prot="public" static="no">
        <name>ffOPTRD</name>
        <initializer>(<ref refid="group__module__commandline_1ga329a4f1bb6cd80a0630547b0d027e24f" kindref="member">ffREAD</ref> | <ref refid="group__module__commandline_1ga070f4190c2bc4a6af08333851ddf42ac" kindref="member">ffOPT</ref>)</initializer>
        <briefdescription>
<para>Convenience flag for an optional input file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="85" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1gaf7a64244d10f102b0575159197e320f3" prot="public" static="no">
        <name>ffOPTWR</name>
        <initializer>(<ref refid="group__module__commandline_1ga7631b25f5be9959c84dd7acc96bc04dd" kindref="member">ffWRITE</ref>| <ref refid="group__module__commandline_1ga070f4190c2bc4a6af08333851ddf42ac" kindref="member">ffOPT</ref>)</initializer>
        <briefdescription>
<para>Convenience flag for an optional output file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="87" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1ga83143796e357adf8afa38323a85b3fcc" prot="public" static="no">
        <name>ffOPTRW</name>
        <initializer>(<ref refid="group__module__commandline_1gaff009165cc0826ee5f5e9069f5606cec" kindref="member">ffRW</ref>   | <ref refid="group__module__commandline_1ga070f4190c2bc4a6af08333851ddf42ac" kindref="member">ffOPT</ref>)</initializer>
        <briefdescription>
<para>Convenience flag for an optional input/output file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="89" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1ga70443d67e488b39409b37d98b9d2f8b8" prot="public" static="no">
        <name>ffLIBRD</name>
        <initializer>(<ref refid="group__module__commandline_1ga329a4f1bb6cd80a0630547b0d027e24f" kindref="member">ffREAD</ref> | <ref refid="group__module__commandline_1gabcfe164407bc1fff8164f4779f0fe3ce" kindref="member">ffLIB</ref>)</initializer>
        <briefdescription>
<para>Convenience flag for a library input file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="91" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1gaa168a891bb48ca53f62f04697add97f4" prot="public" static="no">
        <name>ffLIBOPTRD</name>
        <initializer>(<ref refid="group__module__commandline_1gaad72aa2d7b50f99b14435510ca044302" kindref="member">ffOPTRD</ref> | <ref refid="group__module__commandline_1gabcfe164407bc1fff8164f4779f0fe3ce" kindref="member">ffLIB</ref>)</initializer>
        <briefdescription>
<para>Convenience flag for an optional library input file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="93" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1gadfd834ab457afc0d758b6c1155cab145" prot="public" static="no">
        <name>ffRDMULT</name>
        <initializer>(<ref refid="group__module__commandline_1ga329a4f1bb6cd80a0630547b0d027e24f" kindref="member">ffREAD</ref>  | <ref refid="group__module__commandline_1ga50cb2de9aec8429fb44074a1bfdb19b2" kindref="member">ffMULT</ref>)</initializer>
        <briefdescription>
<para>Convenience flag for an input file that accepts multiple files. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="95" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1ga3955ea9e61cd1440f763771021c94bd0" prot="public" static="no">
        <name>ffOPTRDMULT</name>
        <initializer>(<ref refid="group__module__commandline_1gadfd834ab457afc0d758b6c1155cab145" kindref="member">ffRDMULT</ref> | <ref refid="group__module__commandline_1ga070f4190c2bc4a6af08333851ddf42ac" kindref="member">ffOPT</ref>)</initializer>
        <briefdescription>
<para>Convenience flag for an optional input file that accepts multiple files. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="97" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1ga0a9ba9e80fcdc4a36537189bf0b2e092" prot="public" static="no">
        <name>ffWRMULT</name>
        <initializer>(<ref refid="group__module__commandline_1ga7631b25f5be9959c84dd7acc96bc04dd" kindref="member">ffWRITE</ref>  | <ref refid="group__module__commandline_1ga50cb2de9aec8429fb44074a1bfdb19b2" kindref="member">ffMULT</ref>)</initializer>
        <briefdescription>
<para>Convenience flag for an output file that accepts multiple files. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="99" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1gab1f1d3a7ad2825aaa454ae80e077b712" prot="public" static="no">
        <name>ffOPTWRMULT</name>
        <initializer>(<ref refid="group__module__commandline_1ga0a9ba9e80fcdc4a36537189bf0b2e092" kindref="member">ffWRMULT</ref> | <ref refid="group__module__commandline_1ga070f4190c2bc4a6af08333851ddf42ac" kindref="member">ffOPT</ref>)</initializer>
        <briefdescription>
<para>Convenience flag for an optional output file that accepts multiple files. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="101" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1gab26cf759c91577b19db7e87b2922d1b9" prot="public" static="no">
        <name>opt2FILE</name>
        <param><defname>opt</defname></param>
        <param><defname>nfile</defname></param>
        <param><defname>fnm</defname></param>
        <param><defname>mode</defname></param>
        <initializer><ref refid="futil_8h_1ab32f45e948fd8696971da1be2fdc6d69" kindref="member">gmx_ffopen</ref>(<ref refid="group__module__commandline_1gaceda5669e2fd4abf13b12d25327f80cf" kindref="member">opt2fn</ref>(opt, nfile, fnm), mode)</initializer>
        <briefdescription>
<para>Returns a file pointer from the filename. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="123" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1ga5354f61d829706cdb5495a0f149542e2" prot="public" static="no">
        <name>ftp2FILE</name>
        <param><defname>ftp</defname></param>
        <param><defname>nfile</defname></param>
        <param><defname>fnm</defname></param>
        <param><defname>mode</defname></param>
        <initializer><ref refid="futil_8h_1ab32f45e948fd8696971da1be2fdc6d69" kindref="member">gmx_ffopen</ref>(<ref refid="group__module__commandline_1gab30cf06ad824963bae14691400b3b1cb" kindref="member">ftp2fn</ref>(ftp, nfile, fnm), mode)</initializer>
        <briefdescription>
<para>Returns a file pointer from the file type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" line="135" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/filenm.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1gae9060ba6f947e6b9c20514ce595d290e" prot="public" static="no">
        <name>PCA_CAN_VIEW</name>
        <initializer>(1&lt;&lt;5)</initializer>
        <briefdescription>
<para>Add option -w to view output files (must be implemented in program). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="220" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1ga582411d89d717e593d90ea442a51cb29" prot="public" static="no">
        <name>PCA_CAN_BEGIN</name>
        <initializer>(1&lt;&lt;6)</initializer>
        <briefdescription>
<para>Add option to set begin time for trajectory reading. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="222" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1gab0300262455633ec0bc43d10ce6927ea" prot="public" static="no">
        <name>PCA_CAN_END</name>
        <initializer>(1&lt;&lt;7)</initializer>
        <briefdescription>
<para>Add option to set end time for trajectory reading. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="224" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1gaf4da85e65d4283c03c78c752fc2fc858" prot="public" static="no">
        <name>PCA_CAN_DT</name>
        <initializer>(1&lt;&lt;14)</initializer>
        <briefdescription>
<para>Add option to set time step for trajectory reading. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="226" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1ga5db9b6ac7e7f18d9ae59cf81551a931d" prot="public" static="no">
        <name>PCA_CAN_TIME</name>
        <initializer>(<ref refid="group__module__commandline_1ga582411d89d717e593d90ea442a51cb29" kindref="member">PCA_CAN_BEGIN</ref> | <ref refid="group__module__commandline_1gab0300262455633ec0bc43d10ce6927ea" kindref="member">PCA_CAN_END</ref> | <ref refid="group__module__commandline_1gaf4da85e65d4283c03c78c752fc2fc858" kindref="member">PCA_CAN_DT</ref>)</initializer>
        <briefdescription>
<para>Add all options for trajectory time control. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="228" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1gaee728fbd6eefa75a2ba5321436783f09" prot="public" static="no">
        <name>PCA_TIME_UNIT</name>
        <initializer>(1&lt;&lt;15)</initializer>
        <briefdescription>
<para>Add option -tu to set time unit for output. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="230" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1ga0f498235163fbd4359951b6272de525a" prot="public" static="no">
        <name>PCA_CAN_SET_DEFFNM</name>
        <initializer>(1&lt;&lt;10)</initializer>
        <briefdescription>
<para>Add option -deffnm to set default for all file options. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="232" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1ga6acc5539552c4cab9089cb6bf8d6839a" prot="public" static="no">
        <name>PCA_NOEXIT_ON_ARGS</name>
        <initializer>(1&lt;&lt;11)</initializer>
        <briefdescription>
<para>Do not raise a fatal error when invalid options are encountered. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="234" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1ga4338bef824777c6ff6b2a05a372f0c78" prot="public" static="no">
        <name>PCA_NOT_READ_NODE</name>
        <initializer>(1&lt;&lt;16)</initializer>
        <briefdescription>
<para>Is this node not reading: for parallel all nodes but the master. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="236" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__module__commandline_1ga757b225217f8252fbe27551a11d92aee" prot="public" static="no">
        <name>PCA_DISABLE_INPUT_FILE_CHECKING</name>
        <initializer>(1&lt;&lt;17)</initializer>
        <briefdescription>
<para>Don&apos;t do any special processing for ffREAD files. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" line="238" column="9" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/commandline/pargs.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides functionality for managing command line programs. </para>    </briefdescription>
    <detaileddescription>
<para>This module provides utility classes and functions for implementing command line programs. They are mainly used within GROMACS, but can also be used from external programs if they want to get a similar user experience to GROMACS tools.</para><para>The classes exposed from this module can be roughly divided into two groups:</para><para><itemizedlist>
<listitem><para>Helper classes/functions for implementing the main() function. See <ref refid="page_usinglibrary" kindref="compound">Using GROMACS as a library</ref> for an overview of those available for user programs. These are declared in <ref refid="cmdlineinit_8h" kindref="compound">cmdlineinit.h</ref> (<ref refid="classgmx_1_1ICommandLineModule" kindref="compound">gmx::ICommandLineModule</ref> is declared in <ref refid="cmdlinemodule_8h" kindref="compound">cmdlinemodule.h</ref> and gmx::ICommandLineOptions in <ref refid="cmdlineoptionsmodule_8h" kindref="compound">cmdlineoptionsmodule.h</ref>).</para><para>Additionally, for internal GROMACS use, <ref refid="classgmx_1_1CommandLineModuleManager" kindref="compound">gmx::CommandLineModuleManager</ref> provides the functionality to implement the <computeroutput>gmx</computeroutput> wrapper binary, as well as command line options common to all GROMACS programs (such as <computeroutput>-version</computeroutput>). This is described in more detail at <ref refid="page_wrapperbinary" kindref="compound">Wrapper binary implementation</ref>.</para></listitem><listitem><para>Helper classes for particular command line tasks:<itemizedlist>
<listitem><para><ref refid="classgmx_1_1CommandLineParser" kindref="compound">gmx::CommandLineParser</ref> implements command line parsing to assign values to <ref refid="classgmx_1_1Options" kindref="compound">gmx::Options</ref> (see <ref refid="group__module__options" kindref="compound">Extensible Handling of Options (options)</ref>).</para></listitem><listitem><para><ref refid="classgmx_1_1CommandLineHelpWriter" kindref="compound">gmx::CommandLineHelpWriter</ref> writes help text for a program that uses the parser.</para></listitem><listitem><para><ref refid="group__module__commandline_1ga5140c89919960e8e1e218a5b0d881cd5" kindref="member">parse_common_args()</ref> is an old interface to GROMACS command line parsing. This is still used by many parts of GROMACS.</para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para><para><simplesect kind="author"><para>Teemu Murtola <ulink url="mailto:teemu.murtola@gmail.com">teemu.murtola@gmail.com</ulink> </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>

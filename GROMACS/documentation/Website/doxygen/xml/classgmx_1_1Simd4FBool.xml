<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1Simd4FBool" kind="class" prot="public">
    <compoundname>gmx::Simd4FBool</compoundname>
    <includes local="no">gromacs/simd/impl_reference/impl_reference_simd4_float.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgmx_1_1Simd4FBool_1a3fde5ae215e1ea9829f6fc36b8efad70" prot="public" static="no" mutable="no">
        <type>std::array&lt; bool, 4 &gt;</type>
        <definition>std::array&lt;bool, 4 &gt; gmx::Simd4FBool::simdInternal_</definition>
        <argsstring></argsstring>
        <name>simdInternal_</name>
        <briefdescription>
<para>Internal SIMD data. Implementation dependent, don&apos;t touch. </para>        </briefdescription>
        <detaileddescription>
<para>This has to be public to enable usage in combination with static inline functions, but it should never, EVER, be accessed by any code outside the corresponding implementation directory since the type will depend on the architecture. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/impl_reference/impl_reference_simd4_float.h" line="122" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/impl_reference/impl_reference_simd4_float.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1Simd4FBool_1afd1eb4b77720a95e7015001f612e2c53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::Simd4FBool::Simd4FBool</definition>
        <argsstring>()</argsstring>
        <name>Simd4FBool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/impl_reference/impl_reference_simd4_float.h" line="110" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/impl_reference/impl_reference_simd4_float.h" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1Simd4FBool_1ad64754cbb774d9cab1ed08c49a6e28bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::Simd4FBool::Simd4FBool</definition>
        <argsstring>(bool b)</argsstring>
        <name>Simd4FBool</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Construct from scalar bool. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/impl_reference/impl_reference_simd4_float.h" line="113" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/impl_reference/impl_reference_simd4_float.h" bodystart="113" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>SIMD4 variable type to use for logical comparisons on floats. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal /> Available if <ref refid="group__module__simd_1ga86b316f5c5de088d4cb073300198f4d3" kindref="member">GMX_SIMD4_HAVE_FLOAT</ref> is 1.</para><para><simplesect kind="note"><para>This variable cannot be placed inside other structures or classes, since some compilers (including at least clang-3.7) appear to lose the alignment. This is likely particularly severe when allocating such memory on the heap, but it occurs for stack structures too. </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/impl_reference/impl_reference_simd4_float.h" line="108" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/impl_reference/impl_reference_simd4_float.h" bodystart="107" bodyend="123"/>
    <listofallmembers>
      <member refid="classgmx_1_1Simd4FBool_1afd1eb4b77720a95e7015001f612e2c53" prot="public" virt="non-virtual"><scope>gmx::Simd4FBool</scope><name>Simd4FBool</name></member>
      <member refid="classgmx_1_1Simd4FBool_1ad64754cbb774d9cab1ed08c49a6e28bc" prot="public" virt="non-virtual"><scope>gmx::Simd4FBool</scope><name>Simd4FBool</name></member>
      <member refid="classgmx_1_1Simd4FBool_1a3fde5ae215e1ea9829f6fc36b8efad70" prot="public" virt="non-virtual"><scope>gmx::Simd4FBool</scope><name>simdInternal_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

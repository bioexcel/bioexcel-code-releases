<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1AlignedAllocationPolicy" kind="class" prot="public">
    <compoundname>gmx::AlignedAllocationPolicy</compoundname>
    <includes local="no">gromacs/utility/alignedallocator.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgmx_1_1AlignedAllocationPolicy_1a2988547ac30eb792e960821080579856" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t gmx::AlignedAllocationPolicy::alignment</definition>
        <argsstring>()</argsstring>
        <name>alignment</name>
        <briefdescription>
<para>Return the alignment size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/alignedallocator.h" line="64" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/alignedallocator.cpp" bodystart="195" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AlignedAllocationPolicy_1ae8815b9093593a20638c4071395a1ca6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * gmx::AlignedAllocationPolicy::malloc</definition>
        <argsstring>(std::size_t bytes)</argsstring>
        <name>malloc</name>
        <param>
          <type>std::size_t</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
<para>Allocate memory aligned to <ref refid="classgmx_1_1AlignedAllocationPolicy_1a2988547ac30eb792e960821080579856" kindref="member">alignment()</ref> bytes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount of memory (bytes) to allocate. It is valid to ask for 0 bytes, which will return a non-null pointer that is properly aligned and padded (but that you should not use).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Valid pointer if the allocation worked, otherwise nullptr.</para></simplesect>
The memory will always be aligned to 128 bytes, which is our estimate of the longest cache lines on architectures currently in use. It will also be padded by the same amount at the end of the area, to help avoid false cache sharing.</para><para><simplesect kind="note"><para>Memory allocated with this routine must be released with <ref refid="classgmx_1_1AlignedAllocationPolicy_1ab2b367b4dc3db979ef59a95d11a9ec53" kindref="member">gmx::AlignedAllocationPolicy::free()</ref>, and absolutely not the system <ref refid="classgmx_1_1AlignedAllocationPolicy_1ab2b367b4dc3db979ef59a95d11a9ec53" kindref="member">free()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/alignedallocator.h" line="82" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/alignedallocator.cpp" bodystart="214" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AlignedAllocationPolicy_1ab2b367b4dc3db979ef59a95d11a9ec53" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::AlignedAllocationPolicy::free</definition>
        <argsstring>(void *p)</argsstring>
        <name>free</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Free aligned memory. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory pointer previously returned from <ref refid="classgmx_1_1AlignedAllocationPolicy_1ae8815b9093593a20638c4071395a1ca6" kindref="member">malloc()</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This routine should only be called with pointers obtained from <ref refid="classgmx_1_1AlignedAllocationPolicy_1ae8815b9093593a20638c4071395a1ca6" kindref="member">gmx::AlignedAllocationPolicy::malloc()</ref>, and absolutely not any pointers obtained the system <ref refid="classgmx_1_1AlignedAllocationPolicy_1ae8815b9093593a20638c4071395a1ca6" kindref="member">malloc()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/alignedallocator.h" line="92" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/alignedallocator.cpp" bodystart="224" bodyend="227"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Policy class for configuring <ref refid="classgmx_1_1Allocator" kindref="compound">gmx::Allocator</ref>, to manage allocations of aligned memory for SIMD code. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal />  </para>    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/alignedallocator.h" line="60" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/alignedallocator.h" bodystart="59" bodyend="93"/>
    <listofallmembers>
      <member refid="classgmx_1_1AlignedAllocationPolicy_1a2988547ac30eb792e960821080579856" prot="public" virt="non-virtual"><scope>gmx::AlignedAllocationPolicy</scope><name>alignment</name></member>
      <member refid="classgmx_1_1AlignedAllocationPolicy_1ab2b367b4dc3db979ef59a95d11a9ec53" prot="public" virt="non-virtual"><scope>gmx::AlignedAllocationPolicy</scope><name>free</name></member>
      <member refid="classgmx_1_1AlignedAllocationPolicy_1ae8815b9093593a20638c4071395a1ca6" prot="public" virt="non-virtual"><scope>gmx::AlignedAllocationPolicy</scope><name>malloc</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

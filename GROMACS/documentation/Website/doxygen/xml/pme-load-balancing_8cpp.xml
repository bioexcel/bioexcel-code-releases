<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="pme-load-balancing_8cpp" kind="file">
    <compoundname>pme-load-balancing.cpp</compoundname>
    <includes refid="gmxpre_8h" local="yes">gmxpre.h</includes>
    <includes refid="pme-load-balancing_8h" local="yes">pme-load-balancing.h</includes>
    <includes local="yes">config.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">cmath</includes>
    <includes local="no">algorithm</includes>
    <includes refid="domdec_8h" local="yes">gromacs/domdec/domdec.h</includes>
    <includes refid="domdec__network_8h" local="yes">gromacs/domdec/domdec_network.h</includes>
    <includes refid="domdec__struct_8h" local="yes">gromacs/domdec/domdec_struct.h</includes>
    <includes refid="ewald-utils_8h" local="yes">gromacs/ewald/ewald-utils.h</includes>
    <includes refid="pme_8h" local="yes">gromacs/ewald/pme.h</includes>
    <includes refid="calcgrid_8h" local="yes">gromacs/fft/calcgrid.h</includes>
    <includes refid="network_8h" local="yes">gromacs/gmxlib/network.h</includes>
    <includes refid="functions_8h" local="yes">gromacs/math/functions.h</includes>
    <includes refid="vec_8h" local="yes">gromacs/math/vec.h</includes>
    <includes refid="mdlib_2forcerec_8h" local="yes">gromacs/mdlib/forcerec.h</includes>
    <includes refid="nb__verlet_8h" local="yes">gromacs/mdlib/nb_verlet.h</includes>
    <includes refid="nbnxn__gpu__data__mgmt_8h" local="yes">gromacs/mdlib/nbnxn_gpu_data_mgmt.h</includes>
    <includes refid="nbnxn__pairlist_8h" local="yes">gromacs/mdlib/nbnxn_pairlist.h</includes>
    <includes refid="sim__util_8h" local="yes">gromacs/mdlib/sim_util.h</includes>
    <includes refid="commrec_8h" local="yes">gromacs/mdtypes/commrec.h</includes>
    <includes refid="inputrec_8h" local="yes">gromacs/mdtypes/inputrec.h</includes>
    <includes refid="md__enums_8h" local="yes">gromacs/mdtypes/md_enums.h</includes>
    <includes refid="state_8h" local="yes">gromacs/mdtypes/state.h</includes>
    <includes refid="pbc_8h" local="yes">gromacs/pbcutil/pbc.h</includes>
    <includes refid="wallcycle_8h" local="yes">gromacs/timing/wallcycle.h</includes>
    <includes refid="cstringutil_8h" local="yes">gromacs/utility/cstringutil.h</includes>
    <includes refid="fatalerror_8h" local="yes">gromacs/utility/fatalerror.h</includes>
    <includes refid="gmxassert_8h" local="yes">gromacs/utility/gmxassert.h</includes>
    <includes refid="logger_8h" local="yes">gromacs/utility/logger.h</includes>
    <includes refid="smalloc_8h" local="yes">gromacs/utility/smalloc.h</includes>
    <includes refid="pme-internal_8h" local="yes">pme-internal.h</includes>
    <incdepgraph>
      <node id="5045">
        <label>stdarg.h</label>
      </node>
      <node id="5016">
        <label>gromacs/utility/current_function.h</label>
        <link refid="current__function_8h"/>
      </node>
      <node id="5018">
        <label>gromacs/domdec/domdec_network.h</label>
        <link refid="domdec__network_8h"/>
      </node>
      <node id="5000">
        <label>assert.h</label>
      </node>
      <node id="5009">
        <label>iterator</label>
      </node>
      <node id="5025">
        <label>cstdint</label>
      </node>
      <node id="5014">
        <label>stdint.h</label>
      </node>
      <node id="5031">
        <label>gromacs/gpu_utils/hostallocator.h</label>
        <link refid="hostallocator_8h"/>
        <childnode refid="5007" relation="include">
        </childnode>
        <childnode refid="5027" relation="include">
        </childnode>
        <childnode refid="5005" relation="include">
        </childnode>
        <childnode refid="5032" relation="include">
        </childnode>
        <childnode refid="5035" relation="include">
        </childnode>
      </node>
      <node id="5026">
        <label>gromacs/mdlib/nb_verlet.h</label>
        <link refid="nb__verlet_8h"/>
        <childnode refid="5027" relation="include">
        </childnode>
      </node>
      <node id="5022">
        <label>gromacs/ewald/pme.h</label>
        <link refid="pme_8h"/>
        <childnode refid="5023" relation="include">
        </childnode>
        <childnode refid="5006" relation="include">
        </childnode>
        <childnode refid="5013" relation="include">
        </childnode>
        <childnode refid="5017" relation="include">
        </childnode>
      </node>
      <node id="5051">
        <label>gromacs/gpu_utils/gpu_utils.h</label>
        <link refid="gpu__utils_8h"/>
        <childnode refid="5036" relation="include">
        </childnode>
        <childnode refid="5023" relation="include">
        </childnode>
        <childnode refid="5005" relation="include">
        </childnode>
        <childnode refid="5013" relation="include">
        </childnode>
      </node>
      <node id="5043">
        <label>gromacs/utility/cstringutil.h</label>
        <link refid="cstringutil_8h"/>
        <childnode refid="5004" relation="include">
        </childnode>
        <childnode refid="5013" relation="include">
        </childnode>
      </node>
      <node id="5001">
        <label>cmath</label>
      </node>
      <node id="5010">
        <label>stdexcept</label>
      </node>
      <node id="5023">
        <label>string</label>
      </node>
      <node id="5032">
        <label>gromacs/utility/alignedallocator.h</label>
        <link refid="alignedallocator_8h"/>
        <childnode refid="5007" relation="include">
        </childnode>
        <childnode refid="5033" relation="include">
        </childnode>
      </node>
      <node id="5049">
        <label>pme-internal.h</label>
        <link refid="pme-internal_8h"/>
        <childnode refid="4999" relation="include">
        </childnode>
        <childnode refid="5013" relation="include">
        </childnode>
        <childnode refid="5020" relation="include">
        </childnode>
        <childnode refid="5050" relation="include">
        </childnode>
      </node>
      <node id="5020">
        <label>gromacs/utility/gmxmpi.h</label>
        <link refid="gmxmpi_8h"/>
        <childnode refid="4999" relation="include">
        </childnode>
      </node>
      <node id="5041">
        <label>gromacs/utility/classhelpers.h</label>
        <link refid="classhelpers_8h"/>
        <childnode refid="5027" relation="include">
        </childnode>
      </node>
      <node id="5038">
        <label>exception</label>
      </node>
      <node id="5048">
        <label>stddef.h</label>
      </node>
      <node id="5012">
        <label>gromacs/utility/gmxassert.h</label>
        <link refid="gmxassert_8h"/>
        <childnode refid="5013" relation="include">
        </childnode>
        <childnode refid="5016" relation="include">
        </childnode>
      </node>
      <node id="5042">
        <label>gromacs/math/paddedvector.h</label>
        <link refid="paddedvector_8h"/>
        <childnode refid="5002" relation="include">
        </childnode>
        <childnode refid="5005" relation="include">
        </childnode>
        <childnode refid="5032" relation="include">
        </childnode>
        <childnode refid="5006" relation="include">
        </childnode>
      </node>
      <node id="4996">
        <label>src/gromacs/ewald/pme-load-balancing.cpp</label>
        <link refid="pme-load-balancing.cpp"/>
        <childnode refid="4997" relation="include">
        </childnode>
        <childnode refid="4998" relation="include">
        </childnode>
        <childnode refid="4999" relation="include">
        </childnode>
        <childnode refid="5000" relation="include">
        </childnode>
        <childnode refid="5001" relation="include">
        </childnode>
        <childnode refid="5002" relation="include">
        </childnode>
        <childnode refid="5003" relation="include">
        </childnode>
        <childnode refid="5018" relation="include">
        </childnode>
        <childnode refid="5019" relation="include">
        </childnode>
        <childnode refid="5021" relation="include">
        </childnode>
        <childnode refid="5022" relation="include">
        </childnode>
        <childnode refid="5024" relation="include">
        </childnode>
        <childnode refid="5026" relation="include">
        </childnode>
        <childnode refid="5028" relation="include">
        </childnode>
        <childnode refid="5029" relation="include">
        </childnode>
        <childnode refid="5030" relation="include">
        </childnode>
        <childnode refid="5043" relation="include">
        </childnode>
        <childnode refid="5044" relation="include">
        </childnode>
        <childnode refid="5012" relation="include">
        </childnode>
        <childnode refid="5046" relation="include">
        </childnode>
        <childnode refid="5047" relation="include">
        </childnode>
        <childnode refid="5049" relation="include">
        </childnode>
      </node>
      <node id="5021">
        <label>gromacs/ewald/ewald-utils.h</label>
        <link refid="ewald-utils_8h"/>
        <childnode refid="5012" relation="include">
        </childnode>
        <childnode refid="5017" relation="include">
        </childnode>
      </node>
      <node id="5036">
        <label>cstdio</label>
      </node>
      <node id="5047">
        <label>gromacs/utility/smalloc.h</label>
        <link refid="smalloc_8h"/>
        <childnode refid="5048" relation="include">
        </childnode>
        <childnode refid="5013" relation="include">
        </childnode>
      </node>
      <node id="5017">
        <label>gromacs/utility/real.h</label>
        <link refid="real_8h"/>
      </node>
      <node id="5005">
        <label>vector</label>
      </node>
      <node id="5034">
        <label>new</label>
      </node>
      <node id="5029">
        <label>gromacs/mdtypes/md_enums.h</label>
        <link refid="md__enums_8h"/>
        <childnode refid="5013" relation="include">
        </childnode>
      </node>
      <node id="4997">
        <label>gmxpre.h</label>
        <link refid="gmxpre_8h"/>
      </node>
      <node id="5011">
        <label>utility</label>
      </node>
      <node id="5008">
        <label>array</label>
      </node>
      <node id="5030">
        <label>gromacs/mdtypes/state.h</label>
        <link refid="state_8h"/>
        <childnode refid="5008" relation="include">
        </childnode>
        <childnode refid="5027" relation="include">
        </childnode>
        <childnode refid="5005" relation="include">
        </childnode>
        <childnode refid="5031" relation="include">
        </childnode>
        <childnode refid="5042" relation="include">
        </childnode>
        <childnode refid="5029" relation="include">
        </childnode>
        <childnode refid="5006" relation="include">
        </childnode>
        <childnode refid="5013" relation="include">
        </childnode>
        <childnode refid="5017" relation="include">
        </childnode>
      </node>
      <node id="5013">
        <label>gromacs/utility/basedefinitions.h</label>
        <link refid="basedefinitions_8h"/>
        <childnode refid="5014" relation="include">
        </childnode>
        <childnode refid="5015" relation="include">
        </childnode>
      </node>
      <node id="5037">
        <label>cstdlib</label>
      </node>
      <node id="5035">
        <label>gromacs/utility/exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="5036" relation="include">
        </childnode>
        <childnode refid="5037" relation="include">
        </childnode>
        <childnode refid="5038" relation="include">
        </childnode>
        <childnode refid="5027" relation="include">
        </childnode>
        <childnode refid="5023" relation="include">
        </childnode>
        <childnode refid="5039" relation="include">
        </childnode>
        <childnode refid="5040" relation="include">
        </childnode>
        <childnode refid="5005" relation="include">
        </childnode>
        <childnode refid="5013" relation="include">
        </childnode>
        <childnode refid="5041" relation="include">
        </childnode>
        <childnode refid="5016" relation="include">
        </childnode>
        <childnode refid="5012" relation="include">
        </childnode>
      </node>
      <node id="5006">
        <label>gromacs/utility/arrayref.h</label>
        <link refid="arrayref_8h"/>
        <childnode refid="5007" relation="include">
        </childnode>
        <childnode refid="5008" relation="include">
        </childnode>
        <childnode refid="5009" relation="include">
        </childnode>
        <childnode refid="5010" relation="include">
        </childnode>
        <childnode refid="5011" relation="include">
        </childnode>
        <childnode refid="5005" relation="include">
        </childnode>
        <childnode refid="5012" relation="include">
        </childnode>
      </node>
      <node id="5007">
        <label>cstddef</label>
      </node>
      <node id="5019">
        <label>gromacs/domdec/domdec_struct.h</label>
        <link refid="domdec__struct_8h"/>
        <childnode refid="5007" relation="include">
        </childnode>
        <childnode refid="5013" relation="include">
        </childnode>
        <childnode refid="5020" relation="include">
        </childnode>
        <childnode refid="5017" relation="include">
        </childnode>
      </node>
      <node id="5046">
        <label>gromacs/utility/logger.h</label>
        <link refid="logger_8h"/>
        <childnode refid="5023" relation="include">
        </childnode>
      </node>
      <node id="5028">
        <label>gromacs/mdlib/nbnxn_gpu_data_mgmt.h</label>
        <link refid="nbnxn__gpu__data__mgmt_8h"/>
      </node>
      <node id="5033">
        <label>gromacs/utility/allocator.h</label>
        <link refid="allocator_8h"/>
        <childnode refid="5007" relation="include">
        </childnode>
        <childnode refid="5027" relation="include">
        </childnode>
        <childnode refid="5034" relation="include">
        </childnode>
        <childnode refid="5013" relation="include">
        </childnode>
      </node>
      <node id="5050">
        <label>pme-gpu-types.h</label>
        <link refid="pme-gpu-types_8h"/>
        <childnode refid="4999" relation="include">
        </childnode>
        <childnode refid="5027" relation="include">
        </childnode>
        <childnode refid="5005" relation="include">
        </childnode>
        <childnode refid="5022" relation="include">
        </childnode>
        <childnode refid="5051" relation="include">
        </childnode>
        <childnode refid="5031" relation="include">
        </childnode>
        <childnode refid="5013" relation="include">
        </childnode>
      </node>
      <node id="5024">
        <label>gromacs/math/functions.h</label>
        <link refid="functions_8h"/>
        <childnode refid="5001" relation="include">
        </childnode>
        <childnode refid="5025" relation="include">
        </childnode>
        <childnode refid="5017" relation="include">
        </childnode>
      </node>
      <node id="5039">
        <label>type_traits</label>
      </node>
      <node id="4999">
        <label>config.h</label>
      </node>
      <node id="5044">
        <label>gromacs/utility/fatalerror.h</label>
        <link refid="fatalerror_8h"/>
        <childnode refid="5045" relation="include">
        </childnode>
        <childnode refid="5004" relation="include">
        </childnode>
        <childnode refid="5013" relation="include">
        </childnode>
      </node>
      <node id="5003">
        <label>gromacs/domdec/domdec.h</label>
        <link refid="domdec_8h"/>
        <childnode refid="5004" relation="include">
        </childnode>
        <childnode refid="5005" relation="include">
        </childnode>
        <childnode refid="5006" relation="include">
        </childnode>
        <childnode refid="5013" relation="include">
        </childnode>
        <childnode refid="5017" relation="include">
        </childnode>
      </node>
      <node id="5002">
        <label>algorithm</label>
      </node>
      <node id="5004">
        <label>stdio.h</label>
      </node>
      <node id="4998">
        <label>pme-load-balancing.h</label>
        <link refid="pme-load-balancing_8h"/>
      </node>
      <node id="5027">
        <label>memory</label>
      </node>
      <node id="5015">
        <label>inttypes.h</label>
      </node>
      <node id="5040">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <innerclass refid="structpme__setup__t" prot="public">pme_setup_t</innerclass>
    <innerclass refid="structpme__load__balancing__t" prot="public">pme_load_balancing_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="pme-load-balancing_8cpp_1acc4abd343a4deaafd24e86604641e42f" prot="public" static="no">
        <name>epmelb</name>
        <enumvalue id="pme-load-balancing_8cpp_1acc4abd343a4deaafd24e86604641e42fa791c0e5a262d640728d3000df906d052" prot="public">
          <name>epmelblimNO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pme-load-balancing_8cpp_1acc4abd343a4deaafd24e86604641e42fafc03aff0b528c228f356bc283e79fb95" prot="public">
          <name>epmelblimBOX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pme-load-balancing_8cpp_1acc4abd343a4deaafd24e86604641e42fa2cfc148ef81e5f01bd8c0f6489eb676a" prot="public">
          <name>epmelblimDD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pme-load-balancing_8cpp_1acc4abd343a4deaafd24e86604641e42fac885c273afad0ff7341db75cb12ed06c" prot="public">
          <name>epmelblimPMEGRID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pme-load-balancing_8cpp_1acc4abd343a4deaafd24e86604641e42fadecc416d187f756271da23ee8d316365" prot="public">
          <name>epmelblimMAXSCALING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pme-load-balancing_8cpp_1acc4abd343a4deaafd24e86604641e42fa898541c74c26d592452a04fb9c457b90" prot="public">
          <name>epmelblimNR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration whose values describe the effect limiting the load balancing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="128" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="128" bodyend="130"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pme-load-balancing_8cpp_1a82c3f867a9183aef504a831a9af42d5b" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int PMETunePeriod</definition>
        <argsstring></argsstring>
        <name>PMETunePeriod</name>
        <initializer>= 50</initializer>
        <briefdescription>
<para>After 50 nstlist periods of not observing imbalance: never tune PME. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="100" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pme-load-balancing_8cpp_1afd951b7c02ef20cdbb1cb7560a7887c1" prot="public" static="no" mutable="no">
        <type>const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>const real loadBalanceTriggerFactor</definition>
        <argsstring></argsstring>
        <name>loadBalanceTriggerFactor</name>
        <initializer>= 1.05</initializer>
        <briefdescription>
<para>Trigger PME load balancing at more than 5% PME overload. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="102" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pme-load-balancing_8cpp_1aa433e304a7a93739e8b6b6be09167245" prot="public" static="no" mutable="no">
        <type>const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>const real c_maxSpacingScaling</definition>
        <argsstring></argsstring>
        <name>c_maxSpacingScaling</name>
        <initializer>= 1.7</initializer>
        <briefdescription>
<para>Scale the grid by a most at factor 1.7. </para>        </briefdescription>
        <detaileddescription>
<para>This still leaves room for about 4-4.5x decrease in grid spacing while limiting the cases where large imbalance leads to extreme cutoff scaling for marginal benefits.</para><para>This should help to avoid:<itemizedlist>
<listitem><para>large increase in power consumption for little performance gain</para></listitem><listitem><para>increasing communication volume</para></listitem><listitem><para>limiting DLB </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="113" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pme-load-balancing_8cpp_1ac64134c8b30aafc2d8b58015b998586e" prot="public" static="no" mutable="no">
        <type>const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>const real gridpointsScaleFactor</definition>
        <argsstring></argsstring>
        <name>gridpointsScaleFactor</name>
        <initializer>= 0.8</initializer>
        <briefdescription>
<para>In the initial scan, step by grids that are at least a factor 0.8 coarser. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="115" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pme-load-balancing_8cpp_1af5197782ccbc778f156ea7e640afab75" prot="public" static="no" mutable="no">
        <type>const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>const real relativeEfficiencyFactor</definition>
        <argsstring></argsstring>
        <name>relativeEfficiencyFactor</name>
        <initializer>= 1.05</initializer>
        <briefdescription>
<para>In the initial scan, try to skip grids with uneven x/y/z spacing, checking if the &quot;efficiency&quot; is more than 5% worse than the previous grid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="119" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pme-load-balancing_8cpp_1ae30a0e9e035c9d02c0bc94b0514c82ea" prot="public" static="no" mutable="no">
        <type>const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>const real maxRelativeSlowdownAccepted</definition>
        <argsstring></argsstring>
        <name>maxRelativeSlowdownAccepted</name>
        <initializer>= 1.12</initializer>
        <briefdescription>
<para>Rerun until a run is 12% slower setups than the fastest run so far. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="121" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pme-load-balancing_8cpp_1a7edeafb90f06f118e2f0b876de924ddf" prot="public" static="no" mutable="no">
        <type>const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>const real maxFluctuationAccepted</definition>
        <argsstring></argsstring>
        <name>maxFluctuationAccepted</name>
        <initializer>= 1.02</initializer>
        <briefdescription>
<para>If setups get more than 2% faster, do another round to avoid choosing a slower setup due to acceleration or fluctuations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="125" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pme-load-balancing_8cpp_1a1aa04e0fdacf683ca2156a8630f52c21" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* pmelblim_str[epmelblimNR]</definition>
        <argsstring>[epmelblimNR]</argsstring>
        <name>pmelblim_str</name>
        <initializer>=
{ &quot;no&quot;, &quot;box size&quot;, &quot;domain decompostion&quot;, &quot;PME grid restriction&quot;, &quot;maximum allowed grid scaling&quot; }</initializer>
        <briefdescription>
<para>Descriptive strings matching <ref refid="pme-load-balancing_8cpp_1acc4abd343a4deaafd24e86604641e42f" kindref="member">epmelb</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="133" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pme-load-balancing_8cpp_1afd02504f87f1d1089c1da16b5bbc5bbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pme_loadbal_is_active</definition>
        <argsstring>(const pme_load_balancing_t *pme_lb)</argsstring>
        <name>pme_loadbal_is_active</name>
        <param>
          <type>const <ref refid="structpme__load__balancing__t" kindref="compound">pme_load_balancing_t</ref> *</type>
          <declname>pme_lb</declname>
        </param>
        <briefdescription>
<para>Return whether PME load balancing is active. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="170" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="pme-load-balancing_8cpp_1ac9e1c9fda1c71b184d2240f8932f6216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_loadbal_init</definition>
        <argsstring>(pme_load_balancing_t **pme_lb_p, t_commrec *cr, const gmx::MDLogger &amp;mdlog, const t_inputrec *ir, matrix box, const interaction_const_t *ic, const NbnxnListParameters *listParams, gmx_pme_t *pmedata, gmx_bool bUseGPU, gmx_bool *bPrinting)</argsstring>
        <name>pme_loadbal_init</name>
        <param>
          <type><ref refid="structpme__load__balancing__t" kindref="compound">pme_load_balancing_t</ref> **</type>
          <declname>pme_lb_p</declname>
        </param>
        <param>
          <type><ref refid="structt__commrec" kindref="compound">t_commrec</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1MDLogger" kindref="compound">gmx::MDLogger</ref> &amp;</type>
          <declname>mdlog</declname>
        </param>
        <param>
          <type>const <ref refid="structt__inputrec" kindref="compound">t_inputrec</ref> *</type>
          <declname>ir</declname>
        </param>
        <param>
          <type>matrix</type>
          <declname>box</declname>
        </param>
        <param>
          <type>const <ref refid="structinteraction__const__t" kindref="compound">interaction_const_t</ref> *</type>
          <declname>ic</declname>
        </param>
        <param>
          <type>const NbnxnListParameters *</type>
          <declname>listParams</declname>
        </param>
        <param>
          <type>gmx_pme_t *</type>
          <declname>pmedata</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bUseGPU</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref> *</type>
          <declname>bPrinting</declname>
        </param>
        <briefdescription>
<para>Initialize the PP-PME load balacing data and infrastructure. </para>        </briefdescription>
        <detaileddescription>
<para>Initialize the PP-PME load balacing data and infrastructure. The actual load balancing might start right away, later or never. Returns in bPrinting whether the load balancing is printing to fp_err. The PME grid in pmedata is reused for smaller grids to lower the memory usage. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="175" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="175" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="pme-load-balancing_8cpp_1a8eed547e08152be03e8ea355219fd699" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
        <definition>static gmx_bool pme_loadbal_increase_cutoff</definition>
        <argsstring>(pme_load_balancing_t *pme_lb, int pme_order, const gmx_domdec_t *dd)</argsstring>
        <name>pme_loadbal_increase_cutoff</name>
        <param>
          <type><ref refid="structpme__load__balancing__t" kindref="compound">pme_load_balancing_t</ref> *</type>
          <declname>pme_lb</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pme_order</declname>
        </param>
        <param>
          <type>const <ref refid="structgmx__domdec__t" kindref="compound">gmx_domdec_t</ref> *</type>
          <declname>dd</declname>
        </param>
        <briefdescription>
<para>Try to increase the cutoff during load balancing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="316" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="316" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="pme-load-balancing_8cpp_1a82a6f5dcabb035359a53afc2be204731" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void print_grid</definition>
        <argsstring>(FILE *fp_err, FILE *fp_log, const char *pre, const char *desc, const pme_setup_t *set, double cycles)</argsstring>
        <name>print_grid</name>
        <param>
          <type>FILE *</type>
          <declname>fp_err</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp_log</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pre</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>const <ref refid="structpme__setup__t" kindref="compound">pme_setup_t</ref> *</type>
          <declname>set</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cycles</declname>
        </param>
        <briefdescription>
<para>Print the PME grid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="430" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="430" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="pme-load-balancing_8cpp_1a08ba9fd9752caab7ff2c6518736c8684" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int pme_loadbal_end</definition>
        <argsstring>(pme_load_balancing_t *pme_lb)</argsstring>
        <name>pme_loadbal_end</name>
        <param>
          <type><ref refid="structpme__load__balancing__t" kindref="compound">pme_load_balancing_t</ref> *</type>
          <declname>pme_lb</declname>
        </param>
        <briefdescription>
<para>Return the index of the last setup used in PME load balancing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="462" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="462" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="pme-load-balancing_8cpp_1acba8547c50925d523a65f7f83d702071" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void print_loadbal_limited</definition>
        <argsstring>(FILE *fp_err, FILE *fp_log, gmx_int64_t step, pme_load_balancing_t *pme_lb)</argsstring>
        <name>print_loadbal_limited</name>
        <param>
          <type>FILE *</type>
          <declname>fp_err</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp_log</declname>
        </param>
        <param>
          <type>gmx_int64_t</type>
          <declname>step</declname>
        </param>
        <param>
          <type><ref refid="structpme__load__balancing__t" kindref="compound">pme_load_balancing_t</ref> *</type>
          <declname>pme_lb</declname>
        </param>
        <briefdescription>
<para>Print descriptive string about what limits PME load balancing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="476" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="476" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="pme-load-balancing_8cpp_1acb6553fb7c4e16c7512e4786057fd1e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void switch_to_stage1</definition>
        <argsstring>(pme_load_balancing_t *pme_lb)</argsstring>
        <name>switch_to_stage1</name>
        <param>
          <type><ref refid="structpme__load__balancing__t" kindref="compound">pme_load_balancing_t</ref> *</type>
          <declname>pme_lb</declname>
        </param>
        <briefdescription>
<para>Switch load balancing to stage 1. </para>        </briefdescription>
        <detaileddescription>
<para>In this stage, only reasonably fast setups are run again. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="500" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="500" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="pme-load-balancing_8cpp_1ac2b187afdd6a23690bae27cd07c32222" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pme_load_balance</definition>
        <argsstring>(pme_load_balancing_t *pme_lb, t_commrec *cr, FILE *fp_err, FILE *fp_log, const gmx::MDLogger &amp;mdlog, const t_inputrec *ir, t_state *state, double cycles, interaction_const_t *ic, struct nonbonded_verlet_t *nbv, struct gmx_pme_t **pmedata, gmx_int64_t step)</argsstring>
        <name>pme_load_balance</name>
        <param>
          <type><ref refid="structpme__load__balancing__t" kindref="compound">pme_load_balancing_t</ref> *</type>
          <declname>pme_lb</declname>
        </param>
        <param>
          <type><ref refid="structt__commrec" kindref="compound">t_commrec</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp_err</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp_log</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1MDLogger" kindref="compound">gmx::MDLogger</ref> &amp;</type>
          <declname>mdlog</declname>
        </param>
        <param>
          <type>const <ref refid="structt__inputrec" kindref="compound">t_inputrec</ref> *</type>
          <declname>ir</declname>
        </param>
        <param>
          <type><ref refid="classt__state" kindref="compound">t_state</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cycles</declname>
        </param>
        <param>
          <type><ref refid="structinteraction__const__t" kindref="compound">interaction_const_t</ref> *</type>
          <declname>ic</declname>
        </param>
        <param>
          <type>struct <ref refid="structnonbonded__verlet__t" kindref="compound">nonbonded_verlet_t</ref> *</type>
          <declname>nbv</declname>
        </param>
        <param>
          <type>struct gmx_pme_t **</type>
          <declname>pmedata</declname>
        </param>
        <param>
          <type>gmx_int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
<para>Process the timings and try to adjust the PME grid and Coulomb cut-off. </para>        </briefdescription>
        <detaileddescription>
<para>The adjustment is done to generate a different non-bonded PP and PME load. With separate PME ranks (PP and PME on different processes) or with a GPU (PP on GPU, PME on CPU), PP and PME run on different resources and changing the load will affect the load balance and performance. The total time for a set of integration steps is monitored and a range of grid/cut-off setups is scanned. After calling pme_load_balance many times and acquiring enough statistics, the best performing setup is chosen. Here we try to take into account fluctuations and changes due to external factors as well as DD load balancing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="554" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="554" bodyend="899"/>
      </memberdef>
      <memberdef kind="function" id="pme-load-balancing_8cpp_1a198ba46aed56a558409b009aea2c3a89" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void continue_pme_loadbal</definition>
        <argsstring>(pme_load_balancing_t *pme_lb, gmx_bool bDlbUnlocked)</argsstring>
        <name>continue_pme_loadbal</name>
        <param>
          <type><ref refid="structpme__load__balancing__t" kindref="compound">pme_load_balancing_t</ref> *</type>
          <declname>pme_lb</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bDlbUnlocked</declname>
        </param>
        <briefdescription>
<para>Prepare for another round of PME load balancing. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">pme_lb</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to PME load balancing struct </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bDlbUnlocked</parametername>
</parameternamelist>
<parameterdescription>
<para>TRUE is DLB was locked and is now unlocked</para></parameterdescription>
</parameteritem>
</parameterlist>
If the conditions (e.g. DLB off/on, CPU/GPU throttling etc.) changed, the PP/PME balance might change and re-balancing can improve performance. This function adds 2 stages and adjusts the considered setup range. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="910" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="910" bodyend="924"/>
      </memberdef>
      <memberdef kind="function" id="pme-load-balancing_8cpp_1a558b01aec7813df5141da653a3ef2edc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_loadbal_do</definition>
        <argsstring>(pme_load_balancing_t *pme_lb, t_commrec *cr, FILE *fp_err, FILE *fp_log, const gmx::MDLogger &amp;mdlog, const t_inputrec *ir, t_forcerec *fr, t_state *state, gmx_wallcycle_t wcycle, gmx_int64_t step, gmx_int64_t step_rel, gmx_bool *bPrinting)</argsstring>
        <name>pme_loadbal_do</name>
        <param>
          <type><ref refid="structpme__load__balancing__t" kindref="compound">pme_load_balancing_t</ref> *</type>
          <declname>pme_lb</declname>
        </param>
        <param>
          <type>struct <ref refid="structt__commrec" kindref="compound">t_commrec</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp_err</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp_log</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1MDLogger" kindref="compound">gmx::MDLogger</ref> &amp;</type>
          <declname>mdlog</declname>
        </param>
        <param>
          <type>const <ref refid="structt__inputrec" kindref="compound">t_inputrec</ref> *</type>
          <declname>ir</declname>
        </param>
        <param>
          <type><ref refid="structt__forcerec" kindref="compound">t_forcerec</ref> *</type>
          <declname>fr</declname>
        </param>
        <param>
          <type><ref refid="classt__state" kindref="compound">t_state</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="structgmx__wallcycle" kindref="compound">gmx_wallcycle_t</ref></type>
          <declname>wcycle</declname>
        </param>
        <param>
          <type>gmx_int64_t</type>
          <declname>step</declname>
        </param>
        <param>
          <type>gmx_int64_t</type>
          <declname>step_rel</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref> *</type>
          <declname>bPrinting</declname>
        </param>
        <briefdescription>
<para>Process cycles and PME load balance when necessary. </para>        </briefdescription>
        <detaileddescription>
<para>Process the cycles measured over the last nstlist steps and then either continue balancing or check if we need to trigger balancing. Should be called after the ewcSTEP cycle counter has been stopped. Returns if the load balancing is printing to fp_err. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="926" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="926" bodyend="1076"/>
      </memberdef>
      <memberdef kind="function" id="pme-load-balancing_8cpp_1aa096c117d68e13e5d18eeff3e39cf156" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int pme_grid_points</definition>
        <argsstring>(const pme_setup_t *setup)</argsstring>
        <name>pme_grid_points</name>
        <param>
          <type>const <ref refid="structpme__setup__t" kindref="compound">pme_setup_t</ref> *</type>
          <declname>setup</declname>
        </param>
        <briefdescription>
<para>Return product of the number of PME grid points in each dimension. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="1079" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="1079" bodyend="1082"/>
      </memberdef>
      <memberdef kind="function" id="pme-load-balancing_8cpp_1a34ad2116d0baa736e0d155ba956bf062" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void print_pme_loadbal_setting</definition>
        <argsstring>(FILE *fplog, const char *name, const pme_setup_t *setup)</argsstring>
        <name>print_pme_loadbal_setting</name>
        <param>
          <type>FILE *</type>
          <declname>fplog</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="structpme__setup__t" kindref="compound">pme_setup_t</ref> *</type>
          <declname>setup</declname>
        </param>
        <briefdescription>
<para>Print one load-balancing setting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="1085" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="1085" bodyend="1095"/>
      </memberdef>
      <memberdef kind="function" id="pme-load-balancing_8cpp_1a738403c89c46ba35701c160e156915fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void print_pme_loadbal_settings</definition>
        <argsstring>(pme_load_balancing_t *pme_lb, FILE *fplog, const gmx::MDLogger &amp;mdlog, gmx_bool bNonBondedOnGPU)</argsstring>
        <name>print_pme_loadbal_settings</name>
        <param>
          <type><ref refid="structpme__load__balancing__t" kindref="compound">pme_load_balancing_t</ref> *</type>
          <declname>pme_lb</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fplog</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1MDLogger" kindref="compound">gmx::MDLogger</ref> &amp;</type>
          <declname>mdlog</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bNonBondedOnGPU</declname>
        </param>
        <briefdescription>
<para>Print all load-balancing settings. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="1098" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="1098" bodyend="1147"/>
      </memberdef>
      <memberdef kind="function" id="pme-load-balancing_8cpp_1acb67e42228333b60cd1e7353b5da382e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pme_loadbal_done</definition>
        <argsstring>(pme_load_balancing_t *pme_lb, FILE *fplog, const gmx::MDLogger &amp;mdlog, gmx_bool bNonBondedOnGPU)</argsstring>
        <name>pme_loadbal_done</name>
        <param>
          <type><ref refid="structpme__load__balancing__t" kindref="compound">pme_load_balancing_t</ref> *</type>
          <declname>pme_lb</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fplog</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1MDLogger" kindref="compound">gmx::MDLogger</ref> &amp;</type>
          <declname>mdlog</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bNonBondedOnGPU</declname>
        </param>
        <briefdescription>
<para>Finish the PME load balancing and print the settings when fplog!=NULL. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" line="1149" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp" bodystart="1149" bodyend="1163"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file contains function definitions necessary for managing automatic load balance of PME calculations (Coulomb and LJ). </para>    </briefdescription>
    <detaileddescription>
<internal><para><simplesect kind="author"><para>Berk Hess <ulink url="mailto:hess@kth.se">hess@kth.se</ulink> </para></simplesect>
</para></internal>
    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/pme-load-balancing.cpp"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="gpu__utils__ocl_8cpp" kind="file">
    <compoundname>gpu_utils_ocl.cpp</compoundname>
    <includes refid="gmxpre_8h" local="yes">gmxpre.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">memory.h</includes>
    <includes refid="gpu__utils_8h" local="yes">gromacs/gpu_utils/gpu_utils.h</includes>
    <includes refid="ocl__compiler_8h" local="yes">gromacs/gpu_utils/ocl_compiler.h</includes>
    <includes refid="oclutils_8h" local="yes">gromacs/gpu_utils/oclutils.h</includes>
    <includes refid="hw__info_8h" local="yes">gromacs/hardware/hw_info.h</includes>
    <includes refid="md__enums_8h" local="yes">gromacs/mdtypes/md_enums.h</includes>
    <includes refid="cstringutil_8h" local="yes">gromacs/utility/cstringutil.h</includes>
    <includes refid="exceptions_8h" local="yes">gromacs/utility/exceptions.h</includes>
    <includes refid="fatalerror_8h" local="yes">gromacs/utility/fatalerror.h</includes>
    <includes refid="smalloc_8h" local="yes">gromacs/utility/smalloc.h</includes>
    <includes refid="stringutil_8h" local="yes">gromacs/utility/stringutil.h</includes>
    <incdepgraph>
      <node id="12021">
        <label>stdarg.h</label>
      </node>
      <node id="12010">
        <label>gromacs/utility/current_function.h</label>
        <link refid="current__function_8h"/>
      </node>
      <node id="12007">
        <label>gromacs/gpu_utils/gmxopencl.h</label>
        <link refid="gmxopencl_8h"/>
        <childnode refid="12008" relation="include">
        </childnode>
      </node>
      <node id="11993">
        <label>assert.h</label>
      </node>
      <node id="12003">
        <label>stdint.h</label>
      </node>
      <node id="11995">
        <label>stdlib.h</label>
      </node>
      <node id="11998">
        <label>gromacs/gpu_utils/gpu_utils.h</label>
        <link refid="gpu__utils_8h"/>
        <childnode refid="11999" relation="include">
        </childnode>
        <childnode refid="12000" relation="include">
        </childnode>
        <childnode refid="12001" relation="include">
        </childnode>
        <childnode refid="12002" relation="include">
        </childnode>
      </node>
      <node id="12012">
        <label>gromacs/utility/cstringutil.h</label>
        <link refid="cstringutil_8h"/>
        <childnode refid="11994" relation="include">
        </childnode>
        <childnode refid="12002" relation="include">
        </childnode>
      </node>
      <node id="12025">
        <label>cstdarg</label>
      </node>
      <node id="12000">
        <label>string</label>
      </node>
      <node id="12005">
        <label>gromacs/gpu_utils/ocl_compiler.h</label>
        <link refid="ocl__compiler_8h"/>
        <childnode refid="12000" relation="include">
        </childnode>
        <childnode refid="12006" relation="include">
        </childnode>
      </node>
      <node id="12019">
        <label>gromacs/utility/classhelpers.h</label>
        <link refid="classhelpers_8h"/>
        <childnode refid="12016" relation="include">
        </childnode>
      </node>
      <node id="12015">
        <label>exception</label>
      </node>
      <node id="12023">
        <label>stddef.h</label>
      </node>
      <node id="11997">
        <label>memory.h</label>
      </node>
      <node id="12009">
        <label>gromacs/utility/gmxassert.h</label>
        <link refid="gmxassert_8h"/>
        <childnode refid="12002" relation="include">
        </childnode>
        <childnode refid="12010" relation="include">
        </childnode>
      </node>
      <node id="12008">
        <label>CL/opencl.h</label>
      </node>
      <node id="11996">
        <label>string.h</label>
      </node>
      <node id="11999">
        <label>cstdio</label>
      </node>
      <node id="12022">
        <label>gromacs/utility/smalloc.h</label>
        <link refid="smalloc_8h"/>
        <childnode refid="12023" relation="include">
        </childnode>
        <childnode refid="12002" relation="include">
        </childnode>
      </node>
      <node id="12001">
        <label>vector</label>
      </node>
      <node id="12011">
        <label>gromacs/mdtypes/md_enums.h</label>
        <link refid="md__enums_8h"/>
        <childnode refid="12002" relation="include">
        </childnode>
      </node>
      <node id="11992">
        <label>gmxpre.h</label>
        <link refid="gmxpre_8h"/>
      </node>
      <node id="12024">
        <label>gromacs/utility/stringutil.h</label>
        <link refid="stringutil_8h"/>
        <childnode refid="12025" relation="include">
        </childnode>
        <childnode refid="12026" relation="include">
        </childnode>
        <childnode refid="12000" relation="include">
        </childnode>
        <childnode refid="12001" relation="include">
        </childnode>
      </node>
      <node id="12002">
        <label>gromacs/utility/basedefinitions.h</label>
        <link refid="basedefinitions_8h"/>
        <childnode refid="12003" relation="include">
        </childnode>
        <childnode refid="12004" relation="include">
        </childnode>
      </node>
      <node id="12014">
        <label>cstdlib</label>
      </node>
      <node id="12013">
        <label>gromacs/utility/exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="11999" relation="include">
        </childnode>
        <childnode refid="12014" relation="include">
        </childnode>
        <childnode refid="12015" relation="include">
        </childnode>
        <childnode refid="12016" relation="include">
        </childnode>
        <childnode refid="12000" relation="include">
        </childnode>
        <childnode refid="12017" relation="include">
        </childnode>
        <childnode refid="12018" relation="include">
        </childnode>
        <childnode refid="12001" relation="include">
        </childnode>
        <childnode refid="12002" relation="include">
        </childnode>
        <childnode refid="12019" relation="include">
        </childnode>
        <childnode refid="12010" relation="include">
        </childnode>
        <childnode refid="12009" relation="include">
        </childnode>
      </node>
      <node id="11991">
        <label>src/gromacs/gpu_utils/gpu_utils_ocl.cpp</label>
        <link refid="gpu_utils_ocl.cpp"/>
        <childnode refid="11992" relation="include">
        </childnode>
        <childnode refid="11993" relation="include">
        </childnode>
        <childnode refid="11994" relation="include">
        </childnode>
        <childnode refid="11995" relation="include">
        </childnode>
        <childnode refid="11996" relation="include">
        </childnode>
        <childnode refid="11997" relation="include">
        </childnode>
        <childnode refid="11998" relation="include">
        </childnode>
        <childnode refid="12005" relation="include">
        </childnode>
        <childnode refid="12006" relation="include">
        </childnode>
        <childnode refid="12011" relation="include">
        </childnode>
        <childnode refid="12012" relation="include">
        </childnode>
        <childnode refid="12013" relation="include">
        </childnode>
        <childnode refid="12020" relation="include">
        </childnode>
        <childnode refid="12022" relation="include">
        </childnode>
        <childnode refid="12024" relation="include">
        </childnode>
      </node>
      <node id="12006">
        <label>gromacs/gpu_utils/oclutils.h</label>
        <link refid="oclutils_8h"/>
        <childnode refid="12000" relation="include">
        </childnode>
        <childnode refid="12007" relation="include">
        </childnode>
        <childnode refid="12009" relation="include">
        </childnode>
      </node>
      <node id="12017">
        <label>type_traits</label>
      </node>
      <node id="12020">
        <label>gromacs/utility/fatalerror.h</label>
        <link refid="fatalerror_8h"/>
        <childnode refid="12021" relation="include">
        </childnode>
        <childnode refid="11994" relation="include">
        </childnode>
        <childnode refid="12002" relation="include">
        </childnode>
      </node>
      <node id="11994">
        <label>stdio.h</label>
      </node>
      <node id="12026">
        <label>cstring</label>
      </node>
      <node id="12016">
        <label>memory</label>
      </node>
      <node id="12004">
        <label>inttypes.h</label>
      </node>
      <node id="12018">
        <label>typeindex</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="gpu__utils__ocl_8cpp_1a63db61f0c7660eb3a7a3db486303b47b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool runningOnCompatibleOSForAmd</definition>
        <argsstring>()</argsstring>
        <name>runningOnCompatibleOSForAmd</name>
        <briefdescription>
<para>Return true if executing on compatible OS for AMD OpenCL. </para>        </briefdescription>
        <detaileddescription>
<para>This is assumed to be true for OS X version of at least 10.10.4 and all other OS flavors.</para><para>Uses the BSD sysctl() interfaces to extract the kernel version.</para><para><simplesect kind="return"><para>true if version is 14.4 or later (= OS X version 10.10.4), or OS is not Darwin. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" line="77" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" bodystart="77" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="gpu__utils__ocl_8cpp_1a2e270f50e7be2fba9bb967d53590f921" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int is_gmx_supported_gpu_id</definition>
        <argsstring>(struct gmx_device_info_t *ocl_gpu_device)</argsstring>
        <name>is_gmx_supported_gpu_id</name>
        <param>
          <type>struct <ref refid="structgmx__device__info__t" kindref="compound">gmx_device_info_t</ref> *</type>
          <declname>ocl_gpu_device</declname>
        </param>
        <briefdescription>
<para>Returns true if the gpu characterized by the device properties is supported by the native gpu acceleration. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the GPU properties passed indicate a compatible GPU, otherwise false. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" line="104" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" bodystart="104" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="gpu__utils__ocl_8cpp_1a48d3a72747f16f7bdc06e48af311eccc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="oclutils_8h_1a10849a150bcdfa716f8adaf20cfaabb7" kindref="member">ocl_vendor_id_t</ref></type>
        <definition>static ocl_vendor_id_t get_vendor_id</definition>
        <argsstring>(char *vendor_name)</argsstring>
        <name>get_vendor_id</name>
        <param>
          <type>char *</type>
          <declname>vendor_name</declname>
        </param>
        <briefdescription>
<para>Returns an ocl_vendor_id_t value corresponding to the input OpenCL vendor name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vendor_name</parametername>
</parameternamelist>
<parameterdescription>
<para>String with OpenCL vendor name. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ocl_vendor_id_t value for the input vendor_name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" line="129" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" bodystart="129" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="gpu__utils__ocl_8cpp_1a0e5655da488ed8af048ead6b840f746b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool canDetectGpus</definition>
        <argsstring>(std::string *errorMessage)</argsstring>
        <name>canDetectGpus</name>
        <param>
          <type>std::string *</type>
          <declname>errorMessage</declname>
        </param>
        <briefdescription>
<para>This function is documented in the header file. </para>        </briefdescription>
        <detaileddescription>
<para>Return whether GPUs can be detected. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" line="154" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" bodystart="154" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="gpu__utils__ocl_8cpp_1a2be05e97232a15ee671694be1f8634a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void findGpus</definition>
        <argsstring>(gmx_gpu_info_t *gpu_info)</argsstring>
        <name>findGpus</name>
        <param>
          <type><ref refid="structgmx__gpu__info__t" kindref="compound">gmx_gpu_info_t</ref> *</type>
          <declname>gpu_info</declname>
        </param>
        <briefdescription>
<para>This function is documented in the header file. </para>        </briefdescription>
        <detaileddescription>
<para>Find all GPUs in the system. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" line="182" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" bodystart="182" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="gpu__utils__ocl_8cpp_1aafdb3f8b5aee47160ad840824a6f8f5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_gpu_info</definition>
        <argsstring>(const gmx_gpu_info_t *gpu_info)</argsstring>
        <name>free_gpu_info</name>
        <param>
          <type>const <ref refid="structgmx__gpu__info__t" kindref="compound">gmx_gpu_info_t</ref> *</type>
          <declname>gpu_info</declname>
        </param>
        <briefdescription>
<para>This function is documented in the header file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" line="351" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" bodystart="351" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="gpu__utils__ocl_8cpp_1a2bc16b56a441046ce9ebaa9f402875d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; getCompatibleGpus</definition>
        <argsstring>(const gmx_gpu_info_t &amp;gpu_info)</argsstring>
        <name>getCompatibleGpus</name>
        <param>
          <type>const <ref refid="structgmx__gpu__info__t" kindref="compound">gmx_gpu_info_t</ref> &amp;</type>
          <declname>gpu_info</declname>
        </param>
        <briefdescription>
<para>This function is documented in the header file. </para>        </briefdescription>
        <detaileddescription>
<para>Return a container of the detected GPUs that are compatible. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" line="362" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" bodystart="362" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="gpu__utils__ocl_8cpp_1a803acba7fe33d56059490710cd092f6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* getGpuCompatibilityDescription</definition>
        <argsstring>(const gmx_gpu_info_t &amp;gpu_info, int index)</argsstring>
        <name>getGpuCompatibilityDescription</name>
        <param>
          <type>const <ref refid="structgmx__gpu__info__t" kindref="compound">gmx_gpu_info_t</ref> &amp;</type>
          <declname>gpu_info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>This function is documented in the header file. </para>        </briefdescription>
        <detaileddescription>
<para>Return a string describing how compatible the GPU with given <computeroutput>index</computeroutput> is. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" line="379" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" bodystart="379" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="gpu__utils__ocl_8cpp_1a3b6ddb3bb4f73a93b874eae4efc4f615" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_gpu_device_info_string</definition>
        <argsstring>(char *s, const gmx_gpu_info_t &amp;gpu_info, int index)</argsstring>
        <name>get_gpu_device_info_string</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="structgmx__gpu__info__t" kindref="compound">gmx_gpu_info_t</ref> &amp;</type>
          <declname>gpu_info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>This function is documented in the header file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" line="388" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" bodystart="388" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="gpu__utils__ocl_8cpp_1a1ec86f3b9b0407f36d5bc6282a27fa68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void init_gpu</definition>
        <argsstring>(const gmx::MDLogger &amp;, gmx_device_info_t *deviceInfo)</argsstring>
        <name>init_gpu</name>
        <param>
          <type>const <ref refid="classgmx_1_1MDLogger" kindref="compound">gmx::MDLogger</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structgmx__device__info__t" kindref="compound">gmx_device_info_t</ref> *</type>
          <declname>deviceInfo</declname>
        </param>
        <briefdescription>
<para>This function is documented in the header file. </para>        </briefdescription>
        <detaileddescription>
<para>Initializes the GPU described by <computeroutput>deviceInfo</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" line="419" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" bodystart="419" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="gpu__utils__ocl_8cpp_1aed4287f67e5c2d2c46a585c34146f634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgmx__device__info__t" kindref="compound">gmx_device_info_t</ref> *</type>
        <definition>gmx_device_info_t* getDeviceInfo</definition>
        <argsstring>(const gmx_gpu_info_t &amp;gpu_info, int deviceId)</argsstring>
        <name>getDeviceInfo</name>
        <param>
          <type>const <ref refid="structgmx__gpu__info__t" kindref="compound">gmx_gpu_info_t</ref> &amp;</type>
          <declname>gpu_info</declname>
        </param>
        <param>
          <type>int</type>
          <declname>deviceId</declname>
        </param>
        <briefdescription>
<para>This function is documented in the header file. </para>        </briefdescription>
        <detaileddescription>
<para>Return a pointer to the device info for <computeroutput>deviceId</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" line="443" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" bodystart="443" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="gpu__utils__ocl_8cpp_1ac368c4a971290513fbabe74a0c80b716" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t sizeof_gpu_dev_info</definition>
        <argsstring>(void)</argsstring>
        <name>sizeof_gpu_dev_info</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function is documented in the header file. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the size of the gpu_dev_info struct. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" line="454" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" bodystart="454" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="gpu__utils__ocl_8cpp_1ab791918a19cd4aefc96a099f27f0ca1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gpu_set_host_malloc_and_free</definition>
        <argsstring>(bool bUseGpuKernels, gmx_host_alloc_t **nb_alloc, gmx_host_free_t **nb_free)</argsstring>
        <name>gpu_set_host_malloc_and_free</name>
        <param>
          <type>bool</type>
          <declname>bUseGpuKernels</declname>
        </param>
        <param>
          <type><ref refid="gpu__utils_8h_1a4a5340aac0cf9145eaae8a5ac5d6b0dc" kindref="member">gmx_host_alloc_t</ref> **</type>
          <declname>nb_alloc</declname>
        </param>
        <param>
          <type><ref refid="gpu__utils_8h_1aff7e0f62ae0592b0aefadcf9071d0435" kindref="member">gmx_host_free_t</ref> **</type>
          <declname>nb_free</declname>
        </param>
        <briefdescription>
<para>Set page-locked memory allocation functions used by the GPU host. </para>        </briefdescription>
        <detaileddescription>
<para>Set page-locked memory allocation functions used by the GPU host.</para><para>Since GPU support is not configured, there is no host memory to allocate. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" line="459" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp" bodystart="459" bodyend="473"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Define functions for detection and initialization for OpenCL devices. </para>    </briefdescription>
    <detaileddescription>
<internal><para><simplesect kind="author"><para>Anca Hamuraru <ulink url="mailto:anca@streamcomputing.eu">anca@streamcomputing.eu</ulink> </para><simplesectsep/><para>Dimitrios Karkoulis <ulink url="mailto:dimitris.karkoulis@gmail.com">dimitris.karkoulis@gmail.com</ulink> </para><simplesectsep/><para>Teemu Virolainen <ulink url="mailto:teemu@streamcomputing.eu">teemu@streamcomputing.eu</ulink> </para></simplesect>
</para></internal>
    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/gpu_utils_ocl.cpp"/>
  </compounddef>
</doxygen>

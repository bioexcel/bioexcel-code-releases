<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1TextWriter" kind="class" prot="public">
    <compoundname>gmx::TextWriter</compoundname>
    <includes local="no">gromacs/utility/textwriter.h</includes>
    <innerclass refid="classgmx_1_1TextWriter_1_1Impl" prot="public">gmx::TextWriter::Impl</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1TextWriter_1ae1968d498c527794bc788e43625c5e0d" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1PrivateImplPointer" kindref="compound">PrivateImplPointer</ref>&lt; <ref refid="classgmx_1_1TextWriter_1_1Impl" kindref="compound">Impl</ref> &gt;</type>
        <definition>PrivateImplPointer&lt;Impl&gt; gmx::TextWriter::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" line="196" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgmx_1_1TextWriter_1abbde4743bd9082bacb2e0e999600df9f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::TextWriter::writeFileFromString</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;text)</argsstring>
        <name>writeFileFromString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Convenience method for writing a file from a string in a single call. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file to read. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">text</parametername>
</parameternamelist>
<parameterdescription>
<para>String to write to <computeroutput>filename</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1FileIOError" kindref="compound">FileIOError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on any I/O error.</para></parameterdescription>
</parameteritem>
</parameterlist>
If <computeroutput>filename</computeroutput> exists, it is overwritten. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" line="83" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.cpp" bodystart="126" bodyend="132"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1TextWriter_1a2d8ffd21a5defa0c0cccb4cae8c79aa4" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::TextWriter::TextWriter</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>TextWriter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Creates a writer that writes to specified file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> to the file to open. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1FileIOError" kindref="compound">FileIOError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on any I/O error.</para></parameterdescription>
</parameteritem>
</parameterlist>
This constructor is provided for convenience for writing directly to a file, without the need to construct multiple objects. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" line="96" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.cpp" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextWriter_1a32e12f85503d74940a73aea293198bbe" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::TextWriter::TextWriter</definition>
        <argsstring>(FILE *fp)</argsstring>
        <name>TextWriter</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
<para>Creates a writer that writes to specified file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fp</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1File" kindref="compound">File</ref> handle to write to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1FileIOError" kindref="compound">FileIOError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>on any I/O error.</para></parameterdescription>
</parameteritem>
</parameterlist>
This constructor is provided for interoperability with C-like code for writing directly to an already opened file, without the need to construct multiple objects.</para><para>The caller is responsible of closing <computeroutput>fp</computeroutput>; it is not allowed to call <ref refid="classgmx_1_1TextWriter_1aeb5664c1d354a35f621061f73888fb0d" kindref="member">close()</ref> on the writer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" line="111" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.cpp" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextWriter_1a7ad8fe5cb5d45d210076b6acc2bb3305" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::TextWriter::TextWriter</definition>
        <argsstring>(TextOutputStream *stream)</argsstring>
        <name>TextWriter</name>
        <param>
          <type><ref refid="classgmx_1_1TextOutputStream" kindref="compound">TextOutputStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Creates a writer that writes to specified stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Stream to write to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory.</para></parameterdescription>
</parameteritem>
</parameterlist>
The caller is responsible of the lifetime of the stream (should remain in existence as long as the writer exists).</para><para>This constructor is provided for convenience for cases where the stream is not allocated with <computeroutput>new</computeroutput> and/or not managed by a std::shared_ptr (e.g., if the stream is an object on the stack). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" line="125" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.cpp" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextWriter_1a87717822eeaef8cfe9b9bddcdc69d068" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::TextWriter::TextWriter</definition>
        <argsstring>(const TextOutputStreamPointer &amp;stream)</argsstring>
        <name>TextWriter</name>
        <param>
          <type>const <ref refid="namespacegmx_1a1fdec6c0997f8c033905f1f82f253d25" kindref="member">TextOutputStreamPointer</ref> &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Creates a writer that writes to specified stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Stream to write to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory.</para></parameterdescription>
</parameteritem>
</parameterlist>
The writer keeps a reference to the stream, so the caller can pass in a temporary if necessary. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" line="135" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.cpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextWriter_1aed23b8f6661ebc705b1c1f8439019cea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::TextWriter::~TextWriter</definition>
        <argsstring>()</argsstring>
        <name>~TextWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" line="136" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.cpp" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextWriter_1a87a974330d5791f7410e6b20e516d5ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1TextLineWrapperSettings" kindref="compound">TextLineWrapperSettings</ref> &amp;</type>
        <definition>TextLineWrapperSettings &amp; gmx::TextWriter::wrapperSettings</definition>
        <argsstring>()</argsstring>
        <name>wrapperSettings</name>
        <briefdescription>
<para>Allows adjusting wrapping settings for the writer. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000104"><xreftitle>Todo</xreftitle><xrefdescription><para>Wrapping is not currently implemented for code that writes partial lines with <ref refid="classgmx_1_1TextWriter_1a7a6aceff08f3a9bb9c5514892ea3dc3e" kindref="member">writeString()</ref>. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" line="145" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.cpp" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextWriter_1a7a6aceff08f3a9bb9c5514892ea3dc3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::TextWriter::writeString</definition>
        <argsstring>(const char *str)</argsstring>
        <name>writeString</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Writes a string to the stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>String to write. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" line="152" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.cpp" bodystart="163" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextWriter_1af6ec637edd2a0525a722775ff6118d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::TextWriter::writeString</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>writeString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Writes a string to the stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>String to write. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" line="154" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.cpp" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextWriter_1a5341367dcef6c8b27dca8c249b611dd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::TextWriter::writeLine</definition>
        <argsstring>(const char *line)</argsstring>
        <name>writeLine</name>
        <param>
          <type>const char *</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Writes a line to the stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">line</parametername>
</parameternamelist>
<parameterdescription>
<para>Line to write.</para></parameterdescription>
</parameteritem>
</parameterlist>
If <computeroutput>line</computeroutput> does not end in a newline, one newline is appended. Otherwise, works as <ref refid="classgmx_1_1TextWriter_1a7a6aceff08f3a9bb9c5514892ea3dc3e" kindref="member">writeString()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" line="163" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.cpp" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextWriter_1a63c33695252c2a9eec8f23b61b82a73a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::TextWriter::writeLine</definition>
        <argsstring>(const std::string &amp;line)</argsstring>
        <name>writeLine</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Writes a line to the stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">line</parametername>
</parameternamelist>
<parameterdescription>
<para>Line to write.</para></parameterdescription>
</parameteritem>
</parameterlist>
If <computeroutput>line</computeroutput> does not end in a newline, one newline is appended. Otherwise, works as <ref refid="classgmx_1_1TextWriter_1a7a6aceff08f3a9bb9c5514892ea3dc3e" kindref="member">writeString()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" line="165" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.cpp" bodystart="186" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextWriter_1a8648ce2a6f353fe300ec05148e70c386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::TextWriter::writeLine</definition>
        <argsstring>()</argsstring>
        <name>writeLine</name>
        <briefdescription>
<para>Writes a newline to the stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" line="167" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.cpp" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextWriter_1a21a2ed84930db8b70db2fde42dacca00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::TextWriter::ensureLineBreak</definition>
        <argsstring>()</argsstring>
        <name>ensureLineBreak</name>
        <briefdescription>
<para>Writes a newline if previous output did not end in one. </para>        </briefdescription>
        <detaileddescription>
<para>If nothing has been written using the writer, this method does nothing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" line="175" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.cpp" bodystart="197" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextWriter_1a730a830dc07436dae5ff40d941056329" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::TextWriter::ensureEmptyLine</definition>
        <argsstring>()</argsstring>
        <name>ensureEmptyLine</name>
        <briefdescription>
<para>Ensures that the next string written starts after an empty line. </para>        </briefdescription>
        <detaileddescription>
<para>Always terminates the current line (as with <ref refid="classgmx_1_1TextWriter_1a21a2ed84930db8b70db2fde42dacca00" kindref="member">ensureLineBreak()</ref>), but the empty line is only written out when the next line is written, so that trailing newlines after final output can be avoided.</para><para>If nothing has been written using the writer, this method does nothing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" line="186" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.cpp" bodystart="205" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1TextWriter_1aeb5664c1d354a35f621061f73888fb0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::TextWriter::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <briefdescription>
<para>Closes the underlying stream. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" line="191" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.cpp" bodystart="214" bodyend="217"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Writes text into a <ref refid="classgmx_1_1TextOutputStream" kindref="compound">TextOutputStream</ref>. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal /> This class provides more formatting and line-oriented writing capabilities than writing raw strings into the stream.</para><para>All methods that write to the stream can throw any exceptions that the underlying stream throws. </para>    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" line="71" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/textwriter.h" bodystart="70" bodyend="197"/>
    <listofallmembers>
      <member refid="classgmx_1_1TextWriter_1aeb5664c1d354a35f621061f73888fb0d" prot="public" virt="non-virtual"><scope>gmx::TextWriter</scope><name>close</name></member>
      <member refid="classgmx_1_1TextWriter_1a730a830dc07436dae5ff40d941056329" prot="public" virt="non-virtual"><scope>gmx::TextWriter</scope><name>ensureEmptyLine</name></member>
      <member refid="classgmx_1_1TextWriter_1a21a2ed84930db8b70db2fde42dacca00" prot="public" virt="non-virtual"><scope>gmx::TextWriter</scope><name>ensureLineBreak</name></member>
      <member refid="classgmx_1_1TextWriter_1ae1968d498c527794bc788e43625c5e0d" prot="private" virt="non-virtual"><scope>gmx::TextWriter</scope><name>impl_</name></member>
      <member refid="classgmx_1_1TextWriter_1a2d8ffd21a5defa0c0cccb4cae8c79aa4" prot="public" virt="non-virtual"><scope>gmx::TextWriter</scope><name>TextWriter</name></member>
      <member refid="classgmx_1_1TextWriter_1a32e12f85503d74940a73aea293198bbe" prot="public" virt="non-virtual"><scope>gmx::TextWriter</scope><name>TextWriter</name></member>
      <member refid="classgmx_1_1TextWriter_1a7ad8fe5cb5d45d210076b6acc2bb3305" prot="public" virt="non-virtual"><scope>gmx::TextWriter</scope><name>TextWriter</name></member>
      <member refid="classgmx_1_1TextWriter_1a87717822eeaef8cfe9b9bddcdc69d068" prot="public" virt="non-virtual"><scope>gmx::TextWriter</scope><name>TextWriter</name></member>
      <member refid="classgmx_1_1TextWriter_1a87a974330d5791f7410e6b20e516d5ae" prot="public" virt="non-virtual"><scope>gmx::TextWriter</scope><name>wrapperSettings</name></member>
      <member refid="classgmx_1_1TextWriter_1abbde4743bd9082bacb2e0e999600df9f" prot="public" virt="non-virtual"><scope>gmx::TextWriter</scope><name>writeFileFromString</name></member>
      <member refid="classgmx_1_1TextWriter_1a5341367dcef6c8b27dca8c249b611dd1" prot="public" virt="non-virtual"><scope>gmx::TextWriter</scope><name>writeLine</name></member>
      <member refid="classgmx_1_1TextWriter_1a63c33695252c2a9eec8f23b61b82a73a" prot="public" virt="non-virtual"><scope>gmx::TextWriter</scope><name>writeLine</name></member>
      <member refid="classgmx_1_1TextWriter_1a8648ce2a6f353fe300ec05148e70c386" prot="public" virt="non-virtual"><scope>gmx::TextWriter</scope><name>writeLine</name></member>
      <member refid="classgmx_1_1TextWriter_1a7a6aceff08f3a9bb9c5514892ea3dc3e" prot="public" virt="non-virtual"><scope>gmx::TextWriter</scope><name>writeString</name></member>
      <member refid="classgmx_1_1TextWriter_1af6ec637edd2a0525a722775ff6118d81" prot="public" virt="non-virtual"><scope>gmx::TextWriter</scope><name>writeString</name></member>
      <member refid="classgmx_1_1TextWriter_1aed23b8f6661ebc705b1c1f8439019cea" prot="public" virt="non-virtual"><scope>gmx::TextWriter</scope><name>~TextWriter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

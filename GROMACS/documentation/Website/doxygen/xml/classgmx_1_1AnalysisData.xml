<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1AnalysisData" kind="class" prot="public">
    <compoundname>gmx::AnalysisData</compoundname>
    <basecompoundref refid="classgmx_1_1AbstractAnalysisData" prot="public" virt="non-virtual">gmx::AbstractAnalysisData</basecompoundref>
    <includes local="no">gromacs/analysisdata/analysisdata.h</includes>
    <innerclass refid="classgmx_1_1AnalysisData_1_1Impl" prot="public">gmx::AnalysisData::Impl</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1AnalysisData_1a4656defb4422f121a11a15744bc4fbbd" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1PrivateImplPointer" kindref="compound">PrivateImplPointer</ref>&lt; <ref refid="classgmx_1_1AnalysisData_1_1Impl" kindref="compound">Impl</ref> &gt;</type>
        <definition>PrivateImplPointer&lt;Impl&gt; gmx::AnalysisData::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.h" line="202" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgmx_1_1AnalysisData_1a1d5cd0965d17777c248da64c258b83d4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class AnalysisDataHandle</definition>
        <argsstring></argsstring>
        <name>AnalysisDataHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.h" line="204" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1AnalysisData_1afde1676e7c3d3fc4dedbd441063b281f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::AnalysisData::AnalysisData</definition>
        <argsstring>()</argsstring>
        <name>AnalysisData</name>
        <briefdescription>
<para>Creates an empty analysis data object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.h" line="98" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.cpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisData_1a38c4f649c4a505f7da9e6585055489c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>gmx::AnalysisData::~AnalysisData</definition>
        <argsstring>()</argsstring>
        <name>~AnalysisData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.h" line="99" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.cpp" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisData_1a52581701312f80286fce213167df9bf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::AnalysisData::setDataSetCount</definition>
        <argsstring>(int dataSetCount)</argsstring>
        <name>setDataSetCount</name>
        <param>
          <type>int</type>
          <declname>dataSetCount</declname>
        </param>
        <briefdescription>
<para>Sets the number of data sets. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dataSetCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of data sets (must be &gt; 0). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1APIError" kindref="compound">APIError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if modules have been added that are not compatible with the new data set count.</para></parameterdescription>
</parameteritem>
</parameterlist>
Must not be called after <ref refid="classgmx_1_1AnalysisData_1a1db0cb22f56abd7d612dc59992ce3486" kindref="member">startData()</ref> has been called. If not called, a single data set is assumed. If called multiple times, the last call takes effect. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.h" line="113" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.cpp" bodystart="131" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisData_1a2ed328beb6480f608cc3cb902a52b61f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::AnalysisData::setColumnCount</definition>
        <argsstring>(int dataSet, int columnCount)</argsstring>
        <name>setColumnCount</name>
        <param>
          <type>int</type>
          <declname>dataSet</declname>
        </param>
        <param>
          <type>int</type>
          <declname>columnCount</declname>
        </param>
        <briefdescription>
<para>Sets the number of columns in a data set. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dataSet</parametername>
</parameternamelist>
<parameterdescription>
<para>Zero-based data set index. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">columnCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of columns in the data (must be &gt; 0). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1APIError" kindref="compound">APIError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if modules have been added that are not compatible with the new column count.</para></parameterdescription>
</parameteritem>
</parameterlist>
Must be called before <ref refid="classgmx_1_1AnalysisData_1a1db0cb22f56abd7d612dc59992ce3486" kindref="member">startData()</ref> for each data set. Must not be called after <ref refid="classgmx_1_1AnalysisData_1a1db0cb22f56abd7d612dc59992ce3486" kindref="member">startData()</ref> has been called. If called multiple times for a data set, the last call takes effect. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.h" line="126" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.cpp" bodystart="140" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisData_1a01cb4745e7a693567d83afcf81b882f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::AnalysisData::setMultipoint</definition>
        <argsstring>(bool bMultipoint)</argsstring>
        <name>setMultipoint</name>
        <param>
          <type>bool</type>
          <declname>bMultipoint</declname>
        </param>
        <briefdescription>
<para>Sets whether the data contains multiple points per column per frame. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">bMultipoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the data will allow multiple points per column within a single frame. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1APIError" kindref="compound">APIError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if modules have been added that are not compatible with the new setting.</para></parameterdescription>
</parameteritem>
</parameterlist>
If this method is not called, the data is not multipoint.</para><para>Must not be called after <ref refid="classgmx_1_1AnalysisData_1a1db0cb22f56abd7d612dc59992ce3486" kindref="member">startData()</ref> has been called.</para><para><simplesect kind="see"><para><ref refid="classgmx_1_1AbstractAnalysisData_1a3c84cd94769c773907605c53ba417a47" kindref="member">isMultipoint()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.h" line="141" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.cpp" bodystart="149" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisData_1aa01a654b47dfccafb81daaa1895fcd79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int gmx::AnalysisData::frameCount</definition>
        <argsstring>() const </argsstring>
        <name>frameCount</name>
        <reimplements refid="classgmx_1_1AbstractAnalysisData_1a49ff8cb5c6087a8081f72b436b9824e7">frameCount</reimplements>
        <briefdescription>
<para>Returns the total number of frames in the data. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The total number of frames in the data.</para></simplesect>
This function returns the number of frames that the object has produced. If <ref refid="classgmx_1_1AbstractAnalysisData_1a99ba2f4072c75c8e56d1e377cb6b5f8c" kindref="member">requestStorage()</ref> has been successfully called, tryGetDataframe() or <ref refid="classgmx_1_1AbstractAnalysisData_1ac97ab78a57e02aad95c9e679ef8b2798" kindref="member">getDataFrame()</ref> can be used to access some or all of these frames.</para><para>Does not throw.</para><para>Derived classes should implement this to return the number of frames. The frame count should not be incremented before tryGetDataFrameInternal() can return the new frame. The frame count must be incremented before <ref refid="classgmx_1_1AnalysisDataModuleManager_1a5b29d7c4017b27a705d492019f63b9ae" kindref="member">AnalysisDataModuleManager::notifyFrameFinish()</ref> is called. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.h" line="143" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.cpp" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisData_1a1db0cb22f56abd7d612dc59992ce3486" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1AnalysisDataHandle" kindref="compound">AnalysisDataHandle</ref></type>
        <definition>AnalysisDataHandle gmx::AnalysisData::startData</definition>
        <argsstring>(const AnalysisDataParallelOptions &amp;opt)</argsstring>
        <name>startData</name>
        <param>
          <type>const <ref refid="classgmx_1_1AnalysisDataParallelOptions" kindref="compound">AnalysisDataParallelOptions</ref> &amp;</type>
          <declname>opt</declname>
        </param>
        <briefdescription>
<para>Creates a handle for adding data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">opt</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Options" kindref="compound">Options</ref> for setting how this handle will be used. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The created handle. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1APIError" kindref="compound">APIError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if any attached data module is not compatible. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unspecified</parametername>
</parameternamelist>
<parameterdescription>
<para>Any exception thrown by attached data modules in <ref refid="classgmx_1_1IAnalysisDataModule_1ac77236904b9f2871c38a73e2d150d787" kindref="member">IAnalysisDataModule::dataStarted()</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
The caller should retain the returned handle (or a copy of it), and pass it to <ref refid="classgmx_1_1AnalysisData_1a0187a7640e5af29dd67a7f7064b16bf4" kindref="member">finishData()</ref> after successfully adding all data. The caller should discard the returned handle if an error occurs; memory allocated for the handle will be freed when the <ref refid="classgmx_1_1AnalysisData" kindref="compound">AnalysisData</ref> object is destroyed.</para><para>The <computeroutput>opt</computeroutput> options should be the same for all calls to this method, and the number of calls should match the parallelization factor defined in <computeroutput>opt</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.h" line="166" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.cpp" bodystart="165" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisData_1a54e98fd211473c7cfe750e2b49517d96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::AnalysisData::finishFrameSerial</definition>
        <argsstring>(int frameIndex)</argsstring>
        <name>finishFrameSerial</name>
        <param>
          <type>int</type>
          <declname>frameIndex</declname>
        </param>
        <briefdescription>
<para>Performs in-order sequential processing for the next frame. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">frameIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the frame that has been finished. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>unspecified</parametername>
</parameternamelist>
<parameterdescription>
<para>Any exception thrown by attached data modules in <ref refid="classgmx_1_1IAnalysisDataModule_1a803d7992f7d0723103c61727f80938bd" kindref="member">IAnalysisDataModule::frameFinishedSerial()</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
This method should be called sequentially for each frame, after data for that frame has been produced. It is not necessary to call this method if there is no parallelism, i.e., if only a single data handle is created and the parallelization options provided at that time do not indicate parallelism. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.h" line="180" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.cpp" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisData_1a0187a7640e5af29dd67a7f7064b16bf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::AnalysisData::finishData</definition>
        <argsstring>(AnalysisDataHandle handle)</argsstring>
        <name>finishData</name>
        <param>
          <type><ref refid="classgmx_1_1AnalysisDataHandle" kindref="compound">AnalysisDataHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Destroys a handle after all data has been added. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to destroy. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>unspecified</parametername>
</parameternamelist>
<parameterdescription>
<para>Any exception thrown by attached data modules in <ref refid="classgmx_1_1IAnalysisDataModule_1ab85bf34dcfbd4f5c4be6711c7b07d29c" kindref="member">IAnalysisDataModule::dataFinished()</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<computeroutput>handle</computeroutput> must have been obtained from <ref refid="classgmx_1_1AnalysisData_1a1db0cb22f56abd7d612dc59992ce3486" kindref="member">startData()</ref> of this object. The order of the calls with respect to the corresponding <ref refid="classgmx_1_1AnalysisData_1a1db0cb22f56abd7d612dc59992ce3486" kindref="member">startData()</ref> calls is not important.</para><para>The <computeroutput>handle</computeroutput> (and any copies) are invalid after the call. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.h" line="194" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.cpp" bodystart="188" bodyend="208"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgmx_1_1AnalysisData_1a05deeaddb6550a04b412d3c0d681bc80" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classgmx_1_1AnalysisDataFrameRef" kindref="compound">AnalysisDataFrameRef</ref></type>
        <definition>AnalysisDataFrameRef gmx::AnalysisData::tryGetDataFrameInternal</definition>
        <argsstring>(int index) const </argsstring>
        <name>tryGetDataFrameInternal</name>
        <reimplements refid="classgmx_1_1AbstractAnalysisData_1af919927886d1ac547b1841b09af8bd59">tryGetDataFrameInternal</reimplements>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Implements access to data frames. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Zero-based frame index to access. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Frame reference to frame <computeroutput>index</computeroutput>, or an invalid reference if no such frame is available.</para></simplesect>
Must not throw. Failure to access a frame with the given index is indicated through the return value.</para><para>Code in derived classes can assume that <computeroutput>index</computeroutput> is non-negative and less than <ref refid="classgmx_1_1AnalysisData_1aa01a654b47dfccafb81daaa1895fcd79" kindref="member">frameCount()</ref>.</para><para>Derived classes can choose to return an invalid reference if requestStorageInternal() has not been called at all, or if the frame is too old (compared to the value given to requestStorageInternal()).</para><para>This method is called internally by <ref refid="classgmx_1_1AbstractAnalysisData_1ac7f670bd3e772d5055f485e9f0e51658" kindref="member">tryGetDataFrame()</ref> and <ref refid="classgmx_1_1AbstractAnalysisData_1ac97ab78a57e02aad95c9e679ef8b2798" kindref="member">getDataFrame()</ref>.</para><para><simplesect kind="see"><para><ref refid="classgmx_1_1AnalysisDataStorage" kindref="compound">AnalysisDataStorage</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.h" line="197" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.cpp" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1AnalysisData_1aa90f7d683789717700fe0b5cd403d1dd" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool gmx::AnalysisData::requestStorageInternal</definition>
        <argsstring>(int nframes)</argsstring>
        <name>requestStorageInternal</name>
        <reimplements refid="classgmx_1_1AbstractAnalysisData_1a7b0f26e6b9b4c981ca611ca782570aa6">requestStorageInternal</reimplements>
        <param>
          <type>int</type>
          <declname>nframes</declname>
        </param>
        <briefdescription>
<para>Implements storage requests. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nframes</parametername>
</parameternamelist>
<parameterdescription>
<para>Request storing at least <computeroutput>nframes</computeroutput> previous frames (-1 = request storing all). Will be either -1 or &gt;0. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the request could be satisfied.</para></simplesect>
Must not throw. Failure to access a frame with the given index is indicated through the return value.</para><para>Derived classes should be prepared for any number of calls to this method before notifyDataStart() is called (and during that call).</para><para>This method is called internally by <ref refid="classgmx_1_1AbstractAnalysisData_1a99ba2f4072c75c8e56d1e377cb6b5f8c" kindref="member">requestStorage()</ref>.</para><para><simplesect kind="see"><para><ref refid="classgmx_1_1AnalysisDataStorage" kindref="compound">AnalysisDataStorage</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.h" line="198" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.cpp" bodystart="219" bodyend="222"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Parallelizable data container for raw data. </para>    </briefdescription>
    <detaileddescription>
<para>This is the main class used to implement parallelizable data processing in analysis tools. It is used by first creating an object and setting its properties using <ref refid="classgmx_1_1AnalysisData_1a52581701312f80286fce213167df9bf5" kindref="member">setDataSetCount()</ref>, <ref refid="classgmx_1_1AnalysisData_1a2ed328beb6480f608cc3cb902a52b61f" kindref="member">setColumnCount()</ref> and <ref refid="classgmx_1_1AnalysisData_1a01cb4745e7a693567d83afcf81b882f6" kindref="member">setMultipoint()</ref>, and attaching necessary modules using <ref refid="classgmx_1_1AbstractAnalysisData_1ada778191d76b2826b57e7b30ecd7a296" kindref="member">addModule()</ref> etc. Then one or more <ref refid="classgmx_1_1AnalysisDataHandle" kindref="compound">AnalysisDataHandle</ref> objects can be created using <ref refid="classgmx_1_1AnalysisData_1a1db0cb22f56abd7d612dc59992ce3486" kindref="member">startData()</ref>. Each data handle can then be independently used to provide data frames (each frame must be provided by a single handle, but different frames can be freely mixed between the handles). The <ref refid="classgmx_1_1AnalysisData_1a54e98fd211473c7cfe750e2b49517d96" kindref="member">finishFrameSerial()</ref> method must be called in serial for each frame, after one of the handles has been used to provide the data for that frame. When all data has been provided, the handles are destroyed using <ref refid="classgmx_1_1AnalysisData_1a0187a7640e5af29dd67a7f7064b16bf4" kindref="member">finishData()</ref> (or <ref refid="classgmx_1_1AnalysisDataHandle_1a58f3f261400bea1983004e6589ee1fb0" kindref="member">AnalysisDataHandle::finishData()</ref>).</para><para>When used through the trajectory analysis framework, calls to <ref refid="classgmx_1_1AnalysisData_1a1db0cb22f56abd7d612dc59992ce3486" kindref="member">startData()</ref>, <ref refid="classgmx_1_1AnalysisData_1a54e98fd211473c7cfe750e2b49517d96" kindref="member">finishFrameSerial()</ref>, and <ref refid="classgmx_1_1AnalysisData_1a0187a7640e5af29dd67a7f7064b16bf4" kindref="member">finishData()</ref> are handled by the framework.</para><para><xrefsect id="todo_1_todo000005"><xreftitle>Todo</xreftitle><xrefdescription><para>Parallel implementation is not complete.</para></xrefdescription></xrefsect></para><para>Special note for MPI implementation: assuming that the initialization of data objects is identical in all processes, associating the data objects in different MPI processes should be possible without changes in the interface. Alternative, more robust implementation could get a unique ID as parameter to the constructor or a separate function, but would require all tools to provide it. With the current registration mechanism in <ref refid="classgmx_1_1TrajectoryAnalysisModule" kindref="compound">TrajectoryAnalysisModule</ref>, this should be straightforward. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="859">
        <label>gmx::AbstractAnalysisData</label>
        <link refid="classgmx_1_1AbstractAnalysisData"/>
      </node>
      <node id="858">
        <label>gmx::AnalysisData</label>
        <link refid="classgmx_1_1AnalysisData"/>
        <childnode refid="859" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="861">
        <label>gmx::AbstractAnalysisData</label>
        <link refid="classgmx_1_1AbstractAnalysisData"/>
      </node>
      <node id="860">
        <label>gmx::AnalysisData</label>
        <link refid="classgmx_1_1AnalysisData"/>
        <childnode refid="861" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.h" line="91" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/analysisdata.h" bodystart="90" bodyend="205"/>
    <listofallmembers>
      <member refid="classgmx_1_1AbstractAnalysisData_1add6e07c5937629d51e525b38786c0243" prot="protected" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>AbstractAnalysisData</name></member>
      <member refid="classgmx_1_1AbstractAnalysisData_1a8e6f762df563d577f8a1d34a35273952" prot="public" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>addColumnModule</name></member>
      <member refid="classgmx_1_1AbstractAnalysisData_1ada778191d76b2826b57e7b30ecd7a296" prot="public" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>addModule</name></member>
      <member refid="classgmx_1_1AnalysisData_1afde1676e7c3d3fc4dedbd441063b281f" prot="public" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>AnalysisData</name></member>
      <member refid="classgmx_1_1AnalysisData_1a1d5cd0965d17777c248da64c258b83d4" prot="private" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>AnalysisDataHandle</name></member>
      <member refid="classgmx_1_1AbstractAnalysisData_1ae095550bd347b42db3c49e064bc44228" prot="public" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>applyModule</name></member>
      <member refid="classgmx_1_1AbstractAnalysisData_1ad0c3d329b51830be42ad0b447ac56d31" prot="public" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>columnCount</name></member>
      <member refid="classgmx_1_1AbstractAnalysisData_1ac5c4dbc7b71874e137e8af955fa09624" prot="public" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>columnCount</name></member>
      <member refid="classgmx_1_1AbstractAnalysisData_1aa5e15c4c54a953a2d13855286ca1391e" prot="public" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>dataSetCount</name></member>
      <member refid="classgmx_1_1AnalysisData_1a0187a7640e5af29dd67a7f7064b16bf4" prot="public" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>finishData</name></member>
      <member refid="classgmx_1_1AnalysisData_1a54e98fd211473c7cfe750e2b49517d96" prot="public" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>finishFrameSerial</name></member>
      <member refid="classgmx_1_1AnalysisData_1aa01a654b47dfccafb81daaa1895fcd79" prot="public" virt="virtual"><scope>gmx::AnalysisData</scope><name>frameCount</name></member>
      <member refid="classgmx_1_1AbstractAnalysisData_1ac97ab78a57e02aad95c9e679ef8b2798" prot="public" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>getDataFrame</name></member>
      <member refid="classgmx_1_1AnalysisData_1a4656defb4422f121a11a15744bc4fbbd" prot="private" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>impl_</name></member>
      <member refid="classgmx_1_1AbstractAnalysisData_1a3c84cd94769c773907605c53ba417a47" prot="public" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>isMultipoint</name></member>
      <member refid="classgmx_1_1AbstractAnalysisData_1a4e906c510c615f77574d4a5b769db892" prot="protected" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>moduleManager</name></member>
      <member refid="classgmx_1_1AbstractAnalysisData_1a7510c88948101d44334714f2c5d9fbf3" prot="protected" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>moduleManager</name></member>
      <member refid="classgmx_1_1AbstractAnalysisData_1a99ba2f4072c75c8e56d1e377cb6b5f8c" prot="public" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>requestStorage</name></member>
      <member refid="classgmx_1_1AnalysisData_1aa90f7d683789717700fe0b5cd403d1dd" prot="private" virt="virtual"><scope>gmx::AnalysisData</scope><name>requestStorageInternal</name></member>
      <member refid="classgmx_1_1AnalysisData_1a2ed328beb6480f608cc3cb902a52b61f" prot="public" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>setColumnCount</name></member>
      <member refid="classgmx_1_1AnalysisData_1a52581701312f80286fce213167df9bf5" prot="public" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>setDataSetCount</name></member>
      <member refid="classgmx_1_1AnalysisData_1a01cb4745e7a693567d83afcf81b882f6" prot="public" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>setMultipoint</name></member>
      <member refid="classgmx_1_1AnalysisData_1a1db0cb22f56abd7d612dc59992ce3486" prot="public" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>startData</name></member>
      <member refid="classgmx_1_1AbstractAnalysisData_1ac7f670bd3e772d5055f485e9f0e51658" prot="public" virt="non-virtual"><scope>gmx::AnalysisData</scope><name>tryGetDataFrame</name></member>
      <member refid="classgmx_1_1AnalysisData_1a05deeaddb6550a04b412d3c0d681bc80" prot="private" virt="virtual"><scope>gmx::AnalysisData</scope><name>tryGetDataFrameInternal</name></member>
      <member refid="classgmx_1_1AbstractAnalysisData_1a13d8d87f507077f7867dcc8326255074" prot="public" virt="virtual"><scope>gmx::AnalysisData</scope><name>~AbstractAnalysisData</name></member>
      <member refid="classgmx_1_1AnalysisData_1a38c4f649c4a505f7da9e6585055489c5" prot="public" virt="virtual"><scope>gmx::AnalysisData</scope><name>~AnalysisData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

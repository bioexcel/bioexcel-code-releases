<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl" kind="class" prot="public">
    <compoundname>gmx::test::TestReferenceChecker::Impl</compoundname>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a8ea71aefa212cf96b1d68e0061e9302c" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char *const gmx::test::TestReferenceChecker::Impl::cBooleanNodeName</definition>
        <argsstring></argsstring>
        <name>cBooleanNodeName</name>
        <initializer>= &quot;Bool&quot;</initializer>
        <briefdescription>
<para>String constant for naming XML elements for boolean values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="384" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1ad25c430d0933e60469c07b096d7d05ae" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char *const gmx::test::TestReferenceChecker::Impl::cStringNodeName</definition>
        <argsstring></argsstring>
        <name>cStringNodeName</name>
        <initializer>= &quot;String&quot;</initializer>
        <briefdescription>
<para>String constant for naming XML elements for string values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="386" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a84e8be3b18d83779580d5515dab113ea" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char *const gmx::test::TestReferenceChecker::Impl::cUCharNodeName</definition>
        <argsstring></argsstring>
        <name>cUCharNodeName</name>
        <initializer>= &quot;UChar&quot;</initializer>
        <briefdescription>
<para>String constant for naming XML elements for unsigned char values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="388" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a6a517f29fea3a0d0cdde4f652bdc605f" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char *const gmx::test::TestReferenceChecker::Impl::cIntegerNodeName</definition>
        <argsstring></argsstring>
        <name>cIntegerNodeName</name>
        <initializer>= &quot;Int&quot;</initializer>
        <briefdescription>
<para>String constant for naming XML elements for integer values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="390" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a8159b89f8c0704164c58ebbb49798c73" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char *const gmx::test::TestReferenceChecker::Impl::cInt64NodeName</definition>
        <argsstring></argsstring>
        <name>cInt64NodeName</name>
        <initializer>= &quot;Int64&quot;</initializer>
        <briefdescription>
<para>String constant for naming XML elements for int64 values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="392" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1af9f48272c4c5c7f8d1ed22a795ad3f26" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char *const gmx::test::TestReferenceChecker::Impl::cUInt64NodeName</definition>
        <argsstring></argsstring>
        <name>cUInt64NodeName</name>
        <initializer>= &quot;UInt64&quot;</initializer>
        <briefdescription>
<para>String constant for naming XML elements for unsigned int64 values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="394" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a02ceb833b0070968c2a2fbcba782b951" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char *const gmx::test::TestReferenceChecker::Impl::cRealNodeName</definition>
        <argsstring></argsstring>
        <name>cRealNodeName</name>
        <initializer>= &quot;Real&quot;</initializer>
        <briefdescription>
<para>String constant for naming XML elements for floating-point values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="396" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1ad296fc7ff55074e18ba785bb51b7f6be" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char *const gmx::test::TestReferenceChecker::Impl::cIdAttrName</definition>
        <argsstring></argsstring>
        <name>cIdAttrName</name>
        <initializer>= &quot;Name&quot;</initializer>
        <briefdescription>
<para>String constant for naming XML attribute for value identifiers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="398" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1af34e0ec8239d7e2c2302576f81acd819" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char *const gmx::test::TestReferenceChecker::Impl::cVectorType</definition>
        <argsstring></argsstring>
        <name>cVectorType</name>
        <initializer>= &quot;Vector&quot;</initializer>
        <briefdescription>
<para>String constant for naming compounds for vectors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="400" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a31c483d09e8d5ce813c538d75c02862d" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char *const gmx::test::TestReferenceChecker::Impl::cObjectType</definition>
        <argsstring></argsstring>
        <name>cObjectType</name>
        <initializer>= &quot;Object&quot;</initializer>
        <briefdescription>
<para>String constant for naming compounds for key-value tree objects. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="402" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a91d71841386d14ba364d23731a4919c8" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char *const gmx::test::TestReferenceChecker::Impl::cSequenceType</definition>
        <argsstring></argsstring>
        <name>cSequenceType</name>
        <initializer>= &quot;Sequence&quot;</initializer>
        <briefdescription>
<para>String constant for naming compounds for sequences. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="404" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a408eca7422972d977d6a65d5674c5983" prot="public" static="yes" mutable="no">
        <type>const char *const</type>
        <definition>const char *const gmx::test::TestReferenceChecker::Impl::cSequenceLengthName</definition>
        <argsstring></argsstring>
        <name>cSequenceLengthName</name>
        <initializer>= &quot;Length&quot;</initializer>
        <briefdescription>
<para>String constant for value identifier for sequence length. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="406" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="406" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1aad50e03a6910edd05eb38636a1638e88" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gmx::test::TestReferenceChecker::Impl::initialized_</definition>
        <argsstring></argsstring>
        <name>initialized_</name>
        <briefdescription>
<para>Whether initialized with other means than the default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="499" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a04a872dd8e24fb821ed705540663691d" prot="public" static="no" mutable="no">
        <type><ref refid="classgmx_1_1test_1_1FloatingPointTolerance" kindref="compound">FloatingPointTolerance</ref></type>
        <definition>FloatingPointTolerance gmx::test::TestReferenceChecker::Impl::defaultTolerance_</definition>
        <argsstring></argsstring>
        <name>defaultTolerance_</name>
        <briefdescription>
<para>Default floating-point comparison tolerance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="501" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1ae864c01ce9412c5674de823de8c0effb" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string gmx::test::TestReferenceChecker::Impl::path_</definition>
        <argsstring></argsstring>
        <name>path_</name>
        <briefdescription>
<para>Human-readable path to the root node of this checker. </para>        </briefdescription>
        <detaileddescription>
<para>For the root checker, this will be &quot;/&quot;, and for each compound, the id of the compound is added. Used for reporting comparison mismatches. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="509" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a0a20c83fa9cb4952ebf78ec99d5a472c" prot="public" static="no" mutable="no">
        <type><ref refid="classgmx_1_1test_1_1ReferenceDataEntry" kindref="compound">ReferenceDataEntry</ref> *</type>
        <definition>ReferenceDataEntry* gmx::test::TestReferenceChecker::Impl::compareRootEntry_</definition>
        <argsstring></argsstring>
        <name>compareRootEntry_</name>
        <briefdescription>
<para>Current entry under which reference data is searched for comparison. </para>        </briefdescription>
        <detaileddescription>
<para>Points to either the TestReferenceDataImpl::compareRootEntry_, or to a compound entry in the tree rooted at that entry.</para><para>Can be NULL, in which case this checker does nothing (doesn&apos;t even report errors, see <ref refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a07b50c88bae31837b40d5b579a7b09c3" kindref="member">shouldIgnore()</ref>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="519" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a0a3b479f7489afaa61e604660a15ae19" prot="public" static="no" mutable="no">
        <type><ref refid="classgmx_1_1test_1_1ReferenceDataEntry" kindref="compound">ReferenceDataEntry</ref> *</type>
        <definition>ReferenceDataEntry* gmx::test::TestReferenceChecker::Impl::outputRootEntry_</definition>
        <argsstring></argsstring>
        <name>outputRootEntry_</name>
        <briefdescription>
<para>Current entry under which entries for writing are created. </para>        </briefdescription>
        <detaileddescription>
<para>Points to either the TestReferenceDataImpl::outputRootEntry_, or to a compound entry in the tree rooted at that entry. NULL if only comparing, or if <ref refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a07b50c88bae31837b40d5b579a7b09c3" kindref="member">shouldIgnore()</ref> returns <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="527" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="527" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a353b051ec9527ab745fcfb637ddd92ae" prot="public" static="no" mutable="no">
        <type>ReferenceDataEntry::ChildIterator</type>
        <definition>ReferenceDataEntry::ChildIterator gmx::test::TestReferenceChecker::Impl::lastFoundEntry_</definition>
        <argsstring></argsstring>
        <name>lastFoundEntry_</name>
        <briefdescription>
<para>Iterator to a child of <emphasis>compareRootEntry_</emphasis> that was last found. </para>        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>compareRootEntry_-&gt;isValidChild()</computeroutput> returns false, no entry has been found yet. After every check, is updated to point to the entry that was used for the check. Subsequent checks start the search for the matching node on this node. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="538" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="538" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a1aecae7352e5cdfbd04ee7bc4e7bb0d4" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gmx::test::TestReferenceChecker::Impl::updateMismatchingEntries_</definition>
        <argsstring></argsstring>
        <name>updateMismatchingEntries_</name>
        <briefdescription>
<para>Whether the reference data is being written (true) or compared (false). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="543" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="543" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a6c8cfcb3e778c22ff3e5a54e0364fede" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gmx::test::TestReferenceChecker::Impl::bSelfTestMode_</definition>
        <argsstring></argsstring>
        <name>bSelfTestMode_</name>
        <briefdescription>
<para><computeroutput>true</computeroutput> if self-testing (enables extra failure messages). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="545" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a5de7f1436e0bfefd57108e96072cf242" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int gmx::test::TestReferenceChecker::Impl::seqIndex_</definition>
        <argsstring></argsstring>
        <name>seqIndex_</name>
        <briefdescription>
<para>Current number of unnamed elements in a sequence. </para>        </briefdescription>
        <detaileddescription>
<para>It is the index of the current unnamed element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="551" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="551" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1ad4f1c767e47356b8ac32f95284bf01d0" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::test::TestReferenceChecker::Impl::Impl</definition>
        <argsstring>(bool initialized)</argsstring>
        <name>Impl</name>
        <param>
          <type>bool</type>
          <declname>initialized</declname>
        </param>
        <briefdescription>
<para>Creates a checker that does nothing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="409" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="568" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a63dd1e9a79219231d31123a6ce0329ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::test::TestReferenceChecker::Impl::Impl</definition>
        <argsstring>(const std::string &amp;path, ReferenceDataEntry *compareRootEntry, ReferenceDataEntry *outputRootEntry, bool updateMismatchingEntries, bool bSelfTestMode, const FloatingPointTolerance &amp;defaultTolerance)</argsstring>
        <name>Impl</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1test_1_1ReferenceDataEntry" kindref="compound">ReferenceDataEntry</ref> *</type>
          <declname>compareRootEntry</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1test_1_1ReferenceDataEntry" kindref="compound">ReferenceDataEntry</ref> *</type>
          <declname>outputRootEntry</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>updateMismatchingEntries</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bSelfTestMode</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1test_1_1FloatingPointTolerance" kindref="compound">FloatingPointTolerance</ref> &amp;</type>
          <declname>defaultTolerance</declname>
        </param>
        <briefdescription>
<para>Creates a checker with a given root entry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="411" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="576" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a0015f1d298e99a23b35149d8afd5e97f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string gmx::test::TestReferenceChecker::Impl::appendPath</definition>
        <argsstring>(const char *id) const </argsstring>
        <name>appendPath</name>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns the path of this checker with <computeroutput>id</computeroutput> appended. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="416" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="591" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1af67f8942f65348c08072b18d20b051f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ReferenceDataEntry::EntryPointer</type>
        <definition>ReferenceDataEntry::EntryPointer gmx::test::TestReferenceChecker::Impl::createEntry</definition>
        <argsstring>(const char *type, const char *id, const IReferenceDataEntryChecker &amp;checker) const </argsstring>
        <name>createEntry</name>
        <param>
          <type>const char *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1test_1_1IReferenceDataEntryChecker" kindref="compound">IReferenceDataEntryChecker</ref> &amp;</type>
          <declname>checker</declname>
        </param>
        <briefdescription>
<para>Creates an entry with given parameters and fills it with <computeroutput>checker</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="420" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="420" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a48b5959416d0fc5bc3508854ccc8e367" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>::testing::AssertionResult</type>
        <definition>::testing::AssertionResult gmx::test::TestReferenceChecker::Impl::checkEntry</definition>
        <argsstring>(const ReferenceDataEntry &amp;entry, const std::string &amp;fullId, const char *type, const IReferenceDataEntryChecker &amp;checker) const </argsstring>
        <name>checkEntry</name>
        <param>
          <type>const <ref refid="classgmx_1_1test_1_1ReferenceDataEntry" kindref="compound">ReferenceDataEntry</ref> &amp;</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>fullId</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1test_1_1IReferenceDataEntryChecker" kindref="compound">IReferenceDataEntryChecker</ref> &amp;</type>
          <declname>checker</declname>
        </param>
        <briefdescription>
<para>Checks an entry for correct type and using <computeroutput>checker</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="429" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="429" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1aab12899826f8cf641570e3fa3ef6133d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1test_1_1ReferenceDataEntry" kindref="compound">ReferenceDataEntry</ref> *</type>
        <definition>ReferenceDataEntry * gmx::test::TestReferenceChecker::Impl::findEntry</definition>
        <argsstring>(const char *id)</argsstring>
        <name>findEntry</name>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Finds an entry by id and updates the last found entry pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="443" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="599" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1ad5d12e4244fbbb53904562aa7d6e4ec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1test_1_1ReferenceDataEntry" kindref="compound">ReferenceDataEntry</ref> *</type>
        <definition>ReferenceDataEntry * gmx::test::TestReferenceChecker::Impl::findOrCreateEntry</definition>
        <argsstring>(const char *type, const char *id, const IReferenceDataEntryChecker &amp;checker)</argsstring>
        <name>findOrCreateEntry</name>
        <param>
          <type>const char *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1test_1_1IReferenceDataEntryChecker" kindref="compound">IReferenceDataEntryChecker</ref> &amp;</type>
          <declname>checker</declname>
        </param>
        <briefdescription>
<para>Finds/creates a reference data entry to match against. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of entry to create. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique identifier of the entry (can be NULL, in which case the next entry without an id is matched). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">checker</parametername>
</parameternamelist>
<parameterdescription>
<para>Checker to use for filling out created entries. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Matching entry, or NULL if no matching entry found (NULL is never returned in write mode; new entries are created instead). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="456" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="612" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a0cd19d6065ab5fa0135ebd18906cc439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::testing::AssertionResult</type>
        <definition>testing::AssertionResult gmx::test::TestReferenceChecker::Impl::processItem</definition>
        <argsstring>(const char *name, const char *id, const IReferenceDataEntryChecker &amp;checker)</argsstring>
        <name>processItem</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1test_1_1IReferenceDataEntryChecker" kindref="compound">IReferenceDataEntryChecker</ref> &amp;</type>
          <declname>checker</declname>
        </param>
        <briefdescription>
<para>Helper method for checking a reference data value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of entry to find. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>Unique identifier of the entry (can be NULL, in which case the next entry without an id is matched). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">checker</parametername>
</parameternamelist>
<parameterdescription>
<para>Checker that provides logic specific to the type of the entry. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether the reference data matched, including details of the mismatch if the comparison failed. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1test_1_1TestException" kindref="compound">TestException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if there is a problem parsing the reference data.</para></parameterdescription>
</parameteritem>
</parameterlist>
Performs common tasks in checking a reference value, such as finding or creating the correct entry. Caller needs to provide a checker object that provides the string value for a newly created entry and performs the actual comparison against a found entry. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="478" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="626" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a71ccd615b9408d78faf606f38ffc600c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::test::TestReferenceChecker::Impl::initialized</definition>
        <argsstring>() const </argsstring>
        <name>initialized</name>
        <briefdescription>
<para>Whether the checker is initialized. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="483" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="483" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a07b50c88bae31837b40d5b579a7b09c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::test::TestReferenceChecker::Impl::shouldIgnore</definition>
        <argsstring>() const </argsstring>
        <name>shouldIgnore</name>
        <briefdescription>
<para>Whether the checker should ignore all validation calls. </para>        </briefdescription>
        <detaileddescription>
<para>This is used to ignore any calls within compounds for which reference data could not be found, such that only one error is issued for the missing compound, instead of every individual value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="491" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="491" bodyend="496"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Private implementation class for <ref refid="classgmx_1_1test_1_1TestReferenceChecker" kindref="compound">TestReferenceChecker</ref>. </para>    </briefdescription>
    <detaileddescription>
<internal></internal>
    </detaileddescription>
    <collaborationgraph>
      <node id="3324">
        <label>gmx::test::FloatingPointTolerance</label>
        <link refid="classgmx_1_1test_1_1FloatingPointTolerance"/>
      </node>
      <node id="3325">
        <label>gmx::test::ReferenceDataEntry</label>
        <link refid="classgmx_1_1test_1_1ReferenceDataEntry"/>
      </node>
      <node id="3323">
        <label>gmx::test::TestReferenceChecker::Impl</label>
        <link refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl"/>
        <childnode refid="3324" relation="usage">
          <edgelabel>defaultTolerance_</edgelabel>
        </childnode>
        <childnode refid="3325" relation="usage">
          <edgelabel>compareRootEntry_</edgelabel>
          <edgelabel>outputRootEntry_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="381" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="380" bodyend="552"/>
    <listofallmembers>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a0015f1d298e99a23b35149d8afd5e97f" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>appendPath</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a6c8cfcb3e778c22ff3e5a54e0364fede" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>bSelfTestMode_</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a8ea71aefa212cf96b1d68e0061e9302c" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>cBooleanNodeName</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a48b5959416d0fc5bc3508854ccc8e367" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>checkEntry</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1ad296fc7ff55074e18ba785bb51b7f6be" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>cIdAttrName</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a8159b89f8c0704164c58ebbb49798c73" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>cInt64NodeName</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a6a517f29fea3a0d0cdde4f652bdc605f" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>cIntegerNodeName</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a31c483d09e8d5ce813c538d75c02862d" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>cObjectType</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a0a20c83fa9cb4952ebf78ec99d5a472c" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>compareRootEntry_</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a02ceb833b0070968c2a2fbcba782b951" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>cRealNodeName</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1af67f8942f65348c08072b18d20b051f0" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>createEntry</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a408eca7422972d977d6a65d5674c5983" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>cSequenceLengthName</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a91d71841386d14ba364d23731a4919c8" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>cSequenceType</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1ad25c430d0933e60469c07b096d7d05ae" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>cStringNodeName</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a84e8be3b18d83779580d5515dab113ea" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>cUCharNodeName</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1af9f48272c4c5c7f8d1ed22a795ad3f26" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>cUInt64NodeName</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1af34e0ec8239d7e2c2302576f81acd819" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>cVectorType</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a04a872dd8e24fb821ed705540663691d" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>defaultTolerance_</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1aab12899826f8cf641570e3fa3ef6133d" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>findEntry</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1ad5d12e4244fbbb53904562aa7d6e4ec3" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>findOrCreateEntry</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1ad4f1c767e47356b8ac32f95284bf01d0" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>Impl</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a63dd1e9a79219231d31123a6ce0329ef" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>Impl</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a71ccd615b9408d78faf606f38ffc600c" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>initialized</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1aad50e03a6910edd05eb38636a1638e88" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>initialized_</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a353b051ec9527ab745fcfb637ddd92ae" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>lastFoundEntry_</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a0a3b479f7489afaa61e604660a15ae19" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>outputRootEntry_</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1ae864c01ce9412c5674de823de8c0effb" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>path_</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a0cd19d6065ab5fa0135ebd18906cc439" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>processItem</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a5de7f1436e0bfefd57108e96072cf242" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>seqIndex_</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a07b50c88bae31837b40d5b579a7b09c3" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>shouldIgnore</name></member>
      <member refid="classgmx_1_1test_1_1TestReferenceChecker_1_1Impl_1a1aecae7352e5cdfbd04ee7bc4e7bb0d4" prot="public" virt="non-virtual"><scope>gmx::test::TestReferenceChecker::Impl</scope><name>updateMismatchingEntries_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

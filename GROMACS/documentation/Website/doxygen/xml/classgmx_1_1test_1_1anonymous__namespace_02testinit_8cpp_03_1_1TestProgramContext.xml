<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext" kind="class" prot="public">
    <compoundname>gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext</compoundname>
    <basecompoundref refid="classgmx_1_1IProgramContext" prot="public" virt="non-virtual">gmx::IProgramContext</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1a321000260bfd0cecb1709ea07965c12f" prot="private" static="no" mutable="no">
        <type>const <ref refid="classgmx_1_1IProgramContext" kindref="compound">IProgramContext</ref> &amp;</type>
        <definition>const IProgramContext&amp; gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext::context_</definition>
        <argsstring></argsstring>
        <name>context_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" line="136" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1a3a624985b4fd59b0df5362c9ce3a7a28" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext::dataPath_</definition>
        <argsstring></argsstring>
        <name>dataPath_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" line="137" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1ad5dac6194a35b4fe18b01362c13700d7" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext::TestProgramContext</definition>
        <argsstring>(const IProgramContext &amp;context)</argsstring>
        <name>TestProgramContext</name>
        <param>
          <type>const <ref refid="classgmx_1_1IProgramContext" kindref="compound">IProgramContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Initializes a test program context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para>Current GROMACS program context. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" line="101" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1a76a19afcbf8836dd80e9cde09269360b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext::overrideSourceRoot</definition>
        <argsstring>(const std::string &amp;sourceRoot)</argsstring>
        <name>overrideSourceRoot</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sourceRoot</declname>
        </param>
        <briefdescription>
<para>Sets the source directory root from which to look for data files. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" line="109" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1a822088e5e1df12f90828d947a52e57ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext::programName</definition>
        <argsstring>() const </argsstring>
        <name>programName</name>
        <reimplements refid="classgmx_1_1IProgramContext_1a26af3ba471321756753297d624c21d0d">programName</reimplements>
        <briefdescription>
<para>Returns the name of the binary as it was invoked without any path. </para>        </briefdescription>
        <detaileddescription>
<para>This is typically <computeroutput>argv[0]</computeroutput> with any leading directory stripped. Currently, this should be a valid file name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" line="114" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1a8aa372f60d09ab6528fc59d284d21cb2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext::displayName</definition>
        <argsstring>() const </argsstring>
        <name>displayName</name>
        <reimplements refid="classgmx_1_1IProgramContext_1a66ba95d75a6eefd4cc76b677130a48eb">displayName</reimplements>
        <briefdescription>
<para>Returns a display name for the program. </para>        </briefdescription>
        <detaileddescription>
<para>For simple programs, this can equal <ref refid="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1a822088e5e1df12f90828d947a52e57ae" kindref="member">programName()</ref>. For the GROMACS <computeroutput>gmx</computeroutput> wrapper binary, this includes the name of the module (e.g., <computeroutput>gmx angle</computeroutput>). This is used only for informational purposes, and there are no constraints on contents, except that it should not be <computeroutput>NULL</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" line="118" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1a99dd828839adaa701fd6eadfe4ee46d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext::fullBinaryPath</definition>
        <argsstring>() const </argsstring>
        <name>fullBinaryPath</name>
        <reimplements refid="classgmx_1_1IProgramContext_1afaca282ab5e0bc99c6da555c0c7f4434">fullBinaryPath</reimplements>
        <briefdescription>
<para>Returns the full path of the running binary. </para>        </briefdescription>
        <detaileddescription>
<para>This is mainly used for informational purposes. There are no constraints on contents, except that it should not be <computeroutput>NULL</computeroutput>. Currently, this is also used for sanity checks in checkpointing.</para><para>The implementation can provide an empty string if the path to the binary is not available. In such a case, the information is not shown. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" line="122" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1a449de0dbcfc4c1103c1c89b086061bec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="structgmx_1_1InstallationPrefixInfo" kindref="compound">InstallationPrefixInfo</ref></type>
        <definition>virtual InstallationPrefixInfo gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext::installationPrefix</definition>
        <argsstring>() const </argsstring>
        <name>installationPrefix</name>
        <reimplements refid="classgmx_1_1IProgramContext_1ada732144a05c8faa224b5ad0d904df6f">installationPrefix</reimplements>
        <briefdescription>
<para>Returns the installation prefix for GROMACS. </para>        </briefdescription>
        <detaileddescription>
<para>This path is used to locate the data files that are in <computeroutput>share/top/</computeroutput> in the source directory. The implementation can provide an empty string if the path is not available; in such a case, functions that require data files may fail.</para><para>The returned structure also contains a flag to indicate whether the prefix actually points to the source tree. This is used for tests and to support running binaries directly from the build tree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" line="126" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1ae4ffade4d9d27df3873969b34685cb7c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext::commandLine</definition>
        <argsstring>() const </argsstring>
        <name>commandLine</name>
        <reimplements refid="classgmx_1_1IProgramContext_1a2512c75e34337df80e3a1e994d17a8cc">commandLine</reimplements>
        <briefdescription>
<para>Returns the full command line used to invoke the binary. </para>        </briefdescription>
        <detaileddescription>
<para>The implementation can provide an empty string if no command line is available. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" line="130" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" bodystart="130" bodyend="133"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Custom program context for test binaries. </para>    </briefdescription>
    <detaileddescription>
<para>This context overrides the <ref refid="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1a449de0dbcfc4c1103c1c89b086061bec" kindref="member">installationPrefix()</ref> implementation to always load data files from the source directory, as the test binaries are never installed. It also support overriding the directory through a command-line option to the test binary. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2884">
        <label>gmx::IProgramContext</label>
        <link refid="classgmx_1_1IProgramContext"/>
      </node>
      <node id="2883">
        <label>gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext</label>
        <link refid="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext"/>
        <childnode refid="2884" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2886">
        <label>gmx::IProgramContext</label>
        <link refid="classgmx_1_1IProgramContext"/>
      </node>
      <node id="2885">
        <label>gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext</label>
        <link refid="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext"/>
        <childnode refid="2886" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" line="94" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" bodystart="93" bodyend="138"/>
    <listofallmembers>
      <member refid="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1ae4ffade4d9d27df3873969b34685cb7c" prot="public" virt="virtual"><scope>gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext</scope><name>commandLine</name></member>
      <member refid="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1a321000260bfd0cecb1709ea07965c12f" prot="private" virt="non-virtual"><scope>gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext</scope><name>context_</name></member>
      <member refid="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1a3a624985b4fd59b0df5362c9ce3a7a28" prot="private" virt="non-virtual"><scope>gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext</scope><name>dataPath_</name></member>
      <member refid="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1a8aa372f60d09ab6528fc59d284d21cb2" prot="public" virt="virtual"><scope>gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext</scope><name>displayName</name></member>
      <member refid="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1a99dd828839adaa701fd6eadfe4ee46d8" prot="public" virt="virtual"><scope>gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext</scope><name>fullBinaryPath</name></member>
      <member refid="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1a449de0dbcfc4c1103c1c89b086061bec" prot="public" virt="virtual"><scope>gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext</scope><name>installationPrefix</name></member>
      <member refid="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1a76a19afcbf8836dd80e9cde09269360b" prot="public" virt="non-virtual"><scope>gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext</scope><name>overrideSourceRoot</name></member>
      <member refid="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1a822088e5e1df12f90828d947a52e57ae" prot="public" virt="virtual"><scope>gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext</scope><name>programName</name></member>
      <member refid="classgmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03_1_1TestProgramContext_1ad5dac6194a35b4fe18b01362c13700d7" prot="public" virt="non-virtual"><scope>gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext</scope><name>TestProgramContext</name></member>
      <member refid="classgmx_1_1IProgramContext_1a02fc3daccda7f50deaef42c6fa2c3523" prot="protected" virt="virtual"><scope>gmx::test::anonymous_namespace{testinit.cpp}::TestProgramContext</scope><name>~IProgramContext</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

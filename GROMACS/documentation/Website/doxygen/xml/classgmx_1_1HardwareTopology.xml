<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1HardwareTopology" kind="class" prot="public">
    <compoundname>gmx::HardwareTopology</compoundname>
    <includes local="no">gromacs/hardware/hardwaretopology.h</includes>
    <innerclass refid="structgmx_1_1HardwareTopology_1_1Cache" prot="public">gmx::HardwareTopology::Cache</innerclass>
    <innerclass refid="structgmx_1_1HardwareTopology_1_1Core" prot="public">gmx::HardwareTopology::Core</innerclass>
    <innerclass refid="structgmx_1_1HardwareTopology_1_1Device" prot="public">gmx::HardwareTopology::Device</innerclass>
    <innerclass refid="structgmx_1_1HardwareTopology_1_1HWThread" prot="public">gmx::HardwareTopology::HWThread</innerclass>
    <innerclass refid="structgmx_1_1HardwareTopology_1_1LogicalProcessor" prot="public">gmx::HardwareTopology::LogicalProcessor</innerclass>
    <innerclass refid="structgmx_1_1HardwareTopology_1_1Machine" prot="public">gmx::HardwareTopology::Machine</innerclass>
    <innerclass refid="structgmx_1_1HardwareTopology_1_1Numa" prot="public">gmx::HardwareTopology::Numa</innerclass>
    <innerclass refid="structgmx_1_1HardwareTopology_1_1NumaNode" prot="public">gmx::HardwareTopology::NumaNode</innerclass>
    <innerclass refid="structgmx_1_1HardwareTopology_1_1Socket" prot="public">gmx::HardwareTopology::Socket</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classgmx_1_1HardwareTopology_1aa94ffc2c936d76ba16f1938f449cfaa8" prot="public" static="no">
        <name>SupportLevel</name>
        <enumvalue id="classgmx_1_1HardwareTopology_1aa94ffc2c936d76ba16f1938f449cfaa8a6adf97f83acf6453d4a6a4b1070f3754" prot="public">
          <name>None</name>
          <briefdescription>
<para>No hardware information whatsoever. Sorry. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1HardwareTopology_1aa94ffc2c936d76ba16f1938f449cfaa8a4acf1dbcd33d23bdf52ac25392026b93" prot="public">
          <name>LogicalProcessorCount</name>
          <briefdescription>
<para>Only <ref refid="classgmx_1_1HardwareTopology_1a864c540c29ffadab1591a407843ebf35" kindref="member">machine()</ref>.logicalProcessorCount is valid. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1HardwareTopology_1aa94ffc2c936d76ba16f1938f449cfaa8a972e73b7a882d0802a4e3a16946a2f94" prot="public">
          <name>Basic</name>
          <briefdescription>
<para><ref refid="structgmx_1_1HardwareTopology_1_1Socket" kindref="compound">Socket</ref>, core and hardware thread info. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1HardwareTopology_1aa94ffc2c936d76ba16f1938f449cfaa8abbd47109890259c0127154db1af26c75" prot="public">
          <name>Full</name>
          <briefdescription>
<para><ref refid="structgmx_1_1HardwareTopology_1_1Cache" kindref="compound">Cache</ref>, memory and numa node info. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1HardwareTopology_1aa94ffc2c936d76ba16f1938f449cfaa8a1f7e618d8d85d1bac95daf820ac3d499" prot="public">
          <name>FullWithDevices</name>
          <briefdescription>
<para>Information about devices on the PCI bus. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Amount of topology information present (incremental) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" line="71" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" bodystart="70" bodyend="77"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1HardwareTopology_1a958f5bf63dcc4930ce9174776077a497" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1HardwareTopology_1aa94ffc2c936d76ba16f1938f449cfaa8" kindref="member">SupportLevel</ref></type>
        <definition>SupportLevel gmx::HardwareTopology::supportLevel_</definition>
        <argsstring></argsstring>
        <name>supportLevel_</name>
        <briefdescription>
<para>Available topology information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" line="262" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1HardwareTopology_1a0cb9ba3fb1e8dd79b48c6b010a8e880b" prot="private" static="no" mutable="no">
        <type><ref refid="structgmx_1_1HardwareTopology_1_1Machine" kindref="compound">Machine</ref></type>
        <definition>Machine gmx::HardwareTopology::machine_</definition>
        <argsstring></argsstring>
        <name>machine_</name>
        <briefdescription>
<para>The machine map. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" line="263" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgmx_1_1HardwareTopology_1af00bce2f6a91aa147c536cdff5351dce" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gmx::HardwareTopology::isThisSystem_</definition>
        <argsstring></argsstring>
        <name>isThisSystem_</name>
        <briefdescription>
<para><ref refid="structgmx_1_1HardwareTopology_1_1Machine" kindref="compound">Machine</ref> map is real (vs. cached/synthetic) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" line="264" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgmx_1_1HardwareTopology_1a8da17cbedfcbc71ca857ff58cdafd4df" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1HardwareTopology" kindref="compound">HardwareTopology</ref></type>
        <definition>HardwareTopology gmx::HardwareTopology::detect</definition>
        <argsstring>()</argsstring>
        <name>detect</name>
        <briefdescription>
<para>Detects the hardware topology. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" line="193" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.cpp" bodystart="581" bodyend="607"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1HardwareTopology_1a524b02638d5644ffc59a0576364bcfa7" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::HardwareTopology::HardwareTopology</definition>
        <argsstring>(int logicalProcessorCount)</argsstring>
        <name>HardwareTopology</name>
        <param>
          <type>int</type>
          <declname>logicalProcessorCount</declname>
        </param>
        <briefdescription>
<para>Creates a topology with given number of logical cores. </para>        </briefdescription>
        <detaileddescription>
<para>The support level will be either None or LogicalProcessorCount.</para><para>Intended for testing of code that uses the hardware topology. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" line="201" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.cpp" bodystart="624" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1HardwareTopology_1aee3c059672763572632b83cdc0e59783" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1HardwareTopology_1aa94ffc2c936d76ba16f1938f449cfaa8" kindref="member">SupportLevel</ref></type>
        <definition>SupportLevel gmx::HardwareTopology::supportLevel</definition>
        <argsstring>() const </argsstring>
        <name>supportLevel</name>
        <briefdescription>
<para>Check what topology information that is available and valid. </para>        </briefdescription>
        <detaileddescription>
<para>The amount of hardware topology information that can be detected depends on both the hardware and whether GROMACS was linked with the external hwloc library. You cannot assume that any information is present, although we can almost always provide the number of logical processors. On x86 we can usually get basic information about how sockets, cores and hardware threads are ordered even without hwloc. With the hwloc library we can usually also get information about cache, memory and concepts such as core groups and ccNUMA nodes. Finally, if hwloc was built with support for libpci we can also detect how the PCI devices are connected. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" line="217" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1HardwareTopology_1a22fbee59ff4fa507d118587161442bc4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::HardwareTopology::isThisSystem</definition>
        <argsstring>() const </argsstring>
        <name>isThisSystem</name>
        <briefdescription>
<para>Return true if we actually detected hardware. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>This method will normally return true, when we actually ran the hardware detection as part of this process to construct the object. It will be false when the object was constructed by reading a cached XML file, or possibly generated from synthetic data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" line="228" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1HardwareTopology_1a864c540c29ffadab1591a407843ebf35" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structgmx_1_1HardwareTopology_1_1Machine" kindref="compound">Machine</ref> &amp;</type>
        <definition>const Machine&amp; gmx::HardwareTopology::machine</definition>
        <argsstring>() const </argsstring>
        <name>machine</name>
        <briefdescription>
<para>Return the machine topology tree. </para>        </briefdescription>
        <detaileddescription>
<para>You can always call this routine, but be aware that some or all contents will not be valid unless <ref refid="classgmx_1_1HardwareTopology_1aee3c059672763572632b83cdc0e59783" kindref="member">supportLevel()</ref> returns a sufficient level.</para><para><itemizedlist>
<listitem><para>With <ref refid="classgmx_1_1HardwareTopology_1aa94ffc2c936d76ba16f1938f449cfaa8a4acf1dbcd33d23bdf52ac25392026b93" kindref="member">SupportLevel::LogicalProcessorCount</ref>, only the field machine.logicalProcessorCount is valid.</para></listitem><listitem><para>With <ref refid="classgmx_1_1HardwareTopology_1aa94ffc2c936d76ba16f1938f449cfaa8a972e73b7a882d0802a4e3a16946a2f94" kindref="member">SupportLevel::Basic</ref>, you can access the vectors of sockets, cores, and hardware threads, and query what logical processorId each hardware thread corresponds to.</para></listitem><listitem><para><ref refid="classgmx_1_1HardwareTopology_1aa94ffc2c936d76ba16f1938f449cfaa8abbd47109890259c0127154db1af26c75" kindref="member">SupportLevel::Full</ref> adds cache, memory and ccNUMA information.</para></listitem><listitem><para><ref refid="classgmx_1_1HardwareTopology_1aa94ffc2c936d76ba16f1938f449cfaa8a1f7e618d8d85d1bac95daf820ac3d499" kindref="member">SupportLevel::FullWithDevices</ref> also adds the PCI express bus.</para></listitem></itemizedlist>
</para><para>While data that is not valid has been initialized to special values, you should not rely on those but query the <ref refid="classgmx_1_1HardwareTopology_1aee3c059672763572632b83cdc0e59783" kindref="member">supportLevel()</ref> method before accessing it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" line="248" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" bodystart="248" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1HardwareTopology_1a508621a64cb1f3363522312fd130658e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx::HardwareTopology::numberOfCores</definition>
        <argsstring>() const </argsstring>
        <name>numberOfCores</name>
        <briefdescription>
<para>Returns the number of cores. </para>        </briefdescription>
        <detaileddescription>
<para>You can always call this routine, but if sufficient support is not available, it may return the logical processor count or zero instead of the physical core count. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" line="256" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.cpp" bodystart="636" bodyend="652"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgmx_1_1HardwareTopology_1a1711b8b1882be9eef396ecd95c1a86cf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::HardwareTopology::HardwareTopology</definition>
        <argsstring>()</argsstring>
        <name>HardwareTopology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" line="260" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.cpp" bodystart="617" bodyend="622"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Information about sockets, cores, threads, numa, caches. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal /> This class is the main GROMACS interface to provide information about the hardware of the system we are running on. Internally, it uses either hwloc for full or almost-full information, or a fallback implementation that relies on <ref refid="classgmx_1_1CpuInfo" kindref="compound">CpuInfo</ref> on x86.</para><para>You should always use this class (rather than <ref refid="classgmx_1_1CpuInfo" kindref="compound">CpuInfo</ref> directly) to query the hardware layout in user code. Note that you cannot rely on any information being present, but you must check with the <ref refid="classgmx_1_1HardwareTopology_1aee3c059672763572632b83cdc0e59783" kindref="member">supportLevel()</ref> method before trying to access any information. </para>    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" line="66" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/hardware/hardwaretopology.h" bodystart="65" bodyend="265"/>
    <listofallmembers>
      <member refid="classgmx_1_1HardwareTopology_1a8da17cbedfcbc71ca857ff58cdafd4df" prot="public" virt="non-virtual"><scope>gmx::HardwareTopology</scope><name>detect</name></member>
      <member refid="classgmx_1_1HardwareTopology_1a524b02638d5644ffc59a0576364bcfa7" prot="public" virt="non-virtual"><scope>gmx::HardwareTopology</scope><name>HardwareTopology</name></member>
      <member refid="classgmx_1_1HardwareTopology_1a1711b8b1882be9eef396ecd95c1a86cf" prot="private" virt="non-virtual"><scope>gmx::HardwareTopology</scope><name>HardwareTopology</name></member>
      <member refid="classgmx_1_1HardwareTopology_1a22fbee59ff4fa507d118587161442bc4" prot="public" virt="non-virtual"><scope>gmx::HardwareTopology</scope><name>isThisSystem</name></member>
      <member refid="classgmx_1_1HardwareTopology_1af00bce2f6a91aa147c536cdff5351dce" prot="private" virt="non-virtual"><scope>gmx::HardwareTopology</scope><name>isThisSystem_</name></member>
      <member refid="classgmx_1_1HardwareTopology_1a864c540c29ffadab1591a407843ebf35" prot="public" virt="non-virtual"><scope>gmx::HardwareTopology</scope><name>machine</name></member>
      <member refid="classgmx_1_1HardwareTopology_1a0cb9ba3fb1e8dd79b48c6b010a8e880b" prot="private" virt="non-virtual"><scope>gmx::HardwareTopology</scope><name>machine_</name></member>
      <member refid="classgmx_1_1HardwareTopology_1a508621a64cb1f3363522312fd130658e" prot="public" virt="non-virtual"><scope>gmx::HardwareTopology</scope><name>numberOfCores</name></member>
      <member refid="classgmx_1_1HardwareTopology_1aa94ffc2c936d76ba16f1938f449cfaa8" prot="public" virt="non-virtual"><scope>gmx::HardwareTopology</scope><name>SupportLevel</name></member>
      <member refid="classgmx_1_1HardwareTopology_1aee3c059672763572632b83cdc0e59783" prot="public" virt="non-virtual"><scope>gmx::HardwareTopology</scope><name>supportLevel</name></member>
      <member refid="classgmx_1_1HardwareTopology_1a958f5bf63dcc4930ce9174776077a497" prot="private" virt="non-virtual"><scope>gmx::HardwareTopology</scope><name>supportLevel_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

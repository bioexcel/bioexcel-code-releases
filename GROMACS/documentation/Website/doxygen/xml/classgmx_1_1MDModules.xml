<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1MDModules" kind="class" prot="public">
    <compoundname>gmx::MDModules</compoundname>
    <includes local="no">gromacs/mdrunutility/mdmodules.h</includes>
    <innerclass refid="classgmx_1_1MDModules_1_1Impl" prot="public">gmx::MDModules::Impl</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1MDModules_1a1f0c3a39004cc2d72962c51a71b3cc72" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1PrivateImplPointer" kindref="compound">PrivateImplPointer</ref>&lt; <ref refid="classgmx_1_1MDModules_1_1Impl" kindref="compound">Impl</ref> &gt;</type>
        <definition>PrivateImplPointer&lt;Impl&gt; gmx::MDModules::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.h" line="150" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1MDModules_1ab92167a7908d34932d786ec1a498725f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::MDModules::MDModules</definition>
        <argsstring>()</argsstring>
        <name>MDModules</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.h" line="94" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.cpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1MDModules_1ad712053ce3881a4d8344163e158ae5f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::MDModules::~MDModules</definition>
        <argsstring>()</argsstring>
        <name>~MDModules</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.h" line="95" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.cpp" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1MDModules_1a6d91191d52e475946d801e46bd6eb6f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::MDModules::initMdpTransform</definition>
        <argsstring>(IKeyValueTreeTransformRules *rules)</argsstring>
        <name>initMdpTransform</name>
        <param>
          <type><ref refid="classgmx_1_1IKeyValueTreeTransformRules" kindref="compound">IKeyValueTreeTransformRules</ref> *</type>
          <declname>rules</declname>
        </param>
        <briefdescription>
<para>Initializes a transform from mdp values to sectioned options. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classgmx_1_1IMdpOptionProvider_1ab26ec412b0abbf4ca56f472e9315aa52" kindref="member">IMdpOptionProvider::initMdpTransform()</ref></para></simplesect>
Initializes the combined transform from all modules. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.h" line="104" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.cpp" bodystart="98" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1MDModules_1ae95ebfc6b08b47fee4515afabffdea46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::MDModules::buildMdpOutput</definition>
        <argsstring>(KeyValueTreeObjectBuilder *builder)</argsstring>
        <name>buildMdpOutput</name>
        <param>
          <type><ref refid="classgmx_1_1KeyValueTreeObjectBuilder" kindref="compound">KeyValueTreeObjectBuilder</ref> *</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
<para>Initializes a builder of flat mdp-style key-value pairs suitable for output. </para>        </briefdescription>
        <detaileddescription>
<para>If used as input to <ref refid="classgmx_1_1MDModules_1a6d91191d52e475946d801e46bd6eb6f3" kindref="member">initMdpTransform()</ref>, the key-value pairs resulting from this function would leave the module settings unchanged.</para><para>Once the transition from mdp to key-value input is complete, this method will probably not exist. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.h" line="116" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.cpp" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1MDModules_1a03980eb16c24f29d74b1d96e1cc4c9f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::MDModules::assignOptionsToModules</definition>
        <argsstring>(const KeyValueTreeObject &amp;params, IKeyValueTreeErrorHandler *errorHandler)</argsstring>
        <name>assignOptionsToModules</name>
        <param>
          <type>const <ref refid="classgmx_1_1KeyValueTreeObject" kindref="compound">KeyValueTreeObject</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1IKeyValueTreeErrorHandler" kindref="compound">IKeyValueTreeErrorHandler</ref> *</type>
          <declname>errorHandler</declname>
        </param>
        <briefdescription>
<para>Sets input parameters from <computeroutput>params</computeroutput> for each module. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains keys and values from user input (and defaults) to configure modules that have registered options with those keys. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">errorHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>Called to report errors. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.h" line="126" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.cpp" bodystart="109" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1MDModules_1a17a16c8f62f862f88627b20f280f740d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::MDModules::adjustInputrecBasedOnModules</definition>
        <argsstring>(t_inputrec *ir)</argsstring>
        <name>adjustInputrecBasedOnModules</name>
        <param>
          <type><ref refid="structt__inputrec" kindref="compound">t_inputrec</ref> *</type>
          <declname>ir</declname>
        </param>
        <briefdescription>
<para>Normalizes inputrec parameters to match current code version. </para>        </briefdescription>
        <detaileddescription>
<para>This orders the parameters in <computeroutput>ir-&gt;param</computeroutput> to match the current code and adds any missing defaults. It also throws an error if the inputrec contains parameters that are not recognized by any module. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.h" line="136" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.cpp" bodystart="119" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1MDModules_1a72cb582ed6d59671da41c5f022338668" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgmx_1_1IMDOutputProvider" kindref="compound">IMDOutputProvider</ref> *</type>
        <definition>IMDOutputProvider * gmx::MDModules::outputProvider</definition>
        <argsstring>()</argsstring>
        <name>outputProvider</name>
        <briefdescription>
<para>Returns an interface for initializing and finalizing output for modules. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.h" line="141" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.cpp" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1MDModules_1ae6070303a26499ac3f81027e364e263f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structForceProviders" kindref="compound">ForceProviders</ref> *</type>
        <definition>ForceProviders * gmx::MDModules::initForceProviders</definition>
        <argsstring>()</argsstring>
        <name>initForceProviders</name>
        <briefdescription>
<para>Returns an object for computing forces from the modules. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.h" line="145" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.cpp" bodystart="138" bodyend="145"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Manages the collection of all modules used for mdrun. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal /> This class acts as a central place for constructing modules for mdrun and wiring up dependencies between them. This class should be the only place that contains the full list of modules, although in the future, some code (e.g., in tools) may benefit from the ability to only create one or a few modules and use them.</para><para>The general idea is that each module takes care of its own data rather than mdrun having to know about all the details of each type of force calculation. Initially this is applied for simple things like electric field calculations but later more complex forces will be supported too.</para><para>Currently, where the set of modules needs to be accessed, either a pointer to <ref refid="classgmx_1_1MDModules" kindref="compound">MDModules</ref> is passed around, or an instance of <ref refid="classgmx_1_1IMDOutputProvider" kindref="compound">IMDOutputProvider</ref> or <ref refid="structForceProviders" kindref="compound">ForceProviders</ref> returned from <ref refid="classgmx_1_1MDModules" kindref="compound">MDModules</ref>. These objects returned from <ref refid="classgmx_1_1MDModules" kindref="compound">MDModules</ref> call the corresponding methods in the relevant modules. In the future, some additional logic may need to be introduced at the call sites that can also influence the signature of the methods, similar to what <ref refid="structForceProviders" kindref="compound">ForceProviders</ref> already does for force computation.</para><para>The <ref refid="classgmx_1_1MDModules_1a03980eb16c24f29d74b1d96e1cc4c9f7" kindref="member">assignOptionsToModules()</ref> and <ref refid="classgmx_1_1MDModules_1a17a16c8f62f862f88627b20f280f740d" kindref="member">adjustInputrecBasedOnModules()</ref> methods of this class also take responsibility for wiring up the options (and their defaults) for each module. </para>    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.h" line="92" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdrunutility/mdmodules.h" bodystart="91" bodyend="151"/>
    <listofallmembers>
      <member refid="classgmx_1_1MDModules_1a17a16c8f62f862f88627b20f280f740d" prot="public" virt="non-virtual"><scope>gmx::MDModules</scope><name>adjustInputrecBasedOnModules</name></member>
      <member refid="classgmx_1_1MDModules_1a03980eb16c24f29d74b1d96e1cc4c9f7" prot="public" virt="non-virtual"><scope>gmx::MDModules</scope><name>assignOptionsToModules</name></member>
      <member refid="classgmx_1_1MDModules_1ae95ebfc6b08b47fee4515afabffdea46" prot="public" virt="non-virtual"><scope>gmx::MDModules</scope><name>buildMdpOutput</name></member>
      <member refid="classgmx_1_1MDModules_1a1f0c3a39004cc2d72962c51a71b3cc72" prot="private" virt="non-virtual"><scope>gmx::MDModules</scope><name>impl_</name></member>
      <member refid="classgmx_1_1MDModules_1ae6070303a26499ac3f81027e364e263f" prot="public" virt="non-virtual"><scope>gmx::MDModules</scope><name>initForceProviders</name></member>
      <member refid="classgmx_1_1MDModules_1a6d91191d52e475946d801e46bd6eb6f3" prot="public" virt="non-virtual"><scope>gmx::MDModules</scope><name>initMdpTransform</name></member>
      <member refid="classgmx_1_1MDModules_1ab92167a7908d34932d786ec1a498725f" prot="public" virt="non-virtual"><scope>gmx::MDModules</scope><name>MDModules</name></member>
      <member refid="classgmx_1_1MDModules_1a72cb582ed6d59671da41c5f022338668" prot="public" virt="non-virtual"><scope>gmx::MDModules</scope><name>outputProvider</name></member>
      <member refid="classgmx_1_1MDModules_1ad712053ce3881a4d8344163e158ae5f9" prot="public" virt="non-virtual"><scope>gmx::MDModules</scope><name>~MDModules</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

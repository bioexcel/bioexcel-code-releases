<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="trajectory__writing_8h" kind="file">
    <compoundname>trajectory_writing.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="mdebin_8h" local="yes">gromacs/mdlib/mdebin.h</includes>
    <includes refid="mdoutf_8h" local="yes">gromacs/mdlib/mdoutf.h</includes>
    <includes refid="wallcycle_8h" local="yes">gromacs/timing/wallcycle.h</includes>
    <includedby refid="mdoutf_8cpp" local="yes">src/gromacs/mdlib/mdoutf.cpp</includedby>
    <includedby refid="minimize_8cpp" local="yes">src/gromacs/mdlib/minimize.cpp</includedby>
    <includedby refid="gromacs_2mdlib_2trajectory__writing_8cpp" local="yes">src/gromacs/mdlib/trajectory_writing.cpp</includedby>
    <includedby refid="md_8cpp" local="yes">src/programs/mdrun/md.cpp</includedby>
    <incdepgraph>
      <node id="17528">
        <label>src/gromacs/mdlib/trajectory_writing.h</label>
        <link refid="trajectory_writing.h"/>
        <childnode refid="17529" relation="include">
        </childnode>
      </node>
      <node id="17529">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="17531">
        <label>src/gromacs/mdlib/minimize.cpp</label>
        <link refid="minimize_8cpp"/>
      </node>
      <node id="17530">
        <label>src/gromacs/mdlib/trajectory_writing.h</label>
        <link refid="trajectory_writing.h"/>
        <childnode refid="17531" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="trajectory__writing_8h_1a24c6be4ad92cce237469cc728598cb11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void do_md_trajectory_writing</definition>
        <argsstring>(FILE *fplog, struct t_commrec *cr, int nfile, const t_filenm fnm[], gmx_int64_t step, gmx_int64_t step_rel, double t, t_inputrec *ir, t_state *state, t_state *state_global, ObservablesHistory *observablesHistory, struct gmx_mtop_t *top_global, t_forcerec *fr, gmx_mdoutf_t outf, t_mdebin *mdebin, struct gmx_ekindata_t *ekind, gmx::ArrayRef&lt; gmx::RVec &gt; f, int *nchkpt, gmx_bool bCPT, gmx_bool bRerunMD, gmx_bool bLastStep, gmx_bool bDoConfOut, gmx_bool bSumEkinhOld)</argsstring>
        <name>do_md_trajectory_writing</name>
        <param>
          <type>FILE *</type>
          <declname>fplog</declname>
        </param>
        <param>
          <type>struct <ref refid="structt__commrec" kindref="compound">t_commrec</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nfile</declname>
        </param>
        <param>
          <type>const <ref refid="structt__filenm" kindref="compound">t_filenm</ref></type>
          <declname>fnm</declname>
          <array>[]</array>
        </param>
        <param>
          <type>gmx_int64_t</type>
          <declname>step</declname>
        </param>
        <param>
          <type>gmx_int64_t</type>
          <declname>step_rel</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="structt__inputrec" kindref="compound">t_inputrec</ref> *</type>
          <declname>ir</declname>
        </param>
        <param>
          <type><ref refid="classt__state" kindref="compound">t_state</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="classt__state" kindref="compound">t_state</ref> *</type>
          <declname>state_global</declname>
        </param>
        <param>
          <type><ref refid="structObservablesHistory" kindref="compound">ObservablesHistory</ref> *</type>
          <declname>observablesHistory</declname>
        </param>
        <param>
          <type>struct <ref refid="structgmx__mtop__t" kindref="compound">gmx_mtop_t</ref> *</type>
          <declname>top_global</declname>
        </param>
        <param>
          <type><ref refid="structt__forcerec" kindref="compound">t_forcerec</ref> *</type>
          <declname>fr</declname>
        </param>
        <param>
          <type><ref refid="structgmx__mdoutf" kindref="compound">gmx_mdoutf_t</ref></type>
          <declname>outf</declname>
        </param>
        <param>
          <type><ref refid="structt__mdebin" kindref="compound">t_mdebin</ref> *</type>
          <declname>mdebin</declname>
        </param>
        <param>
          <type>struct <ref refid="structgmx__ekindata__t" kindref="compound">gmx_ekindata_t</ref> *</type>
          <declname>ekind</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">gmx::ArrayRef</ref>&lt; <ref refid="namespacegmx_1a139c1919a9680de4ad1450f42e37d33b" kindref="member">gmx::RVec</ref> &gt;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>nchkpt</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bCPT</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bRerunMD</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bLastStep</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bDoConfOut</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bSumEkinhOld</declname>
        </param>
        <briefdescription>
<para>Wrapper routine for writing trajectories during mdrun. </para>        </briefdescription>
        <detaileddescription>
<para>This routine does communication (e.g. collecting distributed coordinates) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdlib/trajectory_writing.h" line="61" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdlib/trajectory_writing.cpp" bodystart="55" bodyend="198"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdlib/trajectory_writing.h"/>
  </compounddef>
</doxygen>

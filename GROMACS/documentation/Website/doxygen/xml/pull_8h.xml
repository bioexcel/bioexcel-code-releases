<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="pull_8h" kind="file">
    <compoundname>pull.h</compoundname>
    <includes local="no">cstdio</includes>
    <includes refid="vectypes_8h" local="yes">gromacs/math/vectypes.h</includes>
    <includes refid="pull-params_8h" local="yes">gromacs/mdtypes/pull-params.h</includes>
    <includes refid="pull__internal_8h" local="yes">gromacs/pulling/pull_internal.h</includes>
    <includes refid="basedefinitions_8h" local="yes">gromacs/utility/basedefinitions.h</includes>
    <includes refid="real_8h" local="yes">gromacs/utility/real.h</includes>
    <includedby refid="awh_8cpp" local="yes">src/gromacs/awh/awh.cpp</includedby>
    <includedby refid="read-params_8cpp" local="yes">src/gromacs/awh/read-params.cpp</includedby>
    <includedby refid="domdec_8cpp" local="yes">src/gromacs/domdec/domdec.cpp</includedby>
    <includedby refid="gmx__wham_8cpp" local="yes">src/gromacs/gmxana/gmx_wham.cpp</includedby>
    <includedby refid="gromacs_2gmxpreprocess_2grompp_8cpp" local="yes">src/gromacs/gmxpreprocess/grompp.cpp</includedby>
    <includedby refid="readpull_8cpp" local="yes">src/gromacs/gmxpreprocess/readpull.cpp</includedby>
    <includedby refid="constr_8cpp" local="yes">src/gromacs/mdlib/constr.cpp</includedby>
    <includedby refid="mdebin_8cpp" local="yes">src/gromacs/mdlib/mdebin.cpp</includedby>
    <includedby refid="sim__util_8cpp" local="yes">src/gromacs/mdlib/sim_util.cpp</includedby>
    <includedby refid="update_8cpp" local="yes">src/gromacs/mdlib/update.cpp</includedby>
    <includedby refid="pull_8cpp" local="yes">src/gromacs/pulling/pull.cpp</includedby>
    <includedby refid="pullutil_8cpp" local="yes">src/gromacs/pulling/pullutil.cpp</includedby>
    <includedby refid="tests_2pull_8cpp" local="yes">src/gromacs/pulling/tests/pull.cpp</includedby>
    <includedby refid="md_8cpp" local="yes">src/programs/mdrun/md.cpp</includedby>
    <includedby refid="runner_8cpp" local="yes">src/programs/mdrun/runner.cpp</includedby>
    <incdepgraph>
      <node id="20930">
        <label>stdint.h</label>
      </node>
      <node id="20933">
        <label>gromacs/pulling/pull_internal.h</label>
        <link refid="pull__internal_8h"/>
        <childnode refid="20934" relation="include">
        </childnode>
        <childnode refid="20927" relation="include">
        </childnode>
        <childnode refid="20935" relation="include">
        </childnode>
      </node>
      <node id="20935">
        <label>gromacs/utility/gmxmpi.h</label>
        <link refid="gmxmpi_8h"/>
        <childnode refid="20934" relation="include">
        </childnode>
      </node>
      <node id="20926">
        <label>cstdio</label>
      </node>
      <node id="20932">
        <label>gromacs/utility/real.h</label>
        <link refid="real_8h"/>
      </node>
      <node id="20928">
        <label>gromacs/mdtypes/md_enums.h</label>
        <link refid="md__enums_8h"/>
        <childnode refid="20929" relation="include">
        </childnode>
      </node>
      <node id="20925">
        <label>src/gromacs/pulling/pull.h</label>
        <link refid="pull.h"/>
        <childnode refid="20926" relation="include">
        </childnode>
        <childnode refid="20927" relation="include">
        </childnode>
        <childnode refid="20933" relation="include">
        </childnode>
        <childnode refid="20929" relation="include">
        </childnode>
        <childnode refid="20932" relation="include">
        </childnode>
      </node>
      <node id="20929">
        <label>gromacs/utility/basedefinitions.h</label>
        <link refid="basedefinitions_8h"/>
        <childnode refid="20930" relation="include">
        </childnode>
        <childnode refid="20931" relation="include">
        </childnode>
      </node>
      <node id="20927">
        <label>gromacs/mdtypes/pull-params.h</label>
        <link refid="pull-params_8h"/>
        <childnode refid="20928" relation="include">
        </childnode>
        <childnode refid="20929" relation="include">
        </childnode>
        <childnode refid="20932" relation="include">
        </childnode>
      </node>
      <node id="20934">
        <label>config.h</label>
      </node>
      <node id="20931">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="20938">
        <label>src/gromacs/gmxana/gmx_wham.cpp</label>
        <link refid="gmx__wham_8cpp"/>
      </node>
      <node id="20936">
        <label>src/gromacs/pulling/pull.h</label>
        <link refid="pull.h"/>
        <childnode refid="20937" relation="include">
        </childnode>
        <childnode refid="20938" relation="include">
        </childnode>
        <childnode refid="20939" relation="include">
        </childnode>
        <childnode refid="20940" relation="include">
        </childnode>
      </node>
      <node id="20940">
        <label>src/programs/mdrun/runner.cpp</label>
        <link refid="runner_8cpp"/>
      </node>
      <node id="20939">
        <label>src/gromacs/pulling/tests/pull.cpp</label>
        <link refid="tests_2pull_8cpp"/>
      </node>
      <node id="20937">
        <label>src/gromacs/awh/awh.cpp</label>
        <link refid="awh_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacegmx">gmx</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pull_8h_1a98f772136c45528b8d405dd8e13d00b0" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>constexpr real c_pullGroupPbcMargin</definition>
        <argsstring></argsstring>
        <name>c_pullGroupPbcMargin</name>
        <initializer>= 0.9</initializer>
        <briefdescription>
<para>Margin for checking PBC distances compared to half the box size in <ref refid="pull_8h_1a583ab75cc18678c2b7d4478040975587" kindref="member">pullCheckPbcWithinGroups()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="285" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pull_8h_1a81eaa5fa98a457caf1063c9d47a01894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pull_coordinate_is_angletype</definition>
        <argsstring>(const t_pull_coord *pcrd)</argsstring>
        <name>pull_coordinate_is_angletype</name>
        <param>
          <type>const t_pull_coord *</type>
          <declname>pcrd</declname>
        </param>
        <briefdescription>
<para>Returns if the pull coordinate is an angle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pcrd</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull coordinate to query the type for. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a boolean telling if the coordinate is of angle type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="81" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.cpp" bodystart="83" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="pull_8h_1a6fa4ceb3c6e0e9d914ad71b37a658736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* pull_coordinate_units</definition>
        <argsstring>(const t_pull_coord *pcrd)</argsstring>
        <name>pull_coordinate_units</name>
        <param>
          <type>const t_pull_coord *</type>
          <declname>pcrd</declname>
        </param>
        <briefdescription>
<para>Returns the units of the pull coordinate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pcrd</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull coordinate to query the units for. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a string with the units of the coordinate. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="88" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="pull_8h_1a325eb8522d1fed29fca6659ce2359835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double pull_conversion_factor_userinput2internal</definition>
        <argsstring>(const t_pull_coord *pcrd)</argsstring>
        <name>pull_conversion_factor_userinput2internal</name>
        <param>
          <type>const t_pull_coord *</type>
          <declname>pcrd</declname>
        </param>
        <briefdescription>
<para>Returns the conversion factor from the pull coord init/rate unit to internal value unit. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pcrd</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull coordinate to get the conversion factor for. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the conversion factor. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="95" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.cpp" bodystart="103" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="pull_8h_1a23b5c3acf1da25883f0fa8b216d0c63e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double pull_conversion_factor_internal2userinput</definition>
        <argsstring>(const t_pull_coord *pcrd)</argsstring>
        <name>pull_conversion_factor_internal2userinput</name>
        <param>
          <type>const t_pull_coord *</type>
          <declname>pcrd</declname>
        </param>
        <briefdescription>
<para>Returns the conversion factor from the pull coord internal value unit to the init/rate unit. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pcrd</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull coordinate to get the conversion factor for. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the conversion factor. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="102" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.cpp" bodystart="115" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="pull_8h_1af239aa76e3a6ba47c308afddfda25b14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double get_pull_coord_value</definition>
        <argsstring>(struct pull_t *pull, int coord_ind, const struct t_pbc *pbc)</argsstring>
        <name>get_pull_coord_value</name>
        <param>
          <type>struct pull_t *</type>
          <declname>pull</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coord_ind</declname>
        </param>
        <param>
          <type>const struct <ref refid="structt__pbc" kindref="compound">t_pbc</ref> *</type>
          <declname>pbc</declname>
        </param>
        <briefdescription>
<para>Get the value for pull coord coord_ind. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">pull</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull struct. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coord_ind</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the pull coordinate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pbc</parametername>
</parameternamelist>
<parameterdescription>
<para>Information structure about periodicity. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the pull coordinate. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pull_8h_1a86dbe05b3e003570d0fa27706bebe5df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void register_external_pull_potential</definition>
        <argsstring>(struct pull_t *pull, int coord_index, const char *provider)</argsstring>
        <name>register_external_pull_potential</name>
        <param>
          <type>struct pull_t *</type>
          <declname>pull</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coord_index</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
<para>Registers the provider of an external potential for a coordinate. </para>        </briefdescription>
        <detaileddescription>
<para>This function is only used for checking the consistency of the pull setup. For each pull coordinate of type external-potential, selected by the user in the mdp file, there has to be a module that provides this potential. The module registers itself as the provider by calling this function. The passed <computeroutput>provider</computeroutput> string has to match the string that the user passed with the potential-provider pull coordinate mdp option. This function should be called after init_pull has been called and before pull_potential is called for the first time. This function does many consistency checks and when it returns and the first call to do_potential passes, the pull setup is guaranteed to be correct (unless the module doesn&apos;t call apply_external_pull_coord_force every step or calls it with incorrect forces). This registering function will exit with a (release) assertion failure when used incorrely or with a fatal error when the user (mdp) input in inconsistent.</para><para>Thread-safe for simultaneous registration from multiple threads.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">pull</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull struct. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coord_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull coordinate index to register the external potential for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">provider</parametername>
</parameternamelist>
<parameterdescription>
<para>Provider string, should match the potential-provider pull coordinate mdp option. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="138" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.cpp" bodystart="1579" bodyend="1624"/>
      </memberdef>
      <memberdef kind="function" id="pull_8h_1ad1b7edf5490d0b7e509a3a612064a782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apply_external_pull_coord_force</definition>
        <argsstring>(struct pull_t *pull, int coord_index, double coord_force, const t_mdatoms *mdatoms, gmx::ForceWithVirial *forceWithVirial)</argsstring>
        <name>apply_external_pull_coord_force</name>
        <param>
          <type>struct pull_t *</type>
          <declname>pull</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coord_index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>coord_force</declname>
        </param>
        <param>
          <type>const <ref refid="structt__mdatoms" kindref="compound">t_mdatoms</ref> *</type>
          <declname>mdatoms</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1ForceWithVirial" kindref="compound">gmx::ForceWithVirial</ref> *</type>
          <declname>forceWithVirial</declname>
        </param>
        <briefdescription>
<para>Apply forces of an external potential to a pull coordinate. </para>        </briefdescription>
        <detaileddescription>
<para>This function applies the external scalar force <computeroutput>coord_force</computeroutput> to the pull coordinate, distributing it over the atoms in the groups involved in the pull coordinate. The corresponding potential energy value should be added to the pull or the module&apos;s potential energy term separately by the module itself. This function should be called after pull_potential has been called and, obviously, before the coordinates are updated uses the forces.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">pull</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull struct. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coord_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull coordinate index to set the force for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">coord_force</parametername>
</parameternamelist>
<parameterdescription>
<para>The scalar force for the pull coordinate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mdatoms</parametername>
</parameternamelist>
<parameterdescription>
<para>Atom properties, only masses are used. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">forceWithVirial</parametername>
</parameternamelist>
<parameterdescription>
<para>Force and virial buffers. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="159" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.cpp" bodystart="1655" bodyend="1692"/>
      </memberdef>
      <memberdef kind="function" id="pull_8h_1aeb54950ad8ca63a394bb6667d9fe041c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clear_pull_forces</definition>
        <argsstring>(struct pull_t *pull)</argsstring>
        <name>clear_pull_forces</name>
        <param>
          <type>struct pull_t *</type>
          <declname>pull</declname>
        </param>
        <briefdescription>
<para>Set the all the pull forces to zero. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pull</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull group. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="170" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.cpp" bodystart="987" bodyend="999"/>
      </memberdef>
      <memberdef kind="function" id="pull_8h_1a0b55e2848d41bbc16426142c0593d1f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>real pull_potential</definition>
        <argsstring>(struct pull_t *pull, t_mdatoms *md, struct t_pbc *pbc, t_commrec *cr, double t, real lambda, rvec *x, gmx::ForceWithVirial *force, real *dvdlambda)</argsstring>
        <name>pull_potential</name>
        <param>
          <type>struct pull_t *</type>
          <declname>pull</declname>
        </param>
        <param>
          <type><ref refid="structt__mdatoms" kindref="compound">t_mdatoms</ref> *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>struct <ref refid="structt__pbc" kindref="compound">t_pbc</ref> *</type>
          <declname>pbc</declname>
        </param>
        <param>
          <type><ref refid="structt__commrec" kindref="compound">t_commrec</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>lambda</declname>
        </param>
        <param>
          <type>rvec *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1ForceWithVirial" kindref="compound">gmx::ForceWithVirial</ref> *</type>
          <declname>force</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> *</type>
          <declname>dvdlambda</declname>
        </param>
        <briefdescription>
<para>Determine the COM pull forces and add them to f, return the potential. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">pull</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull struct. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">md</parametername>
</parameternamelist>
<parameterdescription>
<para>All atoms. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pbc</parametername>
</parameternamelist>
<parameterdescription>
<para>Information struct about periodicity. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cr</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct for communication info. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>Time. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of lambda in FEP calculations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>Positions. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">force</parametername>
</parameternamelist>
<parameterdescription>
<para>Forces and virial. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dvdlambda</parametername>
</parameternamelist>
<parameterdescription>
<para>Pull contribution to dV/d(lambda).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The pull potential energy. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="187" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.cpp" bodystart="1715" bodyend="1769"/>
      </memberdef>
      <memberdef kind="function" id="pull_8h_1a9b1dad06723dff60a45d5774815c8e63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pull_constraint</definition>
        <argsstring>(struct pull_t *pull, t_mdatoms *md, struct t_pbc *pbc, t_commrec *cr, double dt, double t, rvec *x, rvec *xp, rvec *v, tensor vir)</argsstring>
        <name>pull_constraint</name>
        <param>
          <type>struct pull_t *</type>
          <declname>pull</declname>
        </param>
        <param>
          <type><ref refid="structt__mdatoms" kindref="compound">t_mdatoms</ref> *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>struct <ref refid="structt__pbc" kindref="compound">t_pbc</ref> *</type>
          <declname>pbc</declname>
        </param>
        <param>
          <type><ref refid="structt__commrec" kindref="compound">t_commrec</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>rvec *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>rvec *</type>
          <declname>xp</declname>
        </param>
        <param>
          <type>rvec *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>tensor</type>
          <declname>vir</declname>
        </param>
        <briefdescription>
<para>Constrain the coordinates xp in the directions in x and also constrain v when v != NULL. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">pull</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">md</parametername>
</parameternamelist>
<parameterdescription>
<para>All atoms. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pbc</parametername>
</parameternamelist>
<parameterdescription>
<para>Information struct about periodicity. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cr</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct for communication info. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>The time step length. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>The time. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>Positions. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">xp</parametername>
</parameternamelist>
<parameterdescription>
<para>Updated x, can be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">v</parametername>
</parameternamelist>
<parameterdescription>
<para>Velocities, which may get a pull correction. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">vir</parametername>
</parameternamelist>
<parameterdescription>
<para>The virial, which, if != NULL, gets a pull correction. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="206" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.cpp" bodystart="1771" bodyend="1783"/>
      </memberdef>
      <memberdef kind="function" id="pull_8h_1a3c0994758d27eec2e24551de9c7b6808" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dd_make_local_pull_groups</definition>
        <argsstring>(t_commrec *cr, struct pull_t *pull, t_mdatoms *md)</argsstring>
        <name>dd_make_local_pull_groups</name>
        <param>
          <type><ref refid="structt__commrec" kindref="compound">t_commrec</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>struct pull_t *</type>
          <declname>pull</declname>
        </param>
        <param>
          <type><ref refid="structt__mdatoms" kindref="compound">t_mdatoms</ref> *</type>
          <declname>md</declname>
        </param>
        <briefdescription>
<para>Make a selection of the home atoms for all pull groups. Should be called at every domain decomposition. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cr</parametername>
</parameternamelist>
<parameterdescription>
<para>Structure for communication info. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pull</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull group. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>md</parametername>
</parameternamelist>
<parameterdescription>
<para>All atoms. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="218" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.cpp" bodystart="1823" bodyend="1947"/>
      </memberdef>
      <memberdef kind="function" id="pull_8h_1acd6e3e7f51eb98589ad27944394dd8d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct pull_t *</type>
        <definition>struct pull_t* init_pull</definition>
        <argsstring>(FILE *fplog, const pull_params_t *pull_params, const t_inputrec *ir, int nfile, const t_filenm fnm[], const gmx_mtop_t *mtop, t_commrec *cr, const gmx_output_env_t *oenv, real lambda, gmx_bool bOutFile, const ContinuationOptions &amp;continuationOptions)</argsstring>
        <name>init_pull</name>
        <param>
          <type>FILE *</type>
          <declname>fplog</declname>
        </param>
        <param>
          <type>const pull_params_t *</type>
          <declname>pull_params</declname>
        </param>
        <param>
          <type>const <ref refid="structt__inputrec" kindref="compound">t_inputrec</ref> *</type>
          <declname>ir</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nfile</declname>
        </param>
        <param>
          <type>const <ref refid="structt__filenm" kindref="compound">t_filenm</ref></type>
          <declname>fnm</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const <ref refid="structgmx__mtop__t" kindref="compound">gmx_mtop_t</ref> *</type>
          <declname>mtop</declname>
        </param>
        <param>
          <type><ref refid="structt__commrec" kindref="compound">t_commrec</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>const <ref refid="structgmx__output__env__t" kindref="compound">gmx_output_env_t</ref> *</type>
          <declname>oenv</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>lambda</declname>
        </param>
        <param>
          <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
          <declname>bOutFile</declname>
        </param>
        <param>
          <type>const <ref refid="structContinuationOptions" kindref="compound">ContinuationOptions</ref> &amp;</type>
          <declname>continuationOptions</declname>
        </param>
        <briefdescription>
<para>Allocate, initialize and return a pull work struct. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fplog</parametername>
</parameternamelist>
<parameterdescription>
<para>General output file, normally md.log. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pull_params</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull input parameters containing all pull settings. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ir</parametername>
</parameternamelist>
<parameterdescription>
<para>The inputrec. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nfile</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of files. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fnm</parametername>
</parameternamelist>
<parameterdescription>
<para>Standard filename struct. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mtop</parametername>
</parameternamelist>
<parameterdescription>
<para>The topology of the whole system. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cr</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct for communication info. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oenv</parametername>
</parameternamelist>
<parameterdescription>
<para>Output options. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>FEP lambda. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bOutFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Open output files? </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>continuationOptions</parametername>
</parameternamelist>
<parameterdescription>
<para>Options for continuing from checkpoint file </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="236" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.cpp" bodystart="2123" bodyend="2579"/>
      </memberdef>
      <memberdef kind="function" id="pull_8h_1a13f47d536a7dbf42621f5b69e5ee603a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void finish_pull</definition>
        <argsstring>(struct pull_t *pull)</argsstring>
        <name>finish_pull</name>
        <param>
          <type>struct pull_t *</type>
          <declname>pull</declname>
        </param>
        <briefdescription>
<para>Close the pull output files. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pull</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull group. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="253" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.cpp" bodystart="2630" bodyend="2644"/>
      </memberdef>
      <memberdef kind="function" id="pull_8h_1a2a2e05b09b4d34fb43b79e5ee4e961fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pull_print_output</definition>
        <argsstring>(struct pull_t *pull, gmx_int64_t step, double time)</argsstring>
        <name>pull_print_output</name>
        <param>
          <type>struct pull_t *</type>
          <declname>pull</declname>
        </param>
        <param>
          <type>gmx_int64_t</type>
          <declname>step</declname>
        </param>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Print the pull output (x and/or f) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pull</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull data structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>step</parametername>
</parameternamelist>
<parameterdescription>
<para>Time step number. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Time. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="262" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.cpp" bodystart="244" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="pull_8h_1ac0858cf06c8c6fb9d10c2dedf0111bce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pull_calc_coms</definition>
        <argsstring>(t_commrec *cr, struct pull_t *pull, t_mdatoms *md, struct t_pbc *pbc, double t, rvec x[], rvec *xp)</argsstring>
        <name>pull_calc_coms</name>
        <param>
          <type><ref refid="structt__commrec" kindref="compound">t_commrec</ref> *</type>
          <declname>cr</declname>
        </param>
        <param>
          <type>struct pull_t *</type>
          <declname>pull</declname>
        </param>
        <param>
          <type><ref refid="structt__mdatoms" kindref="compound">t_mdatoms</ref> *</type>
          <declname>md</declname>
        </param>
        <param>
          <type>struct <ref refid="structt__pbc" kindref="compound">t_pbc</ref> *</type>
          <declname>pbc</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>rvec</type>
          <declname>x</declname>
          <array>[]</array>
        </param>
        <param>
          <type>rvec *</type>
          <declname>xp</declname>
        </param>
        <briefdescription>
<para>Calculates centers of mass all pull groups. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cr</parametername>
</parameternamelist>
<parameterdescription>
<para>Struct for communication info. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pull</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull data structure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">md</parametername>
</parameternamelist>
<parameterdescription>
<para>All atoms. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pbc</parametername>
</parameternamelist>
<parameterdescription>
<para>Information struct about periodicity. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">t</parametername>
</parameternamelist>
<parameterdescription>
<para>Time, only used for cylinder ref. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The local positions. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">xp</parametername>
</parameternamelist>
<parameterdescription>
<para>Updated x, can be NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="276" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pullutil.cpp" bodystart="552" bodyend="821"/>
      </memberdef>
      <memberdef kind="function" id="pull_8h_1a583ab75cc18678c2b7d4478040975587" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pullCheckPbcWithinGroups</definition>
        <argsstring>(const pull_t &amp;pull, const rvec *x, const t_pbc &amp;pbc)</argsstring>
        <name>pullCheckPbcWithinGroups</name>
        <param>
          <type>const pull_t &amp;</type>
          <declname>pull</declname>
        </param>
        <param>
          <type>const rvec *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="structt__pbc" kindref="compound">t_pbc</ref> &amp;</type>
          <declname>pbc</declname>
        </param>
        <briefdescription>
<para>Checks whether all groups that use a reference atom are within PBC restrictions. </para>        </briefdescription>
        <detaileddescription>
<para>Groups that use a reference atom for determining PBC should have all their atoms within half the box size from the PBC atom. The box size is used per dimension for rectangular boxes, but can be a combination of dimensions for triclinic boxes, depending on which dimensions are involved in the pull coordinates a group is involved in.</para><para>Should be called without MPI parallelization and after <ref refid="pull_8h_1ac0858cf06c8c6fb9d10c2dedf0111bce" kindref="member">pull_calc_coms()</ref> has been called at least once.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pull</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull data structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinates </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pbc</parametername>
</parameternamelist>
<parameterdescription>
<para>Information struct about periodicity </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>-1 when all groups obey PBC or the first group index that fails PBC </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="303" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pullutil.cpp" bodystart="913" bodyend="952"/>
      </memberdef>
      <memberdef kind="function" id="pull_8h_1abc627897a8189d68747111b971b417b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
        <definition>gmx_bool pull_have_potential</definition>
        <argsstring>(const struct pull_t *pull)</argsstring>
        <name>pull_have_potential</name>
        <param>
          <type>const struct pull_t *</type>
          <declname>pull</declname>
        </param>
        <briefdescription>
<para>Returns if we have pull coordinates with potential pulling. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pull</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull data structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="311" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.cpp" bodystart="2646" bodyend="2649"/>
      </memberdef>
      <memberdef kind="function" id="pull_8h_1aae2e9a5b5af8eeeacb6333d1f301c421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="basedefinitions_8h_1a8fddad319f226e856400d190198d5151" kindref="member">gmx_bool</ref></type>
        <definition>gmx_bool pull_have_constraint</definition>
        <argsstring>(const struct pull_t *pull)</argsstring>
        <name>pull_have_constraint</name>
        <param>
          <type>const struct pull_t *</type>
          <declname>pull</declname>
        </param>
        <briefdescription>
<para>Returns if we have pull coordinates with constraint pulling. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pull</parametername>
</parameternamelist>
<parameterdescription>
<para>The pull data structure. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="318" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.cpp" bodystart="2651" bodyend="2654"/>
      </memberdef>
      <memberdef kind="function" id="pull_8h_1af97d4786cc5f164d05c8d0a75dc7bf44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>real max_pull_distance2</definition>
        <argsstring>(const pull_coord_work_t *pcrd, const t_pbc *pbc)</argsstring>
        <name>max_pull_distance2</name>
        <param>
          <type>const pull_coord_work_t *</type>
          <declname>pcrd</declname>
        </param>
        <param>
          <type>const <ref refid="structt__pbc" kindref="compound">t_pbc</ref> *</type>
          <declname>pbc</declname>
        </param>
        <briefdescription>
<para>Returns the maxing distance for pulling. </para>        </briefdescription>
        <detaileddescription>
<para>For distance geometries, only dimensions with pcrd-&gt;params[dim]=1 are included in the distance calculation. For directional geometries, only dimensions with pcrd-&gt;vec[dim]!=0 are included in the distance calculation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pcrd</parametername>
</parameternamelist>
<parameterdescription>
<para>Pulling data structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pbc</parametername>
</parameternamelist>
<parameterdescription>
<para>Information on periodic boundary conditions </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The maximume distance </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h" line="331" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.cpp" bodystart="589" bodyend="651"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file contains datatypes and function declarations necessary for mdrun to interface with the pull code. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal /> </para><para><simplesect kind="author"><para>Berk Hess </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/pulling/pull.h"/>
  </compounddef>
</doxygen>

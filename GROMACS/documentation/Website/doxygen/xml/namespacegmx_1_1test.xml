<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="namespacegmx_1_1test" kind="namespace">
    <compoundname>gmx::test</compoundname>
    <innerclass refid="classgmx_1_1test_1_1AnalysisDataTestInputPointSet" prot="public">gmx::test::AnalysisDataTestInputPointSet</innerclass>
    <innerclass refid="classgmx_1_1test_1_1AnalysisDataTestInputFrame" prot="public">gmx::test::AnalysisDataTestInputFrame</innerclass>
    <innerclass refid="classgmx_1_1test_1_1AnalysisDataTestInput" prot="public">gmx::test::AnalysisDataTestInput</innerclass>
    <innerclass refid="classgmx_1_1test_1_1AnalysisDataTestFixture" prot="public">gmx::test::AnalysisDataTestFixture</innerclass>
    <innerclass refid="classgmx_1_1test_1_1MockAnalysisDataModule" prot="public">gmx::test::MockAnalysisDataModule</innerclass>
    <innerclass refid="structgmx_1_1test_1_1AwhTestParameters" prot="public">gmx::test::AwhTestParameters</innerclass>
    <innerclass refid="classgmx_1_1test_1_1BiasTest" prot="public">gmx::test::BiasTest</innerclass>
    <innerclass refid="classgmx_1_1test_1_1BiasStateTest" prot="public">gmx::test::BiasStateTest</innerclass>
    <innerclass refid="classgmx_1_1test_1_1MockModule" prot="public">gmx::test::MockModule</innerclass>
    <innerclass refid="classgmx_1_1test_1_1MockOptionsModule" prot="public">gmx::test::MockOptionsModule</innerclass>
    <innerclass refid="classgmx_1_1test_1_1CommandLineModuleManagerTestBase" prot="public">gmx::test::CommandLineModuleManagerTestBase</innerclass>
    <innerclass refid="structgmx_1_1test_1_1TestHardwareContext" prot="public">gmx::test::TestHardwareContext</innerclass>
    <innerclass refid="classgmx_1_1test_1_1PmeTestEnvironment" prot="public">gmx::test::PmeTestEnvironment</innerclass>
    <innerclass refid="classgmx_1_1test_1_1GetIrTest" prot="public">gmx::test::GetIrTest</innerclass>
    <innerclass refid="classgmx_1_1test_1_1GpuTest" prot="public">gmx::test::GpuTest</innerclass>
    <innerclass refid="classgmx_1_1test_1_1SettleTest" prot="public">gmx::test::SettleTest</innerclass>
    <innerclass refid="classgmx_1_1test_1_1SignalTest" prot="public">gmx::test::SignalTest</innerclass>
    <innerclass refid="classgmx_1_1test_1_1MockThreadAffinityAccess" prot="public">gmx::test::MockThreadAffinityAccess</innerclass>
    <innerclass refid="classgmx_1_1test_1_1ThreadAffinityTestHelper" prot="public">gmx::test::ThreadAffinityTestHelper</innerclass>
    <innerclass refid="classgmx_1_1test_1_1MockHelpTopic" prot="public">gmx::test::MockHelpTopic</innerclass>
    <innerclass refid="classgmx_1_1test_1_1TopologyManager" prot="public">gmx::test::TopologyManager</innerclass>
    <innerclass refid="classgmx_1_1test_1_1SimdBaseTest" prot="public">gmx::test::SimdBaseTest</innerclass>
    <innerclass refid="classgmx_1_1test_1_1SimdTest" prot="public">gmx::test::SimdTest</innerclass>
    <innerclass refid="classgmx_1_1test_1_1Simd4Test" prot="public">gmx::test::Simd4Test</innerclass>
    <innerclass refid="classgmx_1_1test_1_1Simd4MathTest" prot="public">gmx::test::Simd4MathTest</innerclass>
    <innerclass refid="classgmx_1_1test_1_1SimdMathTest" prot="public">gmx::test::SimdMathTest</innerclass>
    <innerclass refid="classgmx_1_1test_1_1AbstractTrajectoryAnalysisModuleTestFixture" prot="public">gmx::test::AbstractTrajectoryAnalysisModuleTestFixture</innerclass>
    <innerclass refid="classgmx_1_1test_1_1TrajectoryAnalysisModuleTestFixture" prot="public">gmx::test::TrajectoryAnalysisModuleTestFixture</innerclass>
    <innerclass refid="classgmx_1_1test_1_1AllocatorTest" prot="public">gmx::test::AllocatorTest</innerclass>
    <innerclass refid="classgmx_1_1test_1_1EnergyFrameReader" prot="public">gmx::test::EnergyFrameReader</innerclass>
    <innerclass refid="classgmx_1_1test_1_1EnergyFrame" prot="public">gmx::test::EnergyFrame</innerclass>
    <innerclass refid="classgmx_1_1test_1_1ImdTestFixture" prot="public">gmx::test::ImdTestFixture</innerclass>
    <innerclass refid="classgmx_1_1test_1_1MdrunComparisonFixture" prot="public">gmx::test::MdrunComparisonFixture</innerclass>
    <innerclass refid="classgmx_1_1test_1_1SimulationRunner" prot="public">gmx::test::SimulationRunner</innerclass>
    <innerclass refid="classgmx_1_1test_1_1MdrunTestFixtureBase" prot="public">gmx::test::MdrunTestFixtureBase</innerclass>
    <innerclass refid="classgmx_1_1test_1_1MdrunTestFixture" prot="public">gmx::test::MdrunTestFixture</innerclass>
    <innerclass refid="classgmx_1_1test_1_1ParameterizedMdrunTestFixture" prot="public">gmx::test::ParameterizedMdrunTestFixture</innerclass>
    <innerclass refid="classgmx_1_1test_1_1MultiSimTest" prot="public">gmx::test::MultiSimTest</innerclass>
    <innerclass refid="classgmx_1_1test_1_1SwapTestFixture" prot="public">gmx::test::SwapTestFixture</innerclass>
    <innerclass refid="classgmx_1_1test_1_1BondedInteractionsTest" prot="public">gmx::test::BondedInteractionsTest</innerclass>
    <innerclass refid="classgmx_1_1test_1_1TerminationHelper" prot="public">gmx::test::TerminationHelper</innerclass>
    <innerclass refid="classgmx_1_1test_1_1TrajectoryFrameReader" prot="public">gmx::test::TrajectoryFrameReader</innerclass>
    <innerclass refid="classgmx_1_1test_1_1TrajectoryFrame" prot="public">gmx::test::TrajectoryFrame</innerclass>
    <innerclass refid="classgmx_1_1test_1_1CommandLine" prot="public">gmx::test::CommandLine</innerclass>
    <innerclass refid="classgmx_1_1test_1_1CommandLineTestHelper" prot="public">gmx::test::CommandLineTestHelper</innerclass>
    <innerclass refid="classgmx_1_1test_1_1CommandLineTestBase" prot="public">gmx::test::CommandLineTestBase</innerclass>
    <innerclass refid="structgmx_1_1test_1_1ConfMatchSettings" prot="public">gmx::test::ConfMatchSettings</innerclass>
    <innerclass refid="classgmx_1_1test_1_1ConfMatch" prot="public">gmx::test::ConfMatch</innerclass>
    <innerclass refid="classgmx_1_1test_1_1IFileMatcher" prot="public">gmx::test::IFileMatcher</innerclass>
    <innerclass refid="classgmx_1_1test_1_1IFileMatcherSettings" prot="public">gmx::test::IFileMatcherSettings</innerclass>
    <innerclass refid="classgmx_1_1test_1_1TextFileMatch" prot="public">gmx::test::TextFileMatch</innerclass>
    <innerclass refid="classgmx_1_1test_1_1NoContentsMatch" prot="public">gmx::test::NoContentsMatch</innerclass>
    <innerclass refid="classgmx_1_1test_1_1MockTextInputStream" prot="public">gmx::test::MockTextInputStream</innerclass>
    <innerclass refid="classgmx_1_1test_1_1MockTextOutputStream" prot="public">gmx::test::MockTextOutputStream</innerclass>
    <innerclass refid="classgmx_1_1test_1_1InteractiveTestHelper" prot="public">gmx::test::InteractiveTestHelper</innerclass>
    <innerclass refid="classgmx_1_1test_1_1LoggerTestHelper" prot="public">gmx::test::LoggerTestHelper</innerclass>
    <innerclass refid="classgmx_1_1test_1_1IReferenceDataEntryChecker" prot="public">gmx::test::IReferenceDataEntryChecker</innerclass>
    <innerclass refid="classgmx_1_1test_1_1NullChecker" prot="public">gmx::test::NullChecker</innerclass>
    <innerclass refid="classgmx_1_1test_1_1ExactStringChecker" prot="public">gmx::test::ExactStringChecker</innerclass>
    <innerclass refid="classgmx_1_1test_1_1ExactStringBlockChecker" prot="public">gmx::test::ExactStringBlockChecker</innerclass>
    <innerclass refid="classgmx_1_1test_1_1FloatingPointChecker" prot="public">gmx::test::FloatingPointChecker</innerclass>
    <innerclass refid="classgmx_1_1test_1_1FloatingPointFromStringChecker" prot="public">gmx::test::FloatingPointFromStringChecker</innerclass>
    <innerclass refid="classgmx_1_1test_1_1ValueExtractor" prot="public">gmx::test::ValueExtractor</innerclass>
    <innerclass refid="classgmx_1_1test_1_1ReferenceDataEntry" prot="public">gmx::test::ReferenceDataEntry</innerclass>
    <innerclass refid="classgmx_1_1test_1_1TestReferenceChecker" prot="public">gmx::test::TestReferenceChecker</innerclass>
    <innerclass refid="classgmx_1_1test_1_1TestReferenceData" prot="public">gmx::test::TestReferenceData</innerclass>
    <innerclass refid="classgmx_1_1test_1_1StdioTestHelper" prot="public">gmx::test::StdioTestHelper</innerclass>
    <innerclass refid="classgmx_1_1test_1_1StringTestBase" prot="public">gmx::test::StringTestBase</innerclass>
    <innerclass refid="classgmx_1_1test_1_1FloatingPointDifference" prot="public">gmx::test::FloatingPointDifference</innerclass>
    <innerclass refid="classgmx_1_1test_1_1FloatingPointTolerance" prot="public">gmx::test::FloatingPointTolerance</innerclass>
    <innerclass refid="classgmx_1_1test_1_1TestException" prot="public">gmx::test::TestException</innerclass>
    <innerclass refid="classgmx_1_1test_1_1TestFileManager" prot="public">gmx::test::TestFileManager</innerclass>
    <innerclass refid="classgmx_1_1test_1_1TestFileInputRedirector" prot="public">gmx::test::TestFileInputRedirector</innerclass>
    <innerclass refid="classgmx_1_1test_1_1TestFileOutputRedirector" prot="public">gmx::test::TestFileOutputRedirector</innerclass>
    <innerclass refid="classgmx_1_1test_1_1TestOptionsProvider" prot="public">gmx::test::TestOptionsProvider</innerclass>
    <innerclass refid="classgmx_1_1test_1_1ITextBlockMatcher" prot="public">gmx::test::ITextBlockMatcher</innerclass>
    <innerclass refid="classgmx_1_1test_1_1ITextBlockMatcherSettings" prot="public">gmx::test::ITextBlockMatcherSettings</innerclass>
    <innerclass refid="classgmx_1_1test_1_1ExactTextMatch" prot="public">gmx::test::ExactTextMatch</innerclass>
    <innerclass refid="classgmx_1_1test_1_1NoTextMatch" prot="public">gmx::test::NoTextMatch</innerclass>
    <innerclass refid="structgmx_1_1test_1_1XvgMatchSettings" prot="public">gmx::test::XvgMatchSettings</innerclass>
    <innerclass refid="classgmx_1_1test_1_1XvgMatch" prot="public">gmx::test::XvgMatch</innerclass>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02base_8cpp_03">gmx::test::anonymous_namespace{base.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02bootstrap__loadstore_8cpp_03">gmx::test::anonymous_namespace{bootstrap_loadstore.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02clustsize_8cpp_03">gmx::test::anonymous_namespace{clustsize.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02cmdlinemodulemanagertest_8cpp_03">gmx::test::anonymous_namespace{cmdlinemodulemanagertest.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02conftest_8cpp_03">gmx::test::anonymous_namespace{conftest.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02filematchers_8cpp_03">gmx::test::anonymous_namespace{filematchers.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02initialconstraints_8cpp_03">gmx::test::anonymous_namespace{initialconstraints.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02legacyenergy_8cpp_03">gmx::test::anonymous_namespace{legacyenergy.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02loggertest_8cpp_03">gmx::test::anonymous_namespace{loggertest.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02mdebin_8cpp_03">gmx::test::anonymous_namespace{mdebin.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02mdruncomparisonfixture_8cpp_03">gmx::test::anonymous_namespace{mdruncomparisonfixture.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03">gmx::test::anonymous_namespace{mock_datamodule.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02moduletest_8cpp_03">gmx::test::anonymous_namespace{moduletest.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02mutex_8cpp_03">gmx::test::anonymous_namespace{mutex.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02pinnedmemorychecker_8cpp_03">gmx::test::anonymous_namespace{pinnedmemorychecker.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02pmebsplinetest_8cpp_03">gmx::test::anonymous_namespace{pmebsplinetest.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03">gmx::test::anonymous_namespace{pmegathertest.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02pmesolvetest_8cpp_03">gmx::test::anonymous_namespace{pmesolvetest.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02pmesplinespreadtest_8cpp_03">gmx::test::anonymous_namespace{pmesplinespreadtest.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02pmetest_8cpp_03">gmx::test::anonymous_namespace{pmetest.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02refdata-xml_8cpp_03">gmx::test::anonymous_namespace{refdata-xml.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02refdata_8cpp_03">gmx::test::anonymous_namespace{refdata.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02scalar_8cpp_03">gmx::test::anonymous_namespace{scalar.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02scalar__math_8cpp_03">gmx::test::anonymous_namespace{scalar_math.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02scalar__util_8cpp_03">gmx::test::anonymous_namespace{scalar_util.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02simd4__floatingpoint_8cpp_03">gmx::test::anonymous_namespace{simd4_floatingpoint.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02simd4__math_8cpp_03">gmx::test::anonymous_namespace{simd4_math.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02simd4__vector__operations_8cpp_03">gmx::test::anonymous_namespace{simd4_vector_operations.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02simd__floatingpoint_8cpp_03">gmx::test::anonymous_namespace{simd_floatingpoint.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02simd__floatingpoint__util_8cpp_03">gmx::test::anonymous_namespace{simd_floatingpoint_util.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02simd__integer_8cpp_03">gmx::test::anonymous_namespace{simd_integer.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02simd__math_8cpp_03">gmx::test::anonymous_namespace{simd_math.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02simd__vector__operations_8cpp_03">gmx::test::anonymous_namespace{simd_vector_operations.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02splinetable_8cpp_03">gmx::test::anonymous_namespace{splinetable.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02stringtest_8cpp_03">gmx::test::anonymous_namespace{stringtest.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02stringutil_8cpp_03">gmx::test::anonymous_namespace{stringutil.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02testasserts_8cpp_03">gmx::test::anonymous_namespace{testasserts.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02testasserts_8h_03">gmx::test::anonymous_namespace{testasserts.h}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02testinit_8cpp_03">gmx::test::anonymous_namespace{testinit.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02testoptions_8cpp_03">gmx::test::anonymous_namespace{testoptions.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02textblockmatchers_8cpp_03">gmx::test::anonymous_namespace{textblockmatchers.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02textreader_8cpp_03">gmx::test::anonymous_namespace{textreader.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02usergpuids_8cpp_03">gmx::test::anonymous_namespace{usergpuids.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1anonymous__namespace_02xvgtest_8cpp_03">gmx::test::anonymous_namespace{xvgtest.cpp}</innernamespace>
    <innernamespace refid="namespacegmx_1_1test_1_1internal">gmx::test::internal</innernamespace>
      <sectiondef kind="user-defined">
      <header>Assertions for floating-point comparison</header>
      <description><para>These routines extend <computeroutput>(EXPECT|ASSERT)_(FLOAT|DOUBLE)_EQ</computeroutput> and <computeroutput>(EXPECT|ASSERT)_NEAR</computeroutput> from Google Test to provide more flexible assertions for floating-point values.</para><para>See <ref refid="classgmx_1_1test_1_1FloatingPointTolerance" kindref="compound">gmx::test::FloatingPointTolerance</ref> for the possible ways to specify the tolerance, and <ref refid="classgmx_1_1test_1_1FloatingPointDifference" kindref="compound">gmx::test::FloatingPointDifference</ref> for some additional details of the difference calculation. </para></description>
      <memberdef kind="function" id="group__module__testutils_1ga2e6cf2631a7f8256a5a044685a702fbb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FloatType</type>
          </param>
        </templateparamlist>
        <type>inline::testing::AssertionResult</type>
        <definition>static inline ::testing::AssertionResult gmx::test::assertEqualWithinTolerance</definition>
        <argsstring>(const char *expr1, const char *expr2, const char *, FloatType value1, FloatType value2, const FloatingPointTolerance &amp;tolerance)</argsstring>
        <name>assertEqualWithinTolerance</name>
        <param>
          <type>const char *</type>
          <declname>expr1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expr2</declname>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>FloatType</type>
          <declname>value1</declname>
        </param>
        <param>
          <type>FloatType</type>
          <declname>value2</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1test_1_1FloatingPointTolerance" kindref="compound">FloatingPointTolerance</ref> &amp;</type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
<para>Assertion predicate formatter for comparing two floating-point values. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testasserts.h" line="538" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testasserts.h" bodystart="538" bodyend="555"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacegmx_1_1test_1a132e86b8150b498685276c35a87132a3" prot="public" static="no">
        <name>PmeSolveAlgorithm</name>
        <enumvalue id="namespacegmx_1_1test_1a132e86b8150b498685276c35a87132a3a3ebf69400847360a2fce3bed2e99f8d7" prot="public">
          <name>Coulomb</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegmx_1_1test_1a132e86b8150b498685276c35a87132a3a5f83a2fb6d236503eed0b814419af559" prot="public">
          <name>LennardJones</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>PME solver type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" line="99" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" bodystart="98" bodyend="102"/>
      </memberdef>
      <memberdef kind="enum" id="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" prot="public" static="no">
        <name>CodePath</name>
        <enumvalue id="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7aa2b55387dd066c5bac646ac61543d152d" prot="public">
          <name>CPU</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7aaa33b7755e5f9b504d2d038eaca4ff28d" prot="public">
          <name>CUDA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Hardware code path being tested. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/testhardwarecontexts.h" line="60" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/testhardwarecontexts.h" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="enum" id="group__module__testutils_1gad7a0c1ac11a9748556948309218fc08a" prot="public" static="no">
        <name>ReferenceDataMode</name>
        <enumvalue id="group__module__testutils_1ggad7a0c1ac11a9748556948309218fc08aaf5623014171529e1db8e56212300eb02" prot="public">
          <name>erefdataCompare</name>
          <briefdescription>
<para>Compare to existing reference data. </para>          </briefdescription>
          <detaileddescription>
<para>If reference data does not exist, or if the test results differ from those in the reference data, the test fails. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__module__testutils_1ggad7a0c1ac11a9748556948309218fc08aa00a47e9712009f3cf96d99a29e9624fe" prot="public">
          <name>erefdataCreateMissing</name>
          <briefdescription>
<para>Create missing reference data. </para>          </briefdescription>
          <detaileddescription>
<para>If reference data does not exist for a test, that test behaves as if <ref refid="group__module__testutils_1ggad7a0c1ac11a9748556948309218fc08aa67803fee1c34e6e1926d843157533d50" kindref="member">erefdataUpdateAll</ref> had been specified. Tests for which reference data exists, behave like with <ref refid="group__module__testutils_1ggad7a0c1ac11a9748556948309218fc08aaf5623014171529e1db8e56212300eb02" kindref="member">erefdataCompare</ref>. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__module__testutils_1ggad7a0c1ac11a9748556948309218fc08aab551acebd822aba51d7f40993b418988" prot="public">
          <name>erefdataUpdateChanged</name>
          <briefdescription>
<para>Update reference data that does not pass comparison. </para>          </briefdescription>
          <detaileddescription>
<para>Tests utilizing reference data should always pass in this mode unless there is an I/O error. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__module__testutils_1ggad7a0c1ac11a9748556948309218fc08aa67803fee1c34e6e1926d843157533d50" prot="public">
          <name>erefdataUpdateAll</name>
          <briefdescription>
<para>Update reference data, overwriting old data. </para>          </briefdescription>
          <detaileddescription>
<para>Tests utilizing reference data should always pass in this mode unless there is an I/O error. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Mode of operation for reference data handling. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> There should be no need to use this type outside the test utility module. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.h" line="76" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.h" bodystart="75" bodyend="106"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a2987dd0c79606a4d1ab555d34c616906" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classgmx_1_1test_1_1MockAnalysisDataModule" kindref="compound">MockAnalysisDataModule</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;MockAnalysisDataModule&gt; gmx::test::MockAnalysisDataModulePointer</definition>
        <argsstring></argsstring>
        <name>MockAnalysisDataModulePointer</name>
        <briefdescription>
<para>Smart pointer to manage an <ref refid="classgmx_1_1test_1_1MockAnalysisDataModule" kindref="compound">MockAnalysisDataModule</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/tests/mock_datamodule.h" line="103" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/tests/mock_datamodule.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a466114917d782503fd2fb7d93f4befca" prot="public" static="no">
        <type>std::tuple&lt; int, int, <ref refid="classgmx_1_1BiasParams_1a6e4efe51c269090a20241639f64bcb03" kindref="member">BiasParams::DisableUpdateSkips</ref> &gt;</type>
        <definition>typedef std::tuple&lt;int, int, BiasParams::DisableUpdateSkips&gt; gmx::test::BiasTestParameters</definition>
        <argsstring></argsstring>
        <name>BiasTestParameters</name>
        <briefdescription>
<para>Convenience typedef: growth type enum, potential type enum, disable update skips. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/tests/bias.cpp" line="152" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/tests/bias.cpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1aaaa8ca0139f36a88f147667766fc7e50" prot="public" static="no">
        <type><ref refid="namespacegmx_1a89d1da25b1e1f9331f1fe99b15072eac" kindref="member">gmx::unique_cptr</ref>&lt; gmx_pme_t, <ref refid="pme_8h_1ac5a75a2d477885fcb0260908f6e7b2f2" kindref="member">gmx_pme_destroy</ref> &gt;</type>
        <definition>typedef gmx::unique_cptr&lt;gmx_pme_t, gmx_pme_destroy&gt; gmx::test::PmeSafePointer</definition>
        <argsstring></argsstring>
        <name>PmeSafePointer</name>
        <briefdescription>
<para>A safe pointer type for PME. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" line="66" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1acec376ab6eee2d37cad97e5a4fc3971b" prot="public" static="no">
        <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>&lt; const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> &gt;</type>
        <definition>typedef ArrayRef&lt;const real&gt; gmx::test::ChargesVector</definition>
        <argsstring></argsstring>
        <name>ChargesVector</name>
        <briefdescription>
<para>Charges. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" line="68" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a92d5f4a0dfe0e7321256dfe596b6f7bc" prot="public" static="no">
        <type>std::vector&lt; <ref refid="namespacegmx_1a139c1919a9680de4ad1450f42e37d33b" kindref="member">RVec</ref> &gt;</type>
        <definition>typedef std::vector&lt;RVec&gt; gmx::test::CoordinatesVector</definition>
        <argsstring></argsstring>
        <name>CoordinatesVector</name>
        <briefdescription>
<para>Coordinates. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" line="70" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1ad784e0ed3eca143a1a3a36da930300df" prot="public" static="no">
        <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>&lt; <ref refid="namespacegmx_1a139c1919a9680de4ad1450f42e37d33b" kindref="member">RVec</ref> &gt;</type>
        <definition>typedef ArrayRef&lt;RVec&gt; gmx::test::ForcesVector</definition>
        <argsstring></argsstring>
        <name>ForcesVector</name>
        <briefdescription>
<para>Forces. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" line="72" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a9291e32dedddd7972e1738b3f5b1e00b" prot="public" static="no">
        <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>&lt; const <ref refid="namespacegmx_1a9699d31c62e2a4cc2c730793a1224411" kindref="member">IVec</ref> &gt;</type>
        <definition>typedef ArrayRef&lt;const IVec&gt; gmx::test::GridLineIndicesVector</definition>
        <argsstring></argsstring>
        <name>GridLineIndicesVector</name>
        <briefdescription>
<para>Gridline indices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" line="74" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a84f15596ff84b0232b7ded7fdf84225e" prot="public" static="no">
        <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>&lt; const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> &gt;</type>
        <definition>typedef ArrayRef&lt;const real&gt; gmx::test::SplineParamsDimVector</definition>
        <argsstring></argsstring>
        <name>SplineParamsDimVector</name>
        <briefdescription>
<para>Spline parameters (theta or dtheta). A reference to a single dimension&apos;s spline data; this means (atomCount * pmeOrder) values or derivatives. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" line="78" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a8bfda26e28097ebe27d0a19c35bd3250" prot="public" static="no">
        <type>std::array&lt; <ref refid="namespacegmx_1_1test_1a84f15596ff84b0232b7ded7fdf84225e" kindref="member">SplineParamsDimVector</ref>, 3 &gt;</type>
        <definition>typedef std::array&lt;SplineParamsDimVector, 3 &gt; gmx::test::SplineParamsVector</definition>
        <argsstring></argsstring>
        <name>SplineParamsVector</name>
        <briefdescription>
<para>Spline parameters (theta or dtheta) in all 3 dimensions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" line="81" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a4f4bf09a7384aa5d64f79d917f3c994a" prot="public" static="no">
        <type>std::map&lt; <ref refid="namespacegmx_1a9699d31c62e2a4cc2c730793a1224411" kindref="member">IVec</ref>, ValueType &gt;</type>
        <definition>using gmx::test::SparseGridValuesInput = typedef std::map&lt;IVec, ValueType&gt;</definition>
        <argsstring></argsstring>
        <name>SparseGridValuesInput</name>
        <briefdescription>
<para>Non-zero grid values for test input; keys are 3d indices (IVec) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" line="84" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1ae3abf010984bd9d86117531d390cc818" prot="public" static="no">
        <type><ref refid="namespacegmx_1_1test_1a4f4bf09a7384aa5d64f79d917f3c994a" kindref="member">SparseGridValuesInput</ref>&lt; <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> &gt;</type>
        <definition>typedef SparseGridValuesInput&lt;real&gt; gmx::test::SparseRealGridValuesInput</definition>
        <argsstring></argsstring>
        <name>SparseRealGridValuesInput</name>
        <briefdescription>
<para>Non-zero real grid values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" line="86" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a6f33a6eb9abccf0718e28287d2f65c09" prot="public" static="no">
        <type><ref refid="namespacegmx_1_1test_1a4f4bf09a7384aa5d64f79d917f3c994a" kindref="member">SparseGridValuesInput</ref>&lt; <ref refid="structt__complex" kindref="compound">t_complex</ref> &gt;</type>
        <definition>typedef SparseGridValuesInput&lt;t_complex&gt; gmx::test::SparseComplexGridValuesInput</definition>
        <argsstring></argsstring>
        <name>SparseComplexGridValuesInput</name>
        <briefdescription>
<para>Non-zero complex grid values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" line="88" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a15668f52ff9a77a1a088482ee1379a38" prot="public" static="no">
        <type>std::map&lt; std::string, ValueType &gt;</type>
        <definition>using gmx::test::SparseGridValuesOutput = typedef std::map&lt;std::string, ValueType&gt;</definition>
        <argsstring></argsstring>
        <name>SparseGridValuesOutput</name>
        <briefdescription>
<para>Non-zero grid values for test output; keys are string representations of the cells&apos; 3d indices (IVec); this allows for better sorting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" line="90" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a5be7457b34714af9bb38e1796b6c120f" prot="public" static="no">
        <type><ref refid="namespacegmx_1_1test_1a15668f52ff9a77a1a088482ee1379a38" kindref="member">SparseGridValuesOutput</ref>&lt; <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> &gt;</type>
        <definition>typedef SparseGridValuesOutput&lt;real&gt; gmx::test::SparseRealGridValuesOutput</definition>
        <argsstring></argsstring>
        <name>SparseRealGridValuesOutput</name>
        <briefdescription>
<para>Non-zero real grid values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" line="92" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a629bd8118a331f7678290abd58efdcaf" prot="public" static="no">
        <type><ref refid="namespacegmx_1_1test_1a15668f52ff9a77a1a088482ee1379a38" kindref="member">SparseGridValuesOutput</ref>&lt; <ref refid="structt__complex" kindref="compound">t_complex</ref> &gt;</type>
        <definition>typedef SparseGridValuesOutput&lt;t_complex&gt; gmx::test::SparseComplexGridValuesOutput</definition>
        <argsstring></argsstring>
        <name>SparseComplexGridValuesOutput</name>
        <briefdescription>
<para>Non-zero complex grid values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" line="94" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a74fe68cc05ba6596ac5d7ab6a397ab5f" prot="public" static="no">
        <type>std::array&lt; <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref>, 3 *3 &gt;</type>
        <definition>typedef std::array&lt;real, 3 * 3 &gt; gmx::test::Matrix3x3</definition>
        <argsstring></argsstring>
        <name>Matrix3x3</name>
        <briefdescription>
<para>TODO: make proper C++ matrix for the whole Gromacs, get rid of this. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" line="96" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1aaab9d442c43c4adb6c71502f10c46ca0" prot="public" static="no">
        <type>std::tuple&lt; <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref>, <ref refid="namespacegmx_1_1test_1a74fe68cc05ba6596ac5d7ab6a397ab5f" kindref="member">Matrix3x3</ref> &gt;</type>
        <definition>typedef std::tuple&lt;real, Matrix3x3&gt; gmx::test::PmeSolveOutput</definition>
        <argsstring></argsstring>
        <name>PmeSolveOutput</name>
        <briefdescription>
<para>PME solver results - reciprocal energy and virial. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" line="104" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1ae26ee03e11afa627d9bb0191ef09eb85" prot="public" static="no">
        <type>std::list&lt; <ref refid="structgmx_1_1test_1_1TestHardwareContext" kindref="compound">TestHardwareContext</ref> &gt;</type>
        <definition>typedef std::list&lt;TestHardwareContext&gt; gmx::test::TestHardwareContexts</definition>
        <argsstring></argsstring>
        <name>TestHardwareContexts</name>
        <briefdescription>
<para>A list of hardware contexts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/testhardwarecontexts.h" line="88" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/testhardwarecontexts.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1aae66ac556ce21b022b954b74a4862e68" prot="public" static="no">
        <type>std::tuple&lt; int, bool, bool, bool &gt;</type>
        <definition>typedef std::tuple&lt;int, bool, bool, bool&gt; gmx::test::SettleTestParameters</definition>
        <argsstring></argsstring>
        <name>SettleTestParameters</name>
        <briefdescription>
<para>Convenience typedef. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdlib/tests/settle.cpp" line="120" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdlib/tests/settle.cpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a71c173cf5a50348e7595fb6289e62f78" prot="public" static="no">
        <type>::testing::Types&lt; <ref refid="namespacegmx_1ac3ca6adcfda5170180c2140c7b2f9d47" kindref="member">AlignedAllocator</ref>&lt; <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> &gt;, <ref refid="namespacegmx_1af01c69345463ebb433d1fedfd356b74a" kindref="member">PageAlignedAllocator</ref>&lt; <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> &gt;, <ref refid="namespacegmx_1ac3ca6adcfda5170180c2140c7b2f9d47" kindref="member">AlignedAllocator</ref>&lt; int &gt;, <ref refid="namespacegmx_1af01c69345463ebb433d1fedfd356b74a" kindref="member">PageAlignedAllocator</ref>&lt; int &gt;, <ref refid="namespacegmx_1ac3ca6adcfda5170180c2140c7b2f9d47" kindref="member">AlignedAllocator</ref>&lt; <ref refid="namespacegmx_1a139c1919a9680de4ad1450f42e37d33b" kindref="member">RVec</ref> &gt;, <ref refid="namespacegmx_1af01c69345463ebb433d1fedfd356b74a" kindref="member">PageAlignedAllocator</ref>&lt; <ref refid="namespacegmx_1a139c1919a9680de4ad1450f42e37d33b" kindref="member">RVec</ref> &gt; &gt;</type>
        <definition>using gmx::test::AllocatorTypesToTest = typedef ::testing::Types&lt;AlignedAllocator&lt;real&gt;, PageAlignedAllocator&lt;real&gt;, AlignedAllocator&lt;int&gt;, PageAlignedAllocator&lt;int&gt;, AlignedAllocator&lt;RVec&gt;, PageAlignedAllocator&lt;RVec&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>AllocatorTypesToTest</name>
        <briefdescription>
<para>Declare allocator types to test. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/tests/alignedallocator.cpp" line="59" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/tests/alignedallocator.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1adaf53810da1094987057767b0714fb27" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="classgmx_1_1test_1_1EnergyFrameReader" kindref="compound">EnergyFrameReader</ref> &gt;</type>
        <definition>typedef std::unique_ptr&lt;EnergyFrameReader&gt; gmx::test::EnergyFrameReaderPtr</definition>
        <argsstring></argsstring>
        <name>EnergyFrameReaderPtr</name>
        <briefdescription>
<para>Convenience smart pointer typedef. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/energyreader.h" line="75" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/energyreader.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a0cf2e1e7224ea64c7762046eb635aaf7" prot="public" static="no">
        <type><ref refid="namespacegmx_1a89d1da25b1e1f9331f1fe99b15072eac" kindref="member">unique_cptr</ref>&lt; <ref refid="structener__file" kindref="compound">ener_file</ref>, done_ener_file &gt;</type>
        <definition>typedef unique_cptr&lt;ener_file, done_ener_file&gt; gmx::test::ener_file_ptr</definition>
        <argsstring></argsstring>
        <name>ener_file_ptr</name>
        <briefdescription>
<para>Convenience smart pointer typedef. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/energyreader.h" line="94" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/energyreader.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a7bf1e5c3b54dbe80eda1f2b355f3bf06" prot="public" static="no">
        <type><ref refid="namespacegmx_1a89d1da25b1e1f9331f1fe99b15072eac" kindref="member">unique_cptr</ref>&lt; <ref refid="structt__enxframe" kindref="compound">t_enxframe</ref>, <ref refid="namespacegmx_1_1test_1aba30b242a0aed11e08b4c7f57dbac8e9" kindref="member">done_enxframe</ref> &gt;</type>
        <definition>typedef unique_cptr&lt;t_enxframe, done_enxframe&gt; gmx::test::enxframe_ptr</definition>
        <argsstring></argsstring>
        <name>enxframe_ptr</name>
        <briefdescription>
<para>Convenience smart pointer typedef. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/energyreader.h" line="98" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/energyreader.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a48cdc0c618f8f53c711a2a006d067c87" prot="public" static="no">
        <type><ref refid="classgmx_1_1test_1_1ImdTestFixture" kindref="compound">gmx::test::ImdTestFixture</ref></type>
        <definition>typedef gmx::test::ImdTestFixture gmx::test::ImdTest</definition>
        <argsstring></argsstring>
        <name>ImdTest</name>
        <briefdescription>
<para>Test fixture for mdrun with IMD settings. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/interactiveMD.cpp" line="70" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/interactiveMD.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1ab370581bf9c1efd3678f7ec928a67324" prot="public" static="no">
        <type><ref refid="classgmx_1_1test_1_1MultiSimTest" kindref="compound">MultiSimTest</ref></type>
        <definition>typedef MultiSimTest gmx::test::MultiSimTerminationTest</definition>
        <argsstring></argsstring>
        <name>MultiSimTerminationTest</name>
        <briefdescription>
<para>Convenience typedef. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/multisim.cpp" line="112" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/multisim.cpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a2ff224dd094f2706d4224fadf046483a" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="classgmx_1_1test_1_1CommandLine" kindref="compound">CommandLine</ref> &gt;</type>
        <definition>typedef std::unique_ptr&lt;CommandLine&gt; gmx::test::CommandLinePointer</definition>
        <argsstring></argsstring>
        <name>CommandLinePointer</name>
        <briefdescription>
<para>Convenience typedef. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/multisimtest.h" line="61" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/multisimtest.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a18925960bf5114a04e0932b589ff75f0" prot="public" static="no">
        <type><ref refid="classgmx_1_1test_1_1MultiSimTest" kindref="compound">MultiSimTest</ref></type>
        <definition>typedef MultiSimTest gmx::test::ReplicaExchangeEnsembleTest</definition>
        <argsstring></argsstring>
        <name>ReplicaExchangeEnsembleTest</name>
        <briefdescription>
<para>Convenience typedef. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/replicaexchange.cpp" line="62" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/replicaexchange.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1ac0e6fbbc16a9a5ea5374565e86a58380" prot="public" static="no">
        <type><ref refid="classgmx_1_1test_1_1MultiSimTest" kindref="compound">MultiSimTest</ref></type>
        <definition>typedef MultiSimTest gmx::test::ReplicaExchangeTerminationTest</definition>
        <argsstring></argsstring>
        <name>ReplicaExchangeTerminationTest</name>
        <briefdescription>
<para>Convenience typedef. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/replicaexchange.cpp" line="81" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/replicaexchange.cpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a28768cab0a7836447cc29bc00cf740f5" prot="public" static="no">
        <type><ref refid="classgmx_1_1test_1_1SwapTestFixture" kindref="compound">gmx::test::SwapTestFixture</ref></type>
        <definition>typedef gmx::test::SwapTestFixture gmx::test::CompelTest</definition>
        <argsstring></argsstring>
        <name>CompelTest</name>
        <briefdescription>
<para>Test fixture for mdrun with &quot;Computational Electrophysiology&quot; settings,. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/swapcoords.cpp" line="72" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/swapcoords.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a1bf6cc9e49e6deb4469f79b764bf6680" prot="public" static="no">
        <type><ref refid="classgmx_1_1test_1_1MdrunTestFixture" kindref="compound">MdrunTestFixture</ref></type>
        <definition>typedef MdrunTestFixture gmx::test::MdrunTerminationTest</definition>
        <argsstring></argsstring>
        <name>MdrunTerminationTest</name>
        <briefdescription>
<para>Convenience typedef. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/termination.cpp" line="69" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/termination.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a27c86a6485f51dc8941f8e1b4a4d24a2" prot="public" static="no">
        <type><ref refid="namespacegmx_1a89d1da25b1e1f9331f1fe99b15072eac" kindref="member">unique_cptr</ref>&lt; <ref refid="structgmx__output__env__t" kindref="compound">gmx_output_env_t</ref>, output_env_done &gt;</type>
        <definition>typedef unique_cptr&lt;gmx_output_env_t, output_env_done&gt; gmx::test::oenv_ptr</definition>
        <argsstring></argsstring>
        <name>oenv_ptr</name>
        <briefdescription>
<para>Convenience smart pointer typedef. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/trajectoryreader.h" line="73" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/trajectoryreader.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a460360400d7eca022312e7e68fafbc31" prot="public" static="no">
        <type><ref refid="namespacegmx_1a89d1da25b1e1f9331f1fe99b15072eac" kindref="member">unique_cptr</ref>&lt; <ref refid="structt__trxstatus" kindref="compound">t_trxstatus</ref>, close_trx &gt;</type>
        <definition>typedef unique_cptr&lt;t_trxstatus, close_trx&gt; gmx::test::trxstatus_file_ptr</definition>
        <argsstring></argsstring>
        <name>trxstatus_file_ptr</name>
        <briefdescription>
<para>Convenience smart pointer typedef. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/trajectoryreader.h" line="75" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/trajectoryreader.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1aebae156df1e311f5de471ddd2be38784" prot="public" static="no">
        <type><ref refid="namespacegmx_1a89d1da25b1e1f9331f1fe99b15072eac" kindref="member">unique_cptr</ref>&lt; <ref refid="structt__trxframe" kindref="compound">t_trxframe</ref>, <ref refid="namespacegmx_1_1test_1a38e926a71822704ecee2753eec73d8e5" kindref="member">done_trxframe</ref> &gt;</type>
        <definition>typedef unique_cptr&lt;t_trxframe, done_trxframe&gt; gmx::test::trxframe_ptr</definition>
        <argsstring></argsstring>
        <name>trxframe_ptr</name>
        <briefdescription>
<para>Convenience smart pointer typedef. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/trajectoryreader.h" line="79" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/trajectoryreader.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1aa37ca161973ffde331a669d4fa07b1a2" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="classgmx_1_1test_1_1TrajectoryFrameReader" kindref="compound">TrajectoryFrameReader</ref> &gt;</type>
        <definition>typedef std::unique_ptr&lt;TrajectoryFrameReader&gt; gmx::test::TrajectoryFrameReaderPtr</definition>
        <argsstring></argsstring>
        <name>TrajectoryFrameReaderPtr</name>
        <briefdescription>
<para>Convenience smart pointer typedef. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/trajectoryreader.h" line="141" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/trajectoryreader.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1a96729fee4a52b37c0ae0784af1e9eaa3" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="classgmx_1_1test_1_1IFileMatcher" kindref="compound">IFileMatcher</ref> &gt;</type>
        <definition>typedef std::unique_ptr&lt;IFileMatcher&gt; gmx::test::FileMatcherPointer</definition>
        <argsstring></argsstring>
        <name>FileMatcherPointer</name>
        <briefdescription>
<para>Smart pointer for managing a <ref refid="classgmx_1_1test_1_1IFileMatcher" kindref="compound">IFileMatcher</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/filematchers.h" line="96" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/filematchers.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1test_1ab67aed93a000e8ab0343052804f18d03" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="classgmx_1_1test_1_1ITextBlockMatcher" kindref="compound">ITextBlockMatcher</ref> &gt;</type>
        <definition>typedef std::unique_ptr&lt;ITextBlockMatcher&gt; gmx::test::TextBlockMatcherPointer</definition>
        <argsstring></argsstring>
        <name>TextBlockMatcherPointer</name>
        <briefdescription>
<para>Smart pointer for managing a <ref refid="classgmx_1_1test_1_1ITextBlockMatcher" kindref="compound">ITextBlockMatcher</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/textblockmatchers.h" line="98" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/textblockmatchers.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacegmx_1_1test_1ac206a59b89cb3065dd39e8ed2790affa" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double gmx::test::g_coords[]</definition>
        <argsstring>[]</argsstring>
        <name>g_coords</name>
        <initializer>= {
    0.62,
    0.70,
    0.68,
    0.80,
    0.93,
    0.87,
    1.16,
    1.14,
    0.95,
    0.89,
    0.91,
    0.86,
    0.88,
    0.79,
    0.75,
    0.82,
    0.74,
    0.70,
    0.68,
    0.71,
    0.73
}</initializer>
        <briefdescription>
<para>Database of 21 test coordinates that represent a trajectory */. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/tests/bias.cpp" line="127" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/tests/bias.cpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegmx_1_1test_1ad675792bccbf836d034dc449bcf038d7" prot="public" static="no" mutable="no">
        <type>constexpr gmx_int64_t</type>
        <definition>constexpr gmx_int64_t gmx::test::c_splineModuliSinglePrecisionUlps</definition>
        <argsstring></argsstring>
        <name>c_splineModuliSinglePrecisionUlps</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>Spline moduli are computed in double precision, so they&apos;re very good in single precision. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" line="112" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegmx_1_1test_1afc2b21942f523ce739d801ae0652e01e" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double gmx::test::g_positions[]</definition>
        <argsstring>[]</argsstring>
        <name>g_positions</name>
        <briefdescription>
<para>Database of 51 water atom input positions (DIM reals per atom, taken from spc216.gro) for use as test inputs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdlib/tests/settle.cpp" line="62" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdlib/tests/settle.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegmx_1_1test_1ae09f7400768147dd31fe2778f92e7985" prot="public" static="no" mutable="no">
        <type>matrix</type>
        <definition>matrix gmx::test::g_box</definition>
        <argsstring></argsstring>
        <name>g_box</name>
        <initializer>= {{<ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref>(1.86206), 0, 0}, {0, <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref>(1.86206), 0}, {0, 0, <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref>(1.86206)}}</initializer>
        <briefdescription>
<para>Simple cubic simulation box to use in tests. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdlib/tests/settle.cpp" line="117" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/mdlib/tests/settle.cpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga58444cd225e33fe6cd8915ff1c1555d0" prot="public" static="no" mutable="no">
        <type>const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>const real gmx::test::czero</definition>
        <argsstring></argsstring>
        <name>czero</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
<para>Value 0.0 in real precision. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" line="55" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga3f294436d4f5e4f914b20c069cbd99d0" prot="public" static="no" mutable="no">
        <type>const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>const real gmx::test::c0</definition>
        <argsstring></argsstring>
        <name>c0</name>
        <initializer>= 0.0 + 1.0/3.0</initializer>
        <briefdescription>
<para>Random fp value using entire mantissa. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" line="56" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga44268249c39e66775001b8311036787f" prot="public" static="no" mutable="no">
        <type>const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>const real gmx::test::c1</definition>
        <argsstring></argsstring>
        <name>c1</name>
        <initializer>= 1.0 + 5.0/7.0</initializer>
        <briefdescription>
<para>Random fp value using entire mantissa. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" line="57" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga1df035e15e8f2c3ad9de3f9ecada8530" prot="public" static="no" mutable="no">
        <type>const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>const real gmx::test::c2</definition>
        <argsstring></argsstring>
        <name>c2</name>
        <initializer>= 2.0 + 9.0/13.0</initializer>
        <briefdescription>
<para>Random fp value using entire mantissa. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" line="58" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gac78ba15eb876271a39e7813e56c9716c" prot="public" static="no" mutable="no">
        <type>const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>const real gmx::test::c3</definition>
        <argsstring></argsstring>
        <name>c3</name>
        <initializer>= 3.0 + 17.0/19.0</initializer>
        <briefdescription>
<para>Random fp value using entire mantissa. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" line="59" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga83f66d520e87d67b57ea6b373a8b9b50" prot="public" static="no" mutable="no">
        <type>const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>const real gmx::test::c4</definition>
        <argsstring></argsstring>
        <name>c4</name>
        <initializer>= 4.0 + 23.0/29.0</initializer>
        <briefdescription>
<para>Random fp value using entire mantissa. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" line="60" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gab165ea93474a36d892098dfadbe5fcd6" prot="public" static="no" mutable="no">
        <type>const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>const real gmx::test::c5</definition>
        <argsstring></argsstring>
        <name>c5</name>
        <initializer>= 5.0 + 31.0/37.0</initializer>
        <briefdescription>
<para>Random fp value using entire mantissa. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" line="61" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga80362ee87d07f5b58eeb0716d8efcaa1" prot="public" static="no" mutable="no">
        <type>const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>const real gmx::test::c6</definition>
        <argsstring></argsstring>
        <name>c6</name>
        <initializer>= 6.0 + 41.0/43.0</initializer>
        <briefdescription>
<para>Random fp value using entire mantissa. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" line="62" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gafc39c0ee9643227e6b44acf3e07aa16d" prot="public" static="no" mutable="no">
        <type>const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>const real gmx::test::c7</definition>
        <argsstring></argsstring>
        <name>c7</name>
        <initializer>= 7.0 + 47.0/53.0</initializer>
        <briefdescription>
<para>Random fp value using entire mantissa. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" line="63" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gaa0a5f9070bb473a9b5f440cf950b8d64" prot="public" static="no" mutable="no">
        <type>const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>const real gmx::test::c8</definition>
        <argsstring></argsstring>
        <name>c8</name>
        <initializer>= 8.0 + 59.0/61.0</initializer>
        <briefdescription>
<para>Random fp value using entire mantissa. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" line="64" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gac9a052a2bd836d32f8f11b8ac107fd0e" prot="public" static="no" mutable="no">
        <type>const <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
        <definition>const real gmx::test::c9</definition>
        <argsstring></argsstring>
        <name>c9</name>
        <briefdescription>
<para>Random fp value using entire mantissa. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/data.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gabbd0be2aa33c9ca3369e42fbcfe58257" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_c0c1c2</definition>
        <argsstring></argsstring>
        <name>rSimd_c0c1c2</name>
        <initializer>= <ref refid="group__module__simd_1gacc5ed5bd5dd0134c7c96738eb931da71" kindref="member">setSimdRealFrom3R</ref>( <ref refid="group__module__simd_1ga3f294436d4f5e4f914b20c069cbd99d0" kindref="member">c0</ref>, <ref refid="group__module__simd_1ga44268249c39e66775001b8311036787f" kindref="member">c1</ref>, <ref refid="group__module__simd_1ga1df035e15e8f2c3ad9de3f9ecada8530" kindref="member">c2</ref>)</initializer>
        <briefdescription>
<para>c0,c1,c2 repeated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="67" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga916e29c6964a631887314a8780203e29" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_c3c4c5</definition>
        <argsstring></argsstring>
        <name>rSimd_c3c4c5</name>
        <initializer>= <ref refid="group__module__simd_1gacc5ed5bd5dd0134c7c96738eb931da71" kindref="member">setSimdRealFrom3R</ref>( <ref refid="group__module__simd_1gac78ba15eb876271a39e7813e56c9716c" kindref="member">c3</ref>, <ref refid="group__module__simd_1ga83f66d520e87d67b57ea6b373a8b9b50" kindref="member">c4</ref>, <ref refid="group__module__simd_1gab165ea93474a36d892098dfadbe5fcd6" kindref="member">c5</ref>)</initializer>
        <briefdescription>
<para>c3,c4,c5 repeated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="68" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gab5db5bcf5b8e94a4fbcf9d91d86ae44f" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_c6c7c8</definition>
        <argsstring></argsstring>
        <name>rSimd_c6c7c8</name>
        <initializer>= <ref refid="group__module__simd_1gacc5ed5bd5dd0134c7c96738eb931da71" kindref="member">setSimdRealFrom3R</ref>( <ref refid="group__module__simd_1ga80362ee87d07f5b58eeb0716d8efcaa1" kindref="member">c6</ref>, <ref refid="group__module__simd_1gafc39c0ee9643227e6b44acf3e07aa16d" kindref="member">c7</ref>, <ref refid="group__module__simd_1gaa0a5f9070bb473a9b5f440cf950b8d64" kindref="member">c8</ref>)</initializer>
        <briefdescription>
<para>c6,c7,c8 repeated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="69" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga8ebdd3997371c0e6d8f396f17176fc74" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_c3c0c4</definition>
        <argsstring></argsstring>
        <name>rSimd_c3c0c4</name>
        <initializer>= <ref refid="group__module__simd_1gacc5ed5bd5dd0134c7c96738eb931da71" kindref="member">setSimdRealFrom3R</ref>( <ref refid="group__module__simd_1gac78ba15eb876271a39e7813e56c9716c" kindref="member">c3</ref>, <ref refid="group__module__simd_1ga3f294436d4f5e4f914b20c069cbd99d0" kindref="member">c0</ref>, <ref refid="group__module__simd_1ga83f66d520e87d67b57ea6b373a8b9b50" kindref="member">c4</ref>)</initializer>
        <briefdescription>
<para>c3,c0,c4 repeated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="70" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga44202280b46d5e460fdcdf6da7632968" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_c4c6c8</definition>
        <argsstring></argsstring>
        <name>rSimd_c4c6c8</name>
        <initializer>= <ref refid="group__module__simd_1gacc5ed5bd5dd0134c7c96738eb931da71" kindref="member">setSimdRealFrom3R</ref>( <ref refid="group__module__simd_1ga83f66d520e87d67b57ea6b373a8b9b50" kindref="member">c4</ref>, <ref refid="group__module__simd_1ga80362ee87d07f5b58eeb0716d8efcaa1" kindref="member">c6</ref>, <ref refid="group__module__simd_1gaa0a5f9070bb473a9b5f440cf950b8d64" kindref="member">c8</ref>)</initializer>
        <briefdescription>
<para>c4,c6,c8 repeated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="71" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gab30cd026217f4006fb0732b369622a64" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_c7c2c3</definition>
        <argsstring></argsstring>
        <name>rSimd_c7c2c3</name>
        <initializer>= <ref refid="group__module__simd_1gacc5ed5bd5dd0134c7c96738eb931da71" kindref="member">setSimdRealFrom3R</ref>( <ref refid="group__module__simd_1gafc39c0ee9643227e6b44acf3e07aa16d" kindref="member">c7</ref>, <ref refid="group__module__simd_1ga1df035e15e8f2c3ad9de3f9ecada8530" kindref="member">c2</ref>, <ref refid="group__module__simd_1gac78ba15eb876271a39e7813e56c9716c" kindref="member">c3</ref>)</initializer>
        <briefdescription>
<para>c7,c2,c3 repeated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="72" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gac85aba9fa19582715d715aab7e59a741" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_m0m1m2</definition>
        <argsstring></argsstring>
        <name>rSimd_m0m1m2</name>
        <initializer>= <ref refid="group__module__simd_1gacc5ed5bd5dd0134c7c96738eb931da71" kindref="member">setSimdRealFrom3R</ref>(-<ref refid="group__module__simd_1ga3f294436d4f5e4f914b20c069cbd99d0" kindref="member">c0</ref>, -<ref refid="group__module__simd_1ga44268249c39e66775001b8311036787f" kindref="member">c1</ref>, -<ref refid="group__module__simd_1ga1df035e15e8f2c3ad9de3f9ecada8530" kindref="member">c2</ref>)</initializer>
        <briefdescription>
<para>-c0,-c1,-c2 repeated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="73" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gacff8562111a4b724842a2edc3ac2e6ea" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_m3m0m4</definition>
        <argsstring></argsstring>
        <name>rSimd_m3m0m4</name>
        <initializer>= <ref refid="group__module__simd_1gacc5ed5bd5dd0134c7c96738eb931da71" kindref="member">setSimdRealFrom3R</ref>(-<ref refid="group__module__simd_1gac78ba15eb876271a39e7813e56c9716c" kindref="member">c3</ref>, -<ref refid="group__module__simd_1ga3f294436d4f5e4f914b20c069cbd99d0" kindref="member">c0</ref>, -<ref refid="group__module__simd_1ga83f66d520e87d67b57ea6b373a8b9b50" kindref="member">c4</ref>)</initializer>
        <briefdescription>
<para>-c3,-c0,-c4 repeated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="74" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gaa74b33d73989e05a7ce27e539e86596e" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_2p25</definition>
        <argsstring></argsstring>
        <name>rSimd_2p25</name>
        <initializer>= <ref refid="group__module__simd_1gaba1a90972512fc9f1b870efb7d2c6133" kindref="member">setSimdRealFrom1R</ref>( 2.25)</initializer>
        <briefdescription>
<para>Value that rounds down. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="76" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga73cebedc784d36a4d9af47677a653617" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_3p25</definition>
        <argsstring></argsstring>
        <name>rSimd_3p25</name>
        <initializer>= <ref refid="group__module__simd_1gaba1a90972512fc9f1b870efb7d2c6133" kindref="member">setSimdRealFrom1R</ref>( 3.25)</initializer>
        <briefdescription>
<para>Value that rounds down. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="77" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga3ff658b84b46fed0fe9d3f78157f04f0" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_3p75</definition>
        <argsstring></argsstring>
        <name>rSimd_3p75</name>
        <initializer>= <ref refid="group__module__simd_1gaba1a90972512fc9f1b870efb7d2c6133" kindref="member">setSimdRealFrom1R</ref>( 3.75)</initializer>
        <briefdescription>
<para>Value that rounds up. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="78" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gafcaa275c3ea6431715f8ffdc36d21be6" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_m2p25</definition>
        <argsstring></argsstring>
        <name>rSimd_m2p25</name>
        <initializer>= <ref refid="group__module__simd_1gaba1a90972512fc9f1b870efb7d2c6133" kindref="member">setSimdRealFrom1R</ref>(-2.25)</initializer>
        <briefdescription>
<para>Negative value that rounds up. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="79" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga329970fcbf5cf812f553d38b9deb16f1" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_m3p25</definition>
        <argsstring></argsstring>
        <name>rSimd_m3p25</name>
        <initializer>= <ref refid="group__module__simd_1gaba1a90972512fc9f1b870efb7d2c6133" kindref="member">setSimdRealFrom1R</ref>(-3.25)</initializer>
        <briefdescription>
<para>Negative value that rounds up. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="80" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gab2bdf2bd7290f9b6d7e0a6950eac67de" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_m3p75</definition>
        <argsstring></argsstring>
        <name>rSimd_m3p75</name>
        <initializer>= <ref refid="group__module__simd_1gaba1a90972512fc9f1b870efb7d2c6133" kindref="member">setSimdRealFrom1R</ref>(-3.75)</initializer>
        <briefdescription>
<para>Negative value that rounds down. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="81" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga0ad552c6e7aa0f690a42a0fea3e34537" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_Exp</definition>
        <argsstring></argsstring>
        <name>rSimd_Exp</name>
        <initializer>= <ref refid="group__module__simd_1gacc5ed5bd5dd0134c7c96738eb931da71" kindref="member">setSimdRealFrom3R</ref>( 1.4055235171027452623914516e+18,
                                                   5.3057102734253445623914516e-13,
                                                   -2.1057102745623934534514516e+16)</initializer>
        <briefdescription>
<para>Three large floating-point values whose exponents are &gt;32. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="82" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gacc628e8584705a4f46c128febb4c7dc9" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_logicalA</definition>
        <argsstring></argsstring>
        <name>rSimd_logicalA</name>
        <initializer>= <ref refid="group__module__simd_1gaba1a90972512fc9f1b870efb7d2c6133" kindref="member">setSimdRealFrom1R</ref>(1.3333282470703125)</initializer>
        <briefdescription>
<para>Bit pattern to test logical ops. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="101" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gab1e3c0795341e30eb873b59d896874c2" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_logicalB</definition>
        <argsstring></argsstring>
        <name>rSimd_logicalB</name>
        <initializer>= <ref refid="group__module__simd_1gaba1a90972512fc9f1b870efb7d2c6133" kindref="member">setSimdRealFrom1R</ref>(1.79998779296875)</initializer>
        <briefdescription>
<para>Bit pattern to test logical ops. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="102" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gac6d134c05fbb9873c7c73a88168a4247" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_logicalResultAnd</definition>
        <argsstring></argsstring>
        <name>rSimd_logicalResultAnd</name>
        <initializer>= <ref refid="group__module__simd_1gaba1a90972512fc9f1b870efb7d2c6133" kindref="member">setSimdRealFrom1R</ref>(1.26666259765625)</initializer>
        <briefdescription>
<para>Result or bitwise &apos;and&apos; of A and B. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="103" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga4c0c899f700b9cbbb4b0a988d1a44bd6" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_logicalResultOr</definition>
        <argsstring></argsstring>
        <name>rSimd_logicalResultOr</name>
        <initializer>= <ref refid="group__module__simd_1gaba1a90972512fc9f1b870efb7d2c6133" kindref="member">setSimdRealFrom1R</ref>(1.8666534423828125)</initializer>
        <briefdescription>
<para>Result or bitwise &apos;or&apos; of A and B. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="104" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gad8eb332dbb9bf6b9d91211bf70eec7aa" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a6598cea23dd103ce19bff4743279e3bc" kindref="member">SimdInt32</ref></type>
        <definition>const SimdInt32 gmx::test::iSimd_1_2_3</definition>
        <argsstring></argsstring>
        <name>iSimd_1_2_3</name>
        <initializer>= <ref refid="group__module__simd_1ga9d8939c4f0f48738a4f0621c8ae4d94c" kindref="member">setSimdIntFrom3I</ref>(1, 2, 3)</initializer>
        <briefdescription>
<para>Three generic ints. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="110" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gaea0f82e84ca2bc4cc3082e31d9a8d9f3" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a6598cea23dd103ce19bff4743279e3bc" kindref="member">SimdInt32</ref></type>
        <definition>const SimdInt32 gmx::test::iSimd_4_5_6</definition>
        <argsstring></argsstring>
        <name>iSimd_4_5_6</name>
        <initializer>= <ref refid="group__module__simd_1ga9d8939c4f0f48738a4f0621c8ae4d94c" kindref="member">setSimdIntFrom3I</ref>(4, 5, 6)</initializer>
        <briefdescription>
<para>Three generic ints. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="111" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga89086dfe28eebc1bec343b8bd7ddb888" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a6598cea23dd103ce19bff4743279e3bc" kindref="member">SimdInt32</ref></type>
        <definition>const SimdInt32 gmx::test::iSimd_7_8_9</definition>
        <argsstring></argsstring>
        <name>iSimd_7_8_9</name>
        <initializer>= <ref refid="group__module__simd_1ga9d8939c4f0f48738a4f0621c8ae4d94c" kindref="member">setSimdIntFrom3I</ref>(7, 8, 9)</initializer>
        <briefdescription>
<para>Three generic ints. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="112" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga47227a3e2c5339492b111fdbb9f9d86e" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a6598cea23dd103ce19bff4743279e3bc" kindref="member">SimdInt32</ref></type>
        <definition>const SimdInt32 gmx::test::iSimd_5_7_9</definition>
        <argsstring></argsstring>
        <name>iSimd_5_7_9</name>
        <initializer>= <ref refid="group__module__simd_1ga9d8939c4f0f48738a4f0621c8ae4d94c" kindref="member">setSimdIntFrom3I</ref>(5, 7, 9)</initializer>
        <briefdescription>
<para>iSimd_1_2_3 + iSimd_4_5_6. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="113" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga6451abcb9c45d3dacd3cd14688dfbee2" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a6598cea23dd103ce19bff4743279e3bc" kindref="member">SimdInt32</ref></type>
        <definition>const SimdInt32 gmx::test::iSimd_1M_2M_3M</definition>
        <argsstring></argsstring>
        <name>iSimd_1M_2M_3M</name>
        <initializer>= <ref refid="group__module__simd_1ga9d8939c4f0f48738a4f0621c8ae4d94c" kindref="member">setSimdIntFrom3I</ref>(1000000, 2000000, 3000000)</initializer>
        <briefdescription>
<para>Term1 for 32bit add/sub. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="114" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gab9684628e7276e7a25ab3831fa52913d" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a6598cea23dd103ce19bff4743279e3bc" kindref="member">SimdInt32</ref></type>
        <definition>const SimdInt32 gmx::test::iSimd_4M_5M_6M</definition>
        <argsstring></argsstring>
        <name>iSimd_4M_5M_6M</name>
        <initializer>= <ref refid="group__module__simd_1ga9d8939c4f0f48738a4f0621c8ae4d94c" kindref="member">setSimdIntFrom3I</ref>(4000000, 5000000, 6000000)</initializer>
        <briefdescription>
<para>Term2 for 32bit add/sub. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="115" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga71d5a902593cbbb02abbab7a7db1fe81" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a6598cea23dd103ce19bff4743279e3bc" kindref="member">SimdInt32</ref></type>
        <definition>const SimdInt32 gmx::test::iSimd_5M_7M_9M</definition>
        <argsstring></argsstring>
        <name>iSimd_5M_7M_9M</name>
        <initializer>= <ref refid="group__module__simd_1ga9d8939c4f0f48738a4f0621c8ae4d94c" kindref="member">setSimdIntFrom3I</ref>(5000000, 7000000, 9000000)</initializer>
        <briefdescription>
<para>iSimd_1M_2M_3M + iSimd_4M_5M_6M. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="116" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gac857912cde1f4bb4be46c5fa31970899" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a6598cea23dd103ce19bff4743279e3bc" kindref="member">SimdInt32</ref></type>
        <definition>const SimdInt32 gmx::test::iSimd_0xF0F0F0F0</definition>
        <argsstring></argsstring>
        <name>iSimd_0xF0F0F0F0</name>
        <initializer>= <ref refid="group__module__simd_1ga2a7a383c9c8de6a3c2bf26af047a73d9" kindref="member">setSimdIntFrom1I</ref>(0xF0F0F0F0)</initializer>
        <briefdescription>
<para>Bitpattern to test integer logical operations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="119" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gab433418041c2c62643b1e9f3fe11d894" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a6598cea23dd103ce19bff4743279e3bc" kindref="member">SimdInt32</ref></type>
        <definition>const SimdInt32 gmx::test::iSimd_0xCCCCCCCC</definition>
        <argsstring></argsstring>
        <name>iSimd_0xCCCCCCCC</name>
        <initializer>= <ref refid="group__module__simd_1ga2a7a383c9c8de6a3c2bf26af047a73d9" kindref="member">setSimdIntFrom1I</ref>(0xCCCCCCCC)</initializer>
        <briefdescription>
<para>Bitpattern to test integer logical operations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="120" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gadbcc932f6bb869f13adf284528d2366d" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_Bits1</definition>
        <argsstring></argsstring>
        <name>rSimd_Bits1</name>
        <briefdescription>
<para>Pattern F0 repeated to fill single/double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gac829b4c1528431222df5f95873f6cf37" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_Bits2</definition>
        <argsstring></argsstring>
        <name>rSimd_Bits2</name>
        <briefdescription>
<para>Pattern CC repeated to fill single/double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga48b1883028e43d752c39f6e723f2204a" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_Bits3</definition>
        <argsstring></argsstring>
        <name>rSimd_Bits3</name>
        <briefdescription>
<para>Pattern C0 repeated to fill single/double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga942c70e13478dedfa22c28c75a36ca2b" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_Bits4</definition>
        <argsstring></argsstring>
        <name>rSimd_Bits4</name>
        <briefdescription>
<para>Pattern 0C repeated to fill single/double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gafe712e1f0a738fd002437cc15c157bb1" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_Bits5</definition>
        <argsstring></argsstring>
        <name>rSimd_Bits5</name>
        <briefdescription>
<para>Pattern FC repeated to fill single/double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.h" line="146" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga38cf621ea8663900bdf4e836e8cc45fe" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>const SimdReal gmx::test::rSimd_Bits6</definition>
        <argsstring></argsstring>
        <name>rSimd_Bits6</name>
        <briefdescription>
<para>Pattern 3C repeated to fill single/double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga22d13c25879335b846ea303c0e3b8ebf" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_c0c1c2</definition>
        <argsstring></argsstring>
        <name>rSimd4_c0c1c2</name>
        <initializer>= <ref refid="group__module__simd_1gaf4509cf1e9c7199cbc999cf10b828a40" kindref="member">setSimd4RealFrom3R</ref>( <ref refid="group__module__simd_1ga3f294436d4f5e4f914b20c069cbd99d0" kindref="member">c0</ref>, <ref refid="group__module__simd_1ga44268249c39e66775001b8311036787f" kindref="member">c1</ref>, <ref refid="group__module__simd_1ga1df035e15e8f2c3ad9de3f9ecada8530" kindref="member">c2</ref>)</initializer>
        <briefdescription>
<para>c0,c1,c2 repeated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="57" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gadf95d5e8a95d6d8de1dabb43f088046b" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_c3c4c5</definition>
        <argsstring></argsstring>
        <name>rSimd4_c3c4c5</name>
        <initializer>= <ref refid="group__module__simd_1gaf4509cf1e9c7199cbc999cf10b828a40" kindref="member">setSimd4RealFrom3R</ref>( <ref refid="group__module__simd_1gac78ba15eb876271a39e7813e56c9716c" kindref="member">c3</ref>, <ref refid="group__module__simd_1ga83f66d520e87d67b57ea6b373a8b9b50" kindref="member">c4</ref>, <ref refid="group__module__simd_1gab165ea93474a36d892098dfadbe5fcd6" kindref="member">c5</ref>)</initializer>
        <briefdescription>
<para>c3,c4,c5 repeated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="58" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga0345c9c1d508a1fec2a5c10fd463ddaf" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_c6c7c8</definition>
        <argsstring></argsstring>
        <name>rSimd4_c6c7c8</name>
        <initializer>= <ref refid="group__module__simd_1gaf4509cf1e9c7199cbc999cf10b828a40" kindref="member">setSimd4RealFrom3R</ref>( <ref refid="group__module__simd_1ga80362ee87d07f5b58eeb0716d8efcaa1" kindref="member">c6</ref>, <ref refid="group__module__simd_1gafc39c0ee9643227e6b44acf3e07aa16d" kindref="member">c7</ref>, <ref refid="group__module__simd_1gaa0a5f9070bb473a9b5f440cf950b8d64" kindref="member">c8</ref>)</initializer>
        <briefdescription>
<para>c6,c7,c8 repeated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="59" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gaf3ff5b375cb6d6fb4eee17c0eb7c497a" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_c3c0c4</definition>
        <argsstring></argsstring>
        <name>rSimd4_c3c0c4</name>
        <initializer>= <ref refid="group__module__simd_1gaf4509cf1e9c7199cbc999cf10b828a40" kindref="member">setSimd4RealFrom3R</ref>( <ref refid="group__module__simd_1gac78ba15eb876271a39e7813e56c9716c" kindref="member">c3</ref>, <ref refid="group__module__simd_1ga3f294436d4f5e4f914b20c069cbd99d0" kindref="member">c0</ref>, <ref refid="group__module__simd_1ga83f66d520e87d67b57ea6b373a8b9b50" kindref="member">c4</ref>)</initializer>
        <briefdescription>
<para>c3,c0,c4 repeated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="60" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga211b2b162423c42f24181736d7ba62b3" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_c4c6c8</definition>
        <argsstring></argsstring>
        <name>rSimd4_c4c6c8</name>
        <initializer>= <ref refid="group__module__simd_1gaf4509cf1e9c7199cbc999cf10b828a40" kindref="member">setSimd4RealFrom3R</ref>( <ref refid="group__module__simd_1ga83f66d520e87d67b57ea6b373a8b9b50" kindref="member">c4</ref>, <ref refid="group__module__simd_1ga80362ee87d07f5b58eeb0716d8efcaa1" kindref="member">c6</ref>, <ref refid="group__module__simd_1gaa0a5f9070bb473a9b5f440cf950b8d64" kindref="member">c8</ref>)</initializer>
        <briefdescription>
<para>c4,c6,c8 repeated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="61" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gaff3879d9deb911ad6ef1a2d6d8f082b2" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_c7c2c3</definition>
        <argsstring></argsstring>
        <name>rSimd4_c7c2c3</name>
        <initializer>= <ref refid="group__module__simd_1gaf4509cf1e9c7199cbc999cf10b828a40" kindref="member">setSimd4RealFrom3R</ref>( <ref refid="group__module__simd_1gafc39c0ee9643227e6b44acf3e07aa16d" kindref="member">c7</ref>, <ref refid="group__module__simd_1ga1df035e15e8f2c3ad9de3f9ecada8530" kindref="member">c2</ref>, <ref refid="group__module__simd_1gac78ba15eb876271a39e7813e56c9716c" kindref="member">c3</ref>)</initializer>
        <briefdescription>
<para>c7,c2,c3 repeated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="62" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga4cc49a294d621a48b68a52ad8743e22d" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_m0m1m2</definition>
        <argsstring></argsstring>
        <name>rSimd4_m0m1m2</name>
        <initializer>= <ref refid="group__module__simd_1gaf4509cf1e9c7199cbc999cf10b828a40" kindref="member">setSimd4RealFrom3R</ref>(-<ref refid="group__module__simd_1ga3f294436d4f5e4f914b20c069cbd99d0" kindref="member">c0</ref>, -<ref refid="group__module__simd_1ga44268249c39e66775001b8311036787f" kindref="member">c1</ref>, -<ref refid="group__module__simd_1ga1df035e15e8f2c3ad9de3f9ecada8530" kindref="member">c2</ref>)</initializer>
        <briefdescription>
<para>-c0,-c1,-c2 repeated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="63" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gacf4dc8903e06efc4317e56d3fa25d364" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_m3m0m4</definition>
        <argsstring></argsstring>
        <name>rSimd4_m3m0m4</name>
        <initializer>= <ref refid="group__module__simd_1gaf4509cf1e9c7199cbc999cf10b828a40" kindref="member">setSimd4RealFrom3R</ref>(-<ref refid="group__module__simd_1gac78ba15eb876271a39e7813e56c9716c" kindref="member">c3</ref>, -<ref refid="group__module__simd_1ga3f294436d4f5e4f914b20c069cbd99d0" kindref="member">c0</ref>, -<ref refid="group__module__simd_1ga83f66d520e87d67b57ea6b373a8b9b50" kindref="member">c4</ref>)</initializer>
        <briefdescription>
<para>-c3,-c0,-c4 repeated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="64" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga3a7097d08bbe4572d89cd18a6317db29" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_2p25</definition>
        <argsstring></argsstring>
        <name>rSimd4_2p25</name>
        <initializer>= <ref refid="group__module__simd_1gaf9535a225c8e4334bf7e50768ad185ff" kindref="member">setSimd4RealFrom1R</ref>(2.25)</initializer>
        <briefdescription>
<para>Value that rounds down. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="65" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gae65528fc03bc2d4d91d00f0f88c3a59a" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_3p75</definition>
        <argsstring></argsstring>
        <name>rSimd4_3p75</name>
        <initializer>= <ref refid="group__module__simd_1gaf9535a225c8e4334bf7e50768ad185ff" kindref="member">setSimd4RealFrom1R</ref>(3.75)</initializer>
        <briefdescription>
<para>Value that rounds up. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="66" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gae58e4f79a2490381ef26e7f4ac106ed9" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_m2p25</definition>
        <argsstring></argsstring>
        <name>rSimd4_m2p25</name>
        <initializer>= <ref refid="group__module__simd_1gaf9535a225c8e4334bf7e50768ad185ff" kindref="member">setSimd4RealFrom1R</ref>(-2.25)</initializer>
        <briefdescription>
<para>Negative value that rounds up. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="67" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gaee2e4ce1f2a9cd92f597133f70ca9d87" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_m3p75</definition>
        <argsstring></argsstring>
        <name>rSimd4_m3p75</name>
        <initializer>= <ref refid="group__module__simd_1gaf9535a225c8e4334bf7e50768ad185ff" kindref="member">setSimd4RealFrom1R</ref>(-3.75)</initializer>
        <briefdescription>
<para>Negative value that rounds down. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="68" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga6942c818dcc25a51c392d144d17cb7b1" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_logicalA</definition>
        <argsstring></argsstring>
        <name>rSimd4_logicalA</name>
        <initializer>= <ref refid="group__module__simd_1gaf9535a225c8e4334bf7e50768ad185ff" kindref="member">setSimd4RealFrom1R</ref>(1.3333282470703125)</initializer>
        <briefdescription>
<para>Bit pattern to test logical ops. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="79" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga1b091828f353571f5975f3821ae450f3" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_logicalB</definition>
        <argsstring></argsstring>
        <name>rSimd4_logicalB</name>
        <initializer>= <ref refid="group__module__simd_1gaf9535a225c8e4334bf7e50768ad185ff" kindref="member">setSimd4RealFrom1R</ref>(1.79998779296875)</initializer>
        <briefdescription>
<para>Bit pattern to test logical ops. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="80" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gaab5ac87ee5e296ac7d61fa160669bba9" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_logicalResultAnd</definition>
        <argsstring></argsstring>
        <name>rSimd4_logicalResultAnd</name>
        <initializer>= <ref refid="group__module__simd_1gaf9535a225c8e4334bf7e50768ad185ff" kindref="member">setSimd4RealFrom1R</ref>(1.26666259765625)</initializer>
        <briefdescription>
<para>Result or bitwise &apos;and&apos; of A and B. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="81" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga4e47b42f72845140b08262d390bfa0bc" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_logicalResultOr</definition>
        <argsstring></argsstring>
        <name>rSimd4_logicalResultOr</name>
        <initializer>= <ref refid="group__module__simd_1gaf9535a225c8e4334bf7e50768ad185ff" kindref="member">setSimd4RealFrom1R</ref>(1.8666534423828125)</initializer>
        <briefdescription>
<para>Result or bitwise &apos;or&apos; of A and B. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="82" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga9aae0a4ea00558be8d7ae3a55f2093f1" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_Exp</definition>
        <argsstring></argsstring>
        <name>rSimd4_Exp</name>
        <briefdescription>
<para>Three large floating-point values whose exponents are &gt;32. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga9c54980a45b4eb3ba94ce88ef2fddff3" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_Bits1</definition>
        <argsstring></argsstring>
        <name>rSimd4_Bits1</name>
        <briefdescription>
<para>Pattern F0 repeated to fill single/double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gaebf4fe714b0c265ddec3d0e020e10acd" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_Bits2</definition>
        <argsstring></argsstring>
        <name>rSimd4_Bits2</name>
        <briefdescription>
<para>Pattern CC repeated to fill single/double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gaa013db11ad707efe3b8df2ea65cb9b1e" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_Bits3</definition>
        <argsstring></argsstring>
        <name>rSimd4_Bits3</name>
        <briefdescription>
<para>Pattern C0 repeated to fill single/double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1ga31ad32d5e33b7c9c12df5edd8440d3a4" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_Bits4</definition>
        <argsstring></argsstring>
        <name>rSimd4_Bits4</name>
        <briefdescription>
<para>Pattern 0C repeated to fill single/double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gaaa8ec5b150b4c848ddda609296113fcd" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_Bits5</definition>
        <argsstring></argsstring>
        <name>rSimd4_Bits5</name>
        <briefdescription>
<para>Pattern FC repeated to fill single/double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="group__module__simd_1gabcd5b90a94755a4ab053d339c0565d39" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>const Simd4Real gmx::test::rSimd4_Bits6</definition>
        <argsstring></argsstring>
        <name>rSimd4_Bits6</name>
        <briefdescription>
<para>Pattern 3C repeated to fill single/double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegmx_1_1test_1a8b73ce4b125bef6a7142cff78280c2e9" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* gmx::test::g_butaneTopFileFormatString</definition>
        <argsstring></argsstring>
        <name>g_butaneTopFileFormatString</name>
        <briefdescription>
<para>Format string for building a configurable .top file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/tabulated_bonded_interactions.cpp" line="60" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/tabulated_bonded_interactions.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegmx_1_1test_1abedb4677d6c18c46b7287cd3427f4b68" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool gmx::test::g_bDeleteFilesAfterTest</definition>
        <argsstring></argsstring>
        <name>g_bDeleteFilesAfterTest</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Controls whether <ref refid="classgmx_1_1test_1_1TestFileManager" kindref="compound">TestFileManager</ref> should delete temporary files after the test finishes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testfilemanager.cpp" line="118" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testfilemanager.cpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacegmx_1_1test_1a3ea81dc3e7bfc85e1c5057fb18604955" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgmx_1_1test_1_1AwhTestParameters" kindref="compound">AwhTestParameters</ref></type>
        <definition>static AwhTestParameters gmx::test::getAwhTestParameters</definition>
        <argsstring>(int eawhgrowth, int eawhpotential)</argsstring>
        <name>getAwhTestParameters</name>
        <param>
          <type>int</type>
          <declname>eawhgrowth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eawhpotential</declname>
        </param>
        <briefdescription>
<para>Helper function to set up the C-style AWH parameters for the test. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/tests/bias.cpp" line="77" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/tests/bias.cpp" bodystart="77" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1ae8afebcdee3e4040bd9e6eedba4e10a0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgmx_1_1test_1_1AwhTestParameters" kindref="compound">AwhTestParameters</ref></type>
        <definition>static AwhTestParameters gmx::test::getAwhTestParameters</definition>
        <argsstring>()</argsstring>
        <name>getAwhTestParameters</name>
        <briefdescription>
<para>Helper function to set up the C-style AWH parameters for the test. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/tests/biasstate.cpp" line="75" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/awh/tests/biasstate.cpp" bodystart="75" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1adc50743650edc1d9c88b61b1e4bf6fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::test::pmeSupportsInputForMode</definition>
        <argsstring>(const t_inputrec *inputRec, CodePath mode)</argsstring>
        <name>pmeSupportsInputForMode</name>
        <param>
          <type>const <ref refid="structt__inputrec" kindref="compound">t_inputrec</ref> *</type>
          <declname>inputRec</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Tells if this generally valid PME input is supported for this mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="71" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="71" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a453ac8bc3aa58ada94a37b6a1568b4d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gmx_uint64_t</type>
        <definition>gmx_uint64_t gmx::test::getSplineModuliDoublePrecisionUlps</definition>
        <argsstring>(int splineOrder)</argsstring>
        <name>getSplineModuliDoublePrecisionUlps</name>
        <param>
          <type>int</type>
          <declname>splineOrder</declname>
        </param>
        <briefdescription>
<para>For double precision checks, the recursive interpolation and use of trig functions in make_dft_mod require a lot more flops, and thus opportunity for deviation between implementations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="90" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="90" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a79eb0c50875853309a14a97b22db952e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1_1test_1aaaa8ca0139f36a88f147667766fc7e50" kindref="member">PmeSafePointer</ref></type>
        <definition>static PmeSafePointer gmx::test::pmeInitInternal</definition>
        <argsstring>(const t_inputrec *inputRec, CodePath mode, gmx_device_info_t *gpuInfo, size_t atomCount, const Matrix3x3 &amp;box, real ewaldCoeff_q=1.0f, real ewaldCoeff_lj=1.0f)</argsstring>
        <name>pmeInitInternal</name>
        <param>
          <type>const <ref refid="structt__inputrec" kindref="compound">t_inputrec</ref> *</type>
          <declname>inputRec</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="structgmx__device__info__t" kindref="compound">gmx_device_info_t</ref> *</type>
          <declname>gpuInfo</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>atomCount</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegmx_1_1test_1a74fe68cc05ba6596ac5d7ab6a397ab5f" kindref="member">Matrix3x3</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>ewaldCoeff_q</declname>
          <defval>1.0f</defval>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>ewaldCoeff_lj</declname>
          <defval>1.0f</defval>
        </param>
        <briefdescription>
<para>PME initialization - internal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="100" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="100" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a4696b27a8e7eb4f4dfc0be4becb89d51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1_1test_1aaaa8ca0139f36a88f147667766fc7e50" kindref="member">PmeSafePointer</ref></type>
        <definition>PmeSafePointer gmx::test::pmeInitEmpty</definition>
        <argsstring>(const t_inputrec *inputRec, CodePath mode, gmx_device_info_t *gpuInfo, const Matrix3x3 &amp;box, real ewaldCoeff_q, real ewaldCoeff_lj)</argsstring>
        <name>pmeInitEmpty</name>
        <param>
          <type>const <ref refid="structt__inputrec" kindref="compound">t_inputrec</ref> *</type>
          <declname>inputRec</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="structgmx__device__info__t" kindref="compound">gmx_device_info_t</ref> *</type>
          <declname>gpuInfo</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegmx_1_1test_1a74fe68cc05ba6596ac5d7ab6a397ab5f" kindref="member">Matrix3x3</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>ewaldCoeff_q</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>ewaldCoeff_lj</declname>
        </param>
        <briefdescription>
<para>Simple PME initialization based on input, no atom data. </para>        </briefdescription>
        <detaileddescription>
<para>Simple PME initialization (no atom data) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="151" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="151" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a234314be1a2b322d08eb11462cc7f190" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1_1test_1aaaa8ca0139f36a88f147667766fc7e50" kindref="member">PmeSafePointer</ref></type>
        <definition>PmeSafePointer gmx::test::pmeInitAtoms</definition>
        <argsstring>(const t_inputrec *inputRec, CodePath mode, gmx_device_info_t *gpuInfo, const CoordinatesVector &amp;coordinates, const ChargesVector &amp;charges, const Matrix3x3 &amp;box)</argsstring>
        <name>pmeInitAtoms</name>
        <param>
          <type>const <ref refid="structt__inputrec" kindref="compound">t_inputrec</ref> *</type>
          <declname>inputRec</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="structgmx__device__info__t" kindref="compound">gmx_device_info_t</ref> *</type>
          <declname>gpuInfo</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegmx_1_1test_1a92d5f4a0dfe0e7321256dfe596b6f7bc" kindref="member">CoordinatesVector</ref> &amp;</type>
          <declname>coordinates</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegmx_1_1test_1acec376ab6eee2d37cad97e5a4fc3971b" kindref="member">ChargesVector</ref> &amp;</type>
          <declname>charges</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegmx_1_1test_1a74fe68cc05ba6596ac5d7ab6a397ab5f" kindref="member">Matrix3x3</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
<para>PME initialization with atom data. </para>        </briefdescription>
        <detaileddescription>
<para>PME initialization with atom data and system box. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="164" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="164" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1abf6e22bacfca9058795e508a2982e341" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> *</type>
        <definition>static real* gmx::test::pmeGetRealGridInternal</definition>
        <argsstring>(const gmx_pme_t *pme)</argsstring>
        <name>pmeGetRealGridInternal</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <briefdescription>
<para>Getting local PME real grid pointer for test I/O. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="199" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="199" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a1a6c86c8a2d4ad8f87e1a50aef85197a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void gmx::test::pmeGetRealGridSizesInternal</definition>
        <argsstring>(const gmx_pme_t *pme, CodePath mode, IVec &amp;gridSize, IVec &amp;paddedGridSize)</argsstring>
        <name>pmeGetRealGridSizesInternal</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1a9699d31c62e2a4cc2c730793a1224411" kindref="member">IVec</ref> &amp;</type>
          <declname>gridSize</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1a9699d31c62e2a4cc2c730793a1224411" kindref="member">IVec</ref> &amp;</type>
          <declname>paddedGridSize</declname>
        </param>
        <briefdescription>
<para>Getting local PME real grid dimensions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="206" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="206" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1af56fcb04608b8e217093ce086e367ed2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structt__complex" kindref="compound">t_complex</ref> *</type>
        <definition>static t_complex* gmx::test::pmeGetComplexGridInternal</definition>
        <argsstring>(const gmx_pme_t *pme)</argsstring>
        <name>pmeGetComplexGridInternal</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <briefdescription>
<para>Getting local PME complex grid pointer for test I/O. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="229" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="229" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a611b81b5fa91c5af3a1d55f0dcccd403" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void gmx::test::pmeGetComplexGridSizesInternal</definition>
        <argsstring>(const gmx_pme_t *pme, IVec &amp;gridSize, IVec &amp;paddedGridSize)</argsstring>
        <name>pmeGetComplexGridSizesInternal</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1a9699d31c62e2a4cc2c730793a1224411" kindref="member">IVec</ref> &amp;</type>
          <declname>gridSize</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1a9699d31c62e2a4cc2c730793a1224411" kindref="member">IVec</ref> &amp;</type>
          <declname>paddedGridSize</declname>
        </param>
        <briefdescription>
<para>Getting local PME complex grid dimensions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="236" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="236" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a4b502cb38e6a78aef8d61616f23d9b86" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void gmx::test::pmeGetGridAndSizesInternal</definition>
        <argsstring>(const gmx_pme_t *, CodePath, ValueType *&amp;, IVec &amp;, IVec &amp;)</argsstring>
        <name>pmeGetGridAndSizesInternal</name>
        <param>
          <type>const gmx_pme_t *</type>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
        </param>
        <param>
          <type>ValueType *&amp;</type>
        </param>
        <param>
          <type><ref refid="namespacegmx_1a9699d31c62e2a4cc2c730793a1224411" kindref="member">IVec</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="namespacegmx_1a9699d31c62e2a4cc2c730793a1224411" kindref="member">IVec</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Getting the PME grid memory buffer and its sizes - template definition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="246" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="246" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1aa75b5c890774b90c501d9124e09e2e9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void gmx::test::pmeGetGridAndSizesInternal&lt; real &gt;</definition>
        <argsstring>(const gmx_pme_t *pme, CodePath mode, real *&amp;grid, IVec &amp;gridSize, IVec &amp;paddedGridSize)</argsstring>
        <name>pmeGetGridAndSizesInternal&lt; real &gt;</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> *&amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1a9699d31c62e2a4cc2c730793a1224411" kindref="member">IVec</ref> &amp;</type>
          <declname>gridSize</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1a9699d31c62e2a4cc2c730793a1224411" kindref="member">IVec</ref> &amp;</type>
          <declname>paddedGridSize</declname>
        </param>
        <briefdescription>
<para>Getting the PME real grid memory buffer and its sizes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="253" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="253" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a0ef1b83c5bdeff7aadb9cba1f3051132" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void gmx::test::pmeGetGridAndSizesInternal&lt; t_complex &gt;</definition>
        <argsstring>(const gmx_pme_t *pme, CodePath, t_complex *&amp;grid, IVec &amp;gridSize, IVec &amp;paddedGridSize)</argsstring>
        <name>pmeGetGridAndSizesInternal&lt; t_complex &gt;</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
        </param>
        <param>
          <type><ref refid="structt__complex" kindref="compound">t_complex</ref> *&amp;</type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1a9699d31c62e2a4cc2c730793a1224411" kindref="member">IVec</ref> &amp;</type>
          <declname>gridSize</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1a9699d31c62e2a4cc2c730793a1224411" kindref="member">IVec</ref> &amp;</type>
          <declname>paddedGridSize</declname>
        </param>
        <briefdescription>
<para>Getting the PME complex grid memory buffer and its sizes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="260" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="260" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a1ca32a3032115f7d3287676d2c0e6f17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::pmePerformSplineAndSpread</definition>
        <argsstring>(gmx_pme_t *pme, CodePath mode, bool computeSplines, bool spreadCharges)</argsstring>
        <name>pmePerformSplineAndSpread</name>
        <param>
          <type>gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>computeSplines</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>spreadCharges</declname>
        </param>
        <briefdescription>
<para>PME spline calculation and charge spreading. </para>        </briefdescription>
        <detaileddescription>
<para>PME spline computation and charge spreading. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="267" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="267" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1aa6688e1c60f83063c0a3941404363eaa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> *</type>
        <definition>static real* gmx::test::pmeGetSplineDataInternal</definition>
        <argsstring>(const gmx_pme_t *pme, PmeSplineDataType type, int dimIndex)</argsstring>
        <name>pmeGetSplineDataInternal</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="pme-gpu-internal_8h_1a0f754eebaa9461af5829e9d32c8156cb" kindref="member">PmeSplineDataType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dimIndex</declname>
        </param>
        <briefdescription>
<para>Getting the internal spline data buffer pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="299" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="299" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1aaf397294cc77a33540b53c4d12b2303d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::pmePerformSolve</definition>
        <argsstring>(const gmx_pme_t *pme, CodePath mode, PmeSolveAlgorithm method, real cellVolume, GridOrdering gridOrdering, bool computeEnergyAndVirial)</argsstring>
        <name>pmePerformSolve</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1a132e86b8150b498685276c35a87132a3" kindref="member">PmeSolveAlgorithm</ref></type>
          <declname>method</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>cellVolume</declname>
        </param>
        <param>
          <type><ref refid="pme-gpu-internal_8h_1a68be0dbcc0dc3960694fc024c5996d79" kindref="member">GridOrdering</ref></type>
          <declname>gridOrdering</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>computeEnergyAndVirial</declname>
        </param>
        <briefdescription>
<para>PME solving. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="322" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="322" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1ac20e16ad5f2b3e1313c147f77623b40b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::pmePerformGather</definition>
        <argsstring>(gmx_pme_t *pme, CodePath mode, PmeForceOutputHandling inputTreatment, ForcesVector &amp;forces)</argsstring>
        <name>pmePerformGather</name>
        <param>
          <type>gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="pme_8h_1acbcd1495b351f6a99fa2bf5b10aca640" kindref="member">PmeForceOutputHandling</ref></type>
          <declname>inputTreatment</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1ad784e0ed3eca143a1a3a36da930300df" kindref="member">ForcesVector</ref> &amp;</type>
          <declname>forces</declname>
        </param>
        <briefdescription>
<para>PME force gathering. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="371" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="371" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a1edd6d8cc0e4fa820be454dbf3877f4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::pmeFinalizeTest</definition>
        <argsstring>(const gmx_pme_t *pme, CodePath mode)</argsstring>
        <name>pmeFinalizeTest</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>PME test finalization before fetching the outputs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="424" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="424" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a3b2ab56f6d1dd12ead96b688493b1f3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::pmeSetSplineData</definition>
        <argsstring>(const gmx_pme_t *pme, CodePath mode, const SplineParamsDimVector &amp;splineValues, PmeSplineDataType type, int dimIndex)</argsstring>
        <name>pmeSetSplineData</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegmx_1_1test_1a84f15596ff84b0232b7ded7fdf84225e" kindref="member">SplineParamsDimVector</ref> &amp;</type>
          <declname>splineValues</declname>
        </param>
        <param>
          <type><ref refid="pme-gpu-internal_8h_1a0f754eebaa9461af5829e9d32c8156cb" kindref="member">PmeSplineDataType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dimIndex</declname>
        </param>
        <briefdescription>
<para>Setting atom spline values/derivatives to be used in spread/gather. </para>        </briefdescription>
        <detaileddescription>
<para>Setting atom spline values or derivatives to be used in spread/gather. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="441" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="441" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a9c2390232e924060f609fe3b5e8cce88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::pmeSetGridLineIndices</definition>
        <argsstring>(const gmx_pme_t *pme, CodePath mode, const GridLineIndicesVector &amp;gridLineIndices)</argsstring>
        <name>pmeSetGridLineIndices</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegmx_1_1test_1a9291e32dedddd7972e1738b3f5b1e00b" kindref="member">GridLineIndicesVector</ref> &amp;</type>
          <declname>gridLineIndices</declname>
        </param>
        <briefdescription>
<para>Setting gridline indices to be used in spread/gather. </para>        </briefdescription>
        <detaileddescription>
<para>Setting gridline indices be used in spread/gather. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="468" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="468" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a60ef82e23c14b05f86ed003b1b6ba6e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t gmx::test::pmeGetGridPlainIndexInternal</definition>
        <argsstring>(const IVec &amp;index, const IVec &amp;paddedGridSize, GridOrdering gridOrdering)</argsstring>
        <name>pmeGetGridPlainIndexInternal</name>
        <param>
          <type>const <ref refid="namespacegmx_1a9699d31c62e2a4cc2c730793a1224411" kindref="member">IVec</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegmx_1a9699d31c62e2a4cc2c730793a1224411" kindref="member">IVec</ref> &amp;</type>
          <declname>paddedGridSize</declname>
        </param>
        <param>
          <type><ref refid="pme-gpu-internal_8h_1a68be0dbcc0dc3960694fc024c5996d79" kindref="member">GridOrdering</ref></type>
          <declname>gridOrdering</declname>
        </param>
        <briefdescription>
<para>Getting plain index into the complex 3d grid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="504" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="504" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a1a0e5a4c3e4056aadc2f173f30997383" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void gmx::test::pmeSetGridInternal</definition>
        <argsstring>(const gmx_pme_t *pme, CodePath mode, GridOrdering gridOrdering, const SparseGridValuesInput&lt; ValueType &gt; &amp;gridValues)</argsstring>
        <name>pmeSetGridInternal</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="pme-gpu-internal_8h_1a68be0dbcc0dc3960694fc024c5996d79" kindref="member">GridOrdering</ref></type>
          <declname>gridOrdering</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegmx_1_1test_1a4f4bf09a7384aa5d64f79d917f3c994a" kindref="member">SparseGridValuesInput</ref>&lt; ValueType &gt; &amp;</type>
          <declname>gridValues</declname>
        </param>
        <briefdescription>
<para>Setting real or complex grid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="525" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="525" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a6afa41f76ebc52a30125d51e9924748a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::pmeSetRealGrid</definition>
        <argsstring>(const gmx_pme_t *pme, CodePath mode, const SparseRealGridValuesInput &amp;gridValues)</argsstring>
        <name>pmeSetRealGrid</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegmx_1_1test_1ae3abf010984bd9d86117531d390cc818" kindref="member">SparseRealGridValuesInput</ref> &amp;</type>
          <declname>gridValues</declname>
        </param>
        <briefdescription>
<para>Setting real grid to be used in gather. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="555" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="555" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a2dfd0cc8da794cd800197ecee0533f8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::pmeSetComplexGrid</definition>
        <argsstring>(const gmx_pme_t *pme, CodePath mode, GridOrdering gridOrdering, const SparseComplexGridValuesInput &amp;gridValues)</argsstring>
        <name>pmeSetComplexGrid</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="pme-gpu-internal_8h_1a68be0dbcc0dc3960694fc024c5996d79" kindref="member">GridOrdering</ref></type>
          <declname>gridOrdering</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegmx_1_1test_1a6f33a6eb9abccf0718e28287d2f65c09" kindref="member">SparseComplexGridValuesInput</ref> &amp;</type>
          <declname>gridValues</declname>
        </param>
        <briefdescription>
<para>Setting complex grid to be used in solve. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="562" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="562" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1aedc489ae843884b7f9a2d10ad9883565" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1_1test_1a84f15596ff84b0232b7ded7fdf84225e" kindref="member">SplineParamsDimVector</ref></type>
        <definition>SplineParamsDimVector gmx::test::pmeGetSplineData</definition>
        <argsstring>(const gmx_pme_t *pme, CodePath mode, PmeSplineDataType type, int dimIndex)</argsstring>
        <name>pmeGetSplineData</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="pme-gpu-internal_8h_1a0f754eebaa9461af5829e9d32c8156cb" kindref="member">PmeSplineDataType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dimIndex</declname>
        </param>
        <briefdescription>
<para>Getting the single dimension&apos;s spline values or derivatives. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="570" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="570" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a221a012f970602d4581d7187e95efb7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1_1test_1a9291e32dedddd7972e1738b3f5b1e00b" kindref="member">GridLineIndicesVector</ref></type>
        <definition>GridLineIndicesVector gmx::test::pmeGetGridlineIndices</definition>
        <argsstring>(const gmx_pme_t *pme, CodePath mode)</argsstring>
        <name>pmeGetGridlineIndices</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Getting the gridline indices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="598" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="598" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a8c9cb972e48db3209997324bb8d9509d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacegmx_1_1test_1a15668f52ff9a77a1a088482ee1379a38" kindref="member">SparseGridValuesOutput</ref>&lt; ValueType &gt;</type>
        <definition>static SparseGridValuesOutput&lt;ValueType&gt; gmx::test::pmeGetGridInternal</definition>
        <argsstring>(const gmx_pme_t *pme, CodePath mode, GridOrdering gridOrdering)</argsstring>
        <name>pmeGetGridInternal</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="pme-gpu-internal_8h_1a68be0dbcc0dc3960694fc024c5996d79" kindref="member">GridOrdering</ref></type>
          <declname>gridOrdering</declname>
        </param>
        <briefdescription>
<para>Getting real or complex grid - only non zero values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="623" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="623" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a9229059f2bbfab0c108248b965ce7e3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1_1test_1a5be7457b34714af9bb38e1796b6c120f" kindref="member">SparseRealGridValuesOutput</ref></type>
        <definition>SparseRealGridValuesOutput gmx::test::pmeGetRealGrid</definition>
        <argsstring>(const gmx_pme_t *pme, CodePath mode)</argsstring>
        <name>pmeGetRealGrid</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Getting the real grid (spreading output of <ref refid="namespacegmx_1_1test_1a1ca32a3032115f7d3287676d2c0e6f17" kindref="member">pmePerformSplineAndSpread()</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="660" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="660" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a2787a8ad9629a010c0afae83e1fe7f28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1_1test_1a629bd8118a331f7678290abd58efdcaf" kindref="member">SparseComplexGridValuesOutput</ref></type>
        <definition>SparseComplexGridValuesOutput gmx::test::pmeGetComplexGrid</definition>
        <argsstring>(const gmx_pme_t *pme, CodePath mode, GridOrdering gridOrdering)</argsstring>
        <name>pmeGetComplexGrid</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="pme-gpu-internal_8h_1a68be0dbcc0dc3960694fc024c5996d79" kindref="member">GridOrdering</ref></type>
          <declname>gridOrdering</declname>
        </param>
        <briefdescription>
<para>Getting the complex grid output of <ref refid="namespacegmx_1_1test_1aaf397294cc77a33540b53c4d12b2303d" kindref="member">pmePerformSolve()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="666" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="666" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1ae7099324c51ad1274c3a53440474ff0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1_1test_1aaab9d442c43c4adb6c71502f10c46ca0" kindref="member">PmeSolveOutput</ref></type>
        <definition>PmeSolveOutput gmx::test::pmeGetReciprocalEnergyAndVirial</definition>
        <argsstring>(const gmx_pme_t *pme, CodePath mode, PmeSolveAlgorithm method)</argsstring>
        <name>pmeGetReciprocalEnergyAndVirial</name>
        <param>
          <type>const gmx_pme_t *</type>
          <declname>pme</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1acaaca5966412c55da097f9e9b5254b7a" kindref="member">CodePath</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="namespacegmx_1_1test_1a132e86b8150b498685276c35a87132a3" kindref="member">PmeSolveAlgorithm</ref></type>
          <declname>method</declname>
        </param>
        <briefdescription>
<para>Getting the reciprocal energy and virial. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" line="673" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/pmetestcommon.cpp" bodystart="673" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a9a6040a1ed80c537ea66b401402294a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classgmx_1_1test_1_1PmeTestEnvironment" kindref="compound">PmeTestEnvironment</ref> *</type>
        <definition>const PmeTestEnvironment * gmx::test::getPmeTestEnv</definition>
        <argsstring>()</argsstring>
        <name>getPmeTestEnv</name>
        <briefdescription>
<para>Get the test environment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/testhardwarecontexts.cpp" line="71" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/testhardwarecontexts.cpp" bodystart="71" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1ab9c6f491fc3446bda1f53761a418d23b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::callAddGlobalTestEnvironment</definition>
        <argsstring>()</argsstring>
        <name>callAddGlobalTestEnvironment</name>
        <briefdescription>
<para>This constructs the test environment during setup of the unit test so that they can use the hardware context. </para>        </briefdescription>
        <detaileddescription>
<para>Implement a stub definition for tests that don&apos;t ask for a real one.</para><para>Declare a function that all unit test implementations can use to set up any environment that they need.</para><para>When registering the unit test in CMake, the HARDWARE_DETECTION flag requires that the code for that unit test implements this function. Otherwise, a default stub implementation is provided.</para><para>This approach conforms to the recommendation by GoogleTest to arrange for the code that sets up the global test environment to be called from main, rather than potentially rely on brittle static initialization order. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/testhardwarecontexts.cpp" line="82" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/testhardwarecontexts.cpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a7abd728c6a4748163af31f7287152ed4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgmx__hw__info__t" kindref="compound">gmx_hw_info_t</ref> *</type>
        <definition>static gmx_hw_info_t* gmx::test::hardwareInit</definition>
        <argsstring>()</argsstring>
        <name>hardwareInit</name>
        <briefdescription>
<para>Simple hardware initialization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/testhardwarecontexts.cpp" line="88" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/ewald/tests/testhardwarecontexts.cpp" bodystart="88" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="group__module__simd_1ga33bbe34e961d7692b0c7e37dfd6e07b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::std::vector&lt; <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> &gt;</type>
        <definition>std::vector&lt; real &gt; gmx::test::simdReal2Vector</definition>
        <argsstring>(const SimdReal simd)</argsstring>
        <name>simdReal2Vector</name>
        <param>
          <type>const <ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
          <declname>simd</declname>
        </param>
        <briefdescription>
<para>Convert SIMD real to std::vector&lt;real&gt;. </para>        </briefdescription>
        <detaileddescription>
<para>The returned vector will have the same length as the SIMD width. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="157" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="157" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="group__module__simd_1gaac7b6345f9ce8f85ba985367cda65c72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>SimdReal gmx::test::vector2SimdReal</definition>
        <argsstring>(const std::vector&lt; real &gt; &amp;v)</argsstring>
        <name>vector2SimdReal</name>
        <param>
          <type>const std::vector&lt; <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Return floating-point SIMD value from std::vector&lt;real&gt;. </para>        </briefdescription>
        <detaileddescription>
<para>If the vector is longer than SIMD width, only the first elements will be used. If it is shorter, the contents will be repeated to fill the SIMD register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="168" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="168" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="group__module__simd_1gacc5ed5bd5dd0134c7c96738eb931da71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>SimdReal gmx::test::setSimdRealFrom3R</definition>
        <argsstring>(real r0, real r1, real r2)</argsstring>
        <name>setSimdRealFrom3R</name>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>r0</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>r1</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>r2</declname>
        </param>
        <briefdescription>
<para>Set SIMD register contents from three real values. </para>        </briefdescription>
        <detaileddescription>
<para>Our reason for using three values is that 3 is not a factor in any known SIMD width, so this way there will not be any simple repeated patterns e.g. between the low/high 64/128/256 bits in the SIMD register, which could hide bugs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="180" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="180" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="group__module__simd_1gaba1a90972512fc9f1b870efb7d2c6133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1a8591d5e5ac6d1bec936a013fdc41b904" kindref="member">SimdReal</ref></type>
        <definition>SimdReal gmx::test::setSimdRealFrom1R</definition>
        <argsstring>(real value)</argsstring>
        <name>setSimdRealFrom1R</name>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set SIMD register contents from single real value. </para>        </briefdescription>
        <detaileddescription>
<para>All elements is set from the given value. This is effectively the same operation as simdSet1(), but is implemented using only load/store operations that have been tested separately in the bootstrapping tests. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="190" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="190" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="group__module__simd_1ga0c8e9af4c3cce6ac9f674d4872c0f520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int32_t &gt;</type>
        <definition>std::vector&lt; std::int32_t &gt; gmx::test::simdInt2Vector</definition>
        <argsstring>(const SimdInt32 simd)</argsstring>
        <name>simdInt2Vector</name>
        <param>
          <type>const <ref refid="namespacegmx_1a6598cea23dd103ce19bff4743279e3bc" kindref="member">SimdInt32</ref></type>
          <declname>simd</declname>
        </param>
        <briefdescription>
<para>Convert SIMD integer to std::vector&lt;int&gt;. </para>        </briefdescription>
        <detaileddescription>
<para>The returned vector will have the same length as the SIMD width. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="215" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="215" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="group__module__simd_1ga40fb1daa9017473f0202879e818b1395" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1a6598cea23dd103ce19bff4743279e3bc" kindref="member">SimdInt32</ref></type>
        <definition>SimdInt32 gmx::test::vector2SimdInt</definition>
        <argsstring>(const std::vector&lt; std::int32_t &gt; &amp;v)</argsstring>
        <name>vector2SimdInt</name>
        <param>
          <type>const std::vector&lt; std::int32_t &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Return 32-bit integer SIMD value from std::vector&lt;int&gt;. </para>        </briefdescription>
        <detaileddescription>
<para>If the vector is longer than SIMD width, only the first elements will be used. If it is shorter, the contents will be repeated to fill the SIMD register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="226" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="226" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="group__module__simd_1ga9d8939c4f0f48738a4f0621c8ae4d94c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1a6598cea23dd103ce19bff4743279e3bc" kindref="member">SimdInt32</ref></type>
        <definition>SimdInt32 gmx::test::setSimdIntFrom3I</definition>
        <argsstring>(int i0, int i1, int i2)</argsstring>
        <name>setSimdIntFrom3I</name>
        <param>
          <type>int</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i2</declname>
        </param>
        <briefdescription>
<para>Set SIMD register contents from three int values. </para>        </briefdescription>
        <detaileddescription>
<para>Our reason for using three values is that 3 is not a factor in any known SIMD width, so this way there will not be any simple repeated patterns e.g. between the low/high 64/128/256 bits in the SIMD register, which could hide bugs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="238" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="238" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="group__module__simd_1ga2a7a383c9c8de6a3c2bf26af047a73d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1a6598cea23dd103ce19bff4743279e3bc" kindref="member">SimdInt32</ref></type>
        <definition>SimdInt32 gmx::test::setSimdIntFrom1I</definition>
        <argsstring>(int value)</argsstring>
        <name>setSimdIntFrom1I</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set SIMD register contents from single integer value. </para>        </briefdescription>
        <detaileddescription>
<para>All elements is set from the given value. This is effectively the same operation as simdSet1I(), but is implemented using only load/store operations that have been tested separately in the bootstrapping tests. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" line="248" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd.cpp" bodystart="248" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="group__module__simd_1ga18ef3e89efe46fcae8472f0e01ff7757" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>::std::vector&lt; <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> &gt;</type>
        <definition>std::vector&lt; real &gt; gmx::test::simd4Real2Vector</definition>
        <argsstring>(const Simd4Real simd4)</argsstring>
        <name>simd4Real2Vector</name>
        <param>
          <type>const <ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
          <declname>simd4</declname>
        </param>
        <briefdescription>
<para>Convert SIMD4 real to std::vector&lt;real&gt;. </para>        </briefdescription>
        <detaileddescription>
<para>The returned vector will have the same length as the SIMD4 width. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="87" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="87" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="group__module__simd_1ga76e88f6551996de1c62f4961b49d2071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>Simd4Real gmx::test::vector2Simd4Real</definition>
        <argsstring>(const std::vector&lt; real &gt; &amp;v)</argsstring>
        <name>vector2Simd4Real</name>
        <param>
          <type>const std::vector&lt; <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Return floating-point SIMD4 value from std::vector&lt;real&gt;. </para>        </briefdescription>
        <detaileddescription>
<para>If the vector is longer than SIMD4 width, only the first elements will be used. If it is shorter, the contents will be repeated to fill the SIMD4 register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="98" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="98" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="group__module__simd_1gaf4509cf1e9c7199cbc999cf10b828a40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>Simd4Real gmx::test::setSimd4RealFrom3R</definition>
        <argsstring>(real r0, real r1, real r2)</argsstring>
        <name>setSimd4RealFrom3R</name>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>r0</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>r1</declname>
        </param>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>r2</declname>
        </param>
        <briefdescription>
<para>Set SIMD4 register contents from three real values. </para>        </briefdescription>
        <detaileddescription>
<para>It might seem stupid to use three values when we know that the SIMD4 width is 4, but it simplifies the test organization when the SIMD and SIMD4 tests are completely symmetric. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="110" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="110" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="group__module__simd_1gaf9535a225c8e4334bf7e50768ad185ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1a37686b0c2ec48a361d6c4473c1fdb70c" kindref="member">Simd4Real</ref></type>
        <definition>Simd4Real gmx::test::setSimd4RealFrom1R</definition>
        <argsstring>(real value)</argsstring>
        <name>setSimd4RealFrom1R</name>
        <param>
          <type><ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set SIMD4 register contents from single real value. </para>        </briefdescription>
        <detaileddescription>
<para>All elements is set from the given value. This is effectively the same operation as simd4Set1(), but is implemented using only load/store operations that have been tested separately in the bootstrapping tests. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" line="120" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/simd/tests/simd4.cpp" bodystart="120" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a9f0a07eba4641c66724f87100aa8eaa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1_1test_1adaf53810da1094987057767b0714fb27" kindref="member">EnergyFrameReaderPtr</ref></type>
        <definition>EnergyFrameReaderPtr gmx::test::openEnergyFileToReadFields</definition>
        <argsstring>(const std::string &amp;filename, const std::vector&lt; std::string &gt; &amp;requiredEnergyFieldNames)</argsstring>
        <name>openEnergyFileToReadFields</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>requiredEnergyFieldNames</declname>
        </param>
        <briefdescription>
<para>Open the file and return an object that can read the required fields from frames of an .edr file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the energy file to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">requiredEnergyFieldNames</parametername>
</parameternamelist>
<parameterdescription>
<para>Names of the energy fields that the caller requires to be present for an .edr file frame to be considered valid </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1FileIOError" kindref="compound">FileIOError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>If the .edr file cannot be opened </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1APIError" kindref="compound">APIError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>If any required energy field is not present in the file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>When out of memory</para></parameterdescription>
</parameteritem>
</parameterlist>
This function is intended to have the main responsibility for making <ref refid="classgmx_1_1test_1_1EnergyFrameReader" kindref="compound">EnergyFrameReader</ref> objects. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/energyreader.cpp" line="65" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/energyreader.cpp" bodystart="65" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a32a4f67bb5cc6496f6bb9d68305af953" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structt__enxframe" kindref="compound">t_enxframe</ref> *</type>
        <definition>static t_enxframe* gmx::test::make_enxframe</definition>
        <argsstring>()</argsstring>
        <name>make_enxframe</name>
        <briefdescription>
<para>Helper function to obtain resources. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/energyreader.cpp" line="125" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/energyreader.cpp" bodystart="125" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1aba30b242a0aed11e08b4c7f57dbac8e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::done_enxframe</definition>
        <argsstring>(t_enxframe *fr)</argsstring>
        <name>done_enxframe</name>
        <param>
          <type><ref refid="structt__enxframe" kindref="compound">t_enxframe</ref> *</type>
          <declname>fr</declname>
        </param>
        <briefdescription>
<para>Helper function to clean up resources. </para>        </briefdescription>
        <detaileddescription>
<para>Helper function to free resources (NB free_enxframe only frees the contents, not the pointer itself) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/energyreader.cpp" line="136" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/energyreader.cpp" bodystart="136" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a3294871401e53338ae611b132c508ae5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::compareFrames</definition>
        <argsstring>(const std::pair&lt; EnergyFrame, EnergyFrame &gt; &amp;frames, FloatingPointTolerance tolerance)</argsstring>
        <name>compareFrames</name>
        <param>
          <type>const std::pair&lt; <ref refid="classgmx_1_1test_1_1EnergyFrame" kindref="compound">EnergyFrame</ref>, <ref refid="classgmx_1_1test_1_1EnergyFrame" kindref="compound">EnergyFrame</ref> &gt; &amp;</type>
          <declname>frames</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1test_1_1FloatingPointTolerance" kindref="compound">FloatingPointTolerance</ref></type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
<para>Compare all fields of reference with all matching fields from test. </para>        </briefdescription>
        <detaileddescription>
<para>Ignore any key found in either <computeroutput>reference</computeroutput> or <computeroutput>test</computeroutput> that is not found in the other. For all keys found in both frames, compare the values with EXPECT_REAL_EQ_TOL and the given tolerance. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/energyreader.cpp" line="228" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/energyreader.cpp" bodystart="228" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a3d4ef01049444a472d033ac2ebe07b87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void gmx::test::organizeMdpFile</definition>
        <argsstring>(SimulationRunner *runner)</argsstring>
        <name>organizeMdpFile</name>
        <param>
          <type><ref refid="classgmx_1_1test_1_1SimulationRunner" kindref="compound">SimulationRunner</ref> *</type>
          <declname>runner</declname>
        </param>
        <briefdescription>
<para>Build a simple .mdp file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/termination.cpp" line="58" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/termination.cpp" bodystart="58" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a4abfd9db65ab579345f8925c6d0c4d52" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structt__trxframe" kindref="compound">t_trxframe</ref> *</type>
        <definition>static t_trxframe* gmx::test::make_trxframe</definition>
        <argsstring>()</argsstring>
        <name>make_trxframe</name>
        <briefdescription>
<para>Helper function to obtain resources. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/trajectoryreader.cpp" line="64" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/trajectoryreader.cpp" bodystart="64" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a38e926a71822704ecee2753eec73d8e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::done_trxframe</definition>
        <argsstring>(t_trxframe *fr)</argsstring>
        <name>done_trxframe</name>
        <param>
          <type><ref refid="structt__trxframe" kindref="compound">t_trxframe</ref> *</type>
          <declname>fr</declname>
        </param>
        <briefdescription>
<para>Helper function to clean up resources. </para>        </briefdescription>
        <detaileddescription>
<para>Helper function to free all resources. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/trajectoryreader.cpp" line="75" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/trajectoryreader.cpp" bodystart="75" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1ad8c9242354b103b20a654fe674fe21ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::compareFrames</definition>
        <argsstring>(const std::pair&lt; TrajectoryFrame, TrajectoryFrame &gt; &amp;frames, FloatingPointTolerance tolerance)</argsstring>
        <name>compareFrames</name>
        <param>
          <type>const std::pair&lt; <ref refid="classgmx_1_1test_1_1TrajectoryFrame" kindref="compound">TrajectoryFrame</ref>, <ref refid="classgmx_1_1test_1_1TrajectoryFrame" kindref="compound">TrajectoryFrame</ref> &gt; &amp;</type>
          <declname>frames</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1test_1_1FloatingPointTolerance" kindref="compound">FloatingPointTolerance</ref></type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
<para>Compare the fields of the two frames for equality within the <computeroutput>tolerance</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The two frames are required to have valid and matching values for time and step. Positions, velocities and/or forces will be compared when present in both frames, and expected to be equal within <computeroutput>tolerance</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/trajectoryreader.cpp" line="185" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/programs/mdrun/tests/trajectoryreader.cpp" bodystart="185" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1ab12f4df4bfc1db7445b7ad238d062913" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::checkConfFile</definition>
        <argsstring>(TextInputStream *input, TestReferenceChecker *checker, const ConfMatchSettings &amp;settings)</argsstring>
        <name>checkConfFile</name>
        <param>
          <type><ref refid="classgmx_1_1TextInputStream" kindref="compound">TextInputStream</ref> *</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1test_1_1TestReferenceChecker" kindref="compound">TestReferenceChecker</ref> *</type>
          <declname>checker</declname>
        </param>
        <param>
          <type>const <ref refid="structgmx_1_1test_1_1ConfMatchSettings" kindref="compound">ConfMatchSettings</ref> &amp;</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Adds content of a gro file to <ref refid="classgmx_1_1test_1_1TestReferenceChecker" kindref="compound">TestReferenceChecker</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">input</parametername>
</parameternamelist>
<parameterdescription>
<para>Stream that provides the gro content. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">checker</parametername>
</parameternamelist>
<parameterdescription>
<para>Checker to use. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">settings</parametername>
</parameternamelist>
<parameterdescription>
<para>Settings to use for matching.</para></parameterdescription>
</parameteritem>
</parameterlist>
Parses a gro file from the input stream, and checks the contents against reference data (only first two lines for now).</para><para><simplesect kind="see"><para><ref refid="classgmx_1_1test_1_1ConfMatch" kindref="compound">ConfMatch</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/conftest.cpp" line="84" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/conftest.cpp" bodystart="84" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="group__module__testutils_1ga6b2b79eb69558fee27e1832a43b1e6b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::initMPIOutput</definition>
        <argsstring>()</argsstring>
        <name>initMPIOutput</name>
        <briefdescription>
<para>Customizes test output and test failure handling for MPI runs. </para>        </briefdescription>
        <detaileddescription>
<para>Only one rank should report the test result. Errors detected on a subset of ranks need to be reported individually, and as an overall failure.</para><para>On non-MPI builds, does nothing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/mpi-printer.h" line="61" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/mpi-printer.cpp" bodystart="185" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="group__module__testutils_1gaba05f898b13924fdf611804f1c8ad52b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gmx::test::getNumberOfTestMpiRanks</definition>
        <argsstring>()</argsstring>
        <name>getNumberOfTestMpiRanks</name>
        <briefdescription>
<para>Returns the number of MPI ranks to use for an MPI test. </para>        </briefdescription>
        <detaileddescription>
<para>For thread-MPI builds, this will return the requested number of ranks even before the thread-MPI threads have been started. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/mpitest.cpp" line="142" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/mpitest.cpp" bodystart="142" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="group__module__testutils_1ga6d3fae9732f12f43acd33c7e3ff009b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::test::threadMpiTestRunner</definition>
        <argsstring>(std::function&lt; void()&gt; testBody)</argsstring>
        <name>threadMpiTestRunner</name>
        <param>
          <type>std::function&lt; void()&gt;</type>
          <declname>testBody</declname>
        </param>
        <briefdescription>
<para>Helper function for <ref refid="group__module__testutils_1ga0ef86f5a07972af5127b0d54c183d40b" kindref="member">GMX_MPI_TEST()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/mpitest.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a6a434d56bea5a70c7b33f04a2d2370ef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double gmx::test::convertDoubleReferenceValue</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>convertDoubleReferenceValue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Helper function to parse a floating-point reference data value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata-checkers.h" line="149" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata-checkers.h" bodystart="149" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="group__module__testutils_1gaca906b8c921bc54965ffa4750d6bfbc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ReferenceDataEntry::EntryPointer</type>
        <definition>ReferenceDataEntry::EntryPointer gmx::test::readReferenceDataFile</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>readReferenceDataFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Loads reference data from an XML file. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> to the file from which the data is loaded. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Root entry for the reference data parsed from the file. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1test_1_1TestException" kindref="compound">TestException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if there is a problem reading the file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata-xml.cpp" line="205" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata-xml.cpp" bodystart="205" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="group__module__testutils_1ga20a6368a3b167869311f158b47d07741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::writeReferenceDataFile</definition>
        <argsstring>(const std::string &amp;path, const ReferenceDataEntry &amp;root)</argsstring>
        <name>writeReferenceDataFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="classgmx_1_1test_1_1ReferenceDataEntry" kindref="compound">ReferenceDataEntry</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
<para>Saves reference data to an XML file. </para>        </briefdescription>
        <detaileddescription>
<internal><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> to the file to which the data is saved. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">root</parametername>
</parameternamelist>
<parameterdescription>
<para>Root entry for the reference data to write. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1test_1_1TestException" kindref="compound">TestException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if there is a problem writing the file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata-xml.cpp" line="363" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata-xml.cpp" bodystart="363" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="group__module__testutils_1gac88155b9b78810f4117349514b93fe00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::initReferenceData</definition>
        <argsstring>(IOptionsContainer *options)</argsstring>
        <name>initReferenceData</name>
        <param>
          <type><ref refid="classgmx_1_1IOptionsContainer" kindref="compound">IOptionsContainer</ref> *</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Initializes reference data handling. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> Adds command-line options to <computeroutput>options</computeroutput> to set the reference data mode. By default, <ref refid="group__module__testutils_1ggad7a0c1ac11a9748556948309218fc08aaf5623014171529e1db8e56212300eb02" kindref="member">erefdataCompare</ref> is used, but <computeroutput>--ref-data create</computeroutput> or <computeroutput>--ref-data update</computeroutput> can be used to change it.</para><para>This function is automatically called by <ref refid="group__module__testutils_1gad8f8cdc95d54a26ad0512888824b9dee" kindref="member">initTestUtils()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="271" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="271" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a26d94b8bbe10b3fa39e5c03ef3833b4a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void gmx::test::throwIfNonEmptyAndOnlyWhitespace</definition>
        <argsstring>(const std::string &amp;s, const char *id)</argsstring>
        <name>throwIfNonEmptyAndOnlyWhitespace</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Throw a <ref refid="classgmx_1_1test_1_1TestException" kindref="compound">TestException</ref> if the caller tries to write particular refdata that can&apos;t work. </para>        </briefdescription>
        <detaileddescription>
<para>If the string to write is non-empty and has only whitespace, TinyXML2 can&apos;t read it correctly, so throw an exception for this case, so that we can&apos;t accidentally use it and run into mysterious problems.</para><para><xrefsect id="todo_1_todo000115"><xreftitle>Todo</xreftitle><xrefdescription><para>Eliminate this limitation of TinyXML2. See e.g. <ulink url="https://github.com/leethomason/tinyxml2/issues/432">https://github.com/leethomason/tinyxml2/issues/432</ulink> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" line="845" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/refdata.cpp" bodystart="845" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="group__module__testutils_1gae9b29d32f4bd98d7af90115c230709d4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>inline::testing::AssertionResult</type>
        <definition>static inline ::testing::AssertionResult gmx::test::plainAssertHelper</definition>
        <argsstring>(const char *, const ::testing::AssertionResult &amp;expr)</argsstring>
        <name>plainAssertHelper</name>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>const ::testing::AssertionResult &amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
<para>Helper method for <computeroutput>(EXPECT|ASSERT)_PLAIN</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<internal></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testasserts.h" line="622" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testasserts.h" bodystart="622" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="group__module__testutils_1gad8f8cdc95d54a26ad0512888824b9dee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::initTestUtils</definition>
        <argsstring>(const char *dataPath, const char *tempPath, bool usesMpi, bool usesHardwareDetection, int *argc, char ***argv)</argsstring>
        <name>initTestUtils</name>
        <param>
          <type>const char *</type>
          <declname>dataPath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tempPath</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>usesMpi</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>usesHardwareDetection</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Initializes the test utilities library. </para>        </briefdescription>
        <detaileddescription>
<internal><para>Does not throw. Terminates the program with a non-zero error code if an error occurs.</para><para>This function is automatically called by <ref refid="unittest__main_8cpp" kindref="compound">unittest_main.cpp</ref>. </para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" line="160" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" bodystart="160" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="group__module__testutils_1gab5da2af9203abbde7d455d49f6453c76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::finalizeTestUtils</definition>
        <argsstring>()</argsstring>
        <name>finalizeTestUtils</name>
        <briefdescription>
<para>Finalizes the test utilities library. </para>        </briefdescription>
        <detaileddescription>
<internal><para>Does not throw. Terminates the program with a non-zero error code if an error occurs.</para><para>This function is automatically called by <ref refid="unittest__main_8cpp" kindref="compound">unittest_main.cpp</ref>. </para></internal>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" line="261" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testinit.cpp" bodystart="261" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="group__module__testutils_1ga9b0da354984c1f3ef4e6530d54204cc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::registerTestOptions</definition>
        <argsstring>(const char *name, TestOptionsProvider *provider)</argsstring>
        <name>registerTestOptions</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1test_1_1TestOptionsProvider" kindref="compound">TestOptionsProvider</ref> *</type>
          <declname>provider</declname>
        </param>
        <briefdescription>
<para>Registers a test option provider with the test framework. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the options provider (for ordering). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">provider</parametername>
</parameternamelist>
<parameterdescription>
<para>The provider to register. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tMPI::system_error</parametername>
</parameternamelist>
<parameterdescription>
<para>on mutex failures.</para></parameterdescription>
</parameteritem>
</parameterlist>
Typically not used directly in test code, but through the <ref refid="group__module__testutils_1gad8c14b8ddce6c8a7852915ac57f3b52a" kindref="member">GMX_TEST_OPTIONS</ref> macro.</para><para>This gets called from constructors for global variables, so ideally it would not throw to avoid unhandled exceptions. But since this is only test code, it is not worth the effort to try to remove those rare exceptions (mutex failures and out-of-memory from STL). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testoptions.cpp" line="109" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testoptions.cpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="group__module__testutils_1gabca45f04287813b96ad94839f9a10cb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::initTestOptions</definition>
        <argsstring>(IOptionsContainer *options)</argsstring>
        <name>initTestOptions</name>
        <param>
          <type><ref refid="classgmx_1_1IOptionsContainer" kindref="compound">IOptionsContainer</ref> *</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Initializes the options from all registered test providers. </para>        </briefdescription>
        <detaileddescription>
<para> <libinternal /> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>The options are added here.</para></parameterdescription>
</parameteritem>
</parameterlist>
This is called automatically by <ref refid="group__module__testutils_1gad8f8cdc95d54a26ad0512888824b9dee" kindref="member">initTestUtils()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testoptions.cpp" line="114" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/testoptions.cpp" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1test_1a26c7bb1a6f6c06b006a800f8d4d125ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::test::checkXvgFile</definition>
        <argsstring>(TextInputStream *input, TestReferenceChecker *checker, const XvgMatchSettings &amp;settings)</argsstring>
        <name>checkXvgFile</name>
        <param>
          <type><ref refid="classgmx_1_1TextInputStream" kindref="compound">TextInputStream</ref> *</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1test_1_1TestReferenceChecker" kindref="compound">TestReferenceChecker</ref> *</type>
          <declname>checker</declname>
        </param>
        <param>
          <type>const <ref refid="structgmx_1_1test_1_1XvgMatchSettings" kindref="compound">XvgMatchSettings</ref> &amp;</type>
          <declname>settings</declname>
        </param>
        <briefdescription>
<para>Adds content of xvg file to <ref refid="classgmx_1_1test_1_1TestReferenceChecker" kindref="compound">TestReferenceChecker</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">input</parametername>
</parameternamelist>
<parameterdescription>
<para>Stream that provides the xvg content. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">checker</parametername>
</parameternamelist>
<parameterdescription>
<para>Checker to use. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">settings</parametername>
</parameternamelist>
<parameterdescription>
<para>Settings to use for matching.</para></parameterdescription>
</parameteritem>
</parameterlist>
Parses an xvg file from the input stream, and checks the contents against reference data. <computeroutput>settings</computeroutput> can be used to customize the matching. Only a single data set is supported (but multiple columns work). A subset of xmgrace formatting is also checked; static content that is nearly always the same is skipped.</para><para><simplesect kind="see"><para><ref refid="classgmx_1_1test_1_1XvgMatch" kindref="compound">XvgMatch</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/xvgtest.cpp" line="104" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/testutils/xvgtest.cpp" bodystart="104" bodyend="145"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Testing utilities namespace. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal /> This namespace contains utilities for writing unit tests, mostly from the <ref refid="group__module__testutils" kindref="compound">Testing Utilities (testutils)</ref> module. </para>    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/analysisdata/tests/datatest.cpp" line="62" column="1"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1AfterFrom" kind="class" prot="public">
    <compoundname>gmx::KeyValueTreeTransformRuleBuilder::AfterFrom</compoundname>
    <basecompoundref refid="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1Base" prot="public" virt="non-virtual">gmx::KeyValueTreeTransformRuleBuilder::Base</basecompoundref>
    <includes local="no">gromacs/utility/keyvaluetreetransform.h</includes>
    <templateparamlist>
      <param>
        <type>typename FromType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1AfterFrom_1a2ab97b38dd624b519ab260f18c65f6e6" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gmx::KeyValueTreeTransformRuleBuilder::AfterFrom&lt; FromType &gt;::AfterFrom</definition>
        <argsstring>(KeyValueTreeTransformRuleBuilder *builder)</argsstring>
        <name>AfterFrom</name>
        <param>
          <type><ref refid="classgmx_1_1KeyValueTreeTransformRuleBuilder" kindref="compound">KeyValueTreeTransformRuleBuilder</ref> *</type>
          <declname>builder</declname>
        </param>
        <briefdescription>
<para>Creates a parameter provider object within given builder. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/keyvaluetreetransform.h" line="254" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/keyvaluetreetransform.h" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1AfterFrom_1af426ad4aabee9676b288b8c38b64becb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ToType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1ToValue" kindref="compound">ToValue</ref>&lt; FromType, ToType &gt;</type>
        <definition>ToValue&lt;FromType, ToType&gt; gmx::KeyValueTreeTransformRuleBuilder::AfterFrom&lt; FromType &gt;::to</definition>
        <argsstring>(const KeyValueTreePath &amp;path)</argsstring>
        <name>to</name>
        <param>
          <type>const <ref refid="classgmx_1_1KeyValueTreePath" kindref="compound">KeyValueTreePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Specifies a rule that maps to a value at given path. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ToType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type to map to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> to map to.</para></parameterdescription>
</parameteritem>
</parameterlist>
It is an error if multiple rules map to the same path, or to a parent path of the target of an existing rule. Note that it is possible to have a <ref refid="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1AfterFrom_1af426ad4aabee9676b288b8c38b64becb" kindref="member">to()</ref> rule map to a child of a <ref refid="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1AfterFrom_1a130231a33e30d8c53463690699035634" kindref="member">toObject()</ref> rule, provided that the path is not created by the object rule. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/keyvaluetreetransform.h" line="272" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/keyvaluetreetransform.h" bodystart="272" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1AfterFrom_1a130231a33e30d8c53463690699035634" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1ToObject" kindref="compound">ToObject</ref>&lt; FromType &gt;</type>
        <definition>ToObject&lt;FromType&gt; gmx::KeyValueTreeTransformRuleBuilder::AfterFrom&lt; FromType &gt;::toObject</definition>
        <argsstring>(const KeyValueTreePath &amp;path)</argsstring>
        <name>toObject</name>
        <param>
          <type>const <ref refid="classgmx_1_1KeyValueTreePath" kindref="compound">KeyValueTreePath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Specifies a rule that maps to an object (collection of named values) at given path. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Path" kindref="compound">Path</ref> to map to.</para></parameterdescription>
</parameteritem>
</parameterlist>
It is an error if multiple rules map to the same path, or to a parent path of the target of an existing rule. However, it is allowed to have two <ref refid="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1AfterFrom_1a130231a33e30d8c53463690699035634" kindref="member">toObject()</ref> rules map to the same path, provided that the properties they produce are distinct. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/keyvaluetreetransform.h" line="290" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/keyvaluetreetransform.h" bodystart="290" bodyend="294"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Properties that can be specified after <ref refid="classgmx_1_1KeyValueTreeTransformRuleBuilder_1a4cff0019d549ad83219a4dc9b8b94c83" kindref="member">from()</ref>. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal /> <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FromType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type specified for <ref refid="classgmx_1_1KeyValueTreeTransformRuleBuilder_1a4cff0019d549ad83219a4dc9b8b94c83" kindref="member">from()</ref> to map from. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2136">
        <label>gmx::KeyValueTreeTransformRuleBuilder::Base</label>
        <link refid="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1Base"/>
      </node>
      <node id="2135">
        <label>gmx::KeyValueTreeTransformRuleBuilder::AfterFrom&lt; FromType &gt;</label>
        <link refid="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1AfterFrom"/>
        <childnode refid="2136" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2139">
        <label>gmx::KeyValueTreeTransformRuleBuilder</label>
        <link refid="classgmx_1_1KeyValueTreeTransformRuleBuilder"/>
      </node>
      <node id="2138">
        <label>gmx::KeyValueTreeTransformRuleBuilder::Base</label>
        <link refid="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1Base"/>
        <childnode refid="2139" relation="usage">
          <edgelabel>builder_</edgelabel>
        </childnode>
      </node>
      <node id="2137">
        <label>gmx::KeyValueTreeTransformRuleBuilder::AfterFrom&lt; FromType &gt;</label>
        <link refid="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1AfterFrom"/>
        <childnode refid="2138" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/keyvaluetreetransform.h" line="251" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/keyvaluetreetransform.h" bodystart="250" bodyend="295"/>
    <listofallmembers>
      <member refid="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1AfterFrom_1a2ab97b38dd624b519ab260f18c65f6e6" prot="public" virt="non-virtual"><scope>gmx::KeyValueTreeTransformRuleBuilder::AfterFrom</scope><name>AfterFrom</name></member>
      <member refid="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1Base_1a8f5ed7ac1429595165a46464729890d0" prot="protected" virt="non-virtual"><scope>gmx::KeyValueTreeTransformRuleBuilder::AfterFrom</scope><name>Base</name></member>
      <member refid="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1Base_1af3b5d2f65cd856fb1e42d6ec68be295c" prot="protected" virt="non-virtual"><scope>gmx::KeyValueTreeTransformRuleBuilder::AfterFrom</scope><name>builder_</name></member>
      <member refid="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1AfterFrom_1af426ad4aabee9676b288b8c38b64becb" prot="public" virt="non-virtual"><scope>gmx::KeyValueTreeTransformRuleBuilder::AfterFrom</scope><name>to</name></member>
      <member refid="classgmx_1_1KeyValueTreeTransformRuleBuilder_1_1AfterFrom_1a130231a33e30d8c53463690699035634" prot="public" virt="non-virtual"><scope>gmx::KeyValueTreeTransformRuleBuilder::AfterFrom</scope><name>toObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1SelectionCollection" kind="class" prot="public">
    <compoundname>gmx::SelectionCollection</compoundname>
    <includes local="no">gromacs/selection/selectioncollection.h</includes>
    <innerclass refid="classgmx_1_1SelectionCollection_1_1Impl" prot="public">gmx::SelectionCollection::Impl</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classgmx_1_1SelectionCollection_1af294f433688c52289ed05459d453dc34" prot="public" static="no">
        <name>SelectionTypeOption</name>
        <enumvalue id="classgmx_1_1SelectionCollection_1af294f433688c52289ed05459d453dc34af155145686e582fa75e391710d835a6e" prot="public">
          <name>IncludeSelectionTypeOption</name>
          <briefdescription>
<para>Add the option for the user to select default value for <ref refid="classgmx_1_1SelectionCollection_1a30a2b0fa1f2d89d045795fbced5ae059" kindref="member">setOutputPosType()</ref>. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgmx_1_1SelectionCollection_1af294f433688c52289ed05459d453dc34a9f6d0fe4faafac5a3248723e2889db62" prot="public">
          <name>AlwaysAtomSelections</name>
          <briefdescription>
<para>Do not add the option, selections will always select atoms by default. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Flag for <ref refid="classgmx_1_1SelectionCollection_1a95a899f9d56761b449fb3abdce39d0bb" kindref="member">initOptions()</ref> to select how to behave with -seltype option. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="119" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" bodystart="118" bodyend="130"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgmx_1_1SelectionCollection_1aad1437ed80bb7b4ca5bc3a18a8ce2069" prot="private" static="no" mutable="no">
        <type><ref refid="classgmx_1_1PrivateImplPointer" kindref="compound">PrivateImplPointer</ref>&lt; <ref refid="classgmx_1_1SelectionCollection_1_1Impl" kindref="compound">Impl</ref> &gt;</type>
        <definition>PrivateImplPointer&lt;Impl&gt; gmx::SelectionCollection::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="417" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgmx_1_1SelectionCollection_1a7ca9149354511e07285427350c8e9df7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class SelectionCompiler</definition>
        <argsstring></argsstring>
        <name>SelectionCompiler</name>
        <briefdescription>
<para>Needed for the compiler to freely modify the collection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="422" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classgmx_1_1SelectionCollection_1ad528488b2d58b94e7b58ab925cfc91f9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class SelectionEvaluator</definition>
        <argsstring></argsstring>
        <name>SelectionEvaluator</name>
        <briefdescription>
<para>Needed for the evaluator to freely modify the collection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="426" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1af4c4da031a86714c51d96f203ecc80b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::SelectionCollection::SelectionCollection</definition>
        <argsstring>()</argsstring>
        <name>SelectionCollection</name>
        <briefdescription>
<para>Creates an empty selection collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="137" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="541" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1a1e75dc830b2ed7064e1bb6bb58335946" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gmx::SelectionCollection::~SelectionCollection</definition>
        <argsstring>()</argsstring>
        <name>~SelectionCollection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="138" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="547" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1a95a899f9d56761b449fb3abdce39d0bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::SelectionCollection::initOptions</definition>
        <argsstring>(IOptionsContainer *options, SelectionTypeOption selectionTypeOption)</argsstring>
        <name>initOptions</name>
        <param>
          <type><ref refid="classgmx_1_1IOptionsContainer" kindref="compound">IOptionsContainer</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1SelectionCollection_1af294f433688c52289ed05459d453dc34" kindref="member">SelectionTypeOption</ref></type>
          <declname>selectionTypeOption</declname>
        </param>
        <briefdescription>
<para>Initializes options for setting global properties on the collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">options</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1Options" kindref="compound">Options</ref> object to initialize. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">selectionTypeOption</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to add option to influence <ref refid="classgmx_1_1SelectionCollection_1a30a2b0fa1f2d89d045795fbced5ae059" kindref="member">setOutputPosType()</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory.</para></parameterdescription>
</parameteritem>
</parameterlist>
Adds options to <computeroutput>options</computeroutput> that can be used to set the default position types (see <ref refid="classgmx_1_1SelectionCollection_1a459808363dee98cbc1fe0fa3278ff1db" kindref="member">setReferencePosType()</ref> and <ref refid="classgmx_1_1SelectionCollection_1a30a2b0fa1f2d89d045795fbced5ae059" kindref="member">setOutputPosType()</ref>) and debugging flags. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="152" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="553" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1a459808363dee98cbc1fe0fa3278ff1db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::SelectionCollection::setReferencePosType</definition>
        <argsstring>(const char *type)</argsstring>
        <name>setReferencePosType</name>
        <param>
          <type>const char *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Sets the default reference position handling for a selection collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>Default selection reference position type (one of the strings acceptable for <ref refid="classgmx_1_1PositionCalculationCollection_1a2b4d3ed7b451df9c31dd6c7ed66e2df9" kindref="member">PositionCalculationCollection::typeFromEnum()</ref>). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1InternalError" kindref="compound">InternalError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>type</computeroutput> is invalid.</para></parameterdescription>
</parameteritem>
</parameterlist>
Should be called before calling the parser functions, unless <ref refid="classgmx_1_1SelectionCollection_1a95a899f9d56761b449fb3abdce39d0bb" kindref="member">initOptions()</ref> has been called. In the latter case, can still be used to override the default value (before <ref refid="classgmx_1_1SelectionCollection_1a95a899f9d56761b449fb3abdce39d0bb" kindref="member">initOptions()</ref> is called) and/or the value provided through the <ref refid="classgmx_1_1Options" kindref="compound">Options</ref> object.</para><para>Strong exception safety. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="170" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="584" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1a30a2b0fa1f2d89d045795fbced5ae059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::SelectionCollection::setOutputPosType</definition>
        <argsstring>(const char *type)</argsstring>
        <name>setOutputPosType</name>
        <param>
          <type>const char *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Sets the default reference position handling for a selection collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>Default selection output position type (one of the strings acceptable for <ref refid="classgmx_1_1PositionCalculationCollection_1a2b4d3ed7b451df9c31dd6c7ed66e2df9" kindref="member">PositionCalculationCollection::typeFromEnum()</ref>). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1InternalError" kindref="compound">InternalError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if <computeroutput>type</computeroutput> is invalid.</para></parameterdescription>
</parameteritem>
</parameterlist>
Should be called before calling the parser functions, unless <ref refid="classgmx_1_1SelectionCollection_1a95a899f9d56761b449fb3abdce39d0bb" kindref="member">initOptions()</ref> has been called. In the latter case, can still be used to override the default value (before <ref refid="classgmx_1_1SelectionCollection_1a95a899f9d56761b449fb3abdce39d0bb" kindref="member">initOptions()</ref> is called) and/or the value provided through the <ref refid="classgmx_1_1Options" kindref="compound">Options</ref> object.</para><para>Strong exception safety. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="187" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="596" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1ac7344df09de3ddade163929d93c7d017" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::SelectionCollection::setDebugLevel</definition>
        <argsstring>(int debugLevel)</argsstring>
        <name>setDebugLevel</name>
        <param>
          <type>int</type>
          <declname>debugLevel</declname>
        </param>
        <briefdescription>
<para>Sets the debugging level for the selection collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">debugLevel</parametername>
</parameternamelist>
<parameterdescription>
<para>Debug level to set (0 = no debug information).</para></parameterdescription>
</parameteritem>
</parameterlist>
<ref refid="classgmx_1_1SelectionCollection_1a95a899f9d56761b449fb3abdce39d0bb" kindref="member">initOptions()</ref> creates debugging options that can also be used to set the debug level. These are normally hidden, but if this method is called before <ref refid="classgmx_1_1SelectionCollection_1a95a899f9d56761b449fb3abdce39d0bb" kindref="member">initOptions()</ref> with a non-zero <computeroutput>debugLevel</computeroutput>, they are made visible.</para><para>Mostly useful for debugging tools.</para><para>Does not throw. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="203" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="608" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1aca57ab70486f72f3375a4eb9e1e72ff2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgmx_1_1SelectionTopologyProperties" kindref="compound">SelectionTopologyProperties</ref></type>
        <definition>SelectionTopologyProperties gmx::SelectionCollection::requiredTopologyProperties</definition>
        <argsstring>() const </argsstring>
        <name>requiredTopologyProperties</name>
        <briefdescription>
<para>Returns what topology information is required for evaluation. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>What topology information is required for compiling and/or evaluating the selections in the collection.</para></simplesect>
Before the parser functions have been called, the return value is based just on the position types set. After parser functions have been called, the return value also takes into account the selection keywords used. After the compiler has been called, the return value is final and also considers possible force evaluation requested for the selections.</para><para>Does not throw. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="221" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="674" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1ac1a0aa80b45703c364d59749831c2f4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gmx::SelectionCollection::requiresIndexGroups</definition>
        <argsstring>() const </argsstring>
        <name>requiresIndexGroups</name>
        <briefdescription>
<para>Returns true if the collection requires external index groups. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if any selection has an unresolved index group reference.</para></simplesect>
The return value is <computeroutput>false</computeroutput> after <ref refid="classgmx_1_1SelectionCollection_1a0179f4a9c87e99d05182838457ea8f29" kindref="member">setIndexGroups()</ref> has been called.</para><para>Does not throw. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="231" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="695" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1a4f81eebe438296ee5b4c301b5cc882f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::SelectionCollection::setTopology</definition>
        <argsstring>(gmx_mtop_t *top, int natoms)</argsstring>
        <name>setTopology</name>
        <param>
          <type><ref refid="structgmx__mtop__t" kindref="compound">gmx_mtop_t</ref> *</type>
          <declname>top</declname>
        </param>
        <param>
          <type>int</type>
          <declname>natoms</declname>
        </param>
        <briefdescription>
<para>Sets the topology for the collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">top</parametername>
</parameternamelist>
<parameterdescription>
<para>Topology data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">natoms</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of atoms. If &lt;=0, the number of atoms in the topology is used.</para></parameterdescription>
</parameteritem>
</parameterlist>
Either the topology must be provided, or <computeroutput>natoms</computeroutput> must be &gt; 0.</para><para><computeroutput>natoms</computeroutput> determines the largest atom index that can be selected by the selection: even if the topology contains more atoms, they will not be selected.</para><para>Does not throw currently, but this is subject to change when more underlying code is converted to C++. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="248" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="615" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1a0179f4a9c87e99d05182838457ea8f29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::SelectionCollection::setIndexGroups</definition>
        <argsstring>(gmx_ana_indexgrps_t *grps)</argsstring>
        <name>setIndexGroups</name>
        <param>
          <type><ref refid="structgmx__ana__indexgrps__t" kindref="compound">gmx_ana_indexgrps_t</ref> *</type>
          <declname>grps</declname>
        </param>
        <briefdescription>
<para>Sets the external index groups to use for the selections. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">grps</parametername>
</parameternamelist>
<parameterdescription>
<para>Index groups to use for the selections. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1InconsistentInputError" kindref="compound">InconsistentInputError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if a group reference cannot be resolved.</para></parameterdescription>
</parameteritem>
</parameterlist>
Only the first call to this method can have a non-NULL <computeroutput>grps</computeroutput>. At this point, any selections that have already been provided are searched for references to external groups, and the references are replaced by the contents of the groups. If any referenced group cannot be found in <computeroutput>grps</computeroutput> (or if <computeroutput>grps</computeroutput> is NULL and there are any references), <ref refid="classgmx_1_1InconsistentInputError" kindref="compound">InconsistentInputError</ref> is thrown.</para><para>The selection collection keeps a reference to <computeroutput>grps</computeroutput> until this method is called with a NULL <computeroutput>grps</computeroutput>. If this method is not called before <ref refid="classgmx_1_1SelectionCollection_1a3a5b467407c74b9ec2b09c8c7a86cb2e" kindref="member">compile()</ref>, it is automatically called as setIndexGroups(NULL). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="268" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="648" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1ab40d6413e56c8241e122d435585a79ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1ac852a0801cf49723903e23bc77a32163" kindref="member">SelectionList</ref></type>
        <definition>SelectionList gmx::SelectionCollection::parseFromStdin</definition>
        <argsstring>(int count, bool bInteractive, const std::string &amp;context)</argsstring>
        <name>parseFromStdin</name>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bInteractive</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Parses selection(s) from standard input. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of selections to parse (if -1, parse as many as provided by the user). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bInteractive</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the parser should behave interactively. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context to print for interactive input. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of parsed selections. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1InvalidInputError" kindref="compound">InvalidInputError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if there is a parsing error (an interactive parser only throws this if too few selections are provided and the user forced the end of input).</para></parameterdescription>
</parameteritem>
</parameterlist>
The returned objects remain valid for the lifetime of the selection collection. Some information about the selections only becomes available once <ref refid="classgmx_1_1SelectionCollection_1a3a5b467407c74b9ec2b09c8c7a86cb2e" kindref="member">compile()</ref> has been called; see <ref refid="classgmx_1_1Selection" kindref="compound">Selection</ref>.</para><para>The string provided to <computeroutput>context</computeroutput> should be such that it can replace the three dots in &quot;Specify selections ...:&quot;. It can be empty. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="291" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="711" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1a8e1ec471fdc3139a2d682625cc869610" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1ac852a0801cf49723903e23bc77a32163" kindref="member">SelectionList</ref></type>
        <definition>SelectionList gmx::SelectionCollection::parseInteractive</definition>
        <argsstring>(int count, TextInputStream *inputStream, TextOutputStream *outputStream, const std::string &amp;context)</argsstring>
        <name>parseInteractive</name>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1TextInputStream" kindref="compound">TextInputStream</ref> *</type>
          <declname>inputStream</declname>
        </param>
        <param>
          <type><ref refid="classgmx_1_1TextOutputStream" kindref="compound">TextOutputStream</ref> *</type>
          <declname>outputStream</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Parses selection(s) interactively using provided streams. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of selections to parse (if -1, parse as many as provided by the user). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>Stream to use for input. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">outputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>Stream to use for output (if NULL, the parser runs non-interactively and does not produce any status messages). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">context</parametername>
</parameternamelist>
<parameterdescription>
<para>Context to print for interactive input. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of parsed selections. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1InvalidInputError" kindref="compound">InvalidInputError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if there is a parsing error (an interactive parser only throws this if too few selections are provided and the user forced the end of input).</para></parameterdescription>
</parameteritem>
</parameterlist>
Works the same as <ref refid="classgmx_1_1SelectionCollection_1ab40d6413e56c8241e122d435585a79ef" kindref="member">parseFromStdin()</ref>, except that the caller can provide streams to use instead of <computeroutput>stdin</computeroutput> and <computeroutput>stderr</computeroutput>.</para><para>Mainly usable for unit testing interactive input. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="314" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="737" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1a4957a3141e7579fd9f9a4fe39a354ff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1ac852a0801cf49723903e23bc77a32163" kindref="member">SelectionList</ref></type>
        <definition>SelectionList gmx::SelectionCollection::parseFromFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>parseFromFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Parses selection(s) from a file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file to parse selections from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of parsed selections. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1InvalidInputError" kindref="compound">InvalidInputError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if there is a parsing error.</para></parameterdescription>
</parameteritem>
</parameterlist>
The returned objects remain valid for the lifetime of the selection collection. Some information about the selections only becomes available once <ref refid="classgmx_1_1SelectionCollection_1a3a5b467407c74b9ec2b09c8c7a86cb2e" kindref="member">compile()</ref> has been called; see <ref refid="classgmx_1_1Selection" kindref="compound">Selection</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="331" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="753" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1a35d779a0619aade5e82ccdafba7c7cc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegmx_1ac852a0801cf49723903e23bc77a32163" kindref="member">SelectionList</ref></type>
        <definition>SelectionList gmx::SelectionCollection::parseFromString</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>parseFromString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Parses selection(s) from a string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>String to parse selections from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of parsed selections. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::bad_alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>if out of memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1InvalidInputError" kindref="compound">InvalidInputError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if there is a parsing error.</para></parameterdescription>
</parameteritem>
</parameterlist>
The returned objects remain valid for the lifetime of the selection collection. Some information about the selections only becomes available once <ref refid="classgmx_1_1SelectionCollection_1a3a5b467407c74b9ec2b09c8c7a86cb2e" kindref="member">compile()</ref> has been called; see <ref refid="classgmx_1_1Selection" kindref="compound">Selection</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="345" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="778" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1a3a5b467407c74b9ec2b09c8c7a86cb2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::SelectionCollection::compile</definition>
        <argsstring>()</argsstring>
        <name>compile</name>
        <briefdescription>
<para>Prepares the selections for evaluation and performs optimizations. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1InconsistentInputError" kindref="compound">InconsistentInputError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if topology is required but not set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classgmx_1_1InvalidInputError" kindref="compound">InvalidInputError</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if <ref refid="classgmx_1_1SelectionCollection_1a0179f4a9c87e99d05182838457ea8f29" kindref="member">setIndexGroups()</ref> has not been called and there are index group references. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unspecified</parametername>
</parameternamelist>
<parameterdescription>
<para>if compilation fails (TODO: list/reduce these).</para></parameterdescription>
</parameteritem>
</parameterlist>
Before compilation, selections should have been added to the collection using the parseFrom*() functions. The compiled selection collection can be passed to <ref refid="classgmx_1_1SelectionCollection_1a3d981d35e2fbd35f64092063871fdef3" kindref="member">evaluate()</ref> to evaluate the selection for a frame. Before the compiled selection is evaluated, the selections indicate the maximal set of atoms/positions to which they can be evaluated; see <ref refid="classgmx_1_1Selection" kindref="compound">Selection</ref>.</para><para>If an error occurs, the collection is cleared.</para><para>The covered fraction information is initialized to <ref refid="group__group__publicapi_1gga3586467b9eaf1c08160c5fef7377e622a48c3d0ece765fef64dd56d6cf87daf47" kindref="member">CFRAC_NONE</ref> for all selections. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="367" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="791" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1a3d981d35e2fbd35f64092063871fdef3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::SelectionCollection::evaluate</definition>
        <argsstring>(t_trxframe *fr, t_pbc *pbc)</argsstring>
        <name>evaluate</name>
        <param>
          <type><ref refid="structt__trxframe" kindref="compound">t_trxframe</ref> *</type>
          <declname>fr</declname>
        </param>
        <param>
          <type><ref refid="structt__pbc" kindref="compound">t_pbc</ref> *</type>
          <declname>pbc</declname>
        </param>
        <briefdescription>
<para>Evaluates selections in the collection. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fr</parametername>
</parameternamelist>
<parameterdescription>
<para>Frame for which the evaluation should be carried out. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pbc</parametername>
</parameternamelist>
<parameterdescription>
<para>PBC data, or NULL if no PBC should be used. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>unspeficied</parametername>
</parameternamelist>
<parameterdescription>
<para>Multiple possible exceptions to indicate evaluation failure (TODO: enumerate). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="376" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="867" bodyend="907"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1aeb8069b1be3abd49bad0a1431f91ad7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::SelectionCollection::evaluateFinal</definition>
        <argsstring>(int nframes)</argsstring>
        <name>evaluateFinal</name>
        <param>
          <type>int</type>
          <declname>nframes</declname>
        </param>
        <briefdescription>
<para>Evaluates the largest possible index groups from dynamic selections. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nframes</parametername>
</parameternamelist>
<parameterdescription>
<para>Total number of frames.</para></parameterdescription>
</parameteritem>
</parameterlist>
This method restores the selections to the state they were after <ref refid="classgmx_1_1SelectionCollection_1a3a5b467407c74b9ec2b09c8c7a86cb2e" kindref="member">compile()</ref>.</para><para><computeroutput>nframes</computeroutput> should equal the number of times <ref refid="classgmx_1_1SelectionCollection_1a3d981d35e2fbd35f64092063871fdef3" kindref="member">evaluate()</ref> has been called.</para><para>Does not throw. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="390" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="911" bodyend="915"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1a64154ce1da98f47bd52112cc893ce8ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::SelectionCollection::printTree</definition>
        <argsstring>(FILE *fp, bool bValues) const </argsstring>
        <name>printTree</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bValues</declname>
        </param>
        <briefdescription>
<para>Prints a human-readable version of the internal selection element tree. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fp</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classgmx_1_1File" kindref="compound">File</ref> handle to receive the output. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bValues</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the evaluated values of selection elements are printed as well.</para></parameterdescription>
</parameteritem>
</parameterlist>
The output is very techical, and intended for debugging purposes.</para><para>Does not throw. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="404" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="919" bodyend="927"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1SelectionCollection_1a1db98098d332df6f317121890f8de3df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::SelectionCollection::printXvgrInfo</definition>
        <argsstring>(FILE *fp) const </argsstring>
        <name>printXvgrInfo</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
<para>Prints the selection strings into an XVGR file as comments. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fp</parametername>
</parameternamelist>
<parameterdescription>
<para>Output file.</para></parameterdescription>
</parameteritem>
</parameterlist>
Does not throw. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="412" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.cpp" bodystart="931" bodyend="944"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Collection of selections. </para>    </briefdescription>
    <detaileddescription>
<para>This class is the main interface to the core of the selection engine. It is used to initialize and manage a collection of selections that share the same topology. Selections within one collection can share variables and can be optimized together. Selections from two different collections do not interact.</para><para>The constructor creates an empty selection collection object. To initialize the object, either call <ref refid="classgmx_1_1SelectionCollection_1a95a899f9d56761b449fb3abdce39d0bb" kindref="member">initOptions()</ref>, or both <ref refid="classgmx_1_1SelectionCollection_1a459808363dee98cbc1fe0fa3278ff1db" kindref="member">setReferencePosType()</ref> and <ref refid="classgmx_1_1SelectionCollection_1a30a2b0fa1f2d89d045795fbced5ae059" kindref="member">setOutputPosType()</ref>. See these methods for more details on the initialization options.</para><para>After setting the default values, one or more selections can be parsed with one or more calls to <ref refid="classgmx_1_1SelectionCollection_1a8e1ec471fdc3139a2d682625cc869610" kindref="member">parseInteractive()</ref>, <ref refid="classgmx_1_1SelectionCollection_1ab40d6413e56c8241e122d435585a79ef" kindref="member">parseFromStdin()</ref>, <ref refid="classgmx_1_1SelectionCollection_1a4957a3141e7579fd9f9a4fe39a354ff1" kindref="member">parseFromFile()</ref>, and/or <ref refid="classgmx_1_1SelectionCollection_1a35d779a0619aade5e82ccdafba7c7cc6" kindref="member">parseFromString()</ref>. After all selections are parsed, the topology must be set with <ref refid="classgmx_1_1SelectionCollection_1a4f81eebe438296ee5b4c301b5cc882f6" kindref="member">setTopology()</ref> unless requiresTopology() returns false (the topology can also be set earlier). <ref refid="classgmx_1_1SelectionCollection_1a0179f4a9c87e99d05182838457ea8f29" kindref="member">setIndexGroups()</ref> must also be called if external index group references are used in the selections; it can be called at any point before <ref refid="classgmx_1_1SelectionCollection_1a3a5b467407c74b9ec2b09c8c7a86cb2e" kindref="member">compile()</ref>. Once all selections are parsed, they must be compiled all at once using <ref refid="classgmx_1_1SelectionCollection_1a3a5b467407c74b9ec2b09c8c7a86cb2e" kindref="member">compile()</ref>.</para><para>After compilation, dynamic selections have the maximum number of atoms they can evaluate to, but positions have undefined values (see <ref refid="classgmx_1_1Selection" kindref="compound">Selection</ref> and <ref refid="classgmx_1_1SelectionPosition" kindref="compound">SelectionPosition</ref>). <ref refid="classgmx_1_1SelectionCollection_1a3d981d35e2fbd35f64092063871fdef3" kindref="member">evaluate()</ref> can be used to update the selections for a new frame. <ref refid="classgmx_1_1SelectionCollection_1aeb8069b1be3abd49bad0a1431f91ad7c" kindref="member">evaluateFinal()</ref> can be called after all the frames have been processed to restore the selection values back to the ones they were after <ref refid="classgmx_1_1SelectionCollection_1a3a5b467407c74b9ec2b09c8c7a86cb2e" kindref="member">compile()</ref>.</para><para>At any point, requiresTopology() can be called to see whether the information provided so far requires loading the topology. Similarly, <ref refid="classgmx_1_1SelectionCollection_1ac1a0aa80b45703c364d59749831c2f4a" kindref="member">requiresIndexGroups()</ref> tells whether external index groups are requires. <ref refid="classgmx_1_1SelectionCollection_1a64154ce1da98f47bd52112cc893ce8ef" kindref="member">printTree()</ref> can be used to print the internal representation of the selections (mostly useful for debugging).</para><para>Note that for trajectory analysis using <ref refid="classgmx_1_1TrajectoryAnalysisModule" kindref="compound">TrajectoryAnalysisModule</ref>, the <ref refid="classgmx_1_1SelectionCollection" kindref="compound">SelectionCollection</ref> object is managed by Gromacs, and <ref refid="classgmx_1_1Selection" kindref="compound">Selection</ref> objects are obtained from <ref refid="classgmx_1_1SelectionOption" kindref="compound">SelectionOption</ref>. </para>    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" line="115" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/selection/selectioncollection.h" bodystart="114" bodyend="427"/>
    <listofallmembers>
      <member refid="classgmx_1_1SelectionCollection_1af294f433688c52289ed05459d453dc34a9f6d0fe4faafac5a3248723e2889db62" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>AlwaysAtomSelections</name></member>
      <member refid="classgmx_1_1SelectionCollection_1a3a5b467407c74b9ec2b09c8c7a86cb2e" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>compile</name></member>
      <member refid="classgmx_1_1SelectionCollection_1a3d981d35e2fbd35f64092063871fdef3" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>evaluate</name></member>
      <member refid="classgmx_1_1SelectionCollection_1aeb8069b1be3abd49bad0a1431f91ad7c" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>evaluateFinal</name></member>
      <member refid="classgmx_1_1SelectionCollection_1aad1437ed80bb7b4ca5bc3a18a8ce2069" prot="private" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>impl_</name></member>
      <member refid="classgmx_1_1SelectionCollection_1af294f433688c52289ed05459d453dc34af155145686e582fa75e391710d835a6e" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>IncludeSelectionTypeOption</name></member>
      <member refid="classgmx_1_1SelectionCollection_1a95a899f9d56761b449fb3abdce39d0bb" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>initOptions</name></member>
      <member refid="classgmx_1_1SelectionCollection_1a4957a3141e7579fd9f9a4fe39a354ff1" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>parseFromFile</name></member>
      <member refid="classgmx_1_1SelectionCollection_1ab40d6413e56c8241e122d435585a79ef" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>parseFromStdin</name></member>
      <member refid="classgmx_1_1SelectionCollection_1a35d779a0619aade5e82ccdafba7c7cc6" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>parseFromString</name></member>
      <member refid="classgmx_1_1SelectionCollection_1a8e1ec471fdc3139a2d682625cc869610" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>parseInteractive</name></member>
      <member refid="classgmx_1_1SelectionCollection_1a64154ce1da98f47bd52112cc893ce8ef" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>printTree</name></member>
      <member refid="classgmx_1_1SelectionCollection_1a1db98098d332df6f317121890f8de3df" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>printXvgrInfo</name></member>
      <member refid="classgmx_1_1SelectionCollection_1aca57ab70486f72f3375a4eb9e1e72ff2" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>requiredTopologyProperties</name></member>
      <member refid="classgmx_1_1SelectionCollection_1ac1a0aa80b45703c364d59749831c2f4a" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>requiresIndexGroups</name></member>
      <member refid="classgmx_1_1SelectionCollection_1af4c4da031a86714c51d96f203ecc80b8" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>SelectionCollection</name></member>
      <member refid="classgmx_1_1SelectionCollection_1a7ca9149354511e07285427350c8e9df7" prot="private" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>SelectionCompiler</name></member>
      <member refid="classgmx_1_1SelectionCollection_1ad528488b2d58b94e7b58ab925cfc91f9" prot="private" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>SelectionEvaluator</name></member>
      <member refid="classgmx_1_1SelectionCollection_1af294f433688c52289ed05459d453dc34" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>SelectionTypeOption</name></member>
      <member refid="classgmx_1_1SelectionCollection_1ac7344df09de3ddade163929d93c7d017" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>setDebugLevel</name></member>
      <member refid="classgmx_1_1SelectionCollection_1a0179f4a9c87e99d05182838457ea8f29" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>setIndexGroups</name></member>
      <member refid="classgmx_1_1SelectionCollection_1a30a2b0fa1f2d89d045795fbced5ae059" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>setOutputPosType</name></member>
      <member refid="classgmx_1_1SelectionCollection_1a459808363dee98cbc1fe0fa3278ff1db" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>setReferencePosType</name></member>
      <member refid="classgmx_1_1SelectionCollection_1a4f81eebe438296ee5b4c301b5cc882f6" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>setTopology</name></member>
      <member refid="classgmx_1_1SelectionCollection_1a1e75dc830b2ed7064e1bb6bb58335946" prot="public" virt="non-virtual"><scope>gmx::SelectionCollection</scope><name>~SelectionCollection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

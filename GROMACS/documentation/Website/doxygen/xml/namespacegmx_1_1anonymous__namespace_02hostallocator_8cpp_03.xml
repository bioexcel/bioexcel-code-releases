<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="namespacegmx_1_1anonymous__namespace_02hostallocator_8cpp_03" kind="namespace">
    <compoundname>gmx::anonymous_namespace{hostallocator.cpp}</compoundname>
    <innerclass refid="classgmx_1_1anonymous__namespace_02hostallocator_8cpp_03_1_1HostMemoryTest" prot="public">gmx::anonymous_namespace{hostallocator.cpp}::HostMemoryTest</innerclass>
    <innerclass refid="classgmx_1_1anonymous__namespace_02hostallocator_8cpp_03_1_1HostAllocatorTest" prot="public">gmx::anonymous_namespace{hostallocator.cpp}::HostAllocatorTest</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacegmx_1_1anonymous__namespace_02hostallocator_8cpp_03_1af871bee5512aa37656a75bb698782aa0" prot="public" static="no">
        <type>::testing::Types&lt; int, <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref>, <ref refid="namespacegmx_1a139c1919a9680de4ad1450f42e37d33b" kindref="member">RVec</ref> &gt;</type>
        <definition>typedef ::testing::Types&lt;int, real, RVec&gt; gmx::anonymous_namespace{hostallocator.cpp}::TestTypes</definition>
        <argsstring></argsstring>
        <name>TestTypes</name>
        <briefdescription>
<para>The types used in testing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/tests/hostallocator.cpp" line="165" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/tests/hostallocator.cpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegmx_1_1anonymous__namespace_02hostallocator_8cpp_03_1a6d5e969a8f2587f4f47e19c5d6c3cb96" prot="public" static="no">
        <type>::testing::Types&lt; <ref refid="namespacegmx_1aae347fd6abaab2e4d8278bf17973b664" kindref="member">HostAllocator</ref>&lt; <ref refid="real_8h_1a58a0c7cf2501f4492da833421be92547" kindref="member">real</ref> &gt;, <ref refid="namespacegmx_1aae347fd6abaab2e4d8278bf17973b664" kindref="member">HostAllocator</ref>&lt; int &gt;, <ref refid="namespacegmx_1aae347fd6abaab2e4d8278bf17973b664" kindref="member">HostAllocator</ref>&lt; <ref refid="namespacegmx_1a139c1919a9680de4ad1450f42e37d33b" kindref="member">RVec</ref> &gt; &gt;</type>
        <definition>using gmx::anonymous_namespace{hostallocator.cpp}::AllocatorTypesToTest = typedef ::testing::Types&lt;HostAllocator&lt;real&gt;, HostAllocator&lt;int&gt;, HostAllocator&lt;RVec&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>AllocatorTypesToTest</name>
        <briefdescription>
<para>Declare allocator types to test. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/tests/hostallocator.cpp" line="340" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/tests/hostallocator.cpp" bodystart="343" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacegmx_1_1anonymous__namespace_02hostallocator_8cpp_03_1ac69812b135ce83dfb4bce5efabe6cf31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classgmx_1_1ArrayRef" kindref="compound">ArrayRef</ref>&lt; char &gt;</type>
        <definition>ArrayRef&lt;char&gt; gmx::anonymous_namespace{hostallocator.cpp}::charArrayRefFromArray</definition>
        <argsstring>(T *data, size_t size)</argsstring>
        <name>charArrayRefFromArray</name>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convenience function to transform a view into one with base type of (non-const) char. </para>        </briefdescription>
        <detaileddescription>
<para>This transformation is useful for using containers with C APIs where the function signature is not declared const even where the semantics of the usage actually are const.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data pointer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the data pointer (in T). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The base type of the container </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/tests/hostallocator.cpp" line="145" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/tests/hostallocator.cpp" bodystart="145" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="namespacegmx_1_1anonymous__namespace_02hostallocator_8cpp_03_1a28f31f0407addfbbbf02437d253febbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VectorType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool gmx::anonymous_namespace{hostallocator.cpp}::isPinned</definition>
        <argsstring>(const VectorType &amp;v)</argsstring>
        <name>isPinned</name>
        <param>
          <type>const VectorType &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Helper function for wrapping a call to isHostMemoryPinned. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/tests/hostallocator.cpp" line="246" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/tests/hostallocator.cpp" bodystart="246" bodyend="250"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/gpu_utils/tests/hostallocator.cpp" line="64" column="1"/>
  </compounddef>
</doxygen>

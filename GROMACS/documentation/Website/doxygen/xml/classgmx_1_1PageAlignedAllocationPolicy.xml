<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classgmx_1_1PageAlignedAllocationPolicy" kind="class" prot="public">
    <compoundname>gmx::PageAlignedAllocationPolicy</compoundname>
    <includes local="no">gromacs/utility/alignedallocator.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgmx_1_1PageAlignedAllocationPolicy_1aa395b728bf625395d497500f9de7e28c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t gmx::PageAlignedAllocationPolicy::alignment</definition>
        <argsstring>()</argsstring>
        <name>alignment</name>
        <briefdescription>
<para>Return the alignment size of memory pages on this system. </para>        </briefdescription>
        <detaileddescription>
<para>Queries sysconf/WinAPI, otherwise guesses 4096. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/alignedallocator.h" line="131" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/alignedallocator.cpp" bodystart="264" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1PageAlignedAllocationPolicy_1aefa29138219cff2f879abf3e92d2aa20" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * gmx::PageAlignedAllocationPolicy::malloc</definition>
        <argsstring>(std::size_t bytes)</argsstring>
        <name>malloc</name>
        <param>
          <type>std::size_t</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
<para>Allocate memory aligned to <ref refid="classgmx_1_1PageAlignedAllocationPolicy_1aa395b728bf625395d497500f9de7e28c" kindref="member">alignment()</ref> bytes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount of memory (bytes) to allocate. It is valid to ask for 0 bytes, which will return a non-null pointer that is properly aligned and padded (but that you should not use).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Valid pointer if the allocation worked, otherwise nullptr.</para></simplesect>
<simplesect kind="note"><para>Memory allocated with this routine must be released with <ref refid="classgmx_1_1PageAlignedAllocationPolicy_1ae99be9d7da11270b02aaf8be2749e29f" kindref="member">gmx::PageAlignedAllocationPolicy::free()</ref>, and absolutely not the system <ref refid="classgmx_1_1PageAlignedAllocationPolicy_1ae99be9d7da11270b02aaf8be2749e29f" kindref="member">free()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/alignedallocator.h" line="144" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/alignedallocator.cpp" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classgmx_1_1PageAlignedAllocationPolicy_1ae99be9d7da11270b02aaf8be2749e29f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gmx::PageAlignedAllocationPolicy::free</definition>
        <argsstring>(void *p)</argsstring>
        <name>free</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Free aligned memory. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory pointer previously returned from <ref refid="classgmx_1_1PageAlignedAllocationPolicy_1aefa29138219cff2f879abf3e92d2aa20" kindref="member">malloc()</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This routine should only be called with pointers obtained from <ref refid="classgmx_1_1PageAlignedAllocationPolicy_1aefa29138219cff2f879abf3e92d2aa20" kindref="member">gmx::PageAlignedAllocationPolicy::malloc()</ref>, and absolutely not any pointers obtained the system <ref refid="classgmx_1_1PageAlignedAllocationPolicy_1aefa29138219cff2f879abf3e92d2aa20" kindref="member">malloc()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/alignedallocator.h" line="154" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/alignedallocator.cpp" bodystart="277" bodyend="280"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Policy class for configuring <ref refid="classgmx_1_1Allocator" kindref="compound">gmx::Allocator</ref>, to manage allocations of page-aligned memory that can be locked for asynchronous transfer to GPU devices. </para>    </briefdescription>
    <detaileddescription>
<para> <libinternal />  </para>    </detaileddescription>
    <location file="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/alignedallocator.h" line="125" column="1" bodyfile="/home/jenkins/workspace/Release_workflow_master/gromacs-2018.3/src/gromacs/utility/alignedallocator.h" bodystart="124" bodyend="155"/>
    <listofallmembers>
      <member refid="classgmx_1_1PageAlignedAllocationPolicy_1aa395b728bf625395d497500f9de7e28c" prot="public" virt="non-virtual"><scope>gmx::PageAlignedAllocationPolicy</scope><name>alignment</name></member>
      <member refid="classgmx_1_1PageAlignedAllocationPolicy_1ae99be9d7da11270b02aaf8be2749e29f" prot="public" virt="non-virtual"><scope>gmx::PageAlignedAllocationPolicy</scope><name>free</name></member>
      <member refid="classgmx_1_1PageAlignedAllocationPolicy_1aefa29138219cff2f879abf3e92d2aa20" prot="public" virt="non-virtual"><scope>gmx::PageAlignedAllocationPolicy</scope><name>malloc</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

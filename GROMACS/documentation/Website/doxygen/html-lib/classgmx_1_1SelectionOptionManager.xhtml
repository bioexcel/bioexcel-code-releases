<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::SelectionOptionManager Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1SelectionOptionManager.xhtml">SelectionOptionManager</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1SelectionOptionManager-members.xhtml">List of all members</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">gmx::SelectionOptionManager Class Reference<div class="ingroups"><a class="el" href="group__group__publicapi.xhtml">Public API</a> &#124; <a class="el" href="group__module__selection.xhtml">Parsing and Evaluation of Analysis Selections (selection)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/selection/selectionoptionmanager.h&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for gmx::SelectionOptionManager:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1SelectionOptionManager__inherit__graph.svg" width="208" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for gmx::SelectionOptionManager:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1SelectionOptionManager__coll__graph.svg" width="208" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Handles interaction of selection options with other options and user input. </p>
<p>This class implements interaction of <a class="el" href="classgmx_1_1SelectionOption.xhtml" title="Specifies an option that provides selection(s). ">SelectionOption</a> with <a class="el" href="classgmx_1_1SelectionCollection.xhtml" title="Collection of selections. ">SelectionCollection</a>, and also implements features of <a class="el" href="classgmx_1_1SelectionOption.xhtml" title="Specifies an option that provides selection(s). ">SelectionOption</a> that require actions outside options parsing. It also implements the coupling between <a class="el" href="classgmx_1_1SelectionOption.xhtml" title="Specifies an option that provides selection(s). ">SelectionOption</a> and <a class="el" href="classgmx_1_1SelectionFileOption.xhtml" title="Specifies a special option that provides selections from a file. ">SelectionFileOption</a>. It needs to be added using <a class="el" href="classgmx_1_1Options.xhtml#aec34346be097c2d666ff4434c4bf562e" title="Adds an option manager. ">Options::addManager()</a> before <a class="el" href="classgmx_1_1SelectionOption.xhtml" title="Specifies an option that provides selection(s). ">SelectionOption</a> or <a class="el" href="classgmx_1_1SelectionFileOption.xhtml" title="Specifies a special option that provides selections from a file. ">SelectionFileOption</a> options can be added to an <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a> collection.</p>
<p>The main features of this class are:</p>
<ul>
<li><a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#a89e3f776167a202203ce8a0883008ad9" title="Converts a string value to selections for an option. ">convertOptionValue()</a>, which is used to convert string values into selections for options.</li>
<li><a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#a5a0ca887cf17ccaeb4732960b7b6bc96" title="Adds a selection option for delayed user input. ">requestOptionDelayedParsing()</a>, which is called by the internal implementation of selection options when an option is provided on the command line without a value. Such calls are remembered, and the value for all requested options can be later provided by calling one of <a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#ae758058c274b2983a911359a81827651" title="Parses selection(s) from standard input for options not yet provided. ">parseRequestedFromStdin()</a>, <a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#aaa58147d61e9b520f9ff781d2a2d3e3c" title="Parses selection(s) from a file for options not yet provided. ">parseRequestedFromFile()</a> or parseRequstedFromString(). </li>
</ul>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abfcd429376957cf60d31daed35726a85"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#abfcd429376957cf60d31daed35726a85">SelectionOptionManager</a> (<a class="el" href="classgmx_1_1SelectionCollection.xhtml">SelectionCollection</a> *selections)</td></tr>
<tr class="memdesc:abfcd429376957cf60d31daed35726a85"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a manager for selection options.  <a href="#abfcd429376957cf60d31daed35726a85">More...</a><br/></td></tr>
<tr class="separator:abfcd429376957cf60d31daed35726a85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86f6df9b8b9ae3b62ac667e5a01fc5e9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#a86f6df9b8b9ae3b62ac667e5a01fc5e9">registerOption</a> (<a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#a3dd781afa3dc217f65462ce050a61552">SelectionOptionStorage</a> *storage)</td></tr>
<tr class="memdesc:a86f6df9b8b9ae3b62ac667e5a01fc5e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a selection option to be managed.  <a href="#a86f6df9b8b9ae3b62ac667e5a01fc5e9">More...</a><br/></td></tr>
<tr class="separator:a86f6df9b8b9ae3b62ac667e5a01fc5e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89e3f776167a202203ce8a0883008ad9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#a89e3f776167a202203ce8a0883008ad9">convertOptionValue</a> (<a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#a3dd781afa3dc217f65462ce050a61552">SelectionOptionStorage</a> *storage, const std::string &amp;value, bool bFullValue)</td></tr>
<tr class="memdesc:a89e3f776167a202203ce8a0883008ad9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a string value to selections for an option.  <a href="#a89e3f776167a202203ce8a0883008ad9">More...</a><br/></td></tr>
<tr class="separator:a89e3f776167a202203ce8a0883008ad9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a0ca887cf17ccaeb4732960b7b6bc96"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#a5a0ca887cf17ccaeb4732960b7b6bc96">requestOptionDelayedParsing</a> (<a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#a3dd781afa3dc217f65462ce050a61552">SelectionOptionStorage</a> *storage)</td></tr>
<tr class="memdesc:a5a0ca887cf17ccaeb4732960b7b6bc96"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a selection option for delayed user input.  <a href="#a5a0ca887cf17ccaeb4732960b7b6bc96">More...</a><br/></td></tr>
<tr class="separator:a5a0ca887cf17ccaeb4732960b7b6bc96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95da5a0ef0a16d1f6deaa602dd537149"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a95da5a0ef0a16d1f6deaa602dd537149"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#a95da5a0ef0a16d1f6deaa602dd537149">hasRequestedSelections</a> () const </td></tr>
<tr class="memdesc:a95da5a0ef0a16d1f6deaa602dd537149"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether there are requested selections that need input from parseRequestedFrom*(). <br/></td></tr>
<tr class="separator:a95da5a0ef0a16d1f6deaa602dd537149"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba4be23983f123d534cf16a59a95711e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#aba4be23983f123d534cf16a59a95711e">initOptions</a> (<a class="el" href="classgmx_1_1IOptionsContainer.xhtml">IOptionsContainer</a> *options)</td></tr>
<tr class="memdesc:aba4be23983f123d534cf16a59a95711e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes options for setting global selection properties.  <a href="#aba4be23983f123d534cf16a59a95711e">More...</a><br/></td></tr>
<tr class="separator:aba4be23983f123d534cf16a59a95711e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae758058c274b2983a911359a81827651"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#ae758058c274b2983a911359a81827651">parseRequestedFromStdin</a> (bool bInteractive)</td></tr>
<tr class="memdesc:ae758058c274b2983a911359a81827651"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses selection(s) from standard input for options not yet provided.  <a href="#ae758058c274b2983a911359a81827651">More...</a><br/></td></tr>
<tr class="separator:ae758058c274b2983a911359a81827651"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa58147d61e9b520f9ff781d2a2d3e3c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#aaa58147d61e9b520f9ff781d2a2d3e3c">parseRequestedFromFile</a> (const std::string &amp;filename)</td></tr>
<tr class="memdesc:aaa58147d61e9b520f9ff781d2a2d3e3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses selection(s) from a file for options not yet provided.  <a href="#aaa58147d61e9b520f9ff781d2a2d3e3c">More...</a><br/></td></tr>
<tr class="separator:aaa58147d61e9b520f9ff781d2a2d3e3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a273deecb51bcc8ca5417697b698ba7c1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#a273deecb51bcc8ca5417697b698ba7c1">parseRequestedFromString</a> (const std::string &amp;str)</td></tr>
<tr class="memdesc:a273deecb51bcc8ca5417697b698ba7c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses selection(s) from a string for options not yet provided.  <a href="#a273deecb51bcc8ca5417697b698ba7c1">More...</a><br/></td></tr>
<tr class="separator:a273deecb51bcc8ca5417697b698ba7c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a3dd781afa3dc217f65462ce050a61552"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3dd781afa3dc217f65462ce050a61552"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#a3dd781afa3dc217f65462ce050a61552">SelectionOptionStorage</a></td></tr>
<tr class="memdesc:a3dd781afa3dc217f65462ce050a61552"><td class="mdescLeft">&#160;</td><td class="mdescRight">Needed for handling delayed selection parsing requests. <br/></td></tr>
<tr class="separator:a3dd781afa3dc217f65462ce050a61552"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="abfcd429376957cf60d31daed35726a85"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">gmx::SelectionOptionManager::SelectionOptionManager </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1SelectionCollection.xhtml">SelectionCollection</a> *&#160;</td>
          <td class="paramname"><em>selections</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a manager for selection options. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a89e3f776167a202203ce8a0883008ad9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionOptionManager::convertOptionValue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#a3dd781afa3dc217f65462ce050a61552">SelectionOptionStorage</a> *&#160;</td>
          <td class="paramname"><em>storage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bFullValue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Converts a string value to selections for an option. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir"></td><td class="paramname">storage</td><td>Storage object to receive the selections. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>Value to convert. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bFullValue</td><td>If true, the provided selections are the full value of the option, and additional checks are performed. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InvalidInputError.xhtml" title="Exception class for situations where user input cannot be parsed/understood. ">InvalidInputError</a></td><td>if the selection string is not valid, or uses a feature not supported by the option.</td></tr>
  </table>
  </dd>
</dl>
<p>This is only for internal use by the selection module. It is not possible to obtain a SelectionOptionStorage pointer through any public or library API. </p>

</div>
</div>
<a class="anchor" id="aba4be23983f123d534cf16a59a95711e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionOptionManager::initOptions </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1IOptionsContainer.xhtml">IOptionsContainer</a> *&#160;</td>
          <td class="paramname"><em>options</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes options for setting global selection properties. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">options</td><td><a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a> object to initialize. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1SelectionCollection.xhtml#a95a899f9d56761b449fb3abdce39d0bb" title="Initializes options for setting global properties on the collection. ">SelectionCollection::initOptions()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="aaa58147d61e9b520f9ff781d2a2d3e3c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionOptionManager::parseRequestedFromFile </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses selection(s) from a file for options not yet provided. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>Name of the file to parse selections from. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">unspecified</td><td>Can throw any exception thrown by <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a4957a3141e7579fd9f9a4fe39a354ff1" title="Parses selection(s) from a file. ">SelectionCollection::parseFromFile()</a>. </td></tr>
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InvalidInputError.xhtml" title="Exception class for situations where user input cannot be parsed/understood. ">InvalidInputError</a></td><td>if<ul>
<li>the number of selections in <code>filename</code> doesn't match the number requested.</li>
<li>any selection uses a feature that is not allowed for the corresponding option.</li>
<li>if there is a request for any number of selections that is not the last (in which case it is not possible to determine which selections belong to which request).</li>
</ul>
</td></tr>
  </table>
  </dd>
</dl>
<p>This method behaves as <a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#ae758058c274b2983a911359a81827651" title="Parses selection(s) from standard input for options not yet provided. ">parseRequestedFromStdin()</a>, with two exceptions:</p>
<ol type="1">
<li>It reads the selections from a file instead of standard input.</li>
<li>If no requests are pending, assigns values to all required options that have not yet been set.</li>
</ol>
<p>This method used to implement <a class="el" href="classgmx_1_1SelectionFileOption.xhtml" title="Specifies a special option that provides selections from a file. ">SelectionFileOption</a>.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#ae758058c274b2983a911359a81827651" title="Parses selection(s) from standard input for options not yet provided. ">parseRequestedFromStdin()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="ae758058c274b2983a911359a81827651"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionOptionManager::parseRequestedFromStdin </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bInteractive</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses selection(s) from standard input for options not yet provided. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">bInteractive</td><td>Whether the parser should behave interactively. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">unspecified</td><td>Can throw any exception thrown by <a class="el" href="classgmx_1_1SelectionCollection.xhtml#ab40d6413e56c8241e122d435585a79ef" title="Parses selection(s) from standard input. ">SelectionCollection::parseFromStdin()</a>. </td></tr>
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory.</td></tr>
  </table>
  </dd>
</dl>
<p>This method cooperates with <a class="el" href="classgmx_1_1SelectionOption.xhtml" title="Specifies an option that provides selection(s). ">SelectionOption</a> to allow interactive input of requested selections after all options have been processed. It should be called after the <a class="el" href="classgmx_1_1Options.xhtml#a3316f3681c71daa04098696d4417f2f9" title="Notifies the collection that all option values are assigned. ">Options::finish()</a> method has been called on all options that add selections to this collection. For each required selection option that has not been given, as well as for optional selection options that have been specified without values, it will prompt the user to input the necessary selections. </p>

</div>
</div>
<a class="anchor" id="a273deecb51bcc8ca5417697b698ba7c1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionOptionManager::parseRequestedFromString </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses selection(s) from a string for options not yet provided. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">str</td><td>String to parse. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">unspecified</td><td>Can throw any exception thrown by <a class="el" href="classgmx_1_1SelectionCollection.xhtml#a35d779a0619aade5e82ccdafba7c7cc6" title="Parses selection(s) from a string. ">SelectionCollection::parseFromString()</a>. </td></tr>
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InvalidInputError.xhtml" title="Exception class for situations where user input cannot be parsed/understood. ">InvalidInputError</a></td><td>in same conditions as <a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#aaa58147d61e9b520f9ff781d2a2d3e3c" title="Parses selection(s) from a file for options not yet provided. ">parseRequestedFromFile()</a>.</td></tr>
  </table>
  </dd>
</dl>
<p>This method behaves as <a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#aaa58147d61e9b520f9ff781d2a2d3e3c" title="Parses selection(s) from a file for options not yet provided. ">parseRequestedFromFile()</a>, but reads the selections from a string instead of a file. This method is mainly used for testing.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#aaa58147d61e9b520f9ff781d2a2d3e3c" title="Parses selection(s) from a file for options not yet provided. ">parseRequestedFromFile()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a86f6df9b8b9ae3b62ac667e5a01fc5e9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionOptionManager::registerOption </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#a3dd781afa3dc217f65462ce050a61552">SelectionOptionStorage</a> *&#160;</td>
          <td class="paramname"><em>storage</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a selection option to be managed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">storage</td><td>Storage object for the option to register. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory.</td></tr>
  </table>
  </dd>
</dl>
<p>This is only for internal use by the selection module. It is not possible to obtain a SelectionOptionStorage pointer through any public or library API.</p>
<p>Strong exception safety. </p>

</div>
</div>
<a class="anchor" id="a5a0ca887cf17ccaeb4732960b7b6bc96"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionOptionManager::requestOptionDelayedParsing </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1SelectionOptionManager.xhtml#a3dd781afa3dc217f65462ce050a61552">SelectionOptionStorage</a> *&#160;</td>
          <td class="paramname"><em>storage</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a selection option for delayed user input. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">storage</td><td>Storage object for the option to request. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory.</td></tr>
  </table>
  </dd>
</dl>
<p>This is only for internal use by the selection module. It is not possible to obtain a SelectionOptionStorage pointer through any public or library API.</p>
<p>Strong exception safety. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/selection/<a class="el" href="selectionoptionmanager_8h.xhtml">selectionoptionmanager.h</a></li>
<li>src/gromacs/selection/selectionoptionmanager.cpp</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:56:16 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

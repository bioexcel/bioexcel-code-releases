<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/fft/fft.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_8a21c46af9718d1f610eb513153099d7.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a46192700e9e8ed44c648f0a55ee9a53.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_b9edb1efd658720be5e099e99a2ed53e.xhtml">fft</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">fft.h File Reference<div class="ingroups"><a class="el" href="group__group__publicapi.xhtml">Public API</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;stdio.h&gt;</code><br/>
<code>#include &quot;gromacs/math/gmxcomplex.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="real_8h.xhtml">gromacs/utility/real.h</a>&quot;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for fft.h:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="fft_8h__incl.svg" width="240" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><div class="textblock"><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> This graph shows which files directly or indirectly include this file:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="fft_8h__dep__incl.svg" width="222" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Fast Fourier Transforms. </p>
<p>This file provides an abstract Gromacs interface to Fourier transforms, including multi-dimensional and real-to-complex transforms.</p>
<p>Internally it is implemented as wrappers to external libraries such as FFTW or the Intel Math Kernel Library, but we also have a built-in version of FFTPACK in case the faster alternatives are unavailable.</p>
<p>We also provide our own multi-dimensional transform setups even when the underlying library does not support it directly. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ac4aa41b4b80187da5d55a98e5f63a025"><td class="memItemLeft" align="right" valign="top">typedef struct gmx_fft *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a></td></tr>
<tr class="memdesc:ac4aa41b4b80187da5d55a98e5f63a025"><td class="mdescLeft">&#160;</td><td class="mdescRight">Datatype for FFT setup.  <a href="#ac4aa41b4b80187da5d55a98e5f63a025">More...</a><br/></td></tr>
<tr class="separator:ac4aa41b4b80187da5d55a98e5f63a025"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6b68fb966512d287910879d38472bb4"><td class="memItemLeft" align="right" valign="top">typedef int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#aa6b68fb966512d287910879d38472bb4">gmx_fft_flag</a></td></tr>
<tr class="memdesc:aa6b68fb966512d287910879d38472bb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifier for FFT flags.  <a href="#aa6b68fb966512d287910879d38472bb4">More...</a><br/></td></tr>
<tr class="separator:aa6b68fb966512d287910879d38472bb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:af2aa0b3a5f3a4339ecb2bd67cb8f8302"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#af2aa0b3a5f3a4339ecb2bd67cb8f8302">gmx_fft_direction</a> { <a class="el" href="fft_8h.xhtml#af2aa0b3a5f3a4339ecb2bd67cb8f8302a27ed3f7728bda473c6ebe5cb4cd56a3b">GMX_FFT_FORWARD</a>, 
<a class="el" href="fft_8h.xhtml#af2aa0b3a5f3a4339ecb2bd67cb8f8302a6b7d75766670857ec08e947742ec9ab8">GMX_FFT_BACKWARD</a>, 
<a class="el" href="fft_8h.xhtml#af2aa0b3a5f3a4339ecb2bd67cb8f8302afbc1997ce0588ee6c73fb576e2264a89">GMX_FFT_REAL_TO_COMPLEX</a>, 
<a class="el" href="fft_8h.xhtml#af2aa0b3a5f3a4339ecb2bd67cb8f8302ac47b1fb3f7ea2ebabaf3bb3d272400d8">GMX_FFT_COMPLEX_TO_REAL</a>
 }</td></tr>
<tr class="memdesc:af2aa0b3a5f3a4339ecb2bd67cb8f8302"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifier for FFT direction.  <a href="fft_8h.xhtml#af2aa0b3a5f3a4339ecb2bd67cb8f8302">More...</a><br/></td></tr>
<tr class="separator:af2aa0b3a5f3a4339ecb2bd67cb8f8302"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a9236a69dfa724f4bf45d2940713a12ec"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#a9236a69dfa724f4bf45d2940713a12ec">gmx_fft_init_1d</a> (<a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a> *fft, int nx, <a class="el" href="fft_8h.xhtml#aa6b68fb966512d287910879d38472bb4">gmx_fft_flag</a> flags)</td></tr>
<tr class="memdesc:a9236a69dfa724f4bf45d2940713a12ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setup a 1-dimensional complex-to-complex transform.  <a href="#a9236a69dfa724f4bf45d2940713a12ec">More...</a><br/></td></tr>
<tr class="separator:a9236a69dfa724f4bf45d2940713a12ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2b9ba002f1ee0f1caf78468d9bef16b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#ac2b9ba002f1ee0f1caf78468d9bef16b">gmx_fft_init_many_1d</a> (<a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a> *fft, int nx, int howmany, <a class="el" href="fft_8h.xhtml#aa6b68fb966512d287910879d38472bb4">gmx_fft_flag</a> flags)</td></tr>
<tr class="memdesc:ac2b9ba002f1ee0f1caf78468d9bef16b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setup multiple 1-dimensional complex-to-complex transform.  <a href="#ac2b9ba002f1ee0f1caf78468d9bef16b">More...</a><br/></td></tr>
<tr class="separator:ac2b9ba002f1ee0f1caf78468d9bef16b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a035cb8cb8a57712aa06abe12736f0ed7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#a035cb8cb8a57712aa06abe12736f0ed7">gmx_fft_init_1d_real</a> (<a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a> *fft, int nx, <a class="el" href="fft_8h.xhtml#aa6b68fb966512d287910879d38472bb4">gmx_fft_flag</a> flags)</td></tr>
<tr class="memdesc:a035cb8cb8a57712aa06abe12736f0ed7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setup a 1-dimensional real-to-complex transform.  <a href="#a035cb8cb8a57712aa06abe12736f0ed7">More...</a><br/></td></tr>
<tr class="separator:a035cb8cb8a57712aa06abe12736f0ed7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1ca8ea8453baedb6ed6d6b43ca8fa3c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#aa1ca8ea8453baedb6ed6d6b43ca8fa3c">gmx_fft_init_many_1d_real</a> (<a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a> *fft, int nx, int howmany, <a class="el" href="fft_8h.xhtml#aa6b68fb966512d287910879d38472bb4">gmx_fft_flag</a> flags)</td></tr>
<tr class="memdesc:aa1ca8ea8453baedb6ed6d6b43ca8fa3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setup multiple 1-dimensional real-to-complex transform.  <a href="#aa1ca8ea8453baedb6ed6d6b43ca8fa3c">More...</a><br/></td></tr>
<tr class="separator:aa1ca8ea8453baedb6ed6d6b43ca8fa3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a170d1fa6c6a5e48769ecd4a00231e835"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#a170d1fa6c6a5e48769ecd4a00231e835">gmx_fft_init_2d_real</a> (<a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a> *fft, int nx, int ny, <a class="el" href="fft_8h.xhtml#aa6b68fb966512d287910879d38472bb4">gmx_fft_flag</a> flags)</td></tr>
<tr class="memdesc:a170d1fa6c6a5e48769ecd4a00231e835"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setup a 2-dimensional real-to-complex transform.  <a href="#a170d1fa6c6a5e48769ecd4a00231e835">More...</a><br/></td></tr>
<tr class="separator:a170d1fa6c6a5e48769ecd4a00231e835"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecb1a7c6568eb08b82153cade186ad1e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#aecb1a7c6568eb08b82153cade186ad1e">gmx_fft_1d</a> (<a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a> setup, enum <a class="el" href="fft_8h.xhtml#af2aa0b3a5f3a4339ecb2bd67cb8f8302">gmx_fft_direction</a> dir, void *in_data, void *out_data)</td></tr>
<tr class="memdesc:aecb1a7c6568eb08b82153cade186ad1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform a 1-dimensional complex-to-complex transform.  <a href="#aecb1a7c6568eb08b82153cade186ad1e">More...</a><br/></td></tr>
<tr class="separator:aecb1a7c6568eb08b82153cade186ad1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad97413697d5d8199f1309734a792f62d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#ad97413697d5d8199f1309734a792f62d">gmx_fft_many_1d</a> (<a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a> setup, enum <a class="el" href="fft_8h.xhtml#af2aa0b3a5f3a4339ecb2bd67cb8f8302">gmx_fft_direction</a> dir, void *in_data, void *out_data)</td></tr>
<tr class="memdesc:ad97413697d5d8199f1309734a792f62d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform many 1-dimensional complex-to-complex transforms.  <a href="#ad97413697d5d8199f1309734a792f62d">More...</a><br/></td></tr>
<tr class="separator:ad97413697d5d8199f1309734a792f62d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8eabaf36072e622f59b361e79ed4e9d3"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#a8eabaf36072e622f59b361e79ed4e9d3">gmx_fft_1d_real</a> (<a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a> setup, enum <a class="el" href="fft_8h.xhtml#af2aa0b3a5f3a4339ecb2bd67cb8f8302">gmx_fft_direction</a> dir, void *in_data, void *out_data)</td></tr>
<tr class="memdesc:a8eabaf36072e622f59b361e79ed4e9d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform a 1-dimensional real-to-complex transform.  <a href="#a8eabaf36072e622f59b361e79ed4e9d3">More...</a><br/></td></tr>
<tr class="separator:a8eabaf36072e622f59b361e79ed4e9d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5640aa9c7e8bb34c41de7adf92bc726"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#ab5640aa9c7e8bb34c41de7adf92bc726">gmx_fft_many_1d_real</a> (<a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a> setup, enum <a class="el" href="fft_8h.xhtml#af2aa0b3a5f3a4339ecb2bd67cb8f8302">gmx_fft_direction</a> dir, void *in_data, void *out_data)</td></tr>
<tr class="memdesc:ab5640aa9c7e8bb34c41de7adf92bc726"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform many 1-dimensional real-to-complex transforms.  <a href="#ab5640aa9c7e8bb34c41de7adf92bc726">More...</a><br/></td></tr>
<tr class="separator:ab5640aa9c7e8bb34c41de7adf92bc726"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1876b62ad9f99b1772d14e7e1d84b1b8"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#a1876b62ad9f99b1772d14e7e1d84b1b8">gmx_fft_2d_real</a> (<a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a> setup, enum <a class="el" href="fft_8h.xhtml#af2aa0b3a5f3a4339ecb2bd67cb8f8302">gmx_fft_direction</a> dir, void *in_data, void *out_data)</td></tr>
<tr class="memdesc:a1876b62ad9f99b1772d14e7e1d84b1b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform a 2-dimensional real-to-complex transform.  <a href="#a1876b62ad9f99b1772d14e7e1d84b1b8">More...</a><br/></td></tr>
<tr class="separator:a1876b62ad9f99b1772d14e7e1d84b1b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae761c85582c682d4821c75d9ae891e6a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#ae761c85582c682d4821c75d9ae891e6a">gmx_fft_destroy</a> (<a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a> setup)</td></tr>
<tr class="memdesc:ae761c85582c682d4821c75d9ae891e6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Release an FFT setup structure.  <a href="#ae761c85582c682d4821c75d9ae891e6a">More...</a><br/></td></tr>
<tr class="separator:ae761c85582c682d4821c75d9ae891e6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77912d06d42876247642873eb98a523d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#a77912d06d42876247642873eb98a523d">gmx_many_fft_destroy</a> (<a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a> setup)</td></tr>
<tr class="memdesc:a77912d06d42876247642873eb98a523d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Release a many FFT setup structure.  <a href="#a77912d06d42876247642873eb98a523d">More...</a><br/></td></tr>
<tr class="separator:a77912d06d42876247642873eb98a523d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05cf1a5a8427f30bbbc35ccbf89128d7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#a05cf1a5a8427f30bbbc35ccbf89128d7">gmx_fft_transpose_2d</a> (t_complex *in_data, t_complex *out_data, int nx, int ny)</td></tr>
<tr class="memdesc:a05cf1a5a8427f30bbbc35ccbf89128d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transpose 2d complex matrix, in-place or out-of-place.  <a href="#a05cf1a5a8427f30bbbc35ccbf89128d7">More...</a><br/></td></tr>
<tr class="separator:a05cf1a5a8427f30bbbc35ccbf89128d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e04a1246fe2cc655a8b9c67a49b88f5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#a3e04a1246fe2cc655a8b9c67a49b88f5">gmx_fft_cleanup</a> ()</td></tr>
<tr class="memdesc:a3e04a1246fe2cc655a8b9c67a49b88f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cleanup global data of FFT.  <a href="#a3e04a1246fe2cc655a8b9c67a49b88f5">More...</a><br/></td></tr>
<tr class="separator:a3e04a1246fe2cc655a8b9c67a49b88f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a101e209573d47cd336784b033f471cb7"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#a101e209573d47cd336784b033f471cb7">GMX_FFT_FLAG_NONE</a> = 0</td></tr>
<tr class="memdesc:a101e209573d47cd336784b033f471cb7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Macro to indicate no special flags for FFT routines.  <a href="#a101e209573d47cd336784b033f471cb7">More...</a><br/></td></tr>
<tr class="separator:a101e209573d47cd336784b033f471cb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aede487da2908124da5efaec178b12539"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fft_8h.xhtml#aede487da2908124da5efaec178b12539">GMX_FFT_FLAG_CONSERVATIVE</a> = (1&lt;&lt;0)</td></tr>
<tr class="memdesc:aede487da2908124da5efaec178b12539"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flag to disable FFT optimizations based on timings, see <a class="el" href="fft_8h.xhtml#aa6b68fb966512d287910879d38472bb4" title="Specifier for FFT flags. ">gmx_fft_flag</a>.  <a href="#aede487da2908124da5efaec178b12539">More...</a><br/></td></tr>
<tr class="separator:aede487da2908124da5efaec178b12539"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="aa6b68fb966512d287910879d38472bb4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int <a class="el" href="fft_8h.xhtml#aa6b68fb966512d287910879d38472bb4">gmx_fft_flag</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Specifier for FFT flags. </p>
<p>Some FFT libraries (FFTW, in particular) can do timings and other tricks to try and optimize the FFT for the current architecture. However, this can also lead to results that differ between consecutive runs with identical input. To avoid this, the conservative flag will attempt to disable such optimization, but there are no guarantees since we cannot control what the FFT libraries do internally. </p>

</div>
</div>
<a class="anchor" id="ac4aa41b4b80187da5d55a98e5f63a025"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct gmx_fft* <a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Datatype for FFT setup. </p>
<p>The gmx_fft_t type contains all the setup information, e.g. twiddle factors, necessary to perform an FFT. Internally it is mapped to whatever FFT library we are using, or the built-in FFTPACK if no fast external library is available.</p>
<p>Since some of the libraries (e.g. MKL) store work array data in their handles this datatype should only be used for one thread at a time, i.e. they should allocate one instance each when executing in parallel. </p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a class="anchor" id="af2aa0b3a5f3a4339ecb2bd67cb8f8302"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="fft_8h.xhtml#af2aa0b3a5f3a4339ecb2bd67cb8f8302">gmx_fft_direction</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Specifier for FFT direction. </p>
<p>The definition of the 1D forward transform from input x[] to output y[] is </p>
<p class="formulaDsp">
<img class="formulaDsp" alt="\[ y_{k} = \sum_{j=0}^{N-1} x_{j} \exp{-i 2 \pi j k /N} \]" src="form_0.png"/>
</p>
<p>while the corresponding backward transform is</p>
<p class="formulaDsp">
<img class="formulaDsp" alt="\[ y_{k} = \sum_{j=0}^{N-1} x_{j} \exp{i 2 \pi j k /N} \]" src="form_1.png"/>
</p>
<p>A forward-backward transform pair will this result in data scaled by N.</p>
<p>For complex-to-complex transforms you can only use one of GMX_FFT_FORWARD or GMX_FFT_BACKWARD, and for real-complex transforms you can only use GMX_FFT_REAL_TO_COMPLEX or GMX_FFT_COMPLEX_TO_REAL. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><em><a class="anchor" id="af2aa0b3a5f3a4339ecb2bd67cb8f8302a27ed3f7728bda473c6ebe5cb4cd56a3b"></a>GMX_FFT_FORWARD</em>&nbsp;</td><td class="fielddoc">
<p>Forward complex-to-complex transform. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="af2aa0b3a5f3a4339ecb2bd67cb8f8302a6b7d75766670857ec08e947742ec9ab8"></a>GMX_FFT_BACKWARD</em>&nbsp;</td><td class="fielddoc">
<p>Backward complex-to-complex transform. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="af2aa0b3a5f3a4339ecb2bd67cb8f8302afbc1997ce0588ee6c73fb576e2264a89"></a>GMX_FFT_REAL_TO_COMPLEX</em>&nbsp;</td><td class="fielddoc">
<p>Real-to-complex valued FFT. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="af2aa0b3a5f3a4339ecb2bd67cb8f8302ac47b1fb3f7ea2ebabaf3bb3d272400d8"></a>GMX_FFT_COMPLEX_TO_REAL</em>&nbsp;</td><td class="fielddoc">
<p>Complex-to-real valued FFT. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="aecb1a7c6568eb08b82153cade186ad1e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx_fft_1d </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a>&#160;</td>
          <td class="paramname"><em>setup</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="fft_8h.xhtml#af2aa0b3a5f3a4339ecb2bd67cb8f8302">gmx_fft_direction</a>&#160;</td>
          <td class="paramname"><em>dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>in_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>out_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Perform a 1-dimensional complex-to-complex transform. </p>
<p>Performs an instance of a transform previously initiated.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">setup</td><td>Setup returned from <a class="el" href="fft_8h.xhtml#a9236a69dfa724f4bf45d2940713a12ec" title="Setup a 1-dimensional complex-to-complex transform. ">gmx_fft_init_1d()</a> </td></tr>
    <tr><td class="paramname">dir</td><td>Forward or Backward </td></tr>
    <tr><td class="paramname">in_data</td><td>Input grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. </td></tr>
    <tr><td class="paramname">out_data</td><td>Output grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. You can provide the same pointer for in_data and out_data to perform an in-place transform.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0 on success, or an error code.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Data pointers are declared as void, to avoid casting pointers depending on your grid type. </dd></dl>

</div>
</div>
<a class="anchor" id="a8eabaf36072e622f59b361e79ed4e9d3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx_fft_1d_real </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a>&#160;</td>
          <td class="paramname"><em>setup</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="fft_8h.xhtml#af2aa0b3a5f3a4339ecb2bd67cb8f8302">gmx_fft_direction</a>&#160;</td>
          <td class="paramname"><em>dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>in_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>out_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Perform a 1-dimensional real-to-complex transform. </p>
<p>Performs an instance of a transform previously initiated.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">setup</td><td>Setup returned from <a class="el" href="fft_8h.xhtml#a035cb8cb8a57712aa06abe12736f0ed7" title="Setup a 1-dimensional real-to-complex transform. ">gmx_fft_init_1d_real()</a> </td></tr>
    <tr><td class="paramname">dir</td><td>Real-to-complex or complex-to-real </td></tr>
    <tr><td class="paramname">in_data</td><td>Input grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. </td></tr>
    <tr><td class="paramname">out_data</td><td>Output grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. You can provide the same pointer for in_data and out_data to perform an in-place transform.</td></tr>
  </table>
  </dd>
</dl>
<p>If you are doing an in-place transform, the array must be padded up to an even integer length so n/2 complex numbers can fit. Out-of-place arrays should not be padded (although it doesn't matter in 1d).</p>
<dl class="section return"><dt>Returns</dt><dd>0 on success, or an error code.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Data pointers are declared as void, to avoid casting pointers depending on transform direction. </dd></dl>

</div>
</div>
<a class="anchor" id="a1876b62ad9f99b1772d14e7e1d84b1b8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx_fft_2d_real </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a>&#160;</td>
          <td class="paramname"><em>setup</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="fft_8h.xhtml#af2aa0b3a5f3a4339ecb2bd67cb8f8302">gmx_fft_direction</a>&#160;</td>
          <td class="paramname"><em>dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>in_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>out_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Perform a 2-dimensional real-to-complex transform. </p>
<p>Performs an instance of a transform previously initiated.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">setup</td><td>Setup returned from <a class="el" href="fft_8h.xhtml#a035cb8cb8a57712aa06abe12736f0ed7" title="Setup a 1-dimensional real-to-complex transform. ">gmx_fft_init_1d_real()</a> </td></tr>
    <tr><td class="paramname">dir</td><td>Real-to-complex or complex-to-real </td></tr>
    <tr><td class="paramname">in_data</td><td>Input grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. </td></tr>
    <tr><td class="paramname">out_data</td><td>Output grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. You can provide the same pointer for in_data and out_data to perform an in-place transform.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0 on success, or an error code.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>If you are doing an in-place transform, the last dimension of the array MUST be padded up to an even integer length so n/2 complex numbers can fit. Thus, if the real grid e.g. has dimension 5*3, you must allocate it as a 5*4 array, where the last element in the second dimension is padding. The complex data will be written to the same array, but since that dimension is 5*2 it will now fill the entire array. Reverse complex-to-real in-place transformation will produce the same sort of padded array.</dd></dl>
<p>The padding does NOT apply to out-of-place transformation. In that case the input array will simply be 5*3 of real, while the output is 5*2 of complex.</p>
<dl class="section note"><dt>Note</dt><dd>Data pointers are declared as void, to avoid casting pointers depending on transform direction. </dd></dl>

</div>
</div>
<a class="anchor" id="a3e04a1246fe2cc655a8b9c67a49b88f5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx_fft_cleanup </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Cleanup global data of FFT. </p>
<p>Any plans are invalid after this function. Should be called after all plans have been destroyed. </p>

</div>
</div>
<a class="anchor" id="ae761c85582c682d4821c75d9ae891e6a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx_fft_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a>&#160;</td>
          <td class="paramname"><em>setup</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Release an FFT setup structure. </p>
<p>Destroy setup and release all allocated memory.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">setup</td><td>Setup returned from <a class="el" href="fft_8h.xhtml#a9236a69dfa724f4bf45d2940713a12ec" title="Setup a 1-dimensional complex-to-complex transform. ">gmx_fft_init_1d()</a>, or one of the other initializers. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9236a69dfa724f4bf45d2940713a12ec"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx_fft_init_1d </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a> *&#160;</td>
          <td class="paramname"><em>fft</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="fft_8h.xhtml#aa6b68fb966512d287910879d38472bb4">gmx_fft_flag</a>&#160;</td>
          <td class="paramname"><em>flags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Setup a 1-dimensional complex-to-complex transform. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fft</td><td>Pointer to opaque Gromacs FFT datatype </td></tr>
    <tr><td class="paramname">nx</td><td>Length of transform </td></tr>
    <tr><td class="paramname">flags</td><td>FFT options</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status - 0 or a standard error message.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Since some of the libraries (e.g. MKL) store work array data in their handles this datatype should only be used for one thread at a time, i.e. you should create one copy per thread when executing in parallel. </dd></dl>

</div>
</div>
<a class="anchor" id="a035cb8cb8a57712aa06abe12736f0ed7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx_fft_init_1d_real </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a> *&#160;</td>
          <td class="paramname"><em>fft</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="fft_8h.xhtml#aa6b68fb966512d287910879d38472bb4">gmx_fft_flag</a>&#160;</td>
          <td class="paramname"><em>flags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Setup a 1-dimensional real-to-complex transform. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fft</td><td>Pointer to opaque Gromacs FFT datatype </td></tr>
    <tr><td class="paramname">nx</td><td>Length of transform in real space </td></tr>
    <tr><td class="paramname">flags</td><td>FFT options</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status - 0 or a standard error message.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Since some of the libraries (e.g. MKL) store work array data in their handles this datatype should only be used for one thread at a time, i.e. you should create one copy per thread when executing in parallel. </dd></dl>

</div>
</div>
<a class="anchor" id="a170d1fa6c6a5e48769ecd4a00231e835"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx_fft_init_2d_real </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a> *&#160;</td>
          <td class="paramname"><em>fft</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ny</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="fft_8h.xhtml#aa6b68fb966512d287910879d38472bb4">gmx_fft_flag</a>&#160;</td>
          <td class="paramname"><em>flags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Setup a 2-dimensional real-to-complex transform. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fft</td><td>Pointer to opaque Gromacs FFT datatype </td></tr>
    <tr><td class="paramname">nx</td><td>Length of transform in first dimension </td></tr>
    <tr><td class="paramname">ny</td><td>Length of transform in second dimension </td></tr>
    <tr><td class="paramname">flags</td><td>FFT options</td></tr>
  </table>
  </dd>
</dl>
<p>The normal space is assumed to be real, while the values in frequency space are complex.</p>
<dl class="section return"><dt>Returns</dt><dd>status - 0 or a standard error message.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Since some of the libraries (e.g. MKL) store work array data in their handles this datatype should only be used for one thread at a time, i.e. you should create one copy per thread when executing in parallel. </dd></dl>

</div>
</div>
<a class="anchor" id="ac2b9ba002f1ee0f1caf78468d9bef16b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx_fft_init_many_1d </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a> *&#160;</td>
          <td class="paramname"><em>fft</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>howmany</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="fft_8h.xhtml#aa6b68fb966512d287910879d38472bb4">gmx_fft_flag</a>&#160;</td>
          <td class="paramname"><em>flags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Setup multiple 1-dimensional complex-to-complex transform. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fft</td><td>Pointer to opaque Gromacs FFT datatype </td></tr>
    <tr><td class="paramname">nx</td><td>Length of transform </td></tr>
    <tr><td class="paramname">howmany</td><td>Howmany 1D FFT </td></tr>
    <tr><td class="paramname">flags</td><td>FFT options</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status - 0 or a standard error message.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Since some of the libraries (e.g. MKL) store work array data in their handles this datatype should only be used for one thread at a time, i.e. you should create one copy per thread when executing in parallel. </dd></dl>

</div>
</div>
<a class="anchor" id="aa1ca8ea8453baedb6ed6d6b43ca8fa3c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx_fft_init_many_1d_real </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a> *&#160;</td>
          <td class="paramname"><em>fft</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>howmany</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="fft_8h.xhtml#aa6b68fb966512d287910879d38472bb4">gmx_fft_flag</a>&#160;</td>
          <td class="paramname"><em>flags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Setup multiple 1-dimensional real-to-complex transform. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fft</td><td>Pointer to opaque Gromacs FFT datatype </td></tr>
    <tr><td class="paramname">nx</td><td>Length of transform in real space </td></tr>
    <tr><td class="paramname">howmany</td><td>Homany 1D FFTs </td></tr>
    <tr><td class="paramname">flags</td><td>FFT options</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>status - 0 or a standard error message.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Since some of the libraries (e.g. MKL) store work array data in their handles this datatype should only be used for one thread at a time, i.e. you should create one copy per thread when executing in parallel. </dd></dl>

</div>
</div>
<a class="anchor" id="ad97413697d5d8199f1309734a792f62d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx_fft_many_1d </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a>&#160;</td>
          <td class="paramname"><em>setup</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="fft_8h.xhtml#af2aa0b3a5f3a4339ecb2bd67cb8f8302">gmx_fft_direction</a>&#160;</td>
          <td class="paramname"><em>dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>in_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>out_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Perform many 1-dimensional complex-to-complex transforms. </p>
<p>Performs many instances of a transform previously initiated.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">setup</td><td>Setup returned from <a class="el" href="fft_8h.xhtml#a9236a69dfa724f4bf45d2940713a12ec" title="Setup a 1-dimensional complex-to-complex transform. ">gmx_fft_init_1d()</a> </td></tr>
    <tr><td class="paramname">dir</td><td>Forward or Backward </td></tr>
    <tr><td class="paramname">in_data</td><td>Input grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. </td></tr>
    <tr><td class="paramname">out_data</td><td>Output grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. You can provide the same pointer for in_data and out_data to perform an in-place transform.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0 on success, or an error code.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Data pointers are declared as void, to avoid casting pointers depending on your grid type. </dd></dl>

</div>
</div>
<a class="anchor" id="ab5640aa9c7e8bb34c41de7adf92bc726"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx_fft_many_1d_real </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a>&#160;</td>
          <td class="paramname"><em>setup</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">enum <a class="el" href="fft_8h.xhtml#af2aa0b3a5f3a4339ecb2bd67cb8f8302">gmx_fft_direction</a>&#160;</td>
          <td class="paramname"><em>dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>in_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>out_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Perform many 1-dimensional real-to-complex transforms. </p>
<p>Performs many instances of a transform previously initiated.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">setup</td><td>Setup returned from <a class="el" href="fft_8h.xhtml#a035cb8cb8a57712aa06abe12736f0ed7" title="Setup a 1-dimensional real-to-complex transform. ">gmx_fft_init_1d_real()</a> </td></tr>
    <tr><td class="paramname">dir</td><td>Real-to-complex or complex-to-real </td></tr>
    <tr><td class="paramname">in_data</td><td>Input grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. </td></tr>
    <tr><td class="paramname">out_data</td><td>Output grid data. This should be allocated with gmx_new() to make it 16-byte aligned for better performance. You can provide the same pointer for in_data and out_data to perform an in-place transform.</td></tr>
  </table>
  </dd>
</dl>
<p>If you are doing an in-place transform, the array must be padded up to an even integer length so n/2 complex numbers can fit. Out-of-place arrays should not be padded (although it doesn't matter in 1d).</p>
<dl class="section return"><dt>Returns</dt><dd>0 on success, or an error code.</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Data pointers are declared as void, to avoid casting pointers depending on transform direction. </dd></dl>

</div>
</div>
<a class="anchor" id="a05cf1a5a8427f30bbbc35ccbf89128d7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx_fft_transpose_2d </td>
          <td>(</td>
          <td class="paramtype">t_complex *&#160;</td>
          <td class="paramname"><em>in_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">t_complex *&#160;</td>
          <td class="paramname"><em>out_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ny</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Transpose 2d complex matrix, in-place or out-of-place. </p>
<p>This routines works when the matrix is non-square, i.e. nx!=ny too, without allocating an entire matrix of work memory, which is important for huge FFT grids.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">in_data</td><td>Input data, to be transposed </td></tr>
    <tr><td class="paramname">out_data</td><td>Output, transposed data. If this is identical to in_data, an in-place transpose is performed. </td></tr>
    <tr><td class="paramname">nx</td><td>Number of rows before transpose </td></tr>
    <tr><td class="paramname">ny</td><td>Number of columns before transpose</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>GMX_SUCCESS, or an error code from gmx_errno.h </dd></dl>

</div>
</div>
<a class="anchor" id="a77912d06d42876247642873eb98a523d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx_many_fft_destroy </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fft_8h.xhtml#ac4aa41b4b80187da5d55a98e5f63a025">gmx_fft_t</a>&#160;</td>
          <td class="paramname"><em>setup</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Release a many FFT setup structure. </p>
<p>Destroy setup and release all allocated memory.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">setup</td><td>Setup returned from <a class="el" href="fft_8h.xhtml#a9236a69dfa724f4bf45d2940713a12ec" title="Setup a 1-dimensional complex-to-complex transform. ">gmx_fft_init_1d()</a>, or one of the other initializers. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="aede487da2908124da5efaec178b12539"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const int GMX_FFT_FLAG_CONSERVATIVE = (1&lt;&lt;0)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Flag to disable FFT optimizations based on timings, see <a class="el" href="fft_8h.xhtml#aa6b68fb966512d287910879d38472bb4" title="Specifier for FFT flags. ">gmx_fft_flag</a>. </p>

</div>
</div>
<a class="anchor" id="a101e209573d47cd336784b033f471cb7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const int GMX_FFT_FLAG_NONE = 0</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Macro to indicate no special flags for FFT routines. </p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:56:07 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

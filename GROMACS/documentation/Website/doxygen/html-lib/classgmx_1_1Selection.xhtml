<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::Selection Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1Selection.xhtml">Selection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1Selection-members.xhtml">List of all members</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">gmx::Selection Class Reference<div class="ingroups"><a class="el" href="group__group__publicapi.xhtml">Public API</a> &#124; <a class="el" href="group__module__selection.xhtml">Parsing and Evaluation of Analysis Selections (selection)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/selection/selection.h&gt;</code></p>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Provides access to a single selection. </p>
<p>This class provides a public interface for accessing selection information. General information about the selection can be accessed with methods <a class="el" href="classgmx_1_1Selection.xhtml#af382d4296393c1cfed6b1579bee92d8d" title="Returns the name of the selection. ">name()</a>, <a class="el" href="classgmx_1_1Selection.xhtml#a79833e35df365e88d69ae3121a370400" title="Returns the string that was parsed to produce this selection. ">selectionText()</a>, <a class="el" href="classgmx_1_1Selection.xhtml#af35f42d7309abb963ad00e94f50a9907" title="Returns true if the size of the selection (posCount()) is dynamic. ">isDynamic()</a>, and <a class="el" href="classgmx_1_1Selection.xhtml#a8d401706469e646124b954998397ea74" title="Returns the type of positions in the selection. ">type()</a>. The first three can be accessed any time after the selection has been parsed, and <a class="el" href="classgmx_1_1Selection.xhtml#a8d401706469e646124b954998397ea74" title="Returns the type of positions in the selection. ">type()</a> can be accessed after the selection has been compiled.</p>
<p>There are a few methods that can be used to change the behavior of the selection. <a class="el" href="classgmx_1_1Selection.xhtml#aa7007210627e2b003a1ee0d54c02908a" title="Sets whether this selection evaluates velocities for positions. ">setEvaluateVelocities()</a> and <a class="el" href="classgmx_1_1Selection.xhtml#aa7d0959bd76bc01a5269fc01c9f0dab1" title="Sets whether this selection evaluates forces for positions. ">setEvaluateForces()</a> can be called before the selection is compiled to request evaluation of velocities and/or forces in addition to coordinates.</p>
<p>Each selection is made of a set of positions. Each position has associated coordinates, and possibly velocities and forces if they have been requested and are available. It also has a set of atoms associated with it; typically the coordinates are the center-of-mass or center-of-geometry coordinates for that set of atoms. To access the number of positions in the selection, use <a class="el" href="classgmx_1_1Selection.xhtml#a85afa66d42b9e51c3f70a9b3624ab4b8" title="Number of positions in the selection. ">posCount()</a>. To access individual positions, use <a class="el" href="classgmx_1_1Selection.xhtml#af8ac5009e0832a9b55e56960d9b7779c" title="Access a single position. ">position()</a>. See <a class="el" href="classgmx_1_1SelectionPosition.xhtml" title="Provides access to information about a single selected position. ">SelectionPosition</a> for details of how to use individual positions. <a class="el" href="classgmx_1_1Selection.xhtml#aff4b2fbd0cbd04e1368fd80c4f45dddc" title="Sets the ID for the i&#39;th position for use with SelectionPosition::mappedId(). ">setOriginalId()</a> can be used to adjust the return value of <a class="el" href="classgmx_1_1SelectionPosition.xhtml#a0808fabb87609200a8b509ab0b52b79d" title="Returns mapped ID for this position. ">SelectionPosition::mappedId()</a>; see that method for details.</p>
<p>It is also possible to access the list of atoms that make up all the positions directly: <a class="el" href="classgmx_1_1Selection.xhtml#a888c3fa99e2519a350c3cbce51443054" title="Total number of atoms in the selection. ">atomCount()</a> returns the total number of atoms in the selection and <a class="el" href="classgmx_1_1Selection.xhtml#a47874ad86a022b98845ea0b16f83a611" title="Returns atom indices of all atoms in the selection. ">atomIndices()</a> an array of their indices. Similarly, it is possible to access the coordinates and other properties of the positions as continuous arrays through <a class="el" href="classgmx_1_1Selection.xhtml#a668ddcd9343152ae919ff3b06a536c5a" title="Returns coordinates for this selection as a continuous array. ">coordinates()</a>, <a class="el" href="classgmx_1_1Selection.xhtml#a632c9a2f5a3f60b88d4c998903a1e775" title="Returns velocities for this selection as a continuous array. ">velocities()</a>, <a class="el" href="classgmx_1_1Selection.xhtml#a0b5f0205173939946585d0d1afda7111" title="Returns forces for this selection as a continuous array. ">forces()</a>, <a class="el" href="classgmx_1_1Selection.xhtml#a5bdd75643f950ca4e8141e4c66877dc0" title="Returns masses for this selection as a continuous array. ">masses()</a>, <a class="el" href="classgmx_1_1Selection.xhtml#a38f8cd8d43a4aea438eef61f4f504897" title="Returns charges for this selection as a continuous array. ">charges()</a>, <a class="el" href="classgmx_1_1Selection.xhtml#abf1d920ee2d3214b90577ef2f3cf5094" title="Returns reference IDs for this selection as a continuous array. ">refIds()</a>, and <a class="el" href="classgmx_1_1Selection.xhtml#a9cab67838fc58f8c8093e863480d0772" title="Returns mapped IDs for this selection as a continuous array. ">mappedIds()</a>.</p>
<p>Both positions and atoms can be accessed after the selection has been compiled. For dynamic selections, the return values of these methods change after each evaluation to reflect the situation for the current frame. Before any frame has been evaluated, these methods return the maximal set to which the selection can evaluate.</p>
<p>There are two possible modes for how positions for dynamic selections are handled. In the default mode, <a class="el" href="classgmx_1_1Selection.xhtml#a85afa66d42b9e51c3f70a9b3624ab4b8" title="Number of positions in the selection. ">posCount()</a> can change, and for each frame, only the positions that are selected in that frame can be accessed. In a masked mode, <a class="el" href="classgmx_1_1Selection.xhtml#a85afa66d42b9e51c3f70a9b3624ab4b8" title="Number of positions in the selection. ">posCount()</a> remains constant, i.e., the positions are always evaluated for the maximal set, and <a class="el" href="classgmx_1_1SelectionPosition.xhtml#a4cd2dfe1464df1cc335cb99e4265e766" title="Returns whether this position is selected in the current frame. ">SelectionPosition::selected()</a> is used to determine whether a position is selected for a frame. The masked mode can be requested with <a class="el" href="classgmx_1_1SelectionOption.xhtml#a4ec91fb3f672976063ff7d4babbf7516" title="Handle dynamic selections for this option with position masks. ">SelectionOption::dynamicMask()</a>.</p>
<p>The class also provides methods for printing out information: <a class="el" href="classgmx_1_1Selection.xhtml#aab679d690d5b759a6e95f2b43d7e7895" title="Prints out one-line description of the selection. ">printInfo()</a> and <a class="el" href="classgmx_1_1Selection.xhtml#a2e9c1f766eb392261bce4119dd7e1dfc" title="Prints out extended information about the selection for debugging. ">printDebugInfo()</a>. These are mainly for internal use by Gromacs.</p>
<p>This class works like a pointer type: copying and assignment is lightweight, and all copies work interchangeably, accessing the same internal data.</p>
<p>Methods in this class do not throw.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1SelectionPosition.xhtml" title="Provides access to information about a single selected position. ">SelectionPosition</a> </dd></dl>
<dl><dt><b>Examples: </b></dt><dd><a class="el" href="template_8cpp-example.xhtml#_a6">template.cpp</a>.</dd>
</dl></div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a90281107c79a4fecec8480a4436fb375"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a90281107c79a4fecec8480a4436fb375">Selection</a> ()</td></tr>
<tr class="memdesc:a90281107c79a4fecec8480a4436fb375"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a selection wrapper that has no associated selection.  <a href="#a90281107c79a4fecec8480a4436fb375">More...</a><br/></td></tr>
<tr class="separator:a90281107c79a4fecec8480a4436fb375"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cd65e98ffd6227ea5716ff890e43d71"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a1cd65e98ffd6227ea5716ff890e43d71">Selection</a> (internal::SelectionData *sel)</td></tr>
<tr class="memdesc:a1cd65e98ffd6227ea5716ff890e43d71"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new selection object.  <a href="#a1cd65e98ffd6227ea5716ff890e43d71">More...</a><br/></td></tr>
<tr class="separator:a1cd65e98ffd6227ea5716ff890e43d71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59bc4234189055d89f48d3375fce161b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a59bc4234189055d89f48d3375fce161b"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a59bc4234189055d89f48d3375fce161b">isValid</a> () const </td></tr>
<tr class="memdesc:a59bc4234189055d89f48d3375fce161b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the selection object is initialized. <br/></td></tr>
<tr class="separator:a59bc4234189055d89f48d3375fce161b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9b9e55359ac63918a7e84f31f89e807"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa9b9e55359ac63918a7e84f31f89e807"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#aa9b9e55359ac63918a7e84f31f89e807">operator==</a> (const <a class="el" href="classgmx_1_1Selection.xhtml">Selection</a> &amp;other) const </td></tr>
<tr class="memdesc:aa9b9e55359ac63918a7e84f31f89e807"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether two selection objects wrap the same selection. <br/></td></tr>
<tr class="separator:aa9b9e55359ac63918a7e84f31f89e807"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2b4e643008bdbb6794d2c63736e462f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af2b4e643008bdbb6794d2c63736e462f"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#af2b4e643008bdbb6794d2c63736e462f">operator!=</a> (const <a class="el" href="classgmx_1_1Selection.xhtml">Selection</a> &amp;other) const </td></tr>
<tr class="memdesc:af2b4e643008bdbb6794d2c63736e462f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether two selection objects wrap different selections. <br/></td></tr>
<tr class="separator:af2b4e643008bdbb6794d2c63736e462f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af382d4296393c1cfed6b1579bee92d8d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af382d4296393c1cfed6b1579bee92d8d"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#af382d4296393c1cfed6b1579bee92d8d">name</a> () const </td></tr>
<tr class="memdesc:af382d4296393c1cfed6b1579bee92d8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the selection. <br/></td></tr>
<tr class="separator:af382d4296393c1cfed6b1579bee92d8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79833e35df365e88d69ae3121a370400"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a79833e35df365e88d69ae3121a370400"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a79833e35df365e88d69ae3121a370400">selectionText</a> () const </td></tr>
<tr class="memdesc:a79833e35df365e88d69ae3121a370400"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the string that was parsed to produce this selection. <br/></td></tr>
<tr class="separator:a79833e35df365e88d69ae3121a370400"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af35f42d7309abb963ad00e94f50a9907"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af35f42d7309abb963ad00e94f50a9907"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#af35f42d7309abb963ad00e94f50a9907">isDynamic</a> () const </td></tr>
<tr class="memdesc:af35f42d7309abb963ad00e94f50a9907"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the size of the selection (<a class="el" href="classgmx_1_1Selection.xhtml#a85afa66d42b9e51c3f70a9b3624ab4b8" title="Number of positions in the selection. ">posCount()</a>) is dynamic. <br/></td></tr>
<tr class="separator:af35f42d7309abb963ad00e94f50a9907"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d401706469e646124b954998397ea74"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8d401706469e646124b954998397ea74"></a>
<a class="el" href="indexutil_8h.xhtml#ad7330829cb93245b9de7ed268cf6ba67">e_index_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a8d401706469e646124b954998397ea74">type</a> () const </td></tr>
<tr class="memdesc:a8d401706469e646124b954998397ea74"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of positions in the selection. <br/></td></tr>
<tr class="separator:a8d401706469e646124b954998397ea74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79c4611aaa3ca89d4d24782a4f472c39"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a79c4611aaa3ca89d4d24782a4f472c39"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a79c4611aaa3ca89d4d24782a4f472c39">hasOnlyAtoms</a> () const </td></tr>
<tr class="memdesc:a79c4611aaa3ca89d4d24782a4f472c39"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the selection only contains positions with a single atom each. <br/></td></tr>
<tr class="separator:a79c4611aaa3ca89d4d24782a4f472c39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2190044626506e4315cc878cd3e0ddd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa2190044626506e4315cc878cd3e0ddd"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#aa2190044626506e4315cc878cd3e0ddd">hasSortedAtomIndices</a> () const </td></tr>
<tr class="memdesc:aa2190044626506e4315cc878cd3e0ddd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns <code>true</code> if the atom indices in the selection are in ascending order. <br/></td></tr>
<tr class="separator:aa2190044626506e4315cc878cd3e0ddd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a888c3fa99e2519a350c3cbce51443054"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a888c3fa99e2519a350c3cbce51443054"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a888c3fa99e2519a350c3cbce51443054">atomCount</a> () const </td></tr>
<tr class="memdesc:a888c3fa99e2519a350c3cbce51443054"><td class="mdescLeft">&#160;</td><td class="mdescRight">Total number of atoms in the selection. <br/></td></tr>
<tr class="separator:a888c3fa99e2519a350c3cbce51443054"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47874ad86a022b98845ea0b16f83a611"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a47874ad86a022b98845ea0b16f83a611"></a>
<a class="el" href="classgmx_1_1ArrayRef.xhtml">ArrayRef</a>&lt; const int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a47874ad86a022b98845ea0b16f83a611">atomIndices</a> () const </td></tr>
<tr class="memdesc:a47874ad86a022b98845ea0b16f83a611"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns atom indices of all atoms in the selection. <br/></td></tr>
<tr class="separator:a47874ad86a022b98845ea0b16f83a611"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85afa66d42b9e51c3f70a9b3624ab4b8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a85afa66d42b9e51c3f70a9b3624ab4b8"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a85afa66d42b9e51c3f70a9b3624ab4b8">posCount</a> () const </td></tr>
<tr class="memdesc:a85afa66d42b9e51c3f70a9b3624ab4b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of positions in the selection. <br/></td></tr>
<tr class="separator:a85afa66d42b9e51c3f70a9b3624ab4b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8ac5009e0832a9b55e56960d9b7779c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af8ac5009e0832a9b55e56960d9b7779c"></a>
<a class="el" href="classgmx_1_1SelectionPosition.xhtml">SelectionPosition</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#af8ac5009e0832a9b55e56960d9b7779c">position</a> (int i) const </td></tr>
<tr class="memdesc:af8ac5009e0832a9b55e56960d9b7779c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access a single position. <br/></td></tr>
<tr class="separator:af8ac5009e0832a9b55e56960d9b7779c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a668ddcd9343152ae919ff3b06a536c5a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a668ddcd9343152ae919ff3b06a536c5a"></a>
<a class="el" href="classgmx_1_1ArrayRef.xhtml">ArrayRef</a>&lt; const rvec &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a668ddcd9343152ae919ff3b06a536c5a">coordinates</a> () const </td></tr>
<tr class="memdesc:a668ddcd9343152ae919ff3b06a536c5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns coordinates for this selection as a continuous array. <br/></td></tr>
<tr class="separator:a668ddcd9343152ae919ff3b06a536c5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01384b1af7b3786dd320765e423d8027"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a01384b1af7b3786dd320765e423d8027"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a01384b1af7b3786dd320765e423d8027">hasVelocities</a> () const </td></tr>
<tr class="memdesc:a01384b1af7b3786dd320765e423d8027"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether velocities are available for this selection. <br/></td></tr>
<tr class="separator:a01384b1af7b3786dd320765e423d8027"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a632c9a2f5a3f60b88d4c998903a1e775"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1ArrayRef.xhtml">ArrayRef</a>&lt; const rvec &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a632c9a2f5a3f60b88d4c998903a1e775">velocities</a> () const </td></tr>
<tr class="memdesc:a632c9a2f5a3f60b88d4c998903a1e775"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns velocities for this selection as a continuous array.  <a href="#a632c9a2f5a3f60b88d4c998903a1e775">More...</a><br/></td></tr>
<tr class="separator:a632c9a2f5a3f60b88d4c998903a1e775"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e32d8ce8e7daa158319a4220589b771"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2e32d8ce8e7daa158319a4220589b771"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a2e32d8ce8e7daa158319a4220589b771">hasForces</a> () const </td></tr>
<tr class="memdesc:a2e32d8ce8e7daa158319a4220589b771"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether forces are available for this selection. <br/></td></tr>
<tr class="separator:a2e32d8ce8e7daa158319a4220589b771"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b5f0205173939946585d0d1afda7111"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1ArrayRef.xhtml">ArrayRef</a>&lt; const rvec &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a0b5f0205173939946585d0d1afda7111">forces</a> () const </td></tr>
<tr class="memdesc:a0b5f0205173939946585d0d1afda7111"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns forces for this selection as a continuous array.  <a href="#a0b5f0205173939946585d0d1afda7111">More...</a><br/></td></tr>
<tr class="separator:a0b5f0205173939946585d0d1afda7111"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bdd75643f950ca4e8141e4c66877dc0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5bdd75643f950ca4e8141e4c66877dc0"></a>
<a class="el" href="classgmx_1_1ArrayRef.xhtml">ArrayRef</a>&lt; const <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a5bdd75643f950ca4e8141e4c66877dc0">masses</a> () const </td></tr>
<tr class="memdesc:a5bdd75643f950ca4e8141e4c66877dc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns masses for this selection as a continuous array. <br/></td></tr>
<tr class="separator:a5bdd75643f950ca4e8141e4c66877dc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38f8cd8d43a4aea438eef61f4f504897"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a38f8cd8d43a4aea438eef61f4f504897"></a>
<a class="el" href="classgmx_1_1ArrayRef.xhtml">ArrayRef</a>&lt; const <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a38f8cd8d43a4aea438eef61f4f504897">charges</a> () const </td></tr>
<tr class="memdesc:a38f8cd8d43a4aea438eef61f4f504897"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns charges for this selection as a continuous array. <br/></td></tr>
<tr class="separator:a38f8cd8d43a4aea438eef61f4f504897"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf1d920ee2d3214b90577ef2f3cf5094"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1ArrayRef.xhtml">ArrayRef</a>&lt; const int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#abf1d920ee2d3214b90577ef2f3cf5094">refIds</a> () const </td></tr>
<tr class="memdesc:abf1d920ee2d3214b90577ef2f3cf5094"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns reference IDs for this selection as a continuous array.  <a href="#abf1d920ee2d3214b90577ef2f3cf5094">More...</a><br/></td></tr>
<tr class="separator:abf1d920ee2d3214b90577ef2f3cf5094"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cab67838fc58f8c8093e863480d0772"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1ArrayRef.xhtml">ArrayRef</a>&lt; const int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a9cab67838fc58f8c8093e863480d0772">mappedIds</a> () const </td></tr>
<tr class="memdesc:a9cab67838fc58f8c8093e863480d0772"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns mapped IDs for this selection as a continuous array.  <a href="#a9cab67838fc58f8c8093e863480d0772">More...</a><br/></td></tr>
<tr class="separator:a9cab67838fc58f8c8093e863480d0772"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe1aa45b1e722149a81d3f277cbc264c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afe1aa45b1e722149a81d3f277cbc264c"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#afe1aa45b1e722149a81d3f277cbc264c">isCoveredFractionDynamic</a> () const </td></tr>
<tr class="memdesc:afe1aa45b1e722149a81d3f277cbc264c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the covered fraction can change between frames. <br/></td></tr>
<tr class="separator:afe1aa45b1e722149a81d3f277cbc264c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3695c62320a833c66a550aaca3dfceb2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3695c62320a833c66a550aaca3dfceb2"></a>
<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a3695c62320a833c66a550aaca3dfceb2">coveredFraction</a> () const </td></tr>
<tr class="memdesc:a3695c62320a833c66a550aaca3dfceb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the covered fraction for the current frame. <br/></td></tr>
<tr class="separator:a3695c62320a833c66a550aaca3dfceb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f8199c8e578c155d4fc3ae6b64f64ac"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a7f8199c8e578c155d4fc3ae6b64f64ac">operator AnalysisNeighborhoodPositions</a> () const </td></tr>
<tr class="memdesc:a7f8199c8e578c155d4fc3ae6b64f64ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows passing a selection directly to neighborhood searching.  <a href="#a7f8199c8e578c155d4fc3ae6b64f64ac">More...</a><br/></td></tr>
<tr class="separator:a7f8199c8e578c155d4fc3ae6b64f64ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b68d88d23646f541f552c21077506ab"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a1b68d88d23646f541f552c21077506ab">initCoveredFraction</a> (<a class="el" href="group__group__publicapi.xhtml#ga3586467b9eaf1c08160c5fef7377e622">e_coverfrac_t</a> <a class="el" href="classgmx_1_1Selection.xhtml#a8d401706469e646124b954998397ea74">type</a>)</td></tr>
<tr class="memdesc:a1b68d88d23646f541f552c21077506ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes information about covered fractions.  <a href="#a1b68d88d23646f541f552c21077506ab">More...</a><br/></td></tr>
<tr class="separator:a1b68d88d23646f541f552c21077506ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7007210627e2b003a1ee0d54c02908a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#aa7007210627e2b003a1ee0d54c02908a">setEvaluateVelocities</a> (bool bEnabled)</td></tr>
<tr class="memdesc:aa7007210627e2b003a1ee0d54c02908a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets whether this selection evaluates velocities for positions.  <a href="#aa7007210627e2b003a1ee0d54c02908a">More...</a><br/></td></tr>
<tr class="separator:aa7007210627e2b003a1ee0d54c02908a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7d0959bd76bc01a5269fc01c9f0dab1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#aa7d0959bd76bc01a5269fc01c9f0dab1">setEvaluateForces</a> (bool bEnabled)</td></tr>
<tr class="memdesc:aa7d0959bd76bc01a5269fc01c9f0dab1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets whether this selection evaluates forces for positions.  <a href="#aa7d0959bd76bc01a5269fc01c9f0dab1">More...</a><br/></td></tr>
<tr class="separator:aa7d0959bd76bc01a5269fc01c9f0dab1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff4b2fbd0cbd04e1368fd80c4f45dddc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#aff4b2fbd0cbd04e1368fd80c4f45dddc">setOriginalId</a> (int i, int id)</td></tr>
<tr class="memdesc:aff4b2fbd0cbd04e1368fd80c4f45dddc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the ID for the <code>i'th</code> position for use with <a class="el" href="classgmx_1_1SelectionPosition.xhtml#a0808fabb87609200a8b509ab0b52b79d" title="Returns mapped ID for this position. ">SelectionPosition::mappedId()</a>.  <a href="#aff4b2fbd0cbd04e1368fd80c4f45dddc">More...</a><br/></td></tr>
<tr class="separator:aff4b2fbd0cbd04e1368fd80c4f45dddc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f0f58e357142bf866339860c4735179"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a1f0f58e357142bf866339860c4735179">initOriginalIdsToGroup</a> (const gmx_mtop_t *top, <a class="el" href="indexutil_8h.xhtml#ad7330829cb93245b9de7ed268cf6ba67">e_index_t</a> <a class="el" href="classgmx_1_1Selection.xhtml#a8d401706469e646124b954998397ea74">type</a>)</td></tr>
<tr class="memdesc:a1f0f58e357142bf866339860c4735179"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inits the IDs for use with <a class="el" href="classgmx_1_1SelectionPosition.xhtml#a0808fabb87609200a8b509ab0b52b79d" title="Returns mapped ID for this position. ">SelectionPosition::mappedId()</a> for grouping.  <a href="#a1f0f58e357142bf866339860c4735179">More...</a><br/></td></tr>
<tr class="separator:a1f0f58e357142bf866339860c4735179"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab679d690d5b759a6e95f2b43d7e7895"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#aab679d690d5b759a6e95f2b43d7e7895">printInfo</a> (FILE *fp) const </td></tr>
<tr class="memdesc:aab679d690d5b759a6e95f2b43d7e7895"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints out one-line description of the selection.  <a href="#aab679d690d5b759a6e95f2b43d7e7895">More...</a><br/></td></tr>
<tr class="separator:aab679d690d5b759a6e95f2b43d7e7895"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e9c1f766eb392261bce4119dd7e1dfc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a2e9c1f766eb392261bce4119dd7e1dfc">printDebugInfo</a> (FILE *fp, int nmaxind) const </td></tr>
<tr class="memdesc:a2e9c1f766eb392261bce4119dd7e1dfc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints out extended information about the selection for debugging.  <a href="#a2e9c1f766eb392261bce4119dd7e1dfc">More...</a><br/></td></tr>
<tr class="separator:a2e9c1f766eb392261bce4119dd7e1dfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a3dd781afa3dc217f65462ce050a61552"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3dd781afa3dc217f65462ce050a61552"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Selection.xhtml#a3dd781afa3dc217f65462ce050a61552">SelectionOptionStorage</a></td></tr>
<tr class="memdesc:a3dd781afa3dc217f65462ce050a61552"><td class="mdescLeft">&#160;</td><td class="mdescRight">Needed to access the data to adjust flags. <br/></td></tr>
<tr class="separator:a3dd781afa3dc217f65462ce050a61552"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a90281107c79a4fecec8480a4436fb375"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">gmx::Selection::Selection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a selection wrapper that has no associated selection. </p>
<p>Any attempt to call methods in the object before a selection is assigned results in undefined behavior. <a class="el" href="classgmx_1_1Selection.xhtml#a59bc4234189055d89f48d3375fce161b" title="Returns whether the selection object is initialized. ">isValid()</a> returns <code>false</code> for the selection until it is initialized. </p>

</div>
</div>
<a class="anchor" id="a1cd65e98ffd6227ea5716ff890e43d71"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">gmx::Selection::Selection </td>
          <td>(</td>
          <td class="paramtype">internal::SelectionData *&#160;</td>
          <td class="paramname"><em>sel</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new selection object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sel</td><td><a class="el" href="classgmx_1_1Selection.xhtml" title="Provides access to a single selection. ">Selection</a> data to wrap.</td></tr>
  </table>
  </dd>
</dl>
<p>Only for internal use by the selection module. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a0b5f0205173939946585d0d1afda7111"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1ArrayRef.xhtml">ArrayRef</a>&lt;const rvec&gt; gmx::Selection::forces </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns forces for this selection as a continuous array. </p>
<p>Must not be called if <a class="el" href="classgmx_1_1Selection.xhtml#a2e32d8ce8e7daa158319a4220589b771" title="Returns whether forces are available for this selection. ">hasForces()</a> returns false. </p>

</div>
</div>
<a class="anchor" id="a1b68d88d23646f541f552c21077506ab"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::Selection::initCoveredFraction </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__group__publicapi.xhtml#ga3586467b9eaf1c08160c5fef7377e622">e_coverfrac_t</a>&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializes information about covered fractions. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>Type of covered fraction required. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the covered fraction can be calculated for the selection. </dd></dl>

</div>
</div>
<a class="anchor" id="a1f0f58e357142bf866339860c4735179"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::Selection::initOriginalIdsToGroup </td>
          <td>(</td>
          <td class="paramtype">const gmx_mtop_t *&#160;</td>
          <td class="paramname"><em>top</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="indexutil_8h.xhtml#ad7330829cb93245b9de7ed268cf6ba67">e_index_t</a>&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Inits the IDs for use with <a class="el" href="classgmx_1_1SelectionPosition.xhtml#a0808fabb87609200a8b509ab0b52b79d" title="Returns mapped ID for this position. ">SelectionPosition::mappedId()</a> for grouping. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">top</td><td>Topology information (can be NULL if not required for <code>type</code>). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>Type of groups to generate. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Number of groups that were present in the selection. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InconsistentInputError.xhtml" title="Exception class for situations where user input is inconsistent. ">InconsistentInputError</a></td><td>if the selection positions cannot be assigned to groups of the given type.</td></tr>
  </table>
  </dd>
</dl>
<p>If <code>type == INDEX_ATOM</code>, the IDs are initialized to 0, 1, 2, ..., and the return value is the number of positions. If <code>type == INDEX_ALL</code>, all the IDs are initialized to 0, and the return value is one. If <code>type == INDEX_RES</code> or <code>type == INDEX_MOL</code>, the first position will get ID 0, and all following positions that belong to the same residue/molecule will get the same ID. The first position that belongs to a different residue/molecule will get ID 1, and so on. If some position contains atoms from multiple residues/molecules, i.e., the mapping is ambiguous, an exception is thrown. The return value is the number of residues/molecules that are present in the selection positions.</p>
<p>This method is useful if the calling code needs to group the selection, e.g., for computing aggregate properties for each residue or molecule. It can then use this method to initialize the appropriate grouping, use the return value to allocate a sufficiently sized buffer to store the aggregated values, and then use <a class="el" href="classgmx_1_1SelectionPosition.xhtml#a0808fabb87609200a8b509ab0b52b79d" title="Returns mapped ID for this position. ">SelectionPosition::mappedId()</a> to identify the location where to aggregate to.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1Selection.xhtml#aff4b2fbd0cbd04e1368fd80c4f45dddc" title="Sets the ID for the i&#39;th position for use with SelectionPosition::mappedId(). ">setOriginalId()</a> </dd>
<dd>
<a class="el" href="classgmx_1_1SelectionPosition.xhtml#a0808fabb87609200a8b509ab0b52b79d" title="Returns mapped ID for this position. ">SelectionPosition::mappedId()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a9cab67838fc58f8c8093e863480d0772"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1ArrayRef.xhtml">ArrayRef</a>&lt;const int&gt; gmx::Selection::mappedIds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns mapped IDs for this selection as a continuous array. </p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1SelectionPosition.xhtml#a0808fabb87609200a8b509ab0b52b79d" title="Returns mapped ID for this position. ">SelectionPosition::mappedId()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a7f8199c8e578c155d4fc3ae6b64f64ac"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">gmx::Selection::operator <a class="el" href="classgmx_1_1AnalysisNeighborhoodPositions.xhtml">AnalysisNeighborhoodPositions</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allows passing a selection directly to neighborhood searching. </p>
<p>When initialized this way, <a class="el" href="classgmx_1_1AnalysisNeighborhoodPair.xhtml" title="Value type to represent a pair of positions found in neighborhood searching. ">AnalysisNeighborhoodPair</a> objects return indices that can be used to index the selection positions with <a class="el" href="classgmx_1_1Selection.xhtml#af8ac5009e0832a9b55e56960d9b7779c" title="Access a single position. ">position()</a>.</p>
<p>Works exactly like if <a class="el" href="classgmx_1_1AnalysisNeighborhoodPositions.xhtml" title="Input positions for neighborhood searching. ">AnalysisNeighborhoodPositions</a> had a constructor taking a <a class="el" href="classgmx_1_1Selection.xhtml" title="Provides access to a single selection. ">Selection</a> object as a parameter. See <a class="el" href="classgmx_1_1AnalysisNeighborhoodPositions.xhtml" title="Input positions for neighborhood searching. ">AnalysisNeighborhoodPositions</a> for rationale and additional discussion. </p>

</div>
</div>
<a class="anchor" id="a2e9c1f766eb392261bce4119dd7e1dfc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::Selection::printDebugInfo </td>
          <td>(</td>
          <td class="paramtype">FILE *&#160;</td>
          <td class="paramname"><em>fp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nmaxind</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prints out extended information about the selection for debugging. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fp</td><td>Where to print the information. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nmaxind</td><td>Maximum number of values to print in lists (-1 = print all). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aab679d690d5b759a6e95f2b43d7e7895"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::Selection::printInfo </td>
          <td>(</td>
          <td class="paramtype">FILE *&#160;</td>
          <td class="paramname"><em>fp</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prints out one-line description of the selection. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fp</td><td>Where to print the information.</td></tr>
  </table>
  </dd>
</dl>
<p>The output contains the name of the selection, the number of atoms and the number of positions, and indication of whether the selection is dynamic. </p>

</div>
</div>
<a class="anchor" id="abf1d920ee2d3214b90577ef2f3cf5094"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1ArrayRef.xhtml">ArrayRef</a>&lt;const int&gt; gmx::Selection::refIds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns reference IDs for this selection as a continuous array. </p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1SelectionPosition.xhtml#ab79a65003b4ee968f404bd08d3568e49" title="Returns reference ID for this position. ">SelectionPosition::refId()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="aa7d0959bd76bc01a5269fc01c9f0dab1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::Selection::setEvaluateForces </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bEnabled</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets whether this selection evaluates forces for positions. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">bEnabled</td><td>If true, forces are evaluated.</td></tr>
  </table>
  </dd>
</dl>
<p>If you request the evaluation, but then evaluate the selection for a frame that does not contain force information, results are undefined.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="aa7007210627e2b003a1ee0d54c02908a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::Selection::setEvaluateVelocities </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bEnabled</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets whether this selection evaluates velocities for positions. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">bEnabled</td><td>If true, velocities are evaluated.</td></tr>
  </table>
  </dd>
</dl>
<p>If you request the evaluation, but then evaluate the selection for a frame that does not contain velocity information, results are undefined.</p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000065">Todo:</a></b></dt><dd>Implement it such that in the above case, <a class="el" href="classgmx_1_1Selection.xhtml#a01384b1af7b3786dd320765e423d8027" title="Returns whether velocities are available for this selection. ">hasVelocities()</a> will return false for such frames.</dd></dl>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="aff4b2fbd0cbd04e1368fd80c4f45dddc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::Selection::setOriginalId </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the ID for the <code>i'th</code> position for use with <a class="el" href="classgmx_1_1SelectionPosition.xhtml#a0808fabb87609200a8b509ab0b52b79d" title="Returns mapped ID for this position. ">SelectionPosition::mappedId()</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">i</td><td>Zero-based index </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>Identifier to set.</td></tr>
  </table>
  </dd>
</dl>
<p>This method is not part of <a class="el" href="classgmx_1_1SelectionPosition.xhtml" title="Provides access to information about a single selected position. ">SelectionPosition</a> because that interface only provides access to const data by design.</p>
<p>This method can only be called after compilation, before the selection has been evaluated for any frame.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1SelectionPosition.xhtml#a0808fabb87609200a8b509ab0b52b79d" title="Returns mapped ID for this position. ">SelectionPosition::mappedId()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a632c9a2f5a3f60b88d4c998903a1e775"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1ArrayRef.xhtml">ArrayRef</a>&lt;const rvec&gt; gmx::Selection::velocities </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns velocities for this selection as a continuous array. </p>
<p>Must not be called if <a class="el" href="classgmx_1_1Selection.xhtml#a01384b1af7b3786dd320765e423d8027" title="Returns whether velocities are available for this selection. ">hasVelocities()</a> returns false. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/selection/<a class="el" href="selection_2selection_8h.xhtml">selection.h</a></li>
<li>src/gromacs/selection/selection.cpp</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:56:16 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/mdlib/nbnxn_gpu_data_mgmt.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_8a21c46af9718d1f610eb513153099d7.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a46192700e9e8ed44c648f0a55ee9a53.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_5c78749fb0acf3df2e9bdab18856bfa3.xhtml">mdlib</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">nbnxn_gpu_data_mgmt.h File Reference<div class="ingroups"><a class="el" href="group__group__libraryapi.xhtml">Library API</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;gromacs/gpu_utils/gpu_macros.h&quot;</code><br/>
<code>#include &quot;gromacs/mdlib/nbnxn_gpu_types.h&quot;</code><br/>
<code>#include &quot;gromacs/mdtypes/interaction_const.h&quot;</code><br/>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Declare interface for GPU data transfer for NBNXN module. </p>
<dl class="section author"><dt>Author</dt><dd>Mark Abraham <a href="#" onclick="location.href='mai'+'lto:'+'mar'+'k.'+'j.a'+'br'+'aha'+'m@'+'gma'+'il'+'.co'+'m'; return false;">mark.<span style="display: none;">.nosp@m.</span>j.ab<span style="display: none;">.nosp@m.</span>raham<span style="display: none;">.nosp@m.</span>@gma<span style="display: none;">.nosp@m.</span>il.co<span style="display: none;">.nosp@m.</span>m</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a92806924d9b5b2aaae58911947815dd1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#a92806924d9b5b2aaae58911947815dd1">nbnxn_gpu_init</a> (gmx_nbnxn_gpu_t **p_nb, const gmx_device_info_t *deviceInfo, const interaction_const_t *ic, const NbnxnListParameters *listParams, const nbnxn_atomdata_t *nbat, int rank, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bLocalAndNonlocal)</td></tr>
<tr class="memdesc:a92806924d9b5b2aaae58911947815dd1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the data structures related to GPU nonbonded calculations.  <a href="#a92806924d9b5b2aaae58911947815dd1">More...</a><br/></td></tr>
<tr class="separator:a92806924d9b5b2aaae58911947815dd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81c75d1a846c6f0e25e4416eb2c073fe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#a81c75d1a846c6f0e25e4416eb2c073fe">nbnxn_gpu_init_pairlist</a> (gmx_nbnxn_gpu_t *nb, const struct nbnxn_pairlist_t *h_nblist, int iloc)</td></tr>
<tr class="memdesc:a81c75d1a846c6f0e25e4416eb2c073fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes pair-list data for GPU, called at every pair search step.  <a href="#a81c75d1a846c6f0e25e4416eb2c073fe">More...</a><br/></td></tr>
<tr class="separator:a81c75d1a846c6f0e25e4416eb2c073fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9bb9d058b17d32929dfaa1b2e50f46b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#ab9bb9d058b17d32929dfaa1b2e50f46b">nbnxn_gpu_init_atomdata</a> (gmx_nbnxn_gpu_t *nb, const nbnxn_atomdata_t *nbat)</td></tr>
<tr class="memdesc:ab9bb9d058b17d32929dfaa1b2e50f46b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes atom-data on the GPU, called at every pair search step.  <a href="#ab9bb9d058b17d32929dfaa1b2e50f46b">More...</a><br/></td></tr>
<tr class="separator:ab9bb9d058b17d32929dfaa1b2e50f46b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8789a600923bb29ffd13813e258b0cf8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8789a600923bb29ffd13813e258b0cf8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#a8789a600923bb29ffd13813e258b0cf8">nbnxn_gpu_pme_loadbal_update_param</a> (const struct <a class="el" href="structnonbonded__verlet__t.xhtml">nonbonded_verlet_t</a> *nbv, const interaction_const_t *ic, const NbnxnListParameters *listParams)</td></tr>
<tr class="memdesc:a8789a600923bb29ffd13813e258b0cf8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Re-generate the GPU Ewald force table, resets rlist, and update the electrostatic type switching to twin cut-off (or back) if needed. <br/></td></tr>
<tr class="separator:a8789a600923bb29ffd13813e258b0cf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12e0d41a0da2559f44b707944c64babd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#a12e0d41a0da2559f44b707944c64babd">nbnxn_gpu_upload_shiftvec</a> (gmx_nbnxn_gpu_t *nb, const nbnxn_atomdata_t *nbatom)</td></tr>
<tr class="memdesc:a12e0d41a0da2559f44b707944c64babd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Uploads shift vector to the GPU if the box is dynamic (otherwise just returns).  <a href="#a12e0d41a0da2559f44b707944c64babd">More...</a><br/></td></tr>
<tr class="separator:a12e0d41a0da2559f44b707944c64babd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cd0ed7f1ebf1cce907b3a07e8bdfe91"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#a4cd0ed7f1ebf1cce907b3a07e8bdfe91">nbnxn_gpu_clear_outputs</a> (gmx_nbnxn_gpu_t *nb, int flags)</td></tr>
<tr class="memdesc:a4cd0ed7f1ebf1cce907b3a07e8bdfe91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears GPU outputs: nonbonded force, shift force and energy.  <a href="#a4cd0ed7f1ebf1cce907b3a07e8bdfe91">More...</a><br/></td></tr>
<tr class="separator:a4cd0ed7f1ebf1cce907b3a07e8bdfe91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90bfc2d06a0ba2ab89aff68252de986c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#a90bfc2d06a0ba2ab89aff68252de986c">nbnxn_gpu_free</a> (gmx_nbnxn_gpu_t *nb)</td></tr>
<tr class="memdesc:a90bfc2d06a0ba2ab89aff68252de986c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Frees all GPU resources used for the nonbonded calculations.  <a href="#a90bfc2d06a0ba2ab89aff68252de986c">More...</a><br/></td></tr>
<tr class="separator:a90bfc2d06a0ba2ab89aff68252de986c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea5ea2d6be535e719cfbc25db2480ce5"><td class="memItemLeft" align="right" valign="top">struct gmx_wallclock_gpu_nbnxn_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#aea5ea2d6be535e719cfbc25db2480ce5">nbnxn_gpu_get_timings</a> (gmx_nbnxn_gpu_t *nb)</td></tr>
<tr class="memdesc:aea5ea2d6be535e719cfbc25db2480ce5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the GPU timings structure or NULL if GPU is not used or timing is off.  <a href="#aea5ea2d6be535e719cfbc25db2480ce5">More...</a><br/></td></tr>
<tr class="separator:aea5ea2d6be535e719cfbc25db2480ce5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8863948175e50b345e75ccad0142064e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#a8863948175e50b345e75ccad0142064e">nbnxn_gpu_reset_timings</a> (struct <a class="el" href="structnonbonded__verlet__t.xhtml">nonbonded_verlet_t</a> *nbv)</td></tr>
<tr class="memdesc:a8863948175e50b345e75ccad0142064e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets nonbonded GPU timings.  <a href="#a8863948175e50b345e75ccad0142064e">More...</a><br/></td></tr>
<tr class="separator:a8863948175e50b345e75ccad0142064e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a222808caa76f9a2513e187523826a0cc"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#a222808caa76f9a2513e187523826a0cc">nbnxn_gpu_min_ci_balanced</a> (gmx_nbnxn_gpu_t *nb)</td></tr>
<tr class="memdesc:a222808caa76f9a2513e187523826a0cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the minimum size of proximity lists to improve SM load balance with GPU non-bonded kernels.  <a href="#a222808caa76f9a2513e187523826a0cc">More...</a><br/></td></tr>
<tr class="separator:a222808caa76f9a2513e187523826a0cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6b6e530a4c5b7860a98e98a7849cbd1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nbnxn__gpu__data__mgmt_8h.xhtml#ad6b6e530a4c5b7860a98e98a7849cbd1">nbnxn_gpu_is_kernel_ewald_analytical</a> (const gmx_nbnxn_gpu_t *nb)</td></tr>
<tr class="memdesc:ad6b6e530a4c5b7860a98e98a7849cbd1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns if analytical Ewald GPU kernels are used.  <a href="#ad6b6e530a4c5b7860a98e98a7849cbd1">More...</a><br/></td></tr>
<tr class="separator:ad6b6e530a4c5b7860a98e98a7849cbd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a4cd0ed7f1ebf1cce907b3a07e8bdfe91"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void nbnxn_gpu_clear_outputs </td>
          <td>(</td>
          <td class="paramtype">gmx_nbnxn_ocl_t *&#160;</td>
          <td class="paramname"><em>nb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>flags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clears GPU outputs: nonbonded force, shift force and energy. </p>
<p>Clears GPU outputs: nonbonded force, shift force and energy. </p>

</div>
</div>
<a class="anchor" id="a90bfc2d06a0ba2ab89aff68252de986c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void nbnxn_gpu_free </td>
          <td>(</td>
          <td class="paramtype">gmx_nbnxn_ocl_t *&#160;</td>
          <td class="paramname"><em>nb</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Frees all GPU resources used for the nonbonded calculations. </p>
<p>Frees all GPU resources used for the nonbonded calculations. </p>

</div>
</div>
<a class="anchor" id="aea5ea2d6be535e719cfbc25db2480ce5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct gmx_wallclock_gpu_nbnxn_t* nbnxn_gpu_get_timings </td>
          <td>(</td>
          <td class="paramtype">gmx_nbnxn_ocl_t *&#160;</td>
          <td class="paramname"><em>nb</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the GPU timings structure or NULL if GPU is not used or timing is off. </p>
<p>Returns the GPU timings structure or NULL if GPU is not used or timing is off. </p>

</div>
</div>
<a class="anchor" id="a92806924d9b5b2aaae58911947815dd1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void nbnxn_gpu_init </td>
          <td>(</td>
          <td class="paramtype">gmx_nbnxn_ocl_t **&#160;</td>
          <td class="paramname"><em>p_nb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const gmx_device_info_t *&#160;</td>
          <td class="paramname"><em>deviceInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const interaction_const_t *&#160;</td>
          <td class="paramname"><em>ic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const NbnxnListParameters *&#160;</td>
          <td class="paramname"><em>listParams</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const nbnxn_atomdata_t *&#160;</td>
          <td class="paramname"><em>nbat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>rank</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bLocalAndNonlocal</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the data structures related to GPU nonbonded calculations. </p>
<p>Initializes the data structures related to GPU nonbonded calculations. </p>

</div>
</div>
<a class="anchor" id="ab9bb9d058b17d32929dfaa1b2e50f46b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void nbnxn_gpu_init_atomdata </td>
          <td>(</td>
          <td class="paramtype">gmx_nbnxn_ocl_t *&#160;</td>
          <td class="paramname"><em>nb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const nbnxn_atomdata_t *&#160;</td>
          <td class="paramname"><em>nbat</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes atom-data on the GPU, called at every pair search step. </p>
<p>Initializes atom-data on the GPU, called at every pair search step. </p>

</div>
</div>
<a class="anchor" id="a81c75d1a846c6f0e25e4416eb2c073fe"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void nbnxn_gpu_init_pairlist </td>
          <td>(</td>
          <td class="paramtype">gmx_nbnxn_gpu_t *&#160;</td>
          <td class="paramname"><em>nb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const struct nbnxn_pairlist_t *&#160;</td>
          <td class="paramname"><em>h_nblist</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iloc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes pair-list data for GPU, called at every pair search step. </p>

</div>
</div>
<a class="anchor" id="ad6b6e530a4c5b7860a98e98a7849cbd1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> nbnxn_gpu_is_kernel_ewald_analytical </td>
          <td>(</td>
          <td class="paramtype">const gmx_nbnxn_ocl_t *&#160;</td>
          <td class="paramname"><em>nb</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns if analytical Ewald GPU kernels are used. </p>
<p>Returns if analytical Ewald GPU kernels are used. </p>

</div>
</div>
<a class="anchor" id="a222808caa76f9a2513e187523826a0cc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int nbnxn_gpu_min_ci_balanced </td>
          <td>(</td>
          <td class="paramtype">gmx_nbnxn_ocl_t *&#160;</td>
          <td class="paramname"><em>nb</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates the minimum size of proximity lists to improve SM load balance with GPU non-bonded kernels. </p>
<p>Calculates the minimum size of proximity lists to improve SM load balance with GPU non-bonded kernels. </p>

</div>
</div>
<a class="anchor" id="a8863948175e50b345e75ccad0142064e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void nbnxn_gpu_reset_timings </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structnonbonded__verlet__t.xhtml">nonbonded_verlet_t</a> *&#160;</td>
          <td class="paramname"><em>nbv</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resets nonbonded GPU timings. </p>
<p>Resets nonbonded GPU timings. </p>

</div>
</div>
<a class="anchor" id="a12e0d41a0da2559f44b707944c64babd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void nbnxn_gpu_upload_shiftvec </td>
          <td>(</td>
          <td class="paramtype">gmx_nbnxn_ocl_t *&#160;</td>
          <td class="paramname"><em>nb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const nbnxn_atomdata_t *&#160;</td>
          <td class="paramname"><em>nbatom</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Uploads shift vector to the GPU if the box is dynamic (otherwise just returns). </p>
<p>Uploads shift vector to the GPU if the box is dynamic (otherwise just returns). </p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:56:07 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::test::MdrunComparisonFixture Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="namespacegmx_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="classgmx_1_1test_1_1MdrunComparisonFixture.xhtml">MdrunComparisonFixture</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1test_1_1MdrunComparisonFixture-members.xhtml">List of all members</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a>  </div>
  <div class="headertitle">
<div class="title">gmx::test::MdrunComparisonFixture Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span><div class="ingroups"><a class="el" href="group__module__mdrun__integration__tests.xhtml">Integration test utilities</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;programs/mdrun/tests/mdruncomparisonfixture.h&gt;</code></p>

<p>Inherits gmx::test::MdrunTestFixture.</p>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Declares abstract base text fixture class for integration tests of mdrun functionality that will compare multiple calls to mdrun. </p>
<p>An internal database of several kinds of simulation useful for such comparisons is available.</p>
<p>Any method in this class may throw std::bad_alloc if out of memory. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a81add39dbbc37c9f89e9958d3bd3b44c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a81add39dbbc37c9f89e9958d3bd3b44c"></a>
typedef std::map&lt; std::string, <br class="typebreak"/>
std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1MdrunComparisonFixture.xhtml#a81add39dbbc37c9f89e9958d3bd3b44c">MdpFieldValues</a></td></tr>
<tr class="memdesc:a81add39dbbc37c9f89e9958d3bd3b44c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper typedef. <br/></td></tr>
<tr class="separator:a81add39dbbc37c9f89e9958d3bd3b44c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3f4347a1ed8c897d1e3f9e61da8bd4d2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3f4347a1ed8c897d1e3f9e61da8bd4d2"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1MdrunComparisonFixture.xhtml#a3f4347a1ed8c897d1e3f9e61da8bd4d2">~MdrunComparisonFixture</a> ()</td></tr>
<tr class="memdesc:a3f4347a1ed8c897d1e3f9e61da8bd4d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor. <br/></td></tr>
<tr class="separator:a3f4347a1ed8c897d1e3f9e61da8bd4d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fa0e74e54c522b07d0ca3c1d281d741"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1test_1_1MdrunComparisonFixture.xhtml#a81add39dbbc37c9f89e9958d3bd3b44c">MdpFieldValues</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1MdrunComparisonFixture.xhtml#a2fa0e74e54c522b07d0ca3c1d281d741">prepareMdpFieldValues</a> (const char *simulationName)</td></tr>
<tr class="memdesc:a2fa0e74e54c522b07d0ca3c1d281d741"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare .mdp values to do a simulation.  <a href="#a2fa0e74e54c522b07d0ca3c1d281d741">More...</a><br/></td></tr>
<tr class="separator:a2fa0e74e54c522b07d0ca3c1d281d741"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d42f8eedbbcbea81ef2846dc583edfc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1MdrunComparisonFixture.xhtml#a6d42f8eedbbcbea81ef2846dc583edfc">prepareMdpFile</a> (const <a class="el" href="classgmx_1_1test_1_1MdrunComparisonFixture.xhtml#a81add39dbbc37c9f89e9958d3bd3b44c">MdpFieldValues</a> &amp;mdpFieldValues, const char *integrator, const char *tcoupl, const char *pcoupl)</td></tr>
<tr class="memdesc:a6d42f8eedbbcbea81ef2846dc583edfc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set up an .mdp file that permits a highly reproducible simulation.  <a href="#a6d42f8eedbbcbea81ef2846dc583edfc">More...</a><br/></td></tr>
<tr class="separator:a6d42f8eedbbcbea81ef2846dc583edfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fbd13d737f22b70f506c0704c4a43b4"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1MdrunComparisonFixture.xhtml#a8fbd13d737f22b70f506c0704c4a43b4">runTest</a> (const <a class="el" href="classgmx_1_1test_1_1CommandLine.xhtml">CommandLine</a> &amp;gromppCallerRef, const char *simulationName, const char *integrator, const char *tcoupl, const char *pcoupl, <a class="el" href="classgmx_1_1test_1_1FloatingPointTolerance.xhtml">FloatingPointTolerance</a> tolerance)=0</td></tr>
<tr class="memdesc:a8fbd13d737f22b70f506c0704c4a43b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Run mdrun two ways in a test. Subclasses must override this method.  <a href="#a8fbd13d737f22b70f506c0704c4a43b4">More...</a><br/></td></tr>
<tr class="separator:a8fbd13d737f22b70f506c0704c4a43b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b9caf8ce85ef7c602f482012f178e4c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1b9caf8ce85ef7c602f482012f178e4c"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1MdrunComparisonFixture.xhtml#a1b9caf8ce85ef7c602f482012f178e4c">runTest</a> (const char *simulationName, const char *integrator, const char *tcoupl, const char *pcoupl, <a class="el" href="classgmx_1_1test_1_1FloatingPointTolerance.xhtml">FloatingPointTolerance</a> tolerance)</td></tr>
<tr class="memdesc:a1b9caf8ce85ef7c602f482012f178e4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convenience overload of <a class="el" href="classgmx_1_1test_1_1MdrunComparisonFixture.xhtml#a8fbd13d737f22b70f506c0704c4a43b4" title="Run mdrun two ways in a test. Subclasses must override this method. ">runTest()</a> for cases that don't need to customize the command line for grompp. <br/></td></tr>
<tr class="separator:a1b9caf8ce85ef7c602f482012f178e4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a2141d1eeae99b891fdd4aabc9de3dccb"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2141d1eeae99b891fdd4aabc9de3dccb"></a>
<a class="el" href="classgmx_1_1test_1_1TestFileManager.xhtml">TestFileManager</a>&#160;</td><td class="memItemRight" valign="bottom"><b>fileManager_</b></td></tr>
<tr class="memdesc:a2141d1eeae99b891fdd4aabc9de3dccb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Manages temporary files during the test. <br/></td></tr>
<tr class="separator:a2141d1eeae99b891fdd4aabc9de3dccb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad991b5840e9fac12fe92db2b7344242d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad991b5840e9fac12fe92db2b7344242d"></a>
SimulationRunner&#160;</td><td class="memItemRight" valign="bottom"><b>runner_</b></td></tr>
<tr class="memdesc:ad991b5840e9fac12fe92db2b7344242d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper object to manage the preparation for and call of mdrun. <br/></td></tr>
<tr class="separator:ad991b5840e9fac12fe92db2b7344242d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a2fa0e74e54c522b07d0ca3c1d281d741"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1test_1_1MdrunComparisonFixture.xhtml#a81add39dbbc37c9f89e9958d3bd3b44c">MdrunComparisonFixture::MdpFieldValues</a> gmx::test::MdrunComparisonFixture::prepareMdpFieldValues </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>simulationName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prepare .mdp values to do a simulation. </p>
<p>A database of several kinds of simulation useful for different kinds of tests is available.</p>
<ul>
<li>argon12</li>
<li>argon5832</li>
<li>spc5</li>
<li>spc216</li>
<li>alanine_vsite_vacuo</li>
<li>alanine_vsite_solvated</li>
<li>nonanol</li>
</ul>
<p>Some of these systems are pretty minimal, because having few atoms means few interactions, highly reproducible forces, and allows tests to focus on the correctness of the implementation of high-level mdrun features. The boxes are of a reasonable size so that domain decomposition is possible. The pressure-coupling parameters are isotropic, and set up so that there will not be dramatic collapse of volume over the handful of MD steps that will be run. A single temperature-coupling group is used.</p>
<p>This is separate from prepareMdpFile, so that derived classes can react to the .mdp settings, e.g. by stopping a run after half the steps.</p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory std::out_of_range if <code>simulationName</code> is not in the database </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6d42f8eedbbcbea81ef2846dc583edfc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::test::MdrunComparisonFixture::prepareMdpFile </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1test_1_1MdrunComparisonFixture.xhtml#a81add39dbbc37c9f89e9958d3bd3b44c">MdpFieldValues</a> &amp;&#160;</td>
          <td class="paramname"><em>mdpFieldValues</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>integrator</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>tcoupl</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>pcoupl</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set up an .mdp file that permits a highly reproducible simulation. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8fbd13d737f22b70f506c0704c4a43b4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void gmx::test::MdrunComparisonFixture::runTest </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1test_1_1CommandLine.xhtml">CommandLine</a> &amp;&#160;</td>
          <td class="paramname"><em>gromppCallerRef</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>simulationName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>integrator</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>tcoupl</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>pcoupl</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classgmx_1_1test_1_1FloatingPointTolerance.xhtml">FloatingPointTolerance</a>&#160;</td>
          <td class="paramname"><em>tolerance</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Run mdrun two ways in a test. Subclasses must override this method. </p>
<p>It is expected that this method calls <a class="el" href="classgmx_1_1test_1_1MdrunComparisonFixture.xhtml#a2fa0e74e54c522b07d0ca3c1d281d741" title="Prepare .mdp values to do a simulation. ">prepareMdpFieldValues()</a> and <a class="el" href="classgmx_1_1test_1_1MdrunComparisonFixture.xhtml#a6d42f8eedbbcbea81ef2846dc583edfc" title="Set up an .mdp file that permits a highly reproducible simulation. ">prepareMdpFile()</a> to help set up a call to grompp with gromppCallerRef. Then mdrun will be called and perhaps energies and forces compared. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/programs/mdrun/tests/mdruncomparisonfixture.h</li>
<li>src/programs/mdrun/tests/mdruncomparisonfixture.cpp</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:56:17 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

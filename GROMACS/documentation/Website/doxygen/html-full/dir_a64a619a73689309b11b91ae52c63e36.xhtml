<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/utility Directory Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_8a21c46af9718d1f610eb513153099d7.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a46192700e9e8ed44c648f0a55ee9a53.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_a64a619a73689309b11b91ae52c63e36.xhtml">utility</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">utility Directory Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Directory dependency graph for utility:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="dir_a64a619a73689309b11b91ae52c63e36_dep.svg" width="243" height="212"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<p><a class="el" href="group__module__utility.xhtml">Low-Level Utilities (utility)</a> </p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="subdirs"></a>
Directories</h2></td></tr>
<tr class="memitem:dir_1b1b5edcbbf17d8605c24b014b3939d9"><td class="memItemLeft" align="right" valign="top">directory &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dir_1b1b5edcbbf17d8605c24b014b3939d9.xhtml">tests</a></td></tr>
<tr class="memdesc:dir_1b1b5edcbbf17d8605c24b014b3939d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unit tests for <a class="el" href="group__module__utility.xhtml">Low-Level Utilities (utility)</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"></a>
Files</h2></td></tr>
<tr class="memitem:alignedallocator_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="alignedallocator_8cpp.xhtml">alignedallocator.cpp</a></td></tr>
<tr class="memdesc:alignedallocator_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements AlignedAllocator. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:alignedallocator_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="alignedallocator_8h.xhtml">alignedallocator.h</a></td></tr>
<tr class="memdesc:alignedallocator_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares allocation policy classes and allocators that are used to make library containers compatible with alignment requirements of particular hardware, e.g. memory operations for SIMD or accelerators. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:allocator_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="allocator_8h.xhtml">allocator.h</a></td></tr>
<tr class="memdesc:allocator_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1Allocator.xhtml" title="Policy-based memory allocator. ">gmx::Allocator</a> template whose allocation functionality is configured both by type of object allocated and a policy class that configures the necessary matching malloc and free operation. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:arrayref_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arrayref_8h.xhtml">arrayref.h</a></td></tr>
<tr class="memdesc:arrayref_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1ArrayRef.xhtml" title="STL-like container for an interface to a C array of T (or part of a std::vector&lt;T, A&gt; or std::array&lt;T&gt;). ">gmx::ArrayRef</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:arraysize_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="arraysize_8h.xhtml">arraysize.h</a></td></tr>
<tr class="memdesc:arraysize_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides <a class="el" href="group__module__utility.xhtml#ga0883345a58f8f63aefa249a4f127f707" title="Calculates the static number of elements in an array. ">asize()</a> macro for calculating the static size of an array. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:basedefinitions_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="basedefinitions_8h.xhtml">basedefinitions.h</a></td></tr>
<tr class="memdesc:basedefinitions_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Basic types and macros used throughout GROMACS. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:basenetwork_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>basenetwork.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:basenetwork_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="basenetwork_8h.xhtml">basenetwork.h</a></td></tr>
<tr class="memdesc:basenetwork_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility functions for basic MPI and network functionality. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:baseversion-gen_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="baseversion-gen_8h.xhtml">baseversion-gen.h</a></td></tr>
<tr class="memdesc:baseversion-gen_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares variables that hold generated version information. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:baseversion_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>baseversion.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:baseversion_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="baseversion_8h.xhtml">baseversion.h</a></td></tr>
<tr class="memdesc:baseversion_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares functions to get basic version information. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:binaryinformation_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="binaryinformation_8cpp.xhtml">binaryinformation.cpp</a></td></tr>
<tr class="memdesc:binaryinformation_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements functionality for printing information about the currently running binary. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:binaryinformation_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="binaryinformation_8h.xhtml">binaryinformation.h</a></td></tr>
<tr class="memdesc:binaryinformation_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper functionality for information about the currently running binary. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:bitmask_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bitmask_8h.xhtml">bitmask.h</a></td></tr>
<tr class="memdesc:bitmask_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares gmx_bitmask_t and associated functions. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:classhelpers_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classhelpers_8h.xhtml">classhelpers.h</a></td></tr>
<tr class="memdesc:classhelpers_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares common utility classes and macros. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:compare_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>compare.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:compare_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="compare_8h.xhtml">compare.h</a></td></tr>
<tr class="memdesc:compare_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utilities for comparing data structures (for gmx check). <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:coolstuff_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="coolstuff_8cpp.xhtml">coolstuff.cpp</a></td></tr>
<tr class="memdesc:coolstuff_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Functionality for printing cool strings. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:coolstuff_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="coolstuff_8h.xhtml">coolstuff.h</a></td></tr>
<tr class="memdesc:coolstuff_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Functionality for printing cool strings. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:cstringutil_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>cstringutil.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:cstringutil_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="cstringutil_8h.xhtml">cstringutil.h</a></td></tr>
<tr class="memdesc:cstringutil_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generic C string handling functions. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:cuda__version__information_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>cuda_version_information.h</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:current__function_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="current__function_8h.xhtml">current_function.h</a></td></tr>
<tr class="memdesc:current__function_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares GMX_CURRENT_FUNCTION for getting the current function name. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:datafilefinder_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="datafilefinder_8cpp.xhtml">datafilefinder.cpp</a></td></tr>
<tr class="memdesc:datafilefinder_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements <a class="el" href="classgmx_1_1DataFileFinder.xhtml" title="Searches data files from a set of paths. ">gmx::DataFileFinder</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:datafilefinder_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="datafilefinder_8h.xhtml">datafilefinder.h</a></td></tr>
<tr class="memdesc:datafilefinder_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1DataFileFinder.xhtml" title="Searches data files from a set of paths. ">gmx::DataFileFinder</a> and related classes. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:dir__separator_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dir__separator_8h.xhtml">dir_separator.h</a></td></tr>
<tr class="memdesc:dir__separator_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides OS-specific directory-name separator. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:directoryenumerator_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="directoryenumerator_8cpp.xhtml">directoryenumerator.cpp</a></td></tr>
<tr class="memdesc:directoryenumerator_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements <a class="el" href="classgmx_1_1DirectoryEnumerator.xhtml" title="Lists files in a directory. ">gmx::DirectoryEnumerator</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:directoryenumerator_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="directoryenumerator_8h.xhtml">directoryenumerator.h</a></td></tr>
<tr class="memdesc:directoryenumerator_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1DirectoryEnumerator.xhtml" title="Lists files in a directory. ">gmx::DirectoryEnumerator</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:errorcodes_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="errorcodes_8cpp.xhtml">errorcodes.cpp</a></td></tr>
<tr class="memdesc:errorcodes_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements functions in <a class="el" href="errorcodes_8h.xhtml" title="Declares error codes and related functions for fatal error handling. ">errorcodes.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:errorcodes_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="errorcodes_8h.xhtml">errorcodes.h</a></td></tr>
<tr class="memdesc:errorcodes_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares error codes and related functions for fatal error handling. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:errorformat_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="errorformat_8cpp.xhtml">errorformat.cpp</a></td></tr>
<tr class="memdesc:errorformat_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements functions declared in <a class="el" href="errorformat_8h.xhtml" title="Declares an internal helper function for formatting standard error messages. ">errorformat.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:errorformat_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="errorformat_8h.xhtml">errorformat.h</a></td></tr>
<tr class="memdesc:errorformat_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares an internal helper function for formatting standard error messages. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:exceptions_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="exceptions_8cpp.xhtml">exceptions.cpp</a></td></tr>
<tr class="memdesc:exceptions_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements classes and functions in <a class="el" href="exceptions_8h.xhtml" title="Declares common exception classes and macros for fatal error handling. ">exceptions.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:exceptions_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="exceptions_8h.xhtml">exceptions.h</a></td></tr>
<tr class="memdesc:exceptions_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares common exception classes and macros for fatal error handling. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:fatalerror_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>fatalerror.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:fatalerror_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fatalerror_8h.xhtml">fatalerror.h</a></td></tr>
<tr class="memdesc:fatalerror_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares fatal error handling and debugging routines for C code. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:fileredirector_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fileredirector_8cpp.xhtml">fileredirector.cpp</a></td></tr>
<tr class="memdesc:fileredirector_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements classes and functions from <a class="el" href="fileredirector_8h.xhtml" title="Declares gmx::IFileOutputRedirector. ">fileredirector.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:fileredirector_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fileredirector_8h.xhtml">fileredirector.h</a></td></tr>
<tr class="memdesc:fileredirector_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1IFileOutputRedirector.xhtml" title="Allows capturing stdout and file output from code that supports it. ">gmx::IFileOutputRedirector</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:filestream_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="filestream_8cpp.xhtml">filestream.cpp</a></td></tr>
<tr class="memdesc:filestream_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements classes from <a class="el" href="filestream_8h.xhtml" title="Declares implementations for textstream.h interfaces for file input/output. ">filestream.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:filestream_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="filestream_8h.xhtml">filestream.h</a></td></tr>
<tr class="memdesc:filestream_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares implementations for <a class="el" href="textstream_8h.xhtml" title="Declares interfaces for simple input/output streams. ">textstream.h</a> interfaces for file input/output. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:flags_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="flags_8h.xhtml">flags.h</a></td></tr>
<tr class="memdesc:flags_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1FlagsTemplate.xhtml" title="Template class for typesafe handling of combination of flags. ">gmx::FlagsTemplate</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:futil_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>futil.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:futil_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="futil_8h.xhtml">futil.h</a></td></tr>
<tr class="memdesc:futil_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Low-level wrappers for OS-specific file handling with some GROMACS customizations. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gmxassert_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmxassert_8cpp.xhtml">gmxassert.cpp</a></td></tr>
<tr class="memdesc:gmxassert_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements assertion handlers. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gmxassert_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmxassert_8h.xhtml">gmxassert.h</a></td></tr>
<tr class="memdesc:gmxassert_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines assert macros customized for Gromacs. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gmxmpi_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmxmpi_8h.xhtml">gmxmpi.h</a></td></tr>
<tr class="memdesc:gmxmpi_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wraps mpi.h usage in Gromacs. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gmxomp_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmxomp_8cpp.xhtml">gmxomp.cpp</a></td></tr>
<tr class="memdesc:gmxomp_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements functions from <a class="el" href="gmxomp_8h.xhtml" title="Declares OpenMP wrappers to avoid conditional compilation. ">gmxomp.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gmxomp_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmxomp_8h.xhtml">gmxomp.h</a></td></tr>
<tr class="memdesc:gmxomp_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares OpenMP wrappers to avoid conditional compilation. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gmxregex_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmxregex_8cpp.xhtml">gmxregex.cpp</a></td></tr>
<tr class="memdesc:gmxregex_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements regular expression wrappers. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gmxregex_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gmxregex_8h.xhtml">gmxregex.h</a></td></tr>
<tr class="memdesc:gmxregex_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares simple wrapper for regular expression functionality. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ikeyvaluetreeerror_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>ikeyvaluetreeerror.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ikeyvaluetreeerror_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ikeyvaluetreeerror_8h.xhtml">ikeyvaluetreeerror.h</a></td></tr>
<tr class="memdesc:ikeyvaluetreeerror_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares an error handling interface for key-value tree operations. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:init_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="init_8cpp.xhtml">init.cpp</a></td></tr>
<tr class="memdesc:init_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements functions from <a class="el" href="init_8h.xhtml" title="Declares functions for initializing the GROMACS library. ">init.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:init_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="init_8h.xhtml">init.h</a></td></tr>
<tr class="memdesc:init_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares functions for initializing the GROMACS library. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:inmemoryserializer_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>inmemoryserializer.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:inmemoryserializer_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="inmemoryserializer_8h.xhtml">inmemoryserializer.h</a></td></tr>
<tr class="memdesc:inmemoryserializer_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1ISerializer.xhtml" title="Interface for types that convert standard data types into a form suitable for storage or transfer...">gmx::ISerializer</a> implementation for in-memory serialization. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:int64__to__int_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>int64_to_int.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:int64__to__int_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="int64__to__int_8h.xhtml">int64_to_int.h</a></td></tr>
<tr class="memdesc:int64__to__int_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Low-level utility for converting 64 bit int to int (the size of which is hardware dependent), printing a warning if an overflow will occur. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:iserializer_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="iserializer_8h.xhtml">iserializer.h</a></td></tr>
<tr class="memdesc:iserializer_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares a generic serialization interface that supports both directions. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:keyvaluetree_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>keyvaluetree.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:keyvaluetree_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="keyvaluetree_8h.xhtml">keyvaluetree.h</a></td></tr>
<tr class="memdesc:keyvaluetree_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares a data structure for JSON-like structured key-value mapping. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:keyvaluetreebuilder_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="keyvaluetreebuilder_8h.xhtml">keyvaluetreebuilder.h</a></td></tr>
<tr class="memdesc:keyvaluetreebuilder_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares classes for building the data structures in <a class="el" href="keyvaluetree_8h.xhtml" title="Declares a data structure for JSON-like structured key-value mapping. ">keyvaluetree.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:keyvaluetreeserializer_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>keyvaluetreeserializer.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:keyvaluetreeserializer_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="keyvaluetreeserializer_8h.xhtml">keyvaluetreeserializer.h</a></td></tr>
<tr class="memdesc:keyvaluetreeserializer_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares serialization routines for KeyValueTree objects. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:keyvaluetreetransform_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>keyvaluetreetransform.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:keyvaluetreetransform_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="keyvaluetreetransform_8h.xhtml">keyvaluetreetransform.h</a></td></tr>
<tr class="memdesc:keyvaluetreetransform_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares utilities for transforming key-value trees. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:logger_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>logger.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:logger_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="logger_8h.xhtml">logger.h</a></td></tr>
<tr class="memdesc:logger_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares functionality for logging. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:loggerbuilder_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>loggerbuilder.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:loggerbuilder_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="loggerbuilder_8h.xhtml">loggerbuilder.h</a></td></tr>
<tr class="memdesc:loggerbuilder_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares functionality for initializing logging. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:messagestringcollector_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="messagestringcollector_8cpp.xhtml">messagestringcollector.cpp</a></td></tr>
<tr class="memdesc:messagestringcollector_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements <a class="el" href="classgmx_1_1MessageStringCollector.xhtml" title="Helper class for collecting message strings, optionally with context. ">gmx::MessageStringCollector</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:messagestringcollector_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="messagestringcollector_8h.xhtml">messagestringcollector.h</a></td></tr>
<tr class="memdesc:messagestringcollector_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1MessageStringCollector.xhtml" title="Helper class for collecting message strings, optionally with context. ">gmx::MessageStringCollector</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:mutex_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="mutex_8h.xhtml">mutex.h</a></td></tr>
<tr class="memdesc:mutex_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares C++11-style basic threading primitives (<a class="el" href="namespacegmx.xhtml#ab59286953efe778908daa3e5607f0a0e" title="C++11-compatible basic mutex. ">gmx::Mutex</a>, gmx::lock_guard). <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:niceheader_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="niceheader_8cpp.xhtml">niceheader.cpp</a></td></tr>
<tr class="memdesc:niceheader_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements functions from <a class="el" href="niceheader_8h.xhtml" title="Declares function for printing a nice header for text output files. ">niceheader.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:niceheader_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="niceheader_8h.xhtml">niceheader.h</a></td></tr>
<tr class="memdesc:niceheader_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares function for printing a nice header for text output files. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:nodelete_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="nodelete_8h.xhtml">nodelete.h</a></td></tr>
<tr class="memdesc:nodelete_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares no_delete deleter for std::shared_ptr. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:path_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="path_8cpp.xhtml">path.cpp</a></td></tr>
<tr class="memdesc:path_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements functions in <a class="el" href="path_8h.xhtml" title="Declares functions for OS-independent path handling. ">path.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:path_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="path_8h.xhtml">path.h</a></td></tr>
<tr class="memdesc:path_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares functions for OS-independent path handling. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:pleasecite_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>pleasecite.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:pleasecite_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pleasecite_8h.xhtml">pleasecite.h</a></td></tr>
<tr class="memdesc:pleasecite_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="pleasecite_8h.xhtml#a2152200367ce7a5c0e63f2cd3bb79ee0" title="Print a message asking to cite something. ">please_cite()</a> for printing out literature references. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:programcontext_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="programcontext_8cpp.xhtml">programcontext.cpp</a></td></tr>
<tr class="memdesc:programcontext_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements <a class="el" href="classgmx_1_1IProgramContext.xhtml" title="Provides context information about the program that is calling the library. ">gmx::IProgramContext</a> and related methods. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:programcontext_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="programcontext_8h.xhtml">programcontext.h</a></td></tr>
<tr class="memdesc:programcontext_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1IProgramContext.xhtml" title="Provides context information about the program that is calling the library. ">gmx::IProgramContext</a> and related methods. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:qsort__threadsafe_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>qsort_threadsafe.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:qsort__threadsafe_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="qsort__threadsafe_8h.xhtml">qsort_threadsafe.h</a></td></tr>
<tr class="memdesc:qsort__threadsafe_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Portable implementation of threadsafe quicksort. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:real_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="real_8h.xhtml">real.h</a></td></tr>
<tr class="memdesc:real_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <code>real</code> and related constants. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:smalloc_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>smalloc.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:smalloc_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="smalloc_8h.xhtml">smalloc.h</a></td></tr>
<tr class="memdesc:smalloc_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">C memory allocation routines for GROMACS. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:snprintf_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="snprintf_8h.xhtml">snprintf.h</a></td></tr>
<tr class="memdesc:snprintf_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provide snprintf symbol on all OS (for internal Gromacs use) <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:strconvert_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="strconvert_8cpp.xhtml">strconvert.cpp</a></td></tr>
<tr class="memdesc:strconvert_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements functions in <a class="el" href="strconvert_8h.xhtml" title="Declares common utility functions for conversions to and from strings. ">strconvert.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:strconvert_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="strconvert_8h.xhtml">strconvert.h</a></td></tr>
<tr class="memdesc:strconvert_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares common utility functions for conversions to and from strings. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:strdb_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>strdb.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:strdb_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="strdb_8h.xhtml">strdb.h</a></td></tr>
<tr class="memdesc:strdb_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares C functions for reading files with a list of strings. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:stringcompare_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="stringcompare_8h.xhtml">stringcompare.h</a></td></tr>
<tr class="memdesc:stringcompare_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares utility functionst for string comparison. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:stringstream_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="stringstream_8cpp.xhtml">stringstream.cpp</a></td></tr>
<tr class="memdesc:stringstream_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements classes from <a class="el" href="stringstream_8h.xhtml" title="Declares implementations for textstream.h interfaces for input/output to in-memory strings...">stringstream.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:stringstream_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="stringstream_8h.xhtml">stringstream.h</a></td></tr>
<tr class="memdesc:stringstream_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares implementations for <a class="el" href="textstream_8h.xhtml" title="Declares interfaces for simple input/output streams. ">textstream.h</a> interfaces for input/output to in-memory strings. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:stringutil_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="stringutil_8cpp.xhtml">stringutil.cpp</a></td></tr>
<tr class="memdesc:stringutil_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements functions and classes in <a class="el" href="stringutil_8h.xhtml" title="Declares common string utility and formatting routines. ">stringutil.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:stringutil_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="stringutil_8h.xhtml">stringutil.h</a></td></tr>
<tr class="memdesc:stringutil_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares common string utility and formatting routines. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:sysinfo_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sysinfo_8cpp.xhtml">sysinfo.cpp</a></td></tr>
<tr class="memdesc:sysinfo_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements functions from <a class="el" href="sysinfo_8h.xhtml" title="Declares functions that wrap platform-specific calls for obtaining information about the operating en...">sysinfo.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:sysinfo_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sysinfo_8h.xhtml">sysinfo.h</a></td></tr>
<tr class="memdesc:sysinfo_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares functions that wrap platform-specific calls for obtaining information about the operating environment and the current process. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:textreader_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="textreader_8cpp.xhtml">textreader.cpp</a></td></tr>
<tr class="memdesc:textreader_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements <a class="el" href="classgmx_1_1TextReader.xhtml" title="Reads text from a TextInputStream. ">gmx::TextReader</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:textreader_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="textreader_8h.xhtml">textreader.h</a></td></tr>
<tr class="memdesc:textreader_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1TextReader.xhtml" title="Reads text from a TextInputStream. ">gmx::TextReader</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:textstream_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="textstream_8h.xhtml">textstream.h</a></td></tr>
<tr class="memdesc:textstream_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares interfaces for simple input/output streams. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:textwriter_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="textwriter_8cpp.xhtml">textwriter.cpp</a></td></tr>
<tr class="memdesc:textwriter_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements <a class="el" href="classgmx_1_1TextWriter.xhtml" title="Writes text into a TextOutputStream. ">gmx::TextWriter</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:textwriter_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="textwriter_8h.xhtml">textwriter.h</a></td></tr>
<tr class="memdesc:textwriter_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1TextWriter.xhtml" title="Writes text into a TextOutputStream. ">gmx::TextWriter</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:txtdump_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><b>txtdump.cpp</b></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:txtdump_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="txtdump_8h.xhtml">txtdump.h</a></td></tr>
<tr class="memdesc:txtdump_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares helper functions for dumping basic data structures as text. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:typetraits_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="typetraits_8h.xhtml">typetraits.h</a></td></tr>
<tr class="memdesc:typetraits_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares type traits. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:unique__cptr_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="unique__cptr_8h.xhtml">unique_cptr.h</a></td></tr>
<tr class="memdesc:unique__cptr_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="namespacegmx.xhtml#a89d1da25b1e1f9331f1fe99b15072eac" title="unique_ptr which takes function pointer (has to return void) as template argument ...">gmx::unique_cptr</a> and <a class="el" href="namespacegmx.xhtml#a48049c20e985f7cfbe33e8a8467cd3db" title="Simple guard which calls sfree. See unique_cptr for details. ">gmx::sfree_guard</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:variant_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="variant_8cpp.xhtml">variant.cpp</a></td></tr>
<tr class="memdesc:variant_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements functionality from <a class="el" href="variant_8h.xhtml" title="Declares gmx::Variant. ">variant.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:variant_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="variant_8h.xhtml">variant.h</a></td></tr>
<tr class="memdesc:variant_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1Variant.xhtml" title="Represents a dynamically typed value of an arbitrary type. ">gmx::Variant</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:32 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/gpu_utils/gpu_utils_ocl.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_8a21c46af9718d1f610eb513153099d7.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a46192700e9e8ed44c648f0a55ee9a53.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_cbbda348be622d4188e9f9890e0fe79d.xhtml">gpu_utils</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">gpu_utils_ocl.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="gmxpre_8h.xhtml">gmxpre.h</a>&quot;</code><br/>
<code>#include &lt;assert.h&gt;</code><br/>
<code>#include &lt;stdio.h&gt;</code><br/>
<code>#include &lt;stdlib.h&gt;</code><br/>
<code>#include &lt;string.h&gt;</code><br/>
<code>#include &lt;memory.h&gt;</code><br/>
<code>#include &quot;<a class="el" href="gpu__utils_8h.xhtml">gromacs/gpu_utils/gpu_utils.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="ocl__compiler_8h.xhtml">gromacs/gpu_utils/ocl_compiler.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="oclutils_8h.xhtml">gromacs/gpu_utils/oclutils.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/hardware/hw_info.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="md__enums_8h.xhtml">gromacs/mdtypes/md_enums.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="cstringutil_8h.xhtml">gromacs/utility/cstringutil.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="exceptions_8h.xhtml">gromacs/utility/exceptions.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="fatalerror_8h.xhtml">gromacs/utility/fatalerror.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="smalloc_8h.xhtml">gromacs/utility/smalloc.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="stringutil_8h.xhtml">gromacs/utility/stringutil.h</a>&quot;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for gpu_utils_ocl.cpp:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="gpu__utils__ocl_8cpp__incl.svg" width="2272" height="470"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Define functions for detection and initialization for OpenCL devices. </p>
<dl class="section author"><dt>Author</dt><dd>Anca Hamuraru <a href="#" onclick="location.href='mai'+'lto:'+'anc'+'a@'+'str'+'ea'+'mco'+'mp'+'uti'+'ng'+'.eu'; return false;">anca@<span style="display: none;">.nosp@m.</span>stre<span style="display: none;">.nosp@m.</span>amcom<span style="display: none;">.nosp@m.</span>puti<span style="display: none;">.nosp@m.</span>ng.eu</a> </dd>
<dd>
Dimitrios Karkoulis <a href="#" onclick="location.href='mai'+'lto:'+'dim'+'it'+'ris'+'.k'+'ark'+'ou'+'lis'+'@g'+'mai'+'l.'+'com'; return false;">dimit<span style="display: none;">.nosp@m.</span>ris.<span style="display: none;">.nosp@m.</span>karko<span style="display: none;">.nosp@m.</span>ulis<span style="display: none;">.nosp@m.</span>@gmai<span style="display: none;">.nosp@m.</span>l.co<span style="display: none;">.nosp@m.</span>m</a> </dd>
<dd>
Teemu Virolainen <a href="#" onclick="location.href='mai'+'lto:'+'tee'+'mu'+'@st'+'re'+'amc'+'om'+'put'+'in'+'g.e'+'u'; return false;">teemu<span style="display: none;">.nosp@m.</span>@str<span style="display: none;">.nosp@m.</span>eamco<span style="display: none;">.nosp@m.</span>mput<span style="display: none;">.nosp@m.</span>ing.e<span style="display: none;">.nosp@m.</span>u</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a63db61f0c7660eb3a7a3db486303b47b"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gpu__utils__ocl_8cpp.xhtml#a63db61f0c7660eb3a7a3db486303b47b">runningOnCompatibleOSForAmd</a> ()</td></tr>
<tr class="memdesc:a63db61f0c7660eb3a7a3db486303b47b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return true if executing on compatible OS for AMD OpenCL.  <a href="#a63db61f0c7660eb3a7a3db486303b47b">More...</a><br/></td></tr>
<tr class="separator:a63db61f0c7660eb3a7a3db486303b47b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e270f50e7be2fba9bb967d53590f921"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gpu__utils__ocl_8cpp.xhtml#a2e270f50e7be2fba9bb967d53590f921">is_gmx_supported_gpu_id</a> (struct <a class="el" href="structgmx__device__info__t.xhtml">gmx_device_info_t</a> *ocl_gpu_device)</td></tr>
<tr class="memdesc:a2e270f50e7be2fba9bb967d53590f921"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the gpu characterized by the device properties is supported by the native gpu acceleration.  <a href="#a2e270f50e7be2fba9bb967d53590f921">More...</a><br/></td></tr>
<tr class="separator:a2e270f50e7be2fba9bb967d53590f921"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48d3a72747f16f7bdc06e48af311eccc"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="oclutils_8h.xhtml#a10849a150bcdfa716f8adaf20cfaabb7">ocl_vendor_id_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gpu__utils__ocl_8cpp.xhtml#a48d3a72747f16f7bdc06e48af311eccc">get_vendor_id</a> (char *vendor_name)</td></tr>
<tr class="memdesc:a48d3a72747f16f7bdc06e48af311eccc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an ocl_vendor_id_t value corresponding to the input OpenCL vendor name.  <a href="#a48d3a72747f16f7bdc06e48af311eccc">More...</a><br/></td></tr>
<tr class="separator:a48d3a72747f16f7bdc06e48af311eccc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e5655da488ed8af048ead6b840f746b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gpu__utils__ocl_8cpp.xhtml#a0e5655da488ed8af048ead6b840f746b">canDetectGpus</a> (std::string *errorMessage)</td></tr>
<tr class="memdesc:a0e5655da488ed8af048ead6b840f746b"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is documented in the header file.  <a href="#a0e5655da488ed8af048ead6b840f746b">More...</a><br/></td></tr>
<tr class="separator:a0e5655da488ed8af048ead6b840f746b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2be05e97232a15ee671694be1f8634a8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gpu__utils__ocl_8cpp.xhtml#a2be05e97232a15ee671694be1f8634a8">findGpus</a> (gmx_gpu_info_t *gpu_info)</td></tr>
<tr class="memdesc:a2be05e97232a15ee671694be1f8634a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is documented in the header file.  <a href="#a2be05e97232a15ee671694be1f8634a8">More...</a><br/></td></tr>
<tr class="separator:a2be05e97232a15ee671694be1f8634a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafdb3f8b5aee47160ad840824a6f8f5f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aafdb3f8b5aee47160ad840824a6f8f5f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gpu__utils__ocl_8cpp.xhtml#aafdb3f8b5aee47160ad840824a6f8f5f">free_gpu_info</a> (const gmx_gpu_info_t *gpu_info)</td></tr>
<tr class="memdesc:aafdb3f8b5aee47160ad840824a6f8f5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is documented in the header file. <br/></td></tr>
<tr class="separator:aafdb3f8b5aee47160ad840824a6f8f5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bc16b56a441046ce9ebaa9f402875d5"><td class="memItemLeft" align="right" valign="top">std::vector&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gpu__utils__ocl_8cpp.xhtml#a2bc16b56a441046ce9ebaa9f402875d5">getCompatibleGpus</a> (const gmx_gpu_info_t &amp;gpu_info)</td></tr>
<tr class="memdesc:a2bc16b56a441046ce9ebaa9f402875d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is documented in the header file.  <a href="#a2bc16b56a441046ce9ebaa9f402875d5">More...</a><br/></td></tr>
<tr class="separator:a2bc16b56a441046ce9ebaa9f402875d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a803acba7fe33d56059490710cd092f6b"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gpu__utils__ocl_8cpp.xhtml#a803acba7fe33d56059490710cd092f6b">getGpuCompatibilityDescription</a> (const gmx_gpu_info_t &amp;gpu_info, int index)</td></tr>
<tr class="memdesc:a803acba7fe33d56059490710cd092f6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is documented in the header file.  <a href="#a803acba7fe33d56059490710cd092f6b">More...</a><br/></td></tr>
<tr class="separator:a803acba7fe33d56059490710cd092f6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b6ddb3bb4f73a93b874eae4efc4f615"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3b6ddb3bb4f73a93b874eae4efc4f615"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gpu__utils__ocl_8cpp.xhtml#a3b6ddb3bb4f73a93b874eae4efc4f615">get_gpu_device_info_string</a> (char *s, const gmx_gpu_info_t &amp;gpu_info, int index)</td></tr>
<tr class="memdesc:a3b6ddb3bb4f73a93b874eae4efc4f615"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is documented in the header file. <br/></td></tr>
<tr class="separator:a3b6ddb3bb4f73a93b874eae4efc4f615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ec86f3b9b0407f36d5bc6282a27fa68"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gpu__utils__ocl_8cpp.xhtml#a1ec86f3b9b0407f36d5bc6282a27fa68">init_gpu</a> (const <a class="el" href="classgmx_1_1MDLogger.xhtml">gmx::MDLogger</a> &amp;, <a class="el" href="structgmx__device__info__t.xhtml">gmx_device_info_t</a> *deviceInfo)</td></tr>
<tr class="memdesc:a1ec86f3b9b0407f36d5bc6282a27fa68"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is documented in the header file.  <a href="#a1ec86f3b9b0407f36d5bc6282a27fa68">More...</a><br/></td></tr>
<tr class="separator:a1ec86f3b9b0407f36d5bc6282a27fa68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed4287f67e5c2d2c46a585c34146f634"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structgmx__device__info__t.xhtml">gmx_device_info_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gpu__utils__ocl_8cpp.xhtml#aed4287f67e5c2d2c46a585c34146f634">getDeviceInfo</a> (const gmx_gpu_info_t &amp;gpu_info, int deviceId)</td></tr>
<tr class="memdesc:aed4287f67e5c2d2c46a585c34146f634"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is documented in the header file.  <a href="#aed4287f67e5c2d2c46a585c34146f634">More...</a><br/></td></tr>
<tr class="separator:aed4287f67e5c2d2c46a585c34146f634"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac368c4a971290513fbabe74a0c80b716"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gpu__utils__ocl_8cpp.xhtml#ac368c4a971290513fbabe74a0c80b716">sizeof_gpu_dev_info</a> (void)</td></tr>
<tr class="memdesc:ac368c4a971290513fbabe74a0c80b716"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is documented in the header file.  <a href="#ac368c4a971290513fbabe74a0c80b716">More...</a><br/></td></tr>
<tr class="separator:ac368c4a971290513fbabe74a0c80b716"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab791918a19cd4aefc96a099f27f0ca1e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gpu__utils__ocl_8cpp.xhtml#ab791918a19cd4aefc96a099f27f0ca1e">gpu_set_host_malloc_and_free</a> (bool bUseGpuKernels, <a class="el" href="gpu__utils_8h.xhtml#a4a5340aac0cf9145eaae8a5ac5d6b0dc">gmx_host_alloc_t</a> **nb_alloc, <a class="el" href="gpu__utils_8h.xhtml#aff7e0f62ae0592b0aefadcf9071d0435">gmx_host_free_t</a> **nb_free)</td></tr>
<tr class="memdesc:ab791918a19cd4aefc96a099f27f0ca1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set page-locked memory allocation functions used by the GPU host.  <a href="#ab791918a19cd4aefc96a099f27f0ca1e">More...</a><br/></td></tr>
<tr class="separator:ab791918a19cd4aefc96a099f27f0ca1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a0e5655da488ed8af048ead6b840f746b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool canDetectGpus </td>
          <td>(</td>
          <td class="paramtype">std::string *&#160;</td>
          <td class="paramname"><em>errorMessage</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This function is documented in the header file. </p>
<p>Return whether GPUs can be detected. </p>

</div>
</div>
<a class="anchor" id="a2be05e97232a15ee671694be1f8634a8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void findGpus </td>
          <td>(</td>
          <td class="paramtype">gmx_gpu_info_t *&#160;</td>
          <td class="paramname"><em>gpu_info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This function is documented in the header file. </p>
<p>Find all GPUs in the system. </p>

</div>
</div>
<a class="anchor" id="a48d3a72747f16f7bdc06e48af311eccc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="oclutils_8h.xhtml#a10849a150bcdfa716f8adaf20cfaabb7">ocl_vendor_id_t</a> get_vendor_id </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>vendor_name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns an ocl_vendor_id_t value corresponding to the input OpenCL vendor name. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">vendor_name</td><td>String with OpenCL vendor name. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>ocl_vendor_id_t value for the input vendor_name </dd></dl>

</div>
</div>
<a class="anchor" id="a2bc16b56a441046ce9ebaa9f402875d5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;int&gt; getCompatibleGpus </td>
          <td>(</td>
          <td class="paramtype">const gmx_gpu_info_t &amp;&#160;</td>
          <td class="paramname"><em>gpu_info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This function is documented in the header file. </p>
<p>Return a container of the detected GPUs that are compatible. </p>

</div>
</div>
<a class="anchor" id="aed4287f67e5c2d2c46a585c34146f634"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structgmx__device__info__t.xhtml">gmx_device_info_t</a>* getDeviceInfo </td>
          <td>(</td>
          <td class="paramtype">const gmx_gpu_info_t &amp;&#160;</td>
          <td class="paramname"><em>gpu_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>deviceId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This function is documented in the header file. </p>
<p>Return a pointer to the device info for <code>deviceId</code>. </p>

</div>
</div>
<a class="anchor" id="a803acba7fe33d56059490710cd092f6b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* getGpuCompatibilityDescription </td>
          <td>(</td>
          <td class="paramtype">const gmx_gpu_info_t &amp;&#160;</td>
          <td class="paramname"><em>gpu_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This function is documented in the header file. </p>
<p>Return a string describing how compatible the GPU with given <code>index</code> is. </p>

</div>
</div>
<a class="anchor" id="ab791918a19cd4aefc96a099f27f0ca1e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gpu_set_host_malloc_and_free </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bUseGpuKernels</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="gpu__utils_8h.xhtml#a4a5340aac0cf9145eaae8a5ac5d6b0dc">gmx_host_alloc_t</a> **&#160;</td>
          <td class="paramname"><em>nb_alloc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="gpu__utils_8h.xhtml#aff7e0f62ae0592b0aefadcf9071d0435">gmx_host_free_t</a> **&#160;</td>
          <td class="paramname"><em>nb_free</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set page-locked memory allocation functions used by the GPU host. </p>
<p>Set page-locked memory allocation functions used by the GPU host.</p>
<p>Since GPU support is not configured, there is no host memory to allocate. </p>

</div>
</div>
<a class="anchor" id="a1ec86f3b9b0407f36d5bc6282a27fa68"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void init_gpu </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1MDLogger.xhtml">gmx::MDLogger</a> &amp;&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structgmx__device__info__t.xhtml">gmx_device_info_t</a> *&#160;</td>
          <td class="paramname"><em>deviceInfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This function is documented in the header file. </p>
<p>Initializes the GPU described by <code>deviceInfo</code>. </p>

</div>
</div>
<a class="anchor" id="a2e270f50e7be2fba9bb967d53590f921"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int is_gmx_supported_gpu_id </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structgmx__device__info__t.xhtml">gmx_device_info_t</a> *&#160;</td>
          <td class="paramname"><em>ocl_gpu_device</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns true if the gpu characterized by the device properties is supported by the native gpu acceleration. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the GPU properties passed indicate a compatible GPU, otherwise false. </dd></dl>

</div>
</div>
<a class="anchor" id="a63db61f0c7660eb3a7a3db486303b47b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool runningOnCompatibleOSForAmd </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return true if executing on compatible OS for AMD OpenCL. </p>
<p>This is assumed to be true for OS X version of at least 10.10.4 and all other OS flavors.</p>
<p>Uses the BSD sysctl() interfaces to extract the kernel version.</p>
<dl class="section return"><dt>Returns</dt><dd>true if version is 14.4 or later (= OS X version 10.10.4), or OS is not Darwin. </dd></dl>

</div>
</div>
<a class="anchor" id="ac368c4a971290513fbabe74a0c80b716"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t sizeof_gpu_dev_info </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This function is documented in the header file. </p>
<p>Returns the size of the gpu_dev_info struct. </p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:16 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

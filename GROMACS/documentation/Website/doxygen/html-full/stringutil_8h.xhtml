<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/utility/stringutil.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_8a21c46af9718d1f610eb513153099d7.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a46192700e9e8ed44c648f0a55ee9a53.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_a64a619a73689309b11b91ae52c63e36.xhtml">utility</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">stringutil.h File Reference<div class="ingroups"><a class="el" href="group__group__publicapi.xhtml">Public API</a> &#124; <a class="el" href="group__module__utility.xhtml">Low-Level Utilities (utility)</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;cstdarg&gt;</code><br/>
<code>#include &lt;cstring&gt;</code><br/>
<code>#include &lt;string&gt;</code><br/>
<code>#include &lt;vector&gt;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for stringutil.h:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="stringutil_8h__incl.svg" width="326" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><div class="textblock"><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> This graph shows which files directly or indirectly include this file:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="stringutil_8h__dep__incl.svg" width="9086" height="246"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Declares common string utility and formatting routines. </p>
<dl class="section author"><dt>Author</dt><dd>Teemu Murtola <a href="#" onclick="location.href='mai'+'lto:'+'tee'+'mu'+'.mu'+'rt'+'ola'+'@g'+'mai'+'l.'+'com'; return false;">teemu<span style="display: none;">.nosp@m.</span>.mur<span style="display: none;">.nosp@m.</span>tola@<span style="display: none;">.nosp@m.</span>gmai<span style="display: none;">.nosp@m.</span>l.com</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1StringFormatter.xhtml">gmx::StringFormatter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function object that wraps a call to <a class="el" href="group__module__utility.xhtml#gaed06df18ca6f9fc3f42bad9ea4d7e025" title="Formats a string (snprintf() wrapper). ">formatString()</a> that expects a single conversion argument, for use with algorithms.  <a href="classgmx_1_1StringFormatter.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1IdentityFormatter.xhtml">gmx::IdentityFormatter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function object to implement the same interface as <code><a class="el" href="classgmx_1_1StringFormatter.xhtml" title="Function object that wraps a call to formatString() that expects a single conversion argument...">StringFormatter</a></code> to use with strings that should not be formatted further.  <a href="classgmx_1_1IdentityFormatter.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TextLineWrapperSettings.xhtml">gmx::TextLineWrapperSettings</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores settings for line wrapping.  <a href="classgmx_1_1TextLineWrapperSettings.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TextLineWrapper.xhtml">gmx::TextLineWrapper</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wraps lines to a predefined length.  <a href="classgmx_1_1TextLineWrapper.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga2f35bd1d4a654edabc2a3aaf6f6bccea"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#ga2f35bd1d4a654edabc2a3aaf6f6bccea">gmx::isNullOrEmpty</a> (const char *str)</td></tr>
<tr class="memdesc:ga2f35bd1d4a654edabc2a3aaf6f6bccea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests whether a string is null or empty.  <a href="group__module__utility.xhtml#ga2f35bd1d4a654edabc2a3aaf6f6bccea">More...</a><br/></td></tr>
<tr class="separator:ga2f35bd1d4a654edabc2a3aaf6f6bccea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8adb72aeb7775a649d7378c8e51321e6"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#ga8adb72aeb7775a649d7378c8e51321e6">gmx::startsWith</a> (const std::string &amp;str, const std::string &amp;prefix)</td></tr>
<tr class="memdesc:ga8adb72aeb7775a649d7378c8e51321e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests whether a string starts with another string.  <a href="group__module__utility.xhtml#ga8adb72aeb7775a649d7378c8e51321e6">More...</a><br/></td></tr>
<tr class="separator:ga8adb72aeb7775a649d7378c8e51321e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga87824e9b26adc46671ccffa89f3985d0"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#ga87824e9b26adc46671ccffa89f3985d0">gmx::startsWith</a> (const char *str, const char *prefix)</td></tr>
<tr class="memdesc:ga87824e9b26adc46671ccffa89f3985d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests whether a string starts with another string.  <a href="group__module__utility.xhtml#ga87824e9b26adc46671ccffa89f3985d0">More...</a><br/></td></tr>
<tr class="separator:ga87824e9b26adc46671ccffa89f3985d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8b22d1fd014cc09c9cf7c4c1615c0a1b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#ga8b22d1fd014cc09c9cf7c4c1615c0a1b">gmx::endsWith</a> (const char *str, const char *suffix)</td></tr>
<tr class="memdesc:ga8b22d1fd014cc09c9cf7c4c1615c0a1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests whether a string ends with another string.  <a href="group__module__utility.xhtml#ga8b22d1fd014cc09c9cf7c4c1615c0a1b">More...</a><br/></td></tr>
<tr class="separator:ga8b22d1fd014cc09c9cf7c4c1615c0a1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa1e33d963e2538664428c8db95ca564e"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#gaa1e33d963e2538664428c8db95ca564e">gmx::endsWith</a> (const std::string &amp;str, const char *suffix)</td></tr>
<tr class="memdesc:gaa1e33d963e2538664428c8db95ca564e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests whether a string ends with another string.  <a href="group__module__utility.xhtml#gaa1e33d963e2538664428c8db95ca564e">More...</a><br/></td></tr>
<tr class="separator:gaa1e33d963e2538664428c8db95ca564e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5d6c1daa93bf46a2c397d179e007e3e8"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#ga5d6c1daa93bf46a2c397d179e007e3e8">gmx::contains</a> (const std::string &amp;str, const char *substr)</td></tr>
<tr class="memdesc:ga5d6c1daa93bf46a2c397d179e007e3e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests whether a string contains another as a substring.  <a href="group__module__utility.xhtml#ga5d6c1daa93bf46a2c397d179e007e3e8">More...</a><br/></td></tr>
<tr class="separator:ga5d6c1daa93bf46a2c397d179e007e3e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac0bef974d105fbfcc7e5362111eafed5"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#gac0bef974d105fbfcc7e5362111eafed5">gmx::contains</a> (const std::string &amp;str, const std::string &amp;substr)</td></tr>
<tr class="memdesc:gac0bef974d105fbfcc7e5362111eafed5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests whether a string contains another as a substring.  <a href="group__module__utility.xhtml#gac0bef974d105fbfcc7e5362111eafed5">More...</a><br/></td></tr>
<tr class="separator:gac0bef974d105fbfcc7e5362111eafed5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaea61e0b5bfc1f24f51a9eb5272b51603"><td class="memItemLeft" align="right" valign="top">std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#gaea61e0b5bfc1f24f51a9eb5272b51603">gmx::countWords</a> (const char *s)</td></tr>
<tr class="memdesc:gaea61e0b5bfc1f24f51a9eb5272b51603"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns number of space-separated words in zero-terminated char ptr.  <a href="group__module__utility.xhtml#gaea61e0b5bfc1f24f51a9eb5272b51603">More...</a><br/></td></tr>
<tr class="separator:gaea61e0b5bfc1f24f51a9eb5272b51603"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae837a92609acdf559a6b8587e9233008"><td class="memItemLeft" align="right" valign="top">std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#gae837a92609acdf559a6b8587e9233008">gmx::countWords</a> (const std::string &amp;str)</td></tr>
<tr class="memdesc:gae837a92609acdf559a6b8587e9233008"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of space-separated words in a string object.  <a href="group__module__utility.xhtml#gae837a92609acdf559a6b8587e9233008">More...</a><br/></td></tr>
<tr class="separator:gae837a92609acdf559a6b8587e9233008"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga555d78d19565dec63c740318187b4d0d"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#ga555d78d19565dec63c740318187b4d0d">gmx::endsWith</a> (const std::string &amp;str, const std::string &amp;suffix)</td></tr>
<tr class="memdesc:ga555d78d19565dec63c740318187b4d0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests whether a string ends with another string.  <a href="group__module__utility.xhtml#ga555d78d19565dec63c740318187b4d0d">More...</a><br/></td></tr>
<tr class="separator:ga555d78d19565dec63c740318187b4d0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaea84ff4850c382e09a3e158939b34b3e"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#gaea84ff4850c382e09a3e158939b34b3e">gmx::stripSuffixIfPresent</a> (const std::string &amp;str, const char *suffix)</td></tr>
<tr class="memdesc:gaea84ff4850c382e09a3e158939b34b3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes a suffix from a string.  <a href="group__module__utility.xhtml#gaea84ff4850c382e09a3e158939b34b3e">More...</a><br/></td></tr>
<tr class="separator:gaea84ff4850c382e09a3e158939b34b3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5f31464a19604fde038dba36307ac066"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#ga5f31464a19604fde038dba36307ac066">gmx::stripString</a> (const std::string &amp;str)</td></tr>
<tr class="memdesc:ga5f31464a19604fde038dba36307ac066"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes leading and trailing whitespace from a string.  <a href="group__module__utility.xhtml#ga5f31464a19604fde038dba36307ac066">More...</a><br/></td></tr>
<tr class="separator:ga5f31464a19604fde038dba36307ac066"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaed06df18ca6f9fc3f42bad9ea4d7e025"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#gaed06df18ca6f9fc3f42bad9ea4d7e025">gmx::formatString</a> (const char *fmt,...)</td></tr>
<tr class="memdesc:gaed06df18ca6f9fc3f42bad9ea4d7e025"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formats a string (snprintf() wrapper).  <a href="group__module__utility.xhtml#gaed06df18ca6f9fc3f42bad9ea4d7e025">More...</a><br/></td></tr>
<tr class="separator:gaed06df18ca6f9fc3f42bad9ea4d7e025"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1034db9546754cdf0a21ef6c131c0747"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#ga1034db9546754cdf0a21ef6c131c0747">gmx::formatStringV</a> (const char *fmt, va_list ap)</td></tr>
<tr class="memdesc:ga1034db9546754cdf0a21ef6c131c0747"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formats a string (vsnprintf() wrapper).  <a href="group__module__utility.xhtml#ga1034db9546754cdf0a21ef6c131c0747">More...</a><br/></td></tr>
<tr class="separator:ga1034db9546754cdf0a21ef6c131c0747"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa21c247b747e12412da58cb9f6d500ef"><td class="memTemplParams" colspan="2">template&lt;typename InputIterator , typename FormatterType &gt; </td></tr>
<tr class="memitem:gaa21c247b747e12412da58cb9f6d500ef"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#gaa21c247b747e12412da58cb9f6d500ef">gmx::formatAndJoin</a> (InputIterator begin, InputIterator end, const char *separator, const FormatterType &amp;formatter)</td></tr>
<tr class="memdesc:gaa21c247b747e12412da58cb9f6d500ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formats all the range as strings, and then joins them with a separator in between.  <a href="group__module__utility.xhtml#gaa21c247b747e12412da58cb9f6d500ef">More...</a><br/></td></tr>
<tr class="separator:gaa21c247b747e12412da58cb9f6d500ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8e151e320e4072b2cc254b653077bb68"><td class="memTemplParams" colspan="2">template&lt;typename ContainerType , typename FormatterType &gt; </td></tr>
<tr class="memitem:ga8e151e320e4072b2cc254b653077bb68"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#ga8e151e320e4072b2cc254b653077bb68">gmx::formatAndJoin</a> (const ContainerType &amp;container, const char *separator, const FormatterType &amp;formatter)</td></tr>
<tr class="memdesc:ga8e151e320e4072b2cc254b653077bb68"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formats all elements of the container as strings, and then joins them with a separator in between.  <a href="group__module__utility.xhtml#ga8e151e320e4072b2cc254b653077bb68">More...</a><br/></td></tr>
<tr class="separator:ga8e151e320e4072b2cc254b653077bb68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae0ae45171d0f46a06095bf86855a8b28"><td class="memTemplParams" colspan="2">template&lt;typename InputIterator &gt; </td></tr>
<tr class="memitem:gae0ae45171d0f46a06095bf86855a8b28"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#gae0ae45171d0f46a06095bf86855a8b28">gmx::joinStrings</a> (InputIterator begin, InputIterator end, const char *separator)</td></tr>
<tr class="memdesc:gae0ae45171d0f46a06095bf86855a8b28"><td class="mdescLeft">&#160;</td><td class="mdescRight">Joins strings from a range with a separator in between.  <a href="group__module__utility.xhtml#gae0ae45171d0f46a06095bf86855a8b28">More...</a><br/></td></tr>
<tr class="separator:gae0ae45171d0f46a06095bf86855a8b28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7dec76a57e8089a89f9298fb2fbaf2ed"><td class="memTemplParams" colspan="2">template&lt;typename ContainerType &gt; </td></tr>
<tr class="memitem:ga7dec76a57e8089a89f9298fb2fbaf2ed"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#ga7dec76a57e8089a89f9298fb2fbaf2ed">gmx::joinStrings</a> (const ContainerType &amp;container, const char *separator)</td></tr>
<tr class="memdesc:ga7dec76a57e8089a89f9298fb2fbaf2ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Joins strings from a container with a separator in between.  <a href="group__module__utility.xhtml#ga7dec76a57e8089a89f9298fb2fbaf2ed">More...</a><br/></td></tr>
<tr class="separator:ga7dec76a57e8089a89f9298fb2fbaf2ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga31335553bd6174a68ad8d30c48de3df5"><td class="memTemplParams" colspan="2">template&lt;size_t count&gt; </td></tr>
<tr class="memitem:ga31335553bd6174a68ad8d30c48de3df5"><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#ga31335553bd6174a68ad8d30c48de3df5">gmx::joinStrings</a> (const char *const (&amp;array)[count], const char *separator)</td></tr>
<tr class="memdesc:ga31335553bd6174a68ad8d30c48de3df5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Joins strings from an array with a separator in between.  <a href="group__module__utility.xhtml#ga31335553bd6174a68ad8d30c48de3df5">More...</a><br/></td></tr>
<tr class="separator:ga31335553bd6174a68ad8d30c48de3df5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga720e46b4a7625c675507adbea1df3f96"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#ga720e46b4a7625c675507adbea1df3f96">gmx::splitString</a> (const std::string &amp;str)</td></tr>
<tr class="memdesc:ga720e46b4a7625c675507adbea1df3f96"><td class="mdescLeft">&#160;</td><td class="mdescRight">Splits a string to whitespace separated tokens.  <a href="group__module__utility.xhtml#ga720e46b4a7625c675507adbea1df3f96">More...</a><br/></td></tr>
<tr class="separator:ga720e46b4a7625c675507adbea1df3f96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5cb3d438ea0c5c205ce8aa5430e89d4b"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#ga5cb3d438ea0c5c205ce8aa5430e89d4b">gmx::splitDelimitedString</a> (const std::string &amp;str, char delim)</td></tr>
<tr class="memdesc:ga5cb3d438ea0c5c205ce8aa5430e89d4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Splits a string to tokens separated by a given delimiter.  <a href="group__module__utility.xhtml#ga5cb3d438ea0c5c205ce8aa5430e89d4b">More...</a><br/></td></tr>
<tr class="separator:ga5cb3d438ea0c5c205ce8aa5430e89d4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaff5615f507445a241a90970d4ad3705c"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#gaff5615f507445a241a90970d4ad3705c">gmx::splitAndTrimDelimitedString</a> (const std::string &amp;str, char delim)</td></tr>
<tr class="memdesc:gaff5615f507445a241a90970d4ad3705c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Splits <code>str</code> to tokens separated by delimiter <code>delim</code>. Removes leading and trailing whitespace from those strings with std::isspace.  <a href="group__module__utility.xhtml#gaff5615f507445a241a90970d4ad3705c">More...</a><br/></td></tr>
<tr class="separator:gaff5615f507445a241a90970d4ad3705c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1e4d61dba5d6fb924b8888e5597d2d0f"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#ga1e4d61dba5d6fb924b8888e5597d2d0f">gmx::replaceAll</a> (const std::string &amp;input, const char *from, const char *to)</td></tr>
<tr class="memdesc:ga1e4d61dba5d6fb924b8888e5597d2d0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Replace all occurrences of a string with another string.  <a href="group__module__utility.xhtml#ga1e4d61dba5d6fb924b8888e5597d2d0f">More...</a><br/></td></tr>
<tr class="separator:ga1e4d61dba5d6fb924b8888e5597d2d0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaba6fb72c71891e47fc68c36167bee72e"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#gaba6fb72c71891e47fc68c36167bee72e">gmx::replaceAll</a> (const std::string &amp;input, const std::string &amp;from, const std::string &amp;to)</td></tr>
<tr class="memdesc:gaba6fb72c71891e47fc68c36167bee72e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Replace all occurrences of a string with another string.  <a href="group__module__utility.xhtml#gaba6fb72c71891e47fc68c36167bee72e">More...</a><br/></td></tr>
<tr class="separator:gaba6fb72c71891e47fc68c36167bee72e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaacdb65ab5673b946ea9764f708a4afcc"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#gaacdb65ab5673b946ea9764f708a4afcc">gmx::replaceAllWords</a> (const std::string &amp;input, const char *from, const char *to)</td></tr>
<tr class="memdesc:gaacdb65ab5673b946ea9764f708a4afcc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Replace whole words with others.  <a href="group__module__utility.xhtml#gaacdb65ab5673b946ea9764f708a4afcc">More...</a><br/></td></tr>
<tr class="separator:gaacdb65ab5673b946ea9764f708a4afcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2df338df2e0b32b8c1fd032452409d57"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__utility.xhtml#ga2df338df2e0b32b8c1fd032452409d57">gmx::replaceAllWords</a> (const std::string &amp;input, const std::string &amp;from, const std::string &amp;to)</td></tr>
<tr class="memdesc:ga2df338df2e0b32b8c1fd032452409d57"><td class="mdescLeft">&#160;</td><td class="mdescRight">Replace whole words with others.  <a href="group__module__utility.xhtml#ga2df338df2e0b32b8c1fd032452409d57">More...</a><br/></td></tr>
<tr class="separator:ga2df338df2e0b32b8c1fd032452409d57"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:19 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

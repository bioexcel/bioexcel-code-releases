<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::Bias Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1Bias.xhtml">Bias</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1Bias-members.xhtml">List of all members</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::Bias Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/awh/bias.h&gt;</code></p>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>A bias acting on a multidimensional coordinate. </p>
<p>At each step AWH should provide its biases with updated values of their coordinates. Each bias provides AWH with an updated bias forces and the corresponding potential.</p>
<p>See the user manual for details on the algorithm and equations.</p>
<p>The bias is responsible for keeping and updating a free energy estimate along the coordinate. The bias potential is basically a function of the free energy estimate and so also changes by the update. The free energy update is based on information from coordinate samples collected at a constant bias potential, between updates.</p>
<p>The bias keeps a grid with coordinate points that organizes spatial information about the coordinate. The grid has the the same geometry as the coordinate, i.e. they have the same dimensionality and periodicity (if any). The number of points in the grid sets the resolution of the collected data and its extent defines the sampling region of interest.</p>
<p>Each coordinate point has further statistical properties and function values which a grid point does not know about. E.g., for the bias each coordinate point is associated with values of the bias, free energy and target distribution, accumulated sampling weight, etc. For this the bias attaches to each grid point a state. The grid + vector of point states are the bias coordinate points.</p>
<p>The bias has a fairly complex global state keeping track of where the system (coordinate) currently is (<a class="el" href="classgmx_1_1CoordState.xhtml" title="Keeps track of the current coordinate value, grid index and umbrella location. ">CoordState</a>), where it has sampled since the last update (<a class="el" href="classgmx_1_1BiasState.xhtml" title="The state of a bias. ">BiasState</a>) and controlling the free energy convergence rate (<a class="el" href="classgmx_1_1HistogramSize.xhtml" title="Tracks global size related properties of the bias histogram. ">HistogramSize</a>).</p>
<p>Partly, the complexity comes from the bias having two convergence stages: an initial stage which in an heuristic, non-deterministic way restricts the early convergence rate for sake of robustness; and a final stage where the convergence rate is constant. The length of the initial stage depends on the sampling and is unknown beforehand.</p>
<p>Another complexity comes from the fact that coordinate points, for sake of efficiency in the case of many grid points, are typically only accessed in recently sampled regions even though the free energy update is inherently global and affects all points. The bias allows points thay are non-local at the time the update was issued to postpone ("skip", as it is called in the code) the update. A non-local point is defined as a point which has not been sampled since the last update. Local points are points that have been sampled since the last update. The (current) set of local points are kept track of by the bias state and reset after every update. An update is called local if it only updates local points. Non-local points will temporarily "skip" the update until next time they are local (or when a global update is issued). For this to work, the bias keeps a global "clock" (in <a class="el" href="classgmx_1_1HistogramSize.xhtml" title="Tracks global size related properties of the bias histogram. ">HistogramSize</a>) of the number of issued updates. Each <a class="el" href="classgmx_1_1PointState.xhtml" title="The state of a coordinate point. ">PointState</a> also has its own local "clock" with the counting the number of updates it has pulled through. When a point updates its state it asserts that its local clock is synchronized with the global clock. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aa82610508a501aa57b8b5be5054920f2"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Bias.xhtml#aa82610508a501aa57b8b5be5054920f2">ThisRankWillDoIO</a> { <a class="el" href="classgmx_1_1Bias.xhtml#aa82610508a501aa57b8b5be5054920f2abafd7322c6e97d25b6299b5d6fe8920b">ThisRankWillDoIO::No</a>, 
<a class="el" href="classgmx_1_1Bias.xhtml#aa82610508a501aa57b8b5be5054920f2a93cba07454f06a4a960172bbd6e2a435">ThisRankWillDoIO::Yes</a>
 }</td></tr>
<tr class="memdesc:aa82610508a501aa57b8b5be5054920f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enum for requesting <a class="el" href="classgmx_1_1Bias.xhtml" title="A bias acting on a multidimensional coordinate. ">Bias</a> set up with(out) I/O on this rank.  <a href="classgmx_1_1Bias.xhtml#aa82610508a501aa57b8b5be5054920f2">More...</a><br/></td></tr>
<tr class="separator:aa82610508a501aa57b8b5be5054920f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a01aacd9d5c1239c96907923a5fd6e4d4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Bias.xhtml#a01aacd9d5c1239c96907923a5fd6e4d4">Bias</a> (int biasIndexInCollection, const AwhParams &amp;awhParams, const AwhBiasParams &amp;awhBiasParams, const std::vector&lt; <a class="el" href="structgmx_1_1DimParams.xhtml">DimParams</a> &gt; &amp;<a class="el" href="classgmx_1_1Bias.xhtml#a098821d771c36e56344d2024d251a605">dimParams</a>, double beta, double mdTimeStep, int numSharingSimulations, const std::string &amp;biasInitFilename, <a class="el" href="classgmx_1_1Bias.xhtml#aa82610508a501aa57b8b5be5054920f2">ThisRankWillDoIO</a> thisRankWillDoIO, <a class="el" href="classgmx_1_1BiasParams.xhtml#a6e4efe51c269090a20241639f64bcb03">BiasParams::DisableUpdateSkips</a> disableUpdateSkips=<a class="el" href="classgmx_1_1BiasParams.xhtml#a6e4efe51c269090a20241639f64bcb03a7fa3b767c460b54a2be4d49030b349c7">BiasParams::DisableUpdateSkips::no</a>)</td></tr>
<tr class="memdesc:a01aacd9d5c1239c96907923a5fd6e4d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a01aacd9d5c1239c96907923a5fd6e4d4">More...</a><br/></td></tr>
<tr class="separator:a01aacd9d5c1239c96907923a5fd6e4d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac365893c2cee349709bf83532d7e65ae"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Bias.xhtml#ac365893c2cee349709bf83532d7e65ae">printInitializationToLog</a> (FILE *fplog) const </td></tr>
<tr class="memdesc:ac365893c2cee349709bf83532d7e65ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print information about initialization to log file.  <a href="#ac365893c2cee349709bf83532d7e65ae">More...</a><br/></td></tr>
<tr class="separator:ac365893c2cee349709bf83532d7e65ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68943632bbb5079af5ff9f1423089451"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1ArrayRef.xhtml">gmx::ArrayRef</a>&lt; const double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Bias.xhtml#a68943632bbb5079af5ff9f1423089451">calcForceAndUpdateBias</a> (const <a class="el" href="namespacegmx.xhtml#a079fa4aee8e4c6663f35aa1d0f4bac4b">awh_dvec</a> coordValue, double *awhPotential, double *potentialJump, const t_commrec *commRecord, const gmx_multisim_t *ms, double t, gmx_int64_t step, gmx_int64_t seed, FILE *fplog)</td></tr>
<tr class="memdesc:a68943632bbb5079af5ff9f1423089451"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evolves the bias at every step.  <a href="#a68943632bbb5079af5ff9f1423089451">More...</a><br/></td></tr>
<tr class="separator:a68943632bbb5079af5ff9f1423089451"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb830f3afaf6696c3111669fea04e2d8"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Bias.xhtml#abb830f3afaf6696c3111669fea04e2d8">calcConvolvedBias</a> (const <a class="el" href="namespacegmx.xhtml#a079fa4aee8e4c6663f35aa1d0f4bac4b">awh_dvec</a> &amp;coordValue) const </td></tr>
<tr class="memdesc:abb830f3afaf6696c3111669fea04e2d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the convolved bias for a given coordinate value.  <a href="#abb830f3afaf6696c3111669fea04e2d8">More...</a><br/></td></tr>
<tr class="separator:abb830f3afaf6696c3111669fea04e2d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcff31915c01491037e7e6c80a0c65de"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Bias.xhtml#adcff31915c01491037e7e6c80a0c65de">restoreStateFromHistory</a> (const AwhBiasHistory *biasHistory, const t_commrec *cr)</td></tr>
<tr class="memdesc:adcff31915c01491037e7e6c80a0c65de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Restore the bias state from history on the master rank and broadcast it.  <a href="#adcff31915c01491037e7e6c80a0c65de">More...</a><br/></td></tr>
<tr class="separator:adcff31915c01491037e7e6c80a0c65de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e539cde241fbc3fd0ec1ba3c8d3266b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Bias.xhtml#a6e539cde241fbc3fd0ec1ba3c8d3266b">initHistoryFromState</a> (AwhBiasHistory *biasHistory) const </td></tr>
<tr class="memdesc:a6e539cde241fbc3fd0ec1ba3c8d3266b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate and initialize a bias history with the given bias state.  <a href="#a6e539cde241fbc3fd0ec1ba3c8d3266b">More...</a><br/></td></tr>
<tr class="separator:a6e539cde241fbc3fd0ec1ba3c8d3266b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51a6749923cc057db5dc099c716d62b4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Bias.xhtml#a51a6749923cc057db5dc099c716d62b4">updateHistory</a> (AwhBiasHistory *biasHistory) const </td></tr>
<tr class="memdesc:a51a6749923cc057db5dc099c716d62b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update the bias history with the current state.  <a href="#a51a6749923cc057db5dc099c716d62b4">More...</a><br/></td></tr>
<tr class="separator:a51a6749923cc057db5dc099c716d62b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaee34334a377527804c3aeeab3406a50"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaee34334a377527804c3aeeab3406a50"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Bias.xhtml#aaee34334a377527804c3aeeab3406a50">doSkippedUpdatesForAllPoints</a> ()</td></tr>
<tr class="memdesc:aaee34334a377527804c3aeeab3406a50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Do all previously skipped updates. Public for use by tests. <br/></td></tr>
<tr class="separator:aaee34334a377527804c3aeeab3406a50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a160cac579783d1bcac79e91976fbd5d8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a160cac579783d1bcac79e91976fbd5d8"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Bias.xhtml#a160cac579783d1bcac79e91976fbd5d8">ndim</a> () const </td></tr>
<tr class="memdesc:a160cac579783d1bcac79e91976fbd5d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the dimensionality of the bias. <br/></td></tr>
<tr class="separator:a160cac579783d1bcac79e91976fbd5d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a098821d771c36e56344d2024d251a605"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a098821d771c36e56344d2024d251a605"></a>
const std::vector&lt; <a class="el" href="structgmx_1_1DimParams.xhtml">DimParams</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Bias.xhtml#a098821d771c36e56344d2024d251a605">dimParams</a> () const </td></tr>
<tr class="memdesc:a098821d771c36e56344d2024d251a605"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the dimension parameters. <br/></td></tr>
<tr class="separator:a098821d771c36e56344d2024d251a605"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d1368516578a7cfc86a971b488aca2e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8d1368516578a7cfc86a971b488aca2e"></a>
const <a class="el" href="classgmx_1_1BiasParams.xhtml">BiasParams</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Bias.xhtml#a8d1368516578a7cfc86a971b488aca2e">params</a> () const </td></tr>
<tr class="memdesc:a8d1368516578a7cfc86a971b488aca2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the bias parameters. <br/></td></tr>
<tr class="separator:a8d1368516578a7cfc86a971b488aca2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a946c62fd75c3a6f5e00e80df2717f892"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a946c62fd75c3a6f5e00e80df2717f892"></a>
const <a class="el" href="classgmx_1_1BiasState.xhtml">BiasState</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Bias.xhtml#a946c62fd75c3a6f5e00e80df2717f892">state</a> () const </td></tr>
<tr class="memdesc:a946c62fd75c3a6f5e00e80df2717f892"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the global state of the bias. <br/></td></tr>
<tr class="separator:a946c62fd75c3a6f5e00e80df2717f892"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd5ce74a6ab424ebdc7d0ade2a01f69f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abd5ce74a6ab424ebdc7d0ade2a01f69f"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Bias.xhtml#abd5ce74a6ab424ebdc7d0ade2a01f69f">biasIndex</a> () const </td></tr>
<tr class="memdesc:abd5ce74a6ab424ebdc7d0ade2a01f69f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the index of the bias. <br/></td></tr>
<tr class="separator:abd5ce74a6ab424ebdc7d0ade2a01f69f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0414998f94092d7eba86f1dcb529398"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespacegmx.xhtml#a079fa4aee8e4c6663f35aa1d0f4bac4b">awh_dvec</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Bias.xhtml#ab0414998f94092d7eba86f1dcb529398">getGridCoordValue</a> (size_t gridPointIndex) const </td></tr>
<tr class="memdesc:ab0414998f94092d7eba86f1dcb529398"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the coordinate value for a grid point.  <a href="#ab0414998f94092d7eba86f1dcb529398">More...</a><br/></td></tr>
<tr class="separator:ab0414998f94092d7eba86f1dcb529398"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0628323c5d51669edc7dfb34fea58f1a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0628323c5d51669edc7dfb34fea58f1a"></a>
const <a class="el" href="classgmx_1_1CorrelationGrid.xhtml">CorrelationGrid</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Bias.xhtml#a0628323c5d51669edc7dfb34fea58f1a">forceCorrelationGrid</a> () const </td></tr>
<tr class="memdesc:a0628323c5d51669edc7dfb34fea58f1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a const reference to the force correlation grid. <br/></td></tr>
<tr class="separator:a0628323c5d51669edc7dfb34fea58f1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad47aef3b005ab79d25aef54652dbc64d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad47aef3b005ab79d25aef54652dbc64d"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Bias.xhtml#ad47aef3b005ab79d25aef54652dbc64d">numEnergySubblocksToWrite</a> () const </td></tr>
<tr class="memdesc:ad47aef3b005ab79d25aef54652dbc64d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the number of data blocks that have been prepared for writing. <br/></td></tr>
<tr class="separator:ad47aef3b005ab79d25aef54652dbc64d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade520e4f3326544e5905068ed5d92f62"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Bias.xhtml#ade520e4f3326544e5905068ed5d92f62">writeToEnergySubblocks</a> (t_enxsubblock *subblock) const </td></tr>
<tr class="memdesc:ade520e4f3326544e5905068ed5d92f62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write bias data blocks to energy subblocks.  <a href="#ade520e4f3326544e5905068ed5d92f62">More...</a><br/></td></tr>
<tr class="separator:ade520e4f3326544e5905068ed5d92f62"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="aa82610508a501aa57b8b5be5054920f2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classgmx_1_1Bias.xhtml#aa82610508a501aa57b8b5be5054920f2">gmx::Bias::ThisRankWillDoIO</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enum for requesting <a class="el" href="classgmx_1_1Bias.xhtml" title="A bias acting on a multidimensional coordinate. ">Bias</a> set up with(out) I/O on this rank. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><em><a class="anchor" id="aa82610508a501aa57b8b5be5054920f2abafd7322c6e97d25b6299b5d6fe8920b"></a>No</em>&nbsp;</td><td class="fielddoc">
<p>This rank will not do I/O. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="aa82610508a501aa57b8b5be5054920f2a93cba07454f06a4a960172bbd6e2a435"></a>Yes</em>&nbsp;</td><td class="fielddoc">
<p>This rank will do I/O. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a01aacd9d5c1239c96907923a5fd6e4d4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">gmx::Bias::Bias </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>biasIndexInCollection</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const AwhParams &amp;&#160;</td>
          <td class="paramname"><em>awhParams</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const AwhBiasParams &amp;&#160;</td>
          <td class="paramname"><em>awhBiasParams</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="structgmx_1_1DimParams.xhtml">DimParams</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>dimParams</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>beta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>mdTimeStep</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>numSharingSimulations</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>biasInitFilename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classgmx_1_1Bias.xhtml#aa82610508a501aa57b8b5be5054920f2">ThisRankWillDoIO</a>&#160;</td>
          <td class="paramname"><em>thisRankWillDoIO</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classgmx_1_1BiasParams.xhtml#a6e4efe51c269090a20241639f64bcb03">BiasParams::DisableUpdateSkips</a>&#160;</td>
          <td class="paramname"><em>disableUpdateSkips</em> = <code><a class="el" href="classgmx_1_1BiasParams.xhtml#a6e4efe51c269090a20241639f64bcb03a7fa3b767c460b54a2be4d49030b349c7">BiasParams::DisableUpdateSkips::no</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">biasIndexInCollection</td><td>Index of the bias in collection. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">awhParams</td><td>AWH parameters. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">awhBiasParams</td><td><a class="el" href="classgmx_1_1Bias.xhtml" title="A bias acting on a multidimensional coordinate. ">Bias</a> parameters. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dimParams</td><td><a class="el" href="classgmx_1_1Bias.xhtml" title="A bias acting on a multidimensional coordinate. ">Bias</a> dimension parameters. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">beta</td><td>1/(k_B T). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mdTimeStep</td><td>The MD time step. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSharingSimulations</td><td>The number of simulations to share the bias across. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">biasInitFilename</td><td>Name of file to read PMF and target from. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">thisRankWillDoIO</td><td>Tells whether this MPI rank will do I/O (checkpointing, AWH output), normally (only) the master rank does I/O. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">disableUpdateSkips</td><td>If to disable update skips, useful for testing. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="abb830f3afaf6696c3111669fea04e2d8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double gmx::Bias::calcConvolvedBias </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacegmx.xhtml#a079fa4aee8e4c6663f35aa1d0f4bac4b">awh_dvec</a> &amp;&#160;</td>
          <td class="paramname"><em>coordValue</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates the convolved bias for a given coordinate value. </p>
<p>The convolved bias is the effective bias acting on the coordinate. Since the bias here has arbitrary normalization, this only makes sense as a relative, to other coordinate values, measure of the bias.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">coordValue</td><td>The coordinate value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the convolved bias &gt;= -GMX_FLOAT_MAX. </dd></dl>

</div>
</div>
<a class="anchor" id="a68943632bbb5079af5ff9f1423089451"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1ArrayRef.xhtml">gmx::ArrayRef</a>&lt; const double &gt; gmx::Bias::calcForceAndUpdateBias </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespacegmx.xhtml#a079fa4aee8e4c6663f35aa1d0f4bac4b">awh_dvec</a>&#160;</td>
          <td class="paramname"><em>coordValue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>awhPotential</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>potentialJump</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const t_commrec *&#160;</td>
          <td class="paramname"><em>commRecord</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const gmx_multisim_t *&#160;</td>
          <td class="paramname"><em>ms</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>t</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gmx_int64_t&#160;</td>
          <td class="paramname"><em>step</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gmx_int64_t&#160;</td>
          <td class="paramname"><em>seed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FILE *&#160;</td>
          <td class="paramname"><em>fplog</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Evolves the bias at every step. </p>
<p>At each step the bias step needs to:</p>
<ul>
<li>set the bias force and potential;</li>
<li>update the free energy and bias if needed;</li>
<li>reweight samples to extract the PMF.</li>
</ul>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">coordValue</td><td>The current coordinate value(s). </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">awhPotential</td><td><a class="el" href="classgmx_1_1Bias.xhtml" title="A bias acting on a multidimensional coordinate. ">Bias</a> potential. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">potentialJump</td><td>Change in bias potential for this bias. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">commRecord</td><td>Struct for intra-simulation communication. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ms</td><td>Struct for multi-simulation communication. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">t</td><td>Time. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">step</td><td>Time step. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">seed</td><td>Random seed. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">fplog</td><td>Log file. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a reference to the bias force, size <a class="el" href="classgmx_1_1Bias.xhtml#a160cac579783d1bcac79e91976fbd5d8">ndim()</a>, valid until the next call of this method or destruction of <a class="el" href="classgmx_1_1Bias.xhtml" title="A bias acting on a multidimensional coordinate. ">Bias</a>, whichever comes first. </dd></dl>

</div>
</div>
<a class="anchor" id="ab0414998f94092d7eba86f1dcb529398"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespacegmx.xhtml#a079fa4aee8e4c6663f35aa1d0f4bac4b">awh_dvec</a>&amp; gmx::Bias::getGridCoordValue </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>gridPointIndex</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the coordinate value for a grid point. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gridPointIndex</td><td>The index of the grid point. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a6e539cde241fbc3fd0ec1ba3c8d3266b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::Bias::initHistoryFromState </td>
          <td>(</td>
          <td class="paramtype">AwhBiasHistory *&#160;</td>
          <td class="paramname"><em>biasHistory</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allocate and initialize a bias history with the given bias state. </p>
<p>This function will be called at the start of a new simulation. Note that only constant data will be initialized here. History data is set by <a class="el" href="classgmx_1_1Bias.xhtml#a51a6749923cc057db5dc099c716d62b4">updateHistory</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">biasHistory</td><td>AWH history to initialize. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac365893c2cee349709bf83532d7e65ae"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::Bias::printInitializationToLog </td>
          <td>(</td>
          <td class="paramtype">FILE *&#160;</td>
          <td class="paramname"><em>fplog</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Print information about initialization to log file. </p>
<p>Prints information about AWH variables that are set internally but might be of interest to the user.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">fplog</td><td>Log file, can be nullptr. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="adcff31915c01491037e7e6c80a0c65de"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::Bias::restoreStateFromHistory </td>
          <td>(</td>
          <td class="paramtype">const AwhBiasHistory *&#160;</td>
          <td class="paramname"><em>biasHistory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const t_commrec *&#160;</td>
          <td class="paramname"><em>cr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Restore the bias state from history on the master rank and broadcast it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">biasHistory</td><td><a class="el" href="classgmx_1_1Bias.xhtml" title="A bias acting on a multidimensional coordinate. ">Bias</a> history struct, only allowed to be nullptr on non-master ranks. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cr</td><td>The communication record. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a51a6749923cc057db5dc099c716d62b4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::Bias::updateHistory </td>
          <td>(</td>
          <td class="paramtype">AwhBiasHistory *&#160;</td>
          <td class="paramname"><em>biasHistory</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Update the bias history with the current state. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">biasHistory</td><td><a class="el" href="classgmx_1_1Bias.xhtml" title="A bias acting on a multidimensional coordinate. ">Bias</a> history struct. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ade520e4f3326544e5905068ed5d92f62"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::Bias::writeToEnergySubblocks </td>
          <td>(</td>
          <td class="paramtype">t_enxsubblock *&#160;</td>
          <td class="paramname"><em>subblock</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Write bias data blocks to energy subblocks. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">subblock</td><td>Energy subblocks to write to. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the number of subblocks written. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/awh/<a class="el" href="bias_8h.xhtml">bias.h</a></li>
<li>src/gromacs/awh/<a class="el" href="bias_8cpp.xhtml">bias.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:27 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

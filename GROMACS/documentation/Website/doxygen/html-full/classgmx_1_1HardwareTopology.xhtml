<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::HardwareTopology Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1HardwareTopology.xhtml">HardwareTopology</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1HardwareTopology-members.xhtml">List of all members</a> &#124;
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::HardwareTopology Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/hardware/hardwaretopology.h&gt;</code></p>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Information about sockets, cores, threads, numa, caches. </p>
<p>This class is the main GROMACS interface to provide information about the hardware of the system we are running on. Internally, it uses either hwloc for full or almost-full information, or a fallback implementation that relies on <a class="el" href="classgmx_1_1CpuInfo.xhtml" title="Detect CPU capabilities and basic logical processor info. ">CpuInfo</a> on x86.</p>
<p>You should always use this class (rather than <a class="el" href="classgmx_1_1CpuInfo.xhtml" title="Detect CPU capabilities and basic logical processor info. ">CpuInfo</a> directly) to query the hardware layout in user code. Note that you cannot rely on any information being present, but you must check with the <a class="el" href="classgmx_1_1HardwareTopology.xhtml#aee3c059672763572632b83cdc0e59783" title="Check what topology information that is available and valid. ">supportLevel()</a> method before trying to access any information. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1HardwareTopology_1_1Cache.xhtml">Cache</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Information about a single cache level.  <a href="structgmx_1_1HardwareTopology_1_1Cache.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1HardwareTopology_1_1Core.xhtml">Core</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Information about a single core in a socket.  <a href="structgmx_1_1HardwareTopology_1_1Core.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1HardwareTopology_1_1Device.xhtml">Device</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Information about a single PCI device.  <a href="structgmx_1_1HardwareTopology_1_1Device.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1HardwareTopology_1_1HWThread.xhtml">HWThread</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Information about a single hardware thread in a core.  <a href="structgmx_1_1HardwareTopology_1_1HWThread.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1HardwareTopology_1_1LogicalProcessor.xhtml">LogicalProcessor</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Information about socket, core and hwthread for a logical processor.  <a href="structgmx_1_1HardwareTopology_1_1LogicalProcessor.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1HardwareTopology_1_1Machine.xhtml">Machine</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Hardware topology information about the entire machine.  <a href="structgmx_1_1HardwareTopology_1_1Machine.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1HardwareTopology_1_1Numa.xhtml">Numa</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Information about a single numa node.  <a href="structgmx_1_1HardwareTopology_1_1Numa.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1HardwareTopology_1_1NumaNode.xhtml">NumaNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Information about each numa node in system.  <a href="structgmx_1_1HardwareTopology_1_1NumaNode.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1HardwareTopology_1_1Socket.xhtml">Socket</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Information about a single socket in the system.  <a href="structgmx_1_1HardwareTopology_1_1Socket.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aa94ffc2c936d76ba16f1938f449cfaa8"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HardwareTopology.xhtml#aa94ffc2c936d76ba16f1938f449cfaa8">SupportLevel</a> { <br/>
&#160;&#160;<a class="el" href="classgmx_1_1HardwareTopology.xhtml#aa94ffc2c936d76ba16f1938f449cfaa8a6adf97f83acf6453d4a6a4b1070f3754">SupportLevel::None</a>, 
<a class="el" href="classgmx_1_1HardwareTopology.xhtml#aa94ffc2c936d76ba16f1938f449cfaa8a4acf1dbcd33d23bdf52ac25392026b93">SupportLevel::LogicalProcessorCount</a>, 
<a class="el" href="classgmx_1_1HardwareTopology.xhtml#aa94ffc2c936d76ba16f1938f449cfaa8a972e73b7a882d0802a4e3a16946a2f94">SupportLevel::Basic</a>, 
<a class="el" href="classgmx_1_1HardwareTopology.xhtml#aa94ffc2c936d76ba16f1938f449cfaa8abbd47109890259c0127154db1af26c75">SupportLevel::Full</a>, 
<br/>
&#160;&#160;<a class="el" href="classgmx_1_1HardwareTopology.xhtml#aa94ffc2c936d76ba16f1938f449cfaa8a1f7e618d8d85d1bac95daf820ac3d499">SupportLevel::FullWithDevices</a>
<br/>
 }</td></tr>
<tr class="memdesc:aa94ffc2c936d76ba16f1938f449cfaa8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Amount of topology information present (incremental)  <a href="classgmx_1_1HardwareTopology.xhtml#aa94ffc2c936d76ba16f1938f449cfaa8">More...</a><br/></td></tr>
<tr class="separator:aa94ffc2c936d76ba16f1938f449cfaa8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a524b02638d5644ffc59a0576364bcfa7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HardwareTopology.xhtml#a524b02638d5644ffc59a0576364bcfa7">HardwareTopology</a> (int logicalProcessorCount)</td></tr>
<tr class="memdesc:a524b02638d5644ffc59a0576364bcfa7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a topology with given number of logical cores.  <a href="#a524b02638d5644ffc59a0576364bcfa7">More...</a><br/></td></tr>
<tr class="separator:a524b02638d5644ffc59a0576364bcfa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee3c059672763572632b83cdc0e59783"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1HardwareTopology.xhtml#aa94ffc2c936d76ba16f1938f449cfaa8">SupportLevel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HardwareTopology.xhtml#aee3c059672763572632b83cdc0e59783">supportLevel</a> () const </td></tr>
<tr class="memdesc:aee3c059672763572632b83cdc0e59783"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check what topology information that is available and valid.  <a href="#aee3c059672763572632b83cdc0e59783">More...</a><br/></td></tr>
<tr class="separator:aee3c059672763572632b83cdc0e59783"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22fbee59ff4fa507d118587161442bc4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HardwareTopology.xhtml#a22fbee59ff4fa507d118587161442bc4">isThisSystem</a> () const </td></tr>
<tr class="memdesc:a22fbee59ff4fa507d118587161442bc4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return true if we actually detected hardware.  <a href="#a22fbee59ff4fa507d118587161442bc4">More...</a><br/></td></tr>
<tr class="separator:a22fbee59ff4fa507d118587161442bc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a864c540c29ffadab1591a407843ebf35"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structgmx_1_1HardwareTopology_1_1Machine.xhtml">Machine</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HardwareTopology.xhtml#a864c540c29ffadab1591a407843ebf35">machine</a> () const </td></tr>
<tr class="memdesc:a864c540c29ffadab1591a407843ebf35"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the machine topology tree.  <a href="#a864c540c29ffadab1591a407843ebf35">More...</a><br/></td></tr>
<tr class="separator:a864c540c29ffadab1591a407843ebf35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a508621a64cb1f3363522312fd130658e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HardwareTopology.xhtml#a508621a64cb1f3363522312fd130658e">numberOfCores</a> () const </td></tr>
<tr class="memdesc:a508621a64cb1f3363522312fd130658e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of cores.  <a href="#a508621a64cb1f3363522312fd130658e">More...</a><br/></td></tr>
<tr class="separator:a508621a64cb1f3363522312fd130658e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a8da17cbedfcbc71ca857ff58cdafd4df"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8da17cbedfcbc71ca857ff58cdafd4df"></a>
static <a class="el" href="classgmx_1_1HardwareTopology.xhtml">HardwareTopology</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1HardwareTopology.xhtml#a8da17cbedfcbc71ca857ff58cdafd4df">detect</a> ()</td></tr>
<tr class="memdesc:a8da17cbedfcbc71ca857ff58cdafd4df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detects the hardware topology. <br/></td></tr>
<tr class="separator:a8da17cbedfcbc71ca857ff58cdafd4df"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="aa94ffc2c936d76ba16f1938f449cfaa8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classgmx_1_1HardwareTopology.xhtml#aa94ffc2c936d76ba16f1938f449cfaa8">gmx::HardwareTopology::SupportLevel</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Amount of topology information present (incremental) </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><em><a class="anchor" id="aa94ffc2c936d76ba16f1938f449cfaa8a6adf97f83acf6453d4a6a4b1070f3754"></a>None</em>&nbsp;</td><td class="fielddoc">
<p>No hardware information whatsoever. Sorry. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="aa94ffc2c936d76ba16f1938f449cfaa8a4acf1dbcd33d23bdf52ac25392026b93"></a>LogicalProcessorCount</em>&nbsp;</td><td class="fielddoc">
<p>Only <a class="el" href="classgmx_1_1HardwareTopology.xhtml#a864c540c29ffadab1591a407843ebf35" title="Return the machine topology tree. ">machine()</a>.logicalProcessorCount is valid. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="aa94ffc2c936d76ba16f1938f449cfaa8a972e73b7a882d0802a4e3a16946a2f94"></a>Basic</em>&nbsp;</td><td class="fielddoc">
<p><a class="el" href="structgmx_1_1HardwareTopology_1_1Socket.xhtml" title="Information about a single socket in the system. ">Socket</a>, core and hardware thread info. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="aa94ffc2c936d76ba16f1938f449cfaa8abbd47109890259c0127154db1af26c75"></a>Full</em>&nbsp;</td><td class="fielddoc">
<p><a class="el" href="structgmx_1_1HardwareTopology_1_1Cache.xhtml" title="Information about a single cache level. ">Cache</a>, memory and numa node info. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="aa94ffc2c936d76ba16f1938f449cfaa8a1f7e618d8d85d1bac95daf820ac3d499"></a>FullWithDevices</em>&nbsp;</td><td class="fielddoc">
<p>Information about devices on the PCI bus. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a524b02638d5644ffc59a0576364bcfa7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">gmx::HardwareTopology::HardwareTopology </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>logicalProcessorCount</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a topology with given number of logical cores. </p>
<p>The support level will be either None or LogicalProcessorCount.</p>
<p>Intended for testing of code that uses the hardware topology. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a22fbee59ff4fa507d118587161442bc4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::HardwareTopology::isThisSystem </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return true if we actually detected hardware. </p>
<dl class="section return"><dt>Returns</dt><dd>This method will normally return true, when we actually ran the hardware detection as part of this process to construct the object. It will be false when the object was constructed by reading a cached XML file, or possibly generated from synthetic data. </dd></dl>

</div>
</div>
<a class="anchor" id="a864c540c29ffadab1591a407843ebf35"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structgmx_1_1HardwareTopology_1_1Machine.xhtml">Machine</a>&amp; gmx::HardwareTopology::machine </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the machine topology tree. </p>
<p>You can always call this routine, but be aware that some or all contents will not be valid unless <a class="el" href="classgmx_1_1HardwareTopology.xhtml#aee3c059672763572632b83cdc0e59783" title="Check what topology information that is available and valid. ">supportLevel()</a> returns a sufficient level.</p>
<ul>
<li>With <a class="el" href="classgmx_1_1HardwareTopology.xhtml#aa94ffc2c936d76ba16f1938f449cfaa8a4acf1dbcd33d23bdf52ac25392026b93" title="Only machine().logicalProcessorCount is valid. ">SupportLevel::LogicalProcessorCount</a>, only the field machine.logicalProcessorCount is valid.</li>
<li>With <a class="el" href="classgmx_1_1HardwareTopology.xhtml#aa94ffc2c936d76ba16f1938f449cfaa8a972e73b7a882d0802a4e3a16946a2f94" title="Socket, core and hardware thread info. ">SupportLevel::Basic</a>, you can access the vectors of sockets, cores, and hardware threads, and query what logical processorId each hardware thread corresponds to.</li>
<li><a class="el" href="classgmx_1_1HardwareTopology.xhtml#aa94ffc2c936d76ba16f1938f449cfaa8abbd47109890259c0127154db1af26c75" title="Cache, memory and numa node info. ">SupportLevel::Full</a> adds cache, memory and ccNUMA information.</li>
<li><a class="el" href="classgmx_1_1HardwareTopology.xhtml#aa94ffc2c936d76ba16f1938f449cfaa8a1f7e618d8d85d1bac95daf820ac3d499" title="Information about devices on the PCI bus. ">SupportLevel::FullWithDevices</a> also adds the PCI express bus.</li>
</ul>
<p>While data that is not valid has been initialized to special values, you should not rely on those but query the <a class="el" href="classgmx_1_1HardwareTopology.xhtml#aee3c059672763572632b83cdc0e59783" title="Check what topology information that is available and valid. ">supportLevel()</a> method before accessing it. </p>

</div>
</div>
<a class="anchor" id="a508621a64cb1f3363522312fd130658e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::HardwareTopology::numberOfCores </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of cores. </p>
<p>You can always call this routine, but if sufficient support is not available, it may return the logical processor count or zero instead of the physical core count. </p>

</div>
</div>
<a class="anchor" id="aee3c059672763572632b83cdc0e59783"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1HardwareTopology.xhtml#aa94ffc2c936d76ba16f1938f449cfaa8">SupportLevel</a> gmx::HardwareTopology::supportLevel </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check what topology information that is available and valid. </p>
<p>The amount of hardware topology information that can be detected depends on both the hardware and whether GROMACS was linked with the external hwloc library. You cannot assume that any information is present, although we can almost always provide the number of logical processors. On x86 we can usually get basic information about how sockets, cores and hardware threads are ordered even without hwloc. With the hwloc library we can usually also get information about cache, memory and concepts such as core groups and ccNUMA nodes. Finally, if hwloc was built with support for libpci we can also detect how the PCI devices are connected. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/hardware/<a class="el" href="hardwaretopology_8h.xhtml">hardwaretopology.h</a></li>
<li>src/gromacs/hardware/<a class="el" href="hardwaretopology_8cpp.xhtml">hardwaretopology.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:27 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/selection/sm_compare.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_8a21c46af9718d1f610eb513153099d7.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a46192700e9e8ed44c648f0a55ee9a53.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_e7e88b26b6f22ac834fce3ecdbf03d20.xhtml">selection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">sm_compare.cpp File Reference<div class="ingroups"><a class="el" href="group__module__selection.xhtml">Parsing and Evaluation of Analysis Selections (selection)</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="gmxpre_8h.xhtml">gmxpre.h</a>&quot;</code><br/>
<code>#include &lt;cmath&gt;</code><br/>
<code>#include &quot;gromacs/math/utilities.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="arraysize_8h.xhtml">gromacs/utility/arraysize.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="basedefinitions_8h.xhtml">gromacs/utility/basedefinitions.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="exceptions_8h.xhtml">gromacs/utility/exceptions.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="smalloc_8h.xhtml">gromacs/utility/smalloc.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="keywords_8h.xhtml">keywords.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="selmethod_8h.xhtml">selmethod.h</a>&quot;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for sm_compare.cpp:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="sm__compare_8cpp__incl.svg" width="2108" height="440"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Implements internal selection method for comparison expressions. </p>
<dl class="section author"><dt>Author</dt><dd>Teemu Murtola <a href="#" onclick="location.href='mai'+'lto:'+'tee'+'mu'+'.mu'+'rt'+'ola'+'@g'+'mai'+'l.'+'com'; return false;">teemu<span style="display: none;">.nosp@m.</span>.mur<span style="display: none;">.nosp@m.</span>tola@<span style="display: none;">.nosp@m.</span>gmai<span style="display: none;">.nosp@m.</span>l.com</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structt__compare__value.xhtml">t_compare_value</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data structure for comparison expression operand values.  <a href="structt__compare__value.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structt__methoddata__compare.xhtml">t_methoddata_compare</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data structure for comparison expression evaluation.  <a href="structt__methoddata__compare.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:acaed2842a518715bd9a7d8340c54a8dc"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#acaed2842a518715bd9a7d8340c54a8dc">CMP_SINGLEVAL</a>&#160;&#160;&#160;1</td></tr>
<tr class="memdesc:acaed2842a518715bd9a7d8340c54a8dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">The operand has a single value.  <a href="#acaed2842a518715bd9a7d8340c54a8dc">More...</a><br/></td></tr>
<tr class="separator:acaed2842a518715bd9a7d8340c54a8dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ca48e4b031ed599140d615f85f47506"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#a8ca48e4b031ed599140d615f85f47506">CMP_DYNAMICVAL</a>&#160;&#160;&#160;2</td></tr>
<tr class="memdesc:a8ca48e4b031ed599140d615f85f47506"><td class="mdescLeft">&#160;</td><td class="mdescRight">The operand value is dynamic.  <a href="#a8ca48e4b031ed599140d615f85f47506">More...</a><br/></td></tr>
<tr class="separator:a8ca48e4b031ed599140d615f85f47506"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab34a7c52c4a01ba0dcd2576ec011c700"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#ab34a7c52c4a01ba0dcd2576ec011c700">CMP_REALVAL</a>&#160;&#160;&#160;4</td></tr>
<tr class="memdesc:ab34a7c52c4a01ba0dcd2576ec011c700"><td class="mdescLeft">&#160;</td><td class="mdescRight">The value is real.  <a href="#ab34a7c52c4a01ba0dcd2576ec011c700">More...</a><br/></td></tr>
<tr class="separator:ab34a7c52c4a01ba0dcd2576ec011c700"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f4ba35b0b3b93173ad262cd7b6d59cb"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#a4f4ba35b0b3b93173ad262cd7b6d59cb">CMP_ALLOCINT</a>&#160;&#160;&#160;16</td></tr>
<tr class="memdesc:a4f4ba35b0b3b93173ad262cd7b6d59cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">The integer array is allocated.  <a href="#a4f4ba35b0b3b93173ad262cd7b6d59cb">More...</a><br/></td></tr>
<tr class="separator:a4f4ba35b0b3b93173ad262cd7b6d59cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d14f88d7ee31f8fb0451395cd89dd6d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#a5d14f88d7ee31f8fb0451395cd89dd6d">CMP_ALLOCREAL</a>&#160;&#160;&#160;32</td></tr>
<tr class="memdesc:a5d14f88d7ee31f8fb0451395cd89dd6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">The real array is allocated.  <a href="#a5d14f88d7ee31f8fb0451395cd89dd6d">More...</a><br/></td></tr>
<tr class="separator:a5d14f88d7ee31f8fb0451395cd89dd6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a4c494127cd83d1f0dae8853a278569b5"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5">e_comparison_t</a> { <br/>
&#160;&#160;<a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5ac8fc7c0cd25967ec80612d13f43920c8">CMP_INVALID</a>, 
<a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5a2eb13396f22cd506d8a87dd21d92a134">CMP_LESS</a>, 
<a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5a21a9f335526f7cccf3be617fd69b1997">CMP_LEQ</a>, 
<a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5a952a8220aefbeb820d9f2a57385004e8">CMP_GTR</a>, 
<br/>
&#160;&#160;<a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5acbf87d65ff27dd11d09c3d4168ec5690">CMP_GEQ</a>, 
<a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5a69017e915c3273f6c77dc13aefd5bd0e">CMP_EQUAL</a>, 
<a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5acff35e061674951fc02df39f1ecd189f">CMP_NEQ</a>
<br/>
 }</td></tr>
<tr class="memdesc:a4c494127cd83d1f0dae8853a278569b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines the comparison operator for comparison expressions.  <a href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5">More...</a><br/></td></tr>
<tr class="separator:a4c494127cd83d1f0dae8853a278569b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a2c25c6848ba93c12f1ef2f63e016761d"><td class="memItemLeft" align="right" valign="top">static void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#a2c25c6848ba93c12f1ef2f63e016761d">init_data_compare</a> (int npar, <a class="el" href="structgmx__ana__selparam__t.xhtml">gmx_ana_selparam_t</a> *param)</td></tr>
<tr class="memdesc:a2c25c6848ba93c12f1ef2f63e016761d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocates data for comparison expression evaluation.  <a href="#a2c25c6848ba93c12f1ef2f63e016761d">More...</a><br/></td></tr>
<tr class="separator:a2c25c6848ba93c12f1ef2f63e016761d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d955aa948fdb1919fe6d1996bbeb817"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#a8d955aa948fdb1919fe6d1996bbeb817">init_compare</a> (const gmx_mtop_t *top, int npar, <a class="el" href="structgmx__ana__selparam__t.xhtml">gmx_ana_selparam_t</a> *param, void *data)</td></tr>
<tr class="memdesc:a8d955aa948fdb1919fe6d1996bbeb817"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes data for comparison expression evaluation.  <a href="#a8d955aa948fdb1919fe6d1996bbeb817">More...</a><br/></td></tr>
<tr class="separator:a8d955aa948fdb1919fe6d1996bbeb817"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa72d1a8a8f2afb1fc226cf082c051125"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#aa72d1a8a8f2afb1fc226cf082c051125">free_data_compare</a> (void *data)</td></tr>
<tr class="memdesc:aa72d1a8a8f2afb1fc226cf082c051125"><td class="mdescLeft">&#160;</td><td class="mdescRight">Frees the memory allocated for comparison expression evaluation.  <a href="#aa72d1a8a8f2afb1fc226cf082c051125">More...</a><br/></td></tr>
<tr class="separator:aa72d1a8a8f2afb1fc226cf082c051125"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fb35f8581c4552d6270a904d1674c88"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#a7fb35f8581c4552d6270a904d1674c88">evaluate_compare</a> (const <a class="el" href="structgmx_1_1SelMethodEvalContext.xhtml">gmx::SelMethodEvalContext</a> &amp;context, <a class="el" href="structgmx__ana__index__t.xhtml">gmx_ana_index_t</a> *g, <a class="el" href="structgmx__ana__selvalue__t.xhtml">gmx_ana_selvalue_t</a> *out, void *data)</td></tr>
<tr class="memdesc:a7fb35f8581c4552d6270a904d1674c88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluates comparison expressions.  <a href="#a7fb35f8581c4552d6270a904d1674c88">More...</a><br/></td></tr>
<tr class="separator:a7fb35f8581c4552d6270a904d1674c88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19d029e2af21186379d79e8e1dbac84d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5">e_comparison_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#a19d029e2af21186379d79e8e1dbac84d">comparison_type</a> (char *str)</td></tr>
<tr class="memdesc:a19d029e2af21186379d79e8e1dbac84d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a <code>e_comparison_t</code> value corresponding to an operator.  <a href="#a19d029e2af21186379d79e8e1dbac84d">More...</a><br/></td></tr>
<tr class="separator:a19d029e2af21186379d79e8e1dbac84d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2f0367a81dc65515838db2edea06bc0"><td class="memItemLeft" align="right" valign="top">static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#af2f0367a81dc65515838db2edea06bc0">comparison_type_str</a> (<a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5">e_comparison_t</a> cmpt)</td></tr>
<tr class="memdesc:af2f0367a81dc65515838db2edea06bc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a string corresponding to a <code>e_comparison_t</code> value.  <a href="#af2f0367a81dc65515838db2edea06bc0">More...</a><br/></td></tr>
<tr class="separator:af2f0367a81dc65515838db2edea06bc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a804fe473e13723903e8a1065177e86da"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#a804fe473e13723903e8a1065177e86da">_gmx_selelem_print_compare_info</a> (FILE *fp, void *data)</td></tr>
<tr class="memdesc:a804fe473e13723903e8a1065177e86da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints information about a comparison expression.  <a href="#a804fe473e13723903e8a1065177e86da">More...</a><br/></td></tr>
<tr class="separator:a804fe473e13723903e8a1065177e86da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeafad0888285495ec3de412cfe3b51db"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5">e_comparison_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#aeafad0888285495ec3de412cfe3b51db">reverse_comparison_type</a> (<a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5">e_comparison_t</a> type)</td></tr>
<tr class="memdesc:aeafad0888285495ec3de412cfe3b51db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reverses a comparison operator.  <a href="#aeafad0888285495ec3de412cfe3b51db">More...</a><br/></td></tr>
<tr class="separator:aeafad0888285495ec3de412cfe3b51db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafe6d6ec2249c4f050f28347e811a4e6"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#aafe6d6ec2249c4f050f28347e811a4e6">init_comparison_value</a> (<a class="el" href="structt__compare__value.xhtml">t_compare_value</a> *val, <a class="el" href="structgmx__ana__selparam__t.xhtml">gmx_ana_selparam_t</a> param[2])</td></tr>
<tr class="memdesc:aafe6d6ec2249c4f050f28347e811a4e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the value storage for comparison expression.  <a href="#aafe6d6ec2249c4f050f28347e811a4e6">More...</a><br/></td></tr>
<tr class="separator:aafe6d6ec2249c4f050f28347e811a4e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50d20dac63c9cae7e6690bc44650edca"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#a50d20dac63c9cae7e6690bc44650edca">convert_int_real</a> (int n, <a class="el" href="structt__compare__value.xhtml">t_compare_value</a> *val)</td></tr>
<tr class="memdesc:a50d20dac63c9cae7e6690bc44650edca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts an integer value to floating point.  <a href="#a50d20dac63c9cae7e6690bc44650edca">More...</a><br/></td></tr>
<tr class="separator:a50d20dac63c9cae7e6690bc44650edca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf95e894449bb6dc0f2f99e204d81dfc"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#acf95e894449bb6dc0f2f99e204d81dfc">convert_real_int</a> (int n, <a class="el" href="structt__compare__value.xhtml">t_compare_value</a> *val, <a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5">e_comparison_t</a> cmpt, bool bRight)</td></tr>
<tr class="memdesc:acf95e894449bb6dc0f2f99e204d81dfc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a floating point value to integer.  <a href="#acf95e894449bb6dc0f2f99e204d81dfc">More...</a><br/></td></tr>
<tr class="separator:acf95e894449bb6dc0f2f99e204d81dfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a000c83655897b95930df66da1565de50"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#a000c83655897b95930df66da1565de50">evaluate_compare_int</a> (<a class="el" href="structgmx__ana__index__t.xhtml">gmx_ana_index_t</a> *g, <a class="el" href="structgmx__ana__selvalue__t.xhtml">gmx_ana_selvalue_t</a> *out, void *data)</td></tr>
<tr class="memdesc:a000c83655897b95930df66da1565de50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementation for <a class="el" href="sm__compare_8cpp.xhtml#a7fb35f8581c4552d6270a904d1674c88" title="Evaluates comparison expressions. ">evaluate_compare()</a> for integer values.  <a href="#a000c83655897b95930df66da1565de50">More...</a><br/></td></tr>
<tr class="separator:a000c83655897b95930df66da1565de50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8798d18a80ed2f440f8100b6728914a4"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#a8798d18a80ed2f440f8100b6728914a4">evaluate_compare_real</a> (<a class="el" href="structgmx__ana__index__t.xhtml">gmx_ana_index_t</a> *g, <a class="el" href="structgmx__ana__selvalue__t.xhtml">gmx_ana_selvalue_t</a> *out, void *data)</td></tr>
<tr class="memdesc:a8798d18a80ed2f440f8100b6728914a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementation for <a class="el" href="sm__compare_8cpp.xhtml#a7fb35f8581c4552d6270a904d1674c88" title="Evaluates comparison expressions. ">evaluate_compare()</a> if either value is non-integer.  <a href="#a8798d18a80ed2f440f8100b6728914a4">More...</a><br/></td></tr>
<tr class="separator:a8798d18a80ed2f440f8100b6728914a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:af78441e8403199ac9eb8cbd85f8c3a19"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="structgmx__ana__selparam__t.xhtml">gmx_ana_selparam_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#af78441e8403199ac9eb8cbd85f8c3a19">smparams_compare</a> []</td></tr>
<tr class="memdesc:af78441e8403199ac9eb8cbd85f8c3a19"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parameters for comparison expression evaluation.  <a href="#af78441e8403199ac9eb8cbd85f8c3a19">More...</a><br/></td></tr>
<tr class="separator:af78441e8403199ac9eb8cbd85f8c3a19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af10d13b130c0d9a80b6cc2f79656ba2f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structgmx__ana__selmethod__t.xhtml">gmx_ana_selmethod_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sm__compare_8cpp.xhtml#af10d13b130c0d9a80b6cc2f79656ba2f">sm_compare</a></td></tr>
<tr class="memdesc:af10d13b130c0d9a80b6cc2f79656ba2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Selection method data for comparison expression evaluation.  <a href="#af10d13b130c0d9a80b6cc2f79656ba2f">More...</a><br/></td></tr>
<tr class="separator:af10d13b130c0d9a80b6cc2f79656ba2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="a4f4ba35b0b3b93173ad262cd7b6d59cb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CMP_ALLOCINT&#160;&#160;&#160;16</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The integer array is allocated. </p>

</div>
</div>
<a class="anchor" id="a5d14f88d7ee31f8fb0451395cd89dd6d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CMP_ALLOCREAL&#160;&#160;&#160;32</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The real array is allocated. </p>

</div>
</div>
<a class="anchor" id="a8ca48e4b031ed599140d615f85f47506"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CMP_DYNAMICVAL&#160;&#160;&#160;2</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The operand value is dynamic. </p>

</div>
</div>
<a class="anchor" id="ab34a7c52c4a01ba0dcd2576ec011c700"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CMP_REALVAL&#160;&#160;&#160;4</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The value is real. </p>

</div>
</div>
<a class="anchor" id="acaed2842a518715bd9a7d8340c54a8dc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CMP_SINGLEVAL&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The operand has a single value. </p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a class="anchor" id="a4c494127cd83d1f0dae8853a278569b5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5">e_comparison_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Defines the comparison operator for comparison expressions. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><em><a class="anchor" id="a4c494127cd83d1f0dae8853a278569b5ac8fc7c0cd25967ec80612d13f43920c8"></a>CMP_INVALID</em>&nbsp;</td><td class="fielddoc">
<p>Indicates an error. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="a4c494127cd83d1f0dae8853a278569b5a2eb13396f22cd506d8a87dd21d92a134"></a>CMP_LESS</em>&nbsp;</td><td class="fielddoc">
<p>'&lt;' </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="a4c494127cd83d1f0dae8853a278569b5a21a9f335526f7cccf3be617fd69b1997"></a>CMP_LEQ</em>&nbsp;</td><td class="fielddoc">
<p>'&lt;=' </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="a4c494127cd83d1f0dae8853a278569b5a952a8220aefbeb820d9f2a57385004e8"></a>CMP_GTR</em>&nbsp;</td><td class="fielddoc">
<p>'&gt;' </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="a4c494127cd83d1f0dae8853a278569b5acbf87d65ff27dd11d09c3d4168ec5690"></a>CMP_GEQ</em>&nbsp;</td><td class="fielddoc">
<p>'&gt;=' </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="a4c494127cd83d1f0dae8853a278569b5a69017e915c3273f6c77dc13aefd5bd0e"></a>CMP_EQUAL</em>&nbsp;</td><td class="fielddoc">
<p>'==' </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="a4c494127cd83d1f0dae8853a278569b5acff35e061674951fc02df39f1ecd189f"></a>CMP_NEQ</em>&nbsp;</td><td class="fielddoc">
<p>'!=' </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a804fe473e13723903e8a1065177e86da"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void _gmx_selelem_print_compare_info </td>
          <td>(</td>
          <td class="paramtype">FILE *&#160;</td>
          <td class="paramname"><em>fp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prints information about a comparison expression. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fp</td><td>File to receive the output. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data</td><td>Should point to a <code><a class="el" href="structt__methoddata__compare.xhtml" title="Data structure for comparison expression evaluation. ">t_methoddata_compare</a></code>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a19d029e2af21186379d79e8e1dbac84d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5">e_comparison_t</a> comparison_type </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a <code>e_comparison_t</code> value corresponding to an operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">str</td><td>String to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The comparison type corresponding to the first one or two characters of <code>str</code>.</dd></dl>
<p><code>str</code> can contain any number of characters; only the first two are used. If the beginning of <code>str</code> does not match any of the recognized types, <a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5ac8fc7c0cd25967ec80612d13f43920c8">CMP_INVALID</a> is returned. </p>

</div>
</div>
<a class="anchor" id="af2f0367a81dc65515838db2edea06bc0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static const char* comparison_type_str </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5">e_comparison_t</a>&#160;</td>
          <td class="paramname"><em>cmpt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a string corresponding to a <code>e_comparison_t</code> value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cmpt</td><td>Comparison type to convert. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Pointer to a string that corresponds to <code>cmpt</code>.</dd></dl>
<p>The return value points to a string constant and should not be <code>free'd</code>.</p>
<p>The function returns NULL if <code>cmpt</code> is not one of the valid values. </p>

</div>
</div>
<a class="anchor" id="a50d20dac63c9cae7e6690bc44650edca"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void convert_int_real </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__compare__value.xhtml">t_compare_value</a> *&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Converts an integer value to floating point. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>Number of values in the <code>val-&gt;u</code> array. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">val</td><td>Value to convert. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="acf95e894449bb6dc0f2f99e204d81dfc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void convert_real_int </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__compare__value.xhtml">t_compare_value</a> *&#160;</td>
          <td class="paramname"><em>val</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5">e_comparison_t</a>&#160;</td>
          <td class="paramname"><em>cmpt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bRight</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Converts a floating point value to integer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>Number of values in the <code>val-&gt;u</code> array. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">val</td><td>Value to convert. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cmpt</td><td>Comparison operator type. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bRight</td><td>true if <code>val</code> appears on the right hand size of <code>cmpt</code>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0 on success, EINVAL on error.</dd></dl>
<p>The values are rounded such that the same comparison operator can be used. </p>

</div>
</div>
<a class="anchor" id="a7fb35f8581c4552d6270a904d1674c88"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void evaluate_compare </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structgmx_1_1SelMethodEvalContext.xhtml">gmx::SelMethodEvalContext</a> &amp;&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structgmx__ana__index__t.xhtml">gmx_ana_index_t</a> *&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structgmx__ana__selvalue__t.xhtml">gmx_ana_selvalue_t</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Evaluates comparison expressions. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>Not used. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td>Evaluation index group. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>Output data structure (<code>out-&gt;u.g</code> is used). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data</td><td>Should point to a <code><a class="el" href="structt__methoddata__compare.xhtml" title="Data structure for comparison expression evaluation. ">t_methoddata_compare</a></code>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a000c83655897b95930df66da1565de50"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void evaluate_compare_int </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structgmx__ana__index__t.xhtml">gmx_ana_index_t</a> *&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structgmx__ana__selvalue__t.xhtml">gmx_ana_selvalue_t</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implementation for <a class="el" href="sm__compare_8cpp.xhtml#a7fb35f8581c4552d6270a904d1674c88" title="Evaluates comparison expressions. ">evaluate_compare()</a> for integer values. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td>Evaluation index group. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>Output data structure (<code>out-&gt;u.g</code> is used). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data</td><td>Should point to a <code><a class="el" href="structt__methoddata__compare.xhtml" title="Data structure for comparison expression evaluation. ">t_methoddata_compare</a></code>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8798d18a80ed2f440f8100b6728914a4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void evaluate_compare_real </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structgmx__ana__index__t.xhtml">gmx_ana_index_t</a> *&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structgmx__ana__selvalue__t.xhtml">gmx_ana_selvalue_t</a> *&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implementation for <a class="el" href="sm__compare_8cpp.xhtml#a7fb35f8581c4552d6270a904d1674c88" title="Evaluates comparison expressions. ">evaluate_compare()</a> if either value is non-integer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td>Evaluation index group. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>Output data structure (<code>out-&gt;u.g</code> is used). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data</td><td>Should point to a <code><a class="el" href="structt__methoddata__compare.xhtml" title="Data structure for comparison expression evaluation. ">t_methoddata_compare</a></code>.</td></tr>
  </table>
  </dd>
</dl>
<p>Left value is assumed to be real-valued; right value can be either. This is ensured by the initialization method. </p>

</div>
</div>
<a class="anchor" id="aa72d1a8a8f2afb1fc226cf082c051125"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void free_data_compare </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Frees the memory allocated for comparison expression evaluation. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>Data to free (should point to a <code><a class="el" href="structt__methoddata__compare.xhtml" title="Data structure for comparison expression evaluation. ">t_methoddata_compare</a></code>).</td></tr>
  </table>
  </dd>
</dl>
<p>Frees the memory allocated for <code><a class="el" href="structt__methoddata__compare.xhtml" title="Data structure for comparison expression evaluation. ">t_methoddata_compare</a></code>. </p>

</div>
</div>
<a class="anchor" id="a8d955aa948fdb1919fe6d1996bbeb817"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void init_compare </td>
          <td>(</td>
          <td class="paramtype">const gmx_mtop_t *&#160;</td>
          <td class="paramname"><em>top</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>npar</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structgmx__ana__selparam__t.xhtml">gmx_ana_selparam_t</a> *&#160;</td>
          <td class="paramname"><em>param</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializes data for comparison expression evaluation. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">top</td><td>Not used. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">npar</td><td>Not used (should be 5). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">param</td><td>Method parameters (should point to <a class="el" href="sm__compare_8cpp.xhtml#af78441e8403199ac9eb8cbd85f8c3a19">smparams_compare</a>). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data</td><td>Should point to a <code><a class="el" href="structt__methoddata__compare.xhtml" title="Data structure for comparison expression evaluation. ">t_methoddata_compare</a></code>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0 if the input data is valid, -1 on error. </dd></dl>

</div>
</div>
<a class="anchor" id="aafe6d6ec2249c4f050f28347e811a4e6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int init_comparison_value </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structt__compare__value.xhtml">t_compare_value</a> *&#160;</td>
          <td class="paramname"><em>val</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structgmx__ana__selparam__t.xhtml">gmx_ana_selparam_t</a>&#160;</td>
          <td class="paramname"><em>param</em>[2]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializes the value storage for comparison expression. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">val</td><td>Value structure to initialize. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">param</td><td>Parameters to use for initialization. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The number of values provided for the value, 0 on error. </dd></dl>

</div>
</div>
<a class="anchor" id="a2c25c6848ba93c12f1ef2f63e016761d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void * init_data_compare </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>npar</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structgmx__ana__selparam__t.xhtml">gmx_ana_selparam_t</a> *&#160;</td>
          <td class="paramname"><em>param</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allocates data for comparison expression evaluation. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">npar</td><td>Not used (should be 5). </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">param</td><td>Method parameters (should point to a copy of <a class="el" href="sm__compare_8cpp.xhtml#af78441e8403199ac9eb8cbd85f8c3a19">smparams_compare</a>). </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Pointer to the allocated data (<code><a class="el" href="structt__methoddata__compare.xhtml" title="Data structure for comparison expression evaluation. ">t_methoddata_compare</a></code>).</dd></dl>
<p>Allocates memory for a <code><a class="el" href="structt__methoddata__compare.xhtml" title="Data structure for comparison expression evaluation. ">t_methoddata_compare</a></code> structure. </p>

</div>
</div>
<a class="anchor" id="aeafad0888285495ec3de412cfe3b51db"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5">e_comparison_t</a> reverse_comparison_type </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sm__compare_8cpp.xhtml#a4c494127cd83d1f0dae8853a278569b5">e_comparison_t</a>&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reverses a comparison operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>Comparison operator to reverse. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The correct comparison operator that equals <code>type</code> when the left and right sides are interchanged. </dd></dl>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="af10d13b130c0d9a80b6cc2f79656ba2f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structgmx__ana__selmethod__t.xhtml">gmx_ana_selmethod_t</a> sm_compare</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div>
<div class="line">    <span class="stringliteral">&quot;cmp&quot;</span>, <a class="code" href="selvalue_8h.xhtml#a70b42b87d434580bf1493591857b8beca70a2af6eafa48adfab506ceee60471f6">GROUP_VALUE</a>,  8 ,</div>
<div class="line">    ((int)(<span class="keyword">sizeof</span>( <a class="code" href="sm__compare_8cpp.xhtml#af78441e8403199ac9eb8cbd85f8c3a19">smparams_compare</a> )/<span class="keyword">sizeof</span>(( <a class="code" href="sm__compare_8cpp.xhtml#af78441e8403199ac9eb8cbd85f8c3a19">smparams_compare</a> )[0]))), <a class="code" href="sm__compare_8cpp.xhtml#af78441e8403199ac9eb8cbd85f8c3a19">smparams_compare</a>,</div>
<div class="line">    &amp;<a class="code" href="sm__compare_8cpp.xhtml#a2c25c6848ba93c12f1ef2f63e016761d">init_data_compare</a>,</div>
<div class="line">    <span class="keyword">nullptr</span>,</div>
<div class="line">    &amp;<a class="code" href="sm__compare_8cpp.xhtml#a8d955aa948fdb1919fe6d1996bbeb817">init_compare</a>,</div>
<div class="line">    <span class="keyword">nullptr</span>,</div>
<div class="line">    &amp;<a class="code" href="sm__compare_8cpp.xhtml#aa72d1a8a8f2afb1fc226cf082c051125">free_data_compare</a>,</div>
<div class="line">    <span class="keyword">nullptr</span>,</div>
<div class="line">    &amp;<a class="code" href="sm__compare_8cpp.xhtml#a7fb35f8581c4552d6270a904d1674c88">evaluate_compare</a>,</div>
<div class="line">    <span class="keyword">nullptr</span>,</div>
<div class="line">    {<span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>, 0, <span class="keyword">nullptr</span>},</div>
<div class="line">}</div>
<div class="ttc" id="sm__compare_8cpp_xhtml_aa72d1a8a8f2afb1fc226cf082c051125"><div class="ttname"><a href="sm__compare_8cpp.xhtml#aa72d1a8a8f2afb1fc226cf082c051125">free_data_compare</a></div><div class="ttdeci">static void free_data_compare(void *data)</div><div class="ttdoc">Frees the memory allocated for comparison expression evaluation. </div><div class="ttdef"><b>Definition:</b> sm_compare.cpp:487</div></div>
<div class="ttc" id="selvalue_8h_xhtml_a70b42b87d434580bf1493591857b8beca70a2af6eafa48adfab506ceee60471f6"><div class="ttname"><a href="selvalue_8h.xhtml#a70b42b87d434580bf1493591857b8beca70a2af6eafa48adfab506ceee60471f6">GROUP_VALUE</a></div><div class="ttdoc">One group of atoms. </div><div class="ttdef"><b>Definition:</b> selvalue.h:59</div></div>
<div class="ttc" id="sm__compare_8cpp_xhtml_a8d955aa948fdb1919fe6d1996bbeb817"><div class="ttname"><a href="sm__compare_8cpp.xhtml#a8d955aa948fdb1919fe6d1996bbeb817">init_compare</a></div><div class="ttdeci">static void init_compare(const gmx_mtop_t *top, int npar, gmx_ana_selparam_t *param, void *data)</div><div class="ttdoc">Initializes data for comparison expression evaluation. </div><div class="ttdef"><b>Definition:</b> sm_compare.cpp:420</div></div>
<div class="ttc" id="sm__compare_8cpp_xhtml_a2c25c6848ba93c12f1ef2f63e016761d"><div class="ttname"><a href="sm__compare_8cpp.xhtml#a2c25c6848ba93c12f1ef2f63e016761d">init_data_compare</a></div><div class="ttdeci">static void * init_data_compare(int npar, gmx_ana_selparam_t *param)</div><div class="ttdoc">Allocates data for comparison expression evaluation. </div><div class="ttdef"><b>Definition:</b> sm_compare.cpp:273</div></div>
<div class="ttc" id="sm__compare_8cpp_xhtml_a7fb35f8581c4552d6270a904d1674c88"><div class="ttname"><a href="sm__compare_8cpp.xhtml#a7fb35f8581c4552d6270a904d1674c88">evaluate_compare</a></div><div class="ttdeci">static void evaluate_compare(const gmx::SelMethodEvalContext &amp;context, gmx_ana_index_t *g, gmx_ana_selvalue_t *out, void *data)</div><div class="ttdoc">Evaluates comparison expressions. </div><div class="ttdef"><b>Definition:</b> sm_compare.cpp:607</div></div>
<div class="ttc" id="sm__compare_8cpp_xhtml_af78441e8403199ac9eb8cbd85f8c3a19"><div class="ttname"><a href="sm__compare_8cpp.xhtml#af78441e8403199ac9eb8cbd85f8c3a19">smparams_compare</a></div><div class="ttdeci">static gmx_ana_selparam_t smparams_compare[]</div><div class="ttdoc">Parameters for comparison expression evaluation. </div><div class="ttdef"><b>Definition:</b> sm_compare.cpp:145</div></div>
</div><!-- fragment -->
<p>Selection method data for comparison expression evaluation. </p>
<p>Selection method data for comparison expression evaluation. </p>

</div>
</div>
<a class="anchor" id="af78441e8403199ac9eb8cbd85f8c3a19"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structgmx__ana__selparam__t.xhtml">gmx_ana_selparam_t</a> smparams_compare[]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= {</div>
<div class="line">    {<span class="stringliteral">&quot;int1&quot;</span>,  {<a class="code" href="selvalue_8h.xhtml#a70b42b87d434580bf1493591857b8becacd1ce0b084595a6072a57781dc7738a0">INT_VALUE</a>,  -1, {<span class="keyword">nullptr</span>}}, <span class="keyword">nullptr</span>,</div>
<div class="line">      2  |  4  |  32 },</div>
<div class="line">    {<span class="stringliteral">&quot;real1&quot;</span>, {<a class="code" href="selvalue_8h.xhtml#a70b42b87d434580bf1493591857b8beca7aa9587044cd6fd9c1f1690719a072cf">REAL_VALUE</a>, -1, {<span class="keyword">nullptr</span>}}, <span class="keyword">nullptr</span>,</div>
<div class="line">      2  |  4  |  32 },</div>
<div class="line">    {<span class="stringliteral">&quot;op&quot;</span>,    {<a class="code" href="selvalue_8h.xhtml#a70b42b87d434580bf1493591857b8beca6f2f1fe9592d96990c9ac690c355bd08">STR_VALUE</a>,   1, {<span class="keyword">nullptr</span>}}, <span class="keyword">nullptr</span>, 0},</div>
<div class="line">    {<span class="stringliteral">&quot;int2&quot;</span>,  {<a class="code" href="selvalue_8h.xhtml#a70b42b87d434580bf1493591857b8becacd1ce0b084595a6072a57781dc7738a0">INT_VALUE</a>,  -1, {<span class="keyword">nullptr</span>}}, <span class="keyword">nullptr</span>,</div>
<div class="line">      2  |  4  |  32 },</div>
<div class="line">    {<span class="stringliteral">&quot;real2&quot;</span>, {<a class="code" href="selvalue_8h.xhtml#a70b42b87d434580bf1493591857b8beca7aa9587044cd6fd9c1f1690719a072cf">REAL_VALUE</a>, -1, {<span class="keyword">nullptr</span>}}, <span class="keyword">nullptr</span>,</div>
<div class="line">      2  |  4  |  32 },</div>
<div class="line">}</div>
<div class="ttc" id="selvalue_8h_xhtml_a70b42b87d434580bf1493591857b8beca7aa9587044cd6fd9c1f1690719a072cf"><div class="ttname"><a href="selvalue_8h.xhtml#a70b42b87d434580bf1493591857b8beca7aa9587044cd6fd9c1f1690719a072cf">REAL_VALUE</a></div><div class="ttdoc">One or more real values. </div><div class="ttdef"><b>Definition:</b> selvalue.h:56</div></div>
<div class="ttc" id="selvalue_8h_xhtml_a70b42b87d434580bf1493591857b8beca6f2f1fe9592d96990c9ac690c355bd08"><div class="ttname"><a href="selvalue_8h.xhtml#a70b42b87d434580bf1493591857b8beca6f2f1fe9592d96990c9ac690c355bd08">STR_VALUE</a></div><div class="ttdoc">One or more string values. </div><div class="ttdef"><b>Definition:</b> selvalue.h:57</div></div>
<div class="ttc" id="selvalue_8h_xhtml_a70b42b87d434580bf1493591857b8becacd1ce0b084595a6072a57781dc7738a0"><div class="ttname"><a href="selvalue_8h.xhtml#a70b42b87d434580bf1493591857b8becacd1ce0b084595a6072a57781dc7738a0">INT_VALUE</a></div><div class="ttdoc">One or more integer values. </div><div class="ttdef"><b>Definition:</b> selvalue.h:55</div></div>
</div><!-- fragment -->
<p>Parameters for comparison expression evaluation. </p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:18 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

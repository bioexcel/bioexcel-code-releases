<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/ewald/tests/pmetestcommon.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_8a21c46af9718d1f610eb513153099d7.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a46192700e9e8ed44c648f0a55ee9a53.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_69ef3b2caaf4d875cb2a3215a087d3ea.xhtml">ewald</a></li><li class="navelem"><a class="el" href="dir_4f37fa3e02d7a785bf9ab42925226ad8.xhtml">tests</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">pmetestcommon.cpp File Reference<div class="ingroups"><a class="el" href="group__module__ewald.xhtml">Ewald-family treatments of long-ranged forces</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="gmxpre_8h.xhtml">gmxpre.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="pmetestcommon_8h.xhtml">pmetestcommon.h</a>&quot;</code><br/>
<code>#include &lt;cstring&gt;</code><br/>
<code>#include &quot;gromacs/ewald/pme-gather.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="pme-gpu-internal_8h.xhtml">gromacs/ewald/pme-gpu-internal.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/ewald/pme-grid.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="pme-internal_8h.xhtml">gromacs/ewald/pme-internal.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/ewald/pme-solve.h&quot;</code><br/>
<code>#include &quot;gromacs/ewald/pme-spread.h&quot;</code><br/>
<code>#include &quot;gromacs/fft/parallel_3dfft.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="gpu__utils_8h.xhtml">gromacs/gpu_utils/gpu_utils.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="invertmatrix_8h.xhtml">gromacs/math/invertmatrix.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/mdtypes/commrec.h&quot;</code><br/>
<code>#include &quot;gromacs/pbcutil/pbc.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="exceptions_8h.xhtml">gromacs/utility/exceptions.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="gmxassert_8h.xhtml">gromacs/utility/gmxassert.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="logger_8h.xhtml">gromacs/utility/logger.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="stringutil_8h.xhtml">gromacs/utility/stringutil.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="testasserts_8h.xhtml">testutils/testasserts.h</a>&quot;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for pmetestcommon.cpp:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="pmetestcommon_8cpp__incl.svg" width="2692" height="694"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Implements common routines for PME tests. </p>
<dl class="section author"><dt>Author</dt><dd>Aleksei Iupinov <a href="#" onclick="location.href='mai'+'lto:'+'a.y'+'up'+'ino'+'v@'+'gma'+'il'+'.co'+'m'; return false;">a.yup<span style="display: none;">.nosp@m.</span>inov<span style="display: none;">.nosp@m.</span>@gmai<span style="display: none;">.nosp@m.</span>l.co<span style="display: none;">.nosp@m.</span>m</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:adc50743650edc1d9c88b61b1e4bf6fdd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adc50743650edc1d9c88b61b1e4bf6fdd"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#adc50743650edc1d9c88b61b1e4bf6fdd">gmx::test::pmeSupportsInputForMode</a> (const t_inputrec *inputRec, CodePath mode)</td></tr>
<tr class="memdesc:adc50743650edc1d9c88b61b1e4bf6fdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tells if this generally valid PME input is supported for this mode. <br/></td></tr>
<tr class="separator:adc50743650edc1d9c88b61b1e4bf6fdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a453ac8bc3aa58ada94a37b6a1568b4d8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a453ac8bc3aa58ada94a37b6a1568b4d8"></a>
gmx_uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a453ac8bc3aa58ada94a37b6a1568b4d8">gmx::test::getSplineModuliDoublePrecisionUlps</a> (int splineOrder)</td></tr>
<tr class="memdesc:a453ac8bc3aa58ada94a37b6a1568b4d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">For double precision checks, the recursive interpolation and use of trig functions in make_dft_mod require a lot more flops, and thus opportunity for deviation between implementations. <br/></td></tr>
<tr class="separator:a453ac8bc3aa58ada94a37b6a1568b4d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79eb0c50875853309a14a97b22db952e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a79eb0c50875853309a14a97b22db952e"></a>
static PmeSafePointer&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a79eb0c50875853309a14a97b22db952e">gmx::test::pmeInitInternal</a> (const t_inputrec *inputRec, CodePath mode, <a class="el" href="structgmx__device__info__t.xhtml">gmx_device_info_t</a> *gpuInfo, size_t atomCount, const Matrix3x3 &amp;box, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> ewaldCoeff_q=1.0f, real ewaldCoeff_lj=1.0f)</td></tr>
<tr class="memdesc:a79eb0c50875853309a14a97b22db952e"><td class="mdescLeft">&#160;</td><td class="mdescRight">PME initialization - internal. <br/></td></tr>
<tr class="separator:a79eb0c50875853309a14a97b22db952e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4696b27a8e7eb4f4dfc0be4becb89d51"><td class="memItemLeft" align="right" valign="top">PmeSafePointer&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a4696b27a8e7eb4f4dfc0be4becb89d51">gmx::test::pmeInitEmpty</a> (const t_inputrec *inputRec, CodePath mode, <a class="el" href="structgmx__device__info__t.xhtml">gmx_device_info_t</a> *gpuInfo, const Matrix3x3 &amp;box, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> ewaldCoeff_q, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> ewaldCoeff_lj)</td></tr>
<tr class="memdesc:a4696b27a8e7eb4f4dfc0be4becb89d51"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple PME initialization based on input, no atom data.  <a href="#a4696b27a8e7eb4f4dfc0be4becb89d51">More...</a><br/></td></tr>
<tr class="separator:a4696b27a8e7eb4f4dfc0be4becb89d51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a234314be1a2b322d08eb11462cc7f190"><td class="memItemLeft" align="right" valign="top">PmeSafePointer&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a234314be1a2b322d08eb11462cc7f190">gmx::test::pmeInitAtoms</a> (const t_inputrec *inputRec, CodePath mode, <a class="el" href="structgmx__device__info__t.xhtml">gmx_device_info_t</a> *gpuInfo, const CoordinatesVector &amp;coordinates, const ChargesVector &amp;charges, const Matrix3x3 &amp;box)</td></tr>
<tr class="memdesc:a234314be1a2b322d08eb11462cc7f190"><td class="mdescLeft">&#160;</td><td class="mdescRight">PME initialization with atom data.  <a href="#a234314be1a2b322d08eb11462cc7f190">More...</a><br/></td></tr>
<tr class="separator:a234314be1a2b322d08eb11462cc7f190"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf6e22bacfca9058795e508a2982e341"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abf6e22bacfca9058795e508a2982e341"></a>
static <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#abf6e22bacfca9058795e508a2982e341">gmx::test::pmeGetRealGridInternal</a> (const gmx_pme_t *pme)</td></tr>
<tr class="memdesc:abf6e22bacfca9058795e508a2982e341"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getting local PME real grid pointer for test I/O. <br/></td></tr>
<tr class="separator:abf6e22bacfca9058795e508a2982e341"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a6c86c8a2d4ad8f87e1a50aef85197a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1a6c86c8a2d4ad8f87e1a50aef85197a"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a1a6c86c8a2d4ad8f87e1a50aef85197a">gmx::test::pmeGetRealGridSizesInternal</a> (const gmx_pme_t *pme, CodePath mode, IVec &amp;gridSize, IVec &amp;paddedGridSize)</td></tr>
<tr class="memdesc:a1a6c86c8a2d4ad8f87e1a50aef85197a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getting local PME real grid dimensions. <br/></td></tr>
<tr class="separator:a1a6c86c8a2d4ad8f87e1a50aef85197a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af56fcb04608b8e217093ce086e367ed2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af56fcb04608b8e217093ce086e367ed2"></a>
static t_complex *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#af56fcb04608b8e217093ce086e367ed2">gmx::test::pmeGetComplexGridInternal</a> (const gmx_pme_t *pme)</td></tr>
<tr class="memdesc:af56fcb04608b8e217093ce086e367ed2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getting local PME complex grid pointer for test I/O. <br/></td></tr>
<tr class="separator:af56fcb04608b8e217093ce086e367ed2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a611b81b5fa91c5af3a1d55f0dcccd403"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a611b81b5fa91c5af3a1d55f0dcccd403"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a611b81b5fa91c5af3a1d55f0dcccd403">gmx::test::pmeGetComplexGridSizesInternal</a> (const gmx_pme_t *pme, IVec &amp;gridSize, IVec &amp;paddedGridSize)</td></tr>
<tr class="memdesc:a611b81b5fa91c5af3a1d55f0dcccd403"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getting local PME complex grid dimensions. <br/></td></tr>
<tr class="separator:a611b81b5fa91c5af3a1d55f0dcccd403"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b502cb38e6a78aef8d61616f23d9b86"><td class="memTemplParams" colspan="2"><a class="anchor" id="a4b502cb38e6a78aef8d61616f23d9b86"></a>
template&lt;typename ValueType &gt; </td></tr>
<tr class="memitem:a4b502cb38e6a78aef8d61616f23d9b86"><td class="memTemplItemLeft" align="right" valign="top">static void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a4b502cb38e6a78aef8d61616f23d9b86">gmx::test::pmeGetGridAndSizesInternal</a> (const gmx_pme_t *, CodePath, ValueType *&amp;, IVec &amp;, IVec &amp;)</td></tr>
<tr class="memdesc:a4b502cb38e6a78aef8d61616f23d9b86"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getting the PME grid memory buffer and its sizes - template definition. <br/></td></tr>
<tr class="separator:a4b502cb38e6a78aef8d61616f23d9b86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa75b5c890774b90c501d9124e09e2e9b"><td class="memTemplParams" colspan="2"><a class="anchor" id="aa75b5c890774b90c501d9124e09e2e9b"></a>
template&lt;&gt; </td></tr>
<tr class="memitem:aa75b5c890774b90c501d9124e09e2e9b"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#aa75b5c890774b90c501d9124e09e2e9b">gmx::test::pmeGetGridAndSizesInternal&lt; real &gt;</a> (const gmx_pme_t *pme, CodePath mode, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&amp;grid, IVec &amp;gridSize, IVec &amp;paddedGridSize)</td></tr>
<tr class="memdesc:aa75b5c890774b90c501d9124e09e2e9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getting the PME real grid memory buffer and its sizes. <br/></td></tr>
<tr class="separator:aa75b5c890774b90c501d9124e09e2e9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ef1b83c5bdeff7aadb9cba1f3051132"><td class="memTemplParams" colspan="2"><a class="anchor" id="a0ef1b83c5bdeff7aadb9cba1f3051132"></a>
template&lt;&gt; </td></tr>
<tr class="memitem:a0ef1b83c5bdeff7aadb9cba1f3051132"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a0ef1b83c5bdeff7aadb9cba1f3051132">gmx::test::pmeGetGridAndSizesInternal&lt; t_complex &gt;</a> (const gmx_pme_t *pme, CodePath, t_complex *&amp;grid, IVec &amp;gridSize, IVec &amp;paddedGridSize)</td></tr>
<tr class="memdesc:a0ef1b83c5bdeff7aadb9cba1f3051132"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getting the PME complex grid memory buffer and its sizes. <br/></td></tr>
<tr class="separator:a0ef1b83c5bdeff7aadb9cba1f3051132"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ca32a3032115f7d3287676d2c0e6f17"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a1ca32a3032115f7d3287676d2c0e6f17">gmx::test::pmePerformSplineAndSpread</a> (gmx_pme_t *pme, CodePath mode, bool computeSplines, bool spreadCharges)</td></tr>
<tr class="memdesc:a1ca32a3032115f7d3287676d2c0e6f17"><td class="mdescLeft">&#160;</td><td class="mdescRight">PME spline calculation and charge spreading.  <a href="#a1ca32a3032115f7d3287676d2c0e6f17">More...</a><br/></td></tr>
<tr class="separator:a1ca32a3032115f7d3287676d2c0e6f17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6688e1c60f83063c0a3941404363eaa"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa6688e1c60f83063c0a3941404363eaa"></a>
static <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#aa6688e1c60f83063c0a3941404363eaa">gmx::test::pmeGetSplineDataInternal</a> (const gmx_pme_t *pme, <a class="el" href="pme-gpu-internal_8h.xhtml#a0f754eebaa9461af5829e9d32c8156cb">PmeSplineDataType</a> type, int dimIndex)</td></tr>
<tr class="memdesc:aa6688e1c60f83063c0a3941404363eaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getting the internal spline data buffer pointer. <br/></td></tr>
<tr class="separator:aa6688e1c60f83063c0a3941404363eaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf397294cc77a33540b53c4d12b2303d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaf397294cc77a33540b53c4d12b2303d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#aaf397294cc77a33540b53c4d12b2303d">gmx::test::pmePerformSolve</a> (const gmx_pme_t *pme, CodePath mode, PmeSolveAlgorithm method, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> cellVolume, <a class="el" href="pme-gpu-internal_8h.xhtml#a68be0dbcc0dc3960694fc024c5996d79">GridOrdering</a> gridOrdering, bool computeEnergyAndVirial)</td></tr>
<tr class="memdesc:aaf397294cc77a33540b53c4d12b2303d"><td class="mdescLeft">&#160;</td><td class="mdescRight">PME solving. <br/></td></tr>
<tr class="separator:aaf397294cc77a33540b53c4d12b2303d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac20e16ad5f2b3e1313c147f77623b40b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac20e16ad5f2b3e1313c147f77623b40b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#ac20e16ad5f2b3e1313c147f77623b40b">gmx::test::pmePerformGather</a> (gmx_pme_t *pme, CodePath mode, <a class="el" href="pme_8h.xhtml#acbcd1495b351f6a99fa2bf5b10aca640">PmeForceOutputHandling</a> inputTreatment, ForcesVector &amp;forces)</td></tr>
<tr class="memdesc:ac20e16ad5f2b3e1313c147f77623b40b"><td class="mdescLeft">&#160;</td><td class="mdescRight">PME force gathering. <br/></td></tr>
<tr class="separator:ac20e16ad5f2b3e1313c147f77623b40b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1edd6d8cc0e4fa820be454dbf3877f4f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1edd6d8cc0e4fa820be454dbf3877f4f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a1edd6d8cc0e4fa820be454dbf3877f4f">gmx::test::pmeFinalizeTest</a> (const gmx_pme_t *pme, CodePath mode)</td></tr>
<tr class="memdesc:a1edd6d8cc0e4fa820be454dbf3877f4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">PME test finalization before fetching the outputs. <br/></td></tr>
<tr class="separator:a1edd6d8cc0e4fa820be454dbf3877f4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b2ab56f6d1dd12ead96b688493b1f3e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a3b2ab56f6d1dd12ead96b688493b1f3e">gmx::test::pmeSetSplineData</a> (const gmx_pme_t *pme, CodePath mode, const SplineParamsDimVector &amp;splineValues, <a class="el" href="pme-gpu-internal_8h.xhtml#a0f754eebaa9461af5829e9d32c8156cb">PmeSplineDataType</a> type, int dimIndex)</td></tr>
<tr class="memdesc:a3b2ab56f6d1dd12ead96b688493b1f3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setting atom spline values/derivatives to be used in spread/gather.  <a href="#a3b2ab56f6d1dd12ead96b688493b1f3e">More...</a><br/></td></tr>
<tr class="separator:a3b2ab56f6d1dd12ead96b688493b1f3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c2390232e924060f609fe3b5e8cce88"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a9c2390232e924060f609fe3b5e8cce88">gmx::test::pmeSetGridLineIndices</a> (const gmx_pme_t *pme, CodePath mode, const GridLineIndicesVector &amp;gridLineIndices)</td></tr>
<tr class="memdesc:a9c2390232e924060f609fe3b5e8cce88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setting gridline indices to be used in spread/gather.  <a href="#a9c2390232e924060f609fe3b5e8cce88">More...</a><br/></td></tr>
<tr class="separator:a9c2390232e924060f609fe3b5e8cce88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60ef82e23c14b05f86ed003b1b6ba6e1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a60ef82e23c14b05f86ed003b1b6ba6e1"></a>
size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a60ef82e23c14b05f86ed003b1b6ba6e1">gmx::test::pmeGetGridPlainIndexInternal</a> (const IVec &amp;index, const IVec &amp;paddedGridSize, <a class="el" href="pme-gpu-internal_8h.xhtml#a68be0dbcc0dc3960694fc024c5996d79">GridOrdering</a> gridOrdering)</td></tr>
<tr class="memdesc:a60ef82e23c14b05f86ed003b1b6ba6e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getting plain index into the complex 3d grid. <br/></td></tr>
<tr class="separator:a60ef82e23c14b05f86ed003b1b6ba6e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a0e5a4c3e4056aadc2f173f30997383"><td class="memTemplParams" colspan="2"><a class="anchor" id="a1a0e5a4c3e4056aadc2f173f30997383"></a>
template&lt;typename ValueType &gt; </td></tr>
<tr class="memitem:a1a0e5a4c3e4056aadc2f173f30997383"><td class="memTemplItemLeft" align="right" valign="top">static void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a1a0e5a4c3e4056aadc2f173f30997383">gmx::test::pmeSetGridInternal</a> (const gmx_pme_t *pme, CodePath mode, <a class="el" href="pme-gpu-internal_8h.xhtml#a68be0dbcc0dc3960694fc024c5996d79">GridOrdering</a> gridOrdering, const SparseGridValuesInput&lt; ValueType &gt; &amp;gridValues)</td></tr>
<tr class="memdesc:a1a0e5a4c3e4056aadc2f173f30997383"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setting real or complex grid. <br/></td></tr>
<tr class="separator:a1a0e5a4c3e4056aadc2f173f30997383"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6afa41f76ebc52a30125d51e9924748a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6afa41f76ebc52a30125d51e9924748a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a6afa41f76ebc52a30125d51e9924748a">gmx::test::pmeSetRealGrid</a> (const gmx_pme_t *pme, CodePath mode, const SparseRealGridValuesInput &amp;gridValues)</td></tr>
<tr class="memdesc:a6afa41f76ebc52a30125d51e9924748a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setting real grid to be used in gather. <br/></td></tr>
<tr class="separator:a6afa41f76ebc52a30125d51e9924748a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dfd0cc8da794cd800197ecee0533f8f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2dfd0cc8da794cd800197ecee0533f8f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a2dfd0cc8da794cd800197ecee0533f8f">gmx::test::pmeSetComplexGrid</a> (const gmx_pme_t *pme, CodePath mode, <a class="el" href="pme-gpu-internal_8h.xhtml#a68be0dbcc0dc3960694fc024c5996d79">GridOrdering</a> gridOrdering, const SparseComplexGridValuesInput &amp;gridValues)</td></tr>
<tr class="memdesc:a2dfd0cc8da794cd800197ecee0533f8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Setting complex grid to be used in solve. <br/></td></tr>
<tr class="separator:a2dfd0cc8da794cd800197ecee0533f8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedc489ae843884b7f9a2d10ad9883565"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aedc489ae843884b7f9a2d10ad9883565"></a>
SplineParamsDimVector&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#aedc489ae843884b7f9a2d10ad9883565">gmx::test::pmeGetSplineData</a> (const gmx_pme_t *pme, CodePath mode, <a class="el" href="pme-gpu-internal_8h.xhtml#a0f754eebaa9461af5829e9d32c8156cb">PmeSplineDataType</a> type, int dimIndex)</td></tr>
<tr class="memdesc:aedc489ae843884b7f9a2d10ad9883565"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getting the single dimension's spline values or derivatives. <br/></td></tr>
<tr class="separator:aedc489ae843884b7f9a2d10ad9883565"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a221a012f970602d4581d7187e95efb7c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a221a012f970602d4581d7187e95efb7c"></a>
GridLineIndicesVector&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a221a012f970602d4581d7187e95efb7c">gmx::test::pmeGetGridlineIndices</a> (const gmx_pme_t *pme, CodePath mode)</td></tr>
<tr class="memdesc:a221a012f970602d4581d7187e95efb7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getting the gridline indices. <br/></td></tr>
<tr class="separator:a221a012f970602d4581d7187e95efb7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c9cb972e48db3209997324bb8d9509d"><td class="memTemplParams" colspan="2"><a class="anchor" id="a8c9cb972e48db3209997324bb8d9509d"></a>
template&lt;typename ValueType &gt; </td></tr>
<tr class="memitem:a8c9cb972e48db3209997324bb8d9509d"><td class="memTemplItemLeft" align="right" valign="top">static SparseGridValuesOutput<br class="typebreak"/>
&lt; ValueType &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a8c9cb972e48db3209997324bb8d9509d">gmx::test::pmeGetGridInternal</a> (const gmx_pme_t *pme, CodePath mode, <a class="el" href="pme-gpu-internal_8h.xhtml#a68be0dbcc0dc3960694fc024c5996d79">GridOrdering</a> gridOrdering)</td></tr>
<tr class="memdesc:a8c9cb972e48db3209997324bb8d9509d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getting real or complex grid - only non zero values. <br/></td></tr>
<tr class="separator:a8c9cb972e48db3209997324bb8d9509d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9229059f2bbfab0c108248b965ce7e3c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9229059f2bbfab0c108248b965ce7e3c"></a>
SparseRealGridValuesOutput&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a9229059f2bbfab0c108248b965ce7e3c">gmx::test::pmeGetRealGrid</a> (const gmx_pme_t *pme, CodePath mode)</td></tr>
<tr class="memdesc:a9229059f2bbfab0c108248b965ce7e3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getting the real grid (spreading output of <a class="el" href="namespacegmx_1_1test.xhtml#a1ca32a3032115f7d3287676d2c0e6f17" title="PME spline calculation and charge spreading. ">pmePerformSplineAndSpread()</a>) <br/></td></tr>
<tr class="separator:a9229059f2bbfab0c108248b965ce7e3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2787a8ad9629a010c0afae83e1fe7f28"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2787a8ad9629a010c0afae83e1fe7f28"></a>
SparseComplexGridValuesOutput&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#a2787a8ad9629a010c0afae83e1fe7f28">gmx::test::pmeGetComplexGrid</a> (const gmx_pme_t *pme, CodePath mode, <a class="el" href="pme-gpu-internal_8h.xhtml#a68be0dbcc0dc3960694fc024c5996d79">GridOrdering</a> gridOrdering)</td></tr>
<tr class="memdesc:a2787a8ad9629a010c0afae83e1fe7f28"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getting the complex grid output of <a class="el" href="namespacegmx_1_1test.xhtml#aaf397294cc77a33540b53c4d12b2303d" title="PME solving. ">pmePerformSolve()</a> <br/></td></tr>
<tr class="separator:a2787a8ad9629a010c0afae83e1fe7f28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7099324c51ad1274c3a53440474ff0f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae7099324c51ad1274c3a53440474ff0f"></a>
PmeSolveOutput&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test.xhtml#ae7099324c51ad1274c3a53440474ff0f">gmx::test::pmeGetReciprocalEnergyAndVirial</a> (const gmx_pme_t *pme, CodePath mode, PmeSolveAlgorithm method)</td></tr>
<tr class="memdesc:ae7099324c51ad1274c3a53440474ff0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Getting the reciprocal energy and virial. <br/></td></tr>
<tr class="separator:ae7099324c51ad1274c3a53440474ff0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:16 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

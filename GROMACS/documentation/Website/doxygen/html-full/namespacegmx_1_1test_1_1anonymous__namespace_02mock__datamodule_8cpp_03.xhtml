<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::test::anonymous_namespace{mock_datamodule.cpp} Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li class="current"><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="namespaces.xhtml"><span>Namespace&#160;List</span></a></li>
      <li><a href="namespacemembers.xhtml"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="namespacegmx_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03.xhtml">anonymous_namespace{mock_datamodule.cpp}</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::test::anonymous_namespace{mock_datamodule.cpp} Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03_1_1StaticDataFrameHeaderChecker.xhtml">StaticDataFrameHeaderChecker</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Functor for checking data frame header against static test input data.  <a href="classgmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03_1_1StaticDataFrameHeaderChecker.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03_1_1StaticDataPointsChecker.xhtml">StaticDataPointsChecker</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Functor for checking data frame points against static test input data.  <a href="classgmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03_1_1StaticDataPointsChecker.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03_1_1DataStorageRequester.xhtml">DataStorageRequester</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Functor for requesting data storage.  <a href="classgmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03_1_1DataStorageRequester.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03_1_1StaticDataPointsStorageChecker.xhtml">StaticDataPointsStorageChecker</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Functor for checking data frame points and storage against static test input data.  <a href="classgmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03_1_1StaticDataPointsStorageChecker.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gac450133dc0602bd18aaf78fe3ee4f534"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__analysisdata.xhtml#gac450133dc0602bd18aaf78fe3ee4f534">checkReferenceDataPoint</a> (<a class="el" href="classgmx_1_1test_1_1TestReferenceChecker.xhtml">TestReferenceChecker</a> *checker, const <a class="el" href="classgmx_1_1AnalysisDataValue.xhtml">AnalysisDataValue</a> &amp;value)</td></tr>
<tr class="memdesc:gac450133dc0602bd18aaf78fe3ee4f534"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks a single <a class="el" href="classgmx_1_1AnalysisDataValue.xhtml" title="Value type for representing a single value in analysis data objects. ">AnalysisDataValue</a>.  <a href="group__module__analysisdata.xhtml#gac450133dc0602bd18aaf78fe3ee4f534">More...</a><br/></td></tr>
<tr class="separator:gac450133dc0602bd18aaf78fe3ee4f534"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb37ca8f35691f1f4b77b4db3d0e401e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03.xhtml#acb37ca8f35691f1f4b77b4db3d0e401e">checkHeader</a> (const <a class="el" href="classgmx_1_1AnalysisDataFrameHeader.xhtml">AnalysisDataFrameHeader</a> &amp;header, const <a class="el" href="classgmx_1_1test_1_1AnalysisDataTestInputFrame.xhtml">AnalysisDataTestInputFrame</a> &amp;refFrame)</td></tr>
<tr class="memdesc:acb37ca8f35691f1f4b77b4db3d0e401e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function for checking the data frame header against static data.  <a href="#acb37ca8f35691f1f4b77b4db3d0e401e">More...</a><br/></td></tr>
<tr class="separator:acb37ca8f35691f1f4b77b4db3d0e401e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16fa5ace5064efe66fbcb2b0fd018fec"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03.xhtml#a16fa5ace5064efe66fbcb2b0fd018fec">checkPoints</a> (const <a class="el" href="classgmx_1_1AnalysisDataPointSetRef.xhtml">AnalysisDataPointSetRef</a> &amp;points, const <a class="el" href="classgmx_1_1test_1_1AnalysisDataTestInputPointSet.xhtml">AnalysisDataTestInputPointSet</a> &amp;refPoints, int columnOffset)</td></tr>
<tr class="memdesc:a16fa5ace5064efe66fbcb2b0fd018fec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function for checking a point set against static data.  <a href="#a16fa5ace5064efe66fbcb2b0fd018fec">More...</a><br/></td></tr>
<tr class="separator:a16fa5ace5064efe66fbcb2b0fd018fec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12c94937d1b66aa12c1f1e34affe5866"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03.xhtml#a12c94937d1b66aa12c1f1e34affe5866">checkFrame</a> (const <a class="el" href="classgmx_1_1AnalysisDataFrameRef.xhtml">AnalysisDataFrameRef</a> &amp;frame, const <a class="el" href="classgmx_1_1test_1_1AnalysisDataTestInputFrame.xhtml">AnalysisDataTestInputFrame</a> &amp;refFrame)</td></tr>
<tr class="memdesc:a12c94937d1b66aa12c1f1e34affe5866"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function for checking a full frame against static data.  <a href="#a12c94937d1b66aa12c1f1e34affe5866">More...</a><br/></td></tr>
<tr class="separator:a12c94937d1b66aa12c1f1e34affe5866"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af28295ce309b9070b327b91a54324e4d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02mock__datamodule_8cpp_03.xhtml#af28295ce309b9070b327b91a54324e4d">setSerialExpectationForParallelDataStarted</a> (MockAnalysisDataModule *mock)</td></tr>
<tr class="memdesc:af28295ce309b9070b327b91a54324e4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the mock object expectation to mimick <a class="el" href="classgmx_1_1AnalysisDataModuleSerial.xhtml" title="Convenience base class for serial analysis data modules. ">AnalysisDataModuleSerial</a>.  <a href="#af28295ce309b9070b327b91a54324e4d">More...</a><br/></td></tr>
<tr class="separator:af28295ce309b9070b327b91a54324e4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a12c94937d1b66aa12c1f1e34affe5866"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::test::anonymous_namespace{mock_datamodule.cpp}::checkFrame </td>
          <td>(</td>
          <td class="paramtype">const AnalysisDataFrameRef &amp;&#160;</td>
          <td class="paramname"><em>frame</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const AnalysisDataTestInputFrame &amp;&#160;</td>
          <td class="paramname"><em>refFrame</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Helper function for checking a full frame against static data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">frame</td><td>Frame to check. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">refFrame</td><td>Data to check against. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="acb37ca8f35691f1f4b77b4db3d0e401e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::test::anonymous_namespace{mock_datamodule.cpp}::checkHeader </td>
          <td>(</td>
          <td class="paramtype">const AnalysisDataFrameHeader &amp;&#160;</td>
          <td class="paramname"><em>header</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const AnalysisDataTestInputFrame &amp;&#160;</td>
          <td class="paramname"><em>refFrame</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Helper function for checking the data frame header against static data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">header</td><td>Frame header to check. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">refFrame</td><td>Data to check against. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a16fa5ace5064efe66fbcb2b0fd018fec"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::test::anonymous_namespace{mock_datamodule.cpp}::checkPoints </td>
          <td>(</td>
          <td class="paramtype">const AnalysisDataPointSetRef &amp;&#160;</td>
          <td class="paramname"><em>points</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const AnalysisDataTestInputPointSet &amp;&#160;</td>
          <td class="paramname"><em>refPoints</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>columnOffset</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Helper function for checking a point set against static data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">points</td><td>Point set to check. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">refPoints</td><td>Data to check against. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">columnOffset</td><td>Offset of first column of <code>points</code> in <code>refPoints</code>. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af28295ce309b9070b327b91a54324e4d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::test::anonymous_namespace{mock_datamodule.cpp}::setSerialExpectationForParallelDataStarted </td>
          <td>(</td>
          <td class="paramtype">MockAnalysisDataModule *&#160;</td>
          <td class="paramname"><em>mock</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the mock object expectation to mimick <a class="el" href="classgmx_1_1AnalysisDataModuleSerial.xhtml" title="Convenience base class for serial analysis data modules. ">AnalysisDataModuleSerial</a>. </p>
<p>Makes MockAnalysisDataModule::parallelDataStarted() behave as if the mock object was an <a class="el" href="classgmx_1_1AnalysisDataModuleSerial.xhtml" title="Convenience base class for serial analysis data modules. ">AnalysisDataModuleSerial</a> object: forward the call to MockAnalysisDataModule::dataStarted() and return false. </p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:31 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

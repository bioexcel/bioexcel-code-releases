<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::PointState Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1PointState.xhtml">PointState</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1PointState-members.xhtml">List of all members</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::PointState Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/awh/pointstate.h&gt;</code></p>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>The state of a coordinate point. </p>
<p>This class contains all the state variables of a coordinate point (on the bias grid) and methods to update the state of a point. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2141bf32d5fe8de87bd0769221d9d831"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2141bf32d5fe8de87bd0769221d9d831"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#a2141bf32d5fe8de87bd0769221d9d831">PointState</a> ()</td></tr>
<tr class="memdesc:a2141bf32d5fe8de87bd0769221d9d831"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs a point state with default values. <br/></td></tr>
<tr class="separator:a2141bf32d5fe8de87bd0769221d9d831"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe7662743ff460328afe2ef6f8080399"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#afe7662743ff460328afe2ef6f8080399">setFromHistory</a> (const AwhPointStateHistory &amp;psh)</td></tr>
<tr class="memdesc:afe7662743ff460328afe2ef6f8080399"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set all values in the state to those from a history.  <a href="#afe7662743ff460328afe2ef6f8080399">More...</a><br/></td></tr>
<tr class="separator:afe7662743ff460328afe2ef6f8080399"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94a31f2e7cb68c3111a4bc5e5a09db91"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#a94a31f2e7cb68c3111a4bc5e5a09db91">storeState</a> (AwhPointStateHistory *psh) const </td></tr>
<tr class="memdesc:a94a31f2e7cb68c3111a4bc5e5a09db91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Store the state of a point in a history struct.  <a href="#a94a31f2e7cb68c3111a4bc5e5a09db91">More...</a><br/></td></tr>
<tr class="separator:a94a31f2e7cb68c3111a4bc5e5a09db91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5307c85ef5e380a6e2b27a562215146"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#ab5307c85ef5e380a6e2b27a562215146">inTargetRegion</a> () const </td></tr>
<tr class="memdesc:ab5307c85ef5e380a6e2b27a562215146"><td class="mdescLeft">&#160;</td><td class="mdescRight">Query if the point is in the target region.  <a href="#ab5307c85ef5e380a6e2b27a562215146">More...</a><br/></td></tr>
<tr class="separator:ab5307c85ef5e380a6e2b27a562215146"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e22c3e94e7555793fc12196be4b7f23"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9e22c3e94e7555793fc12196be4b7f23"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#a9e22c3e94e7555793fc12196be4b7f23">bias</a> () const </td></tr>
<tr class="memdesc:a9e22c3e94e7555793fc12196be4b7f23"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the bias function estimate. <br/></td></tr>
<tr class="separator:a9e22c3e94e7555793fc12196be4b7f23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd47035fcf3fcb0dc3371397d589c2f5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abd47035fcf3fcb0dc3371397d589c2f5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#abd47035fcf3fcb0dc3371397d589c2f5">setTargetToZero</a> ()</td></tr>
<tr class="memdesc:abd47035fcf3fcb0dc3371397d589c2f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the target to zero and the bias to minus infinity. <br/></td></tr>
<tr class="separator:abd47035fcf3fcb0dc3371397d589c2f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ed8052f2d4c07b49d9e02bab185d8fa"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3ed8052f2d4c07b49d9e02bab185d8fa"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#a3ed8052f2d4c07b49d9e02bab185d8fa">freeEnergy</a> () const </td></tr>
<tr class="memdesc:a3ed8052f2d4c07b49d9e02bab185d8fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the free energy. <br/></td></tr>
<tr class="separator:a3ed8052f2d4c07b49d9e02bab185d8fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a861a1ff4d71b2f717c5489bda55eb6e5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#a861a1ff4d71b2f717c5489bda55eb6e5">setFreeEnergy</a> (double <a class="el" href="classgmx_1_1PointState.xhtml#a3ed8052f2d4c07b49d9e02bab185d8fa">freeEnergy</a>)</td></tr>
<tr class="memdesc:a861a1ff4d71b2f717c5489bda55eb6e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the free energy, only to be used at initialization.  <a href="#a861a1ff4d71b2f717c5489bda55eb6e5">More...</a><br/></td></tr>
<tr class="separator:a861a1ff4d71b2f717c5489bda55eb6e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86dede6848f9460e61d42ad8f77a4895"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a86dede6848f9460e61d42ad8f77a4895"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#a86dede6848f9460e61d42ad8f77a4895">target</a> () const </td></tr>
<tr class="memdesc:a86dede6848f9460e61d42ad8f77a4895"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the target distribution value. <br/></td></tr>
<tr class="separator:a86dede6848f9460e61d42ad8f77a4895"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b08b142f9e007c4c5d74f1493815b10"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3b08b142f9e007c4c5d74f1493815b10"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#a3b08b142f9e007c4c5d74f1493815b10">weightSumIteration</a> () const </td></tr>
<tr class="memdesc:a3b08b142f9e007c4c5d74f1493815b10"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the weight accumulated since the last update. <br/></td></tr>
<tr class="separator:a3b08b142f9e007c4c5d74f1493815b10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa72b0b62dd5c964acc02faa38ef5fd63"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#aa72b0b62dd5c964acc02faa38ef5fd63">increaseWeightSumIteration</a> (double weight)</td></tr>
<tr class="memdesc:aa72b0b62dd5c964acc02faa38ef5fd63"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increases the weight accumulated since the last update.  <a href="#aa72b0b62dd5c964acc02faa38ef5fd63">More...</a><br/></td></tr>
<tr class="separator:aa72b0b62dd5c964acc02faa38ef5fd63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7b452c9faacc1cde007af95ed9bb3f0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad7b452c9faacc1cde007af95ed9bb3f0"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#ad7b452c9faacc1cde007af95ed9bb3f0">weightSumTot</a> () const </td></tr>
<tr class="memdesc:ad7b452c9faacc1cde007af95ed9bb3f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the accumulated weight. <br/></td></tr>
<tr class="separator:ad7b452c9faacc1cde007af95ed9bb3f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ee05ec6894ed841e5193e10dee54846"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6ee05ec6894ed841e5193e10dee54846"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#a6ee05ec6894ed841e5193e10dee54846">weightSumRef</a> () const </td></tr>
<tr class="memdesc:a6ee05ec6894ed841e5193e10dee54846"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the reference weight histogram. <br/></td></tr>
<tr class="separator:a6ee05ec6894ed841e5193e10dee54846"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7e7ef144e1c09afa95ecab92f0e6f07"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa7e7ef144e1c09afa95ecab92f0e6f07"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#aa7e7ef144e1c09afa95ecab92f0e6f07">logPmfSum</a> () const </td></tr>
<tr class="memdesc:aa7e7ef144e1c09afa95ecab92f0e6f07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return log(PmfSum). <br/></td></tr>
<tr class="separator:aa7e7ef144e1c09afa95ecab92f0e6f07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c8cda15c182a4e65a62b79c29c4b618"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#a1c8cda15c182a4e65a62b79c29c4b618">setLogPmfSum</a> (double <a class="el" href="classgmx_1_1PointState.xhtml#aa7e7ef144e1c09afa95ecab92f0e6f07">logPmfSum</a>)</td></tr>
<tr class="memdesc:a1c8cda15c182a4e65a62b79c29c4b618"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set log(PmfSum).  <a href="#a1c8cda15c182a4e65a62b79c29c4b618">More...</a><br/></td></tr>
<tr class="separator:a1c8cda15c182a4e65a62b79c29c4b618"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fe5fc36c307a85d8f209b79049a4eff"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6fe5fc36c307a85d8f209b79049a4eff"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#a6fe5fc36c307a85d8f209b79049a4eff">numVisitsIteration</a> () const </td></tr>
<tr class="memdesc:a6fe5fc36c307a85d8f209b79049a4eff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the number of visits since the last update. <br/></td></tr>
<tr class="separator:a6fe5fc36c307a85d8f209b79049a4eff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b92b8b46bac44daee0cdc8dc4b602a8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1b92b8b46bac44daee0cdc8dc4b602a8"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#a1b92b8b46bac44daee0cdc8dc4b602a8">numVisitsTot</a> () const </td></tr>
<tr class="memdesc:a1b92b8b46bac44daee0cdc8dc4b602a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the total number of visits. <br/></td></tr>
<tr class="separator:a1b92b8b46bac44daee0cdc8dc4b602a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa57ac70f7081fc570a56af74ed95a5e6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#aa57ac70f7081fc570a56af74ed95a5e6">setTargetConstantWeight</a> (double targetConstantWeight)</td></tr>
<tr class="memdesc:aa57ac70f7081fc570a56af74ed95a5e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the constant target weight factor.  <a href="#aa57ac70f7081fc570a56af74ed95a5e6">More...</a><br/></td></tr>
<tr class="separator:aa57ac70f7081fc570a56af74ed95a5e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af91185683ef6eecd9605c4594120796c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af91185683ef6eecd9605c4594120796c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#af91185683ef6eecd9605c4594120796c">updateBias</a> ()</td></tr>
<tr class="memdesc:af91185683ef6eecd9605c4594120796c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates the bias of a point. <br/></td></tr>
<tr class="separator:af91185683ef6eecd9605c4594120796c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a883207e22f87de4eb7fb650fcac141d4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#a883207e22f87de4eb7fb650fcac141d4">setInitialReferenceWeightHistogram</a> (double histogramSize)</td></tr>
<tr class="memdesc:a883207e22f87de4eb7fb650fcac141d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the initial reference weighthistogram.  <a href="#a883207e22f87de4eb7fb650fcac141d4">More...</a><br/></td></tr>
<tr class="separator:a883207e22f87de4eb7fb650fcac141d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9734176eb05174d67c84c4f6c1d44a6d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#a9734176eb05174d67c84c4f6c1d44a6d">normalizeFreeEnergyAndPmfSum</a> (double minimumFreeEnergy)</td></tr>
<tr class="memdesc:a9734176eb05174d67c84c4f6c1d44a6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Correct free energy and PMF sum for the change in minimum.  <a href="#a9734176eb05174d67c84c4f6c1d44a6d">More...</a><br/></td></tr>
<tr class="separator:a9734176eb05174d67c84c4f6c1d44a6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ccc990b3cc63a2ab520e25c42587821"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#a2ccc990b3cc63a2ab520e25c42587821">performPreviouslySkippedUpdates</a> (const <a class="el" href="classgmx_1_1BiasParams.xhtml">BiasParams</a> &amp;params, gmx_int64_t numUpdates, double weighthistScaling, double logPmfSumScaling)</td></tr>
<tr class="memdesc:a2ccc990b3cc63a2ab520e25c42587821"><td class="mdescLeft">&#160;</td><td class="mdescRight">Apply previous updates that were skipped.  <a href="#a2ccc990b3cc63a2ab520e25c42587821">More...</a><br/></td></tr>
<tr class="separator:a2ccc990b3cc63a2ab520e25c42587821"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19ec6a0437db678add06f61a8b29ab07"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#a19ec6a0437db678add06f61a8b29ab07">updateWithNewSampling</a> (const <a class="el" href="classgmx_1_1BiasParams.xhtml">BiasParams</a> &amp;params, gmx_int64_t numUpdates, double weighthistScaling, double logPmfSumScaling)</td></tr>
<tr class="memdesc:a19ec6a0437db678add06f61a8b29ab07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Apply a point update with new sampling.  <a href="#a19ec6a0437db678add06f61a8b29ab07">More...</a><br/></td></tr>
<tr class="separator:a19ec6a0437db678add06f61a8b29ab07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8d8b78b589249e076f4de69de2c5b80"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#ac8d8b78b589249e076f4de69de2c5b80">samplePmf</a> (double convolvedBias)</td></tr>
<tr class="memdesc:ac8d8b78b589249e076f4de69de2c5b80"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update the PMF histogram with the current coordinate value.  <a href="#ac8d8b78b589249e076f4de69de2c5b80">More...</a><br/></td></tr>
<tr class="separator:ac8d8b78b589249e076f4de69de2c5b80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d57397ae942af129a982a9f333fef51"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#a1d57397ae942af129a982a9f333fef51">updateTargetWeight</a> (const <a class="el" href="classgmx_1_1BiasParams.xhtml">BiasParams</a> &amp;params, double freeEnergyCutoff)</td></tr>
<tr class="memdesc:a1d57397ae942af129a982a9f333fef51"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update the target weight of a point.  <a href="#a1d57397ae942af129a982a9f333fef51">More...</a><br/></td></tr>
<tr class="separator:a1d57397ae942af129a982a9f333fef51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad85fc291b0ea9442a2afe16b04139434"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#ad85fc291b0ea9442a2afe16b04139434">setPartialWeightAndCount</a> (double weightSum, double numVisits)</td></tr>
<tr class="memdesc:ad85fc291b0ea9442a2afe16b04139434"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the weight and count accumulated since the last update.  <a href="#ad85fc291b0ea9442a2afe16b04139434">More...</a><br/></td></tr>
<tr class="separator:ad85fc291b0ea9442a2afe16b04139434"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1e718cf6b096f548856facfc8db7dc9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae1e718cf6b096f548856facfc8db7dc9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#ae1e718cf6b096f548856facfc8db7dc9">addPartialWeightAndCount</a> ()</td></tr>
<tr class="memdesc:ae1e718cf6b096f548856facfc8db7dc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the weights and counts accumulated between updates. <br/></td></tr>
<tr class="separator:ae1e718cf6b096f548856facfc8db7dc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93751c7f51be9d69545a30ce189bffc2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1PointState.xhtml#a93751c7f51be9d69545a30ce189bffc2">scaleTarget</a> (double scaleFactor)</td></tr>
<tr class="memdesc:a93751c7f51be9d69545a30ce189bffc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scale the target weight of the point.  <a href="#a93751c7f51be9d69545a30ce189bffc2">More...</a><br/></td></tr>
<tr class="separator:a93751c7f51be9d69545a30ce189bffc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aa72b0b62dd5c964acc02faa38ef5fd63"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::PointState::increaseWeightSumIteration </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>weight</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Increases the weight accumulated since the last update. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">weight</td><td>The amount to add to the weight </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab5307c85ef5e380a6e2b27a562215146"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::PointState::inTargetRegion </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Query if the point is in the target region. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the point is in the target region. </dd></dl>

</div>
</div>
<a class="anchor" id="a9734176eb05174d67c84c4f6c1d44a6d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::PointState::normalizeFreeEnergyAndPmfSum </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>minimumFreeEnergy</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Correct free energy and PMF sum for the change in minimum. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">minimumFreeEnergy</td><td>The free energy at the minimum; </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2ccc990b3cc63a2ab520e25c42587821"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::PointState::performPreviouslySkippedUpdates </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1BiasParams.xhtml">BiasParams</a> &amp;&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gmx_int64_t&#160;</td>
          <td class="paramname"><em>numUpdates</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>weighthistScaling</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>logPmfSumScaling</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Apply previous updates that were skipped. </p>
<p>An update can only be skipped if the parameters needed for the update are constant or deterministic so that the same update can be performed at a later time. Here, the necessary parameters are the sampled weight and scaling factors for the histograms. The scaling factors are provided as arguments only to avoid recalculating them for each point</p>
<p>The last update index is also updated here.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>The AWH bias parameters. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numUpdates</td><td>The global number of updates. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weighthistScaling</td><td>Scale factor for the reference weight histogram. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">logPmfSumScaling</td><td>Scale factor for the reference PMF histogram. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if at least one update was applied. </dd></dl>

</div>
</div>
<a class="anchor" id="ac8d8b78b589249e076f4de69de2c5b80"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::PointState::samplePmf </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>convolvedBias</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Update the PMF histogram with the current coordinate value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">convolvedBias</td><td>The convolved bias. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a93751c7f51be9d69545a30ce189bffc2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::PointState::scaleTarget </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>scaleFactor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Scale the target weight of the point. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">scaleFactor</td><td>Factor to scale with. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a861a1ff4d71b2f717c5489bda55eb6e5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::PointState::setFreeEnergy </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>freeEnergy</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the free energy, only to be used at initialization. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">freeEnergy</td><td>The free energy. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="afe7662743ff460328afe2ef6f8080399"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::PointState::setFromHistory </td>
          <td>(</td>
          <td class="paramtype">const AwhPointStateHistory &amp;&#160;</td>
          <td class="paramname"><em>psh</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set all values in the state to those from a history. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">psh</td><td>Coordinate point history to copy from. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a883207e22f87de4eb7fb650fcac141d4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::PointState::setInitialReferenceWeightHistogram </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>histogramSize</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the initial reference weighthistogram. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">histogramSize</td><td>The weight histogram size. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1c8cda15c182a4e65a62b79c29c4b618"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::PointState::setLogPmfSum </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>logPmfSum</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set log(PmfSum). </p>
<p>TODO: Replace this setter function with a more elegant solution.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">logPmfSum</td><td>The log(PmfSum). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad85fc291b0ea9442a2afe16b04139434"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::PointState::setPartialWeightAndCount </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>weightSum</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>numVisits</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the weight and count accumulated since the last update. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">weightSum</td><td>The weight-sum value </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numVisits</td><td>The number of visits </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa57ac70f7081fc570a56af74ed95a5e6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::PointState::setTargetConstantWeight </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>targetConstantWeight</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the constant target weight factor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">targetConstantWeight</td><td>The target weight factor. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a94a31f2e7cb68c3111a4bc5e5a09db91"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::PointState::storeState </td>
          <td>(</td>
          <td class="paramtype">AwhPointStateHistory *&#160;</td>
          <td class="paramname"><em>psh</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Store the state of a point in a history struct. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">psh</td><td>Coordinate point history to copy to. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1d57397ae942af129a982a9f333fef51"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double gmx::PointState::updateTargetWeight </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1BiasParams.xhtml">BiasParams</a> &amp;&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>freeEnergyCutoff</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Update the target weight of a point. </p>
<p>Note that renormalization over all points is needed after the update.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>The AWH bias parameters. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">freeEnergyCutoff</td><td>The cut-off for the free energy for target type "cutoff". </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the updated value of the target. </dd></dl>

</div>
</div>
<a class="anchor" id="a19ec6a0437db678add06f61a8b29ab07"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::PointState::updateWithNewSampling </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1BiasParams.xhtml">BiasParams</a> &amp;&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gmx_int64_t&#160;</td>
          <td class="paramname"><em>numUpdates</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>weighthistScaling</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>logPmfSumScaling</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Apply a point update with new sampling. </p>
<dl class="section note"><dt>Note</dt><dd>The last update index is also updated here. </dd>
<dd>
The new sampling containers are cleared here.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>The AWH bias parameters. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numUpdates</td><td>The global number of updates. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weighthistScaling</td><td>Scaling factor for the reference weight histogram. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">logPmfSumScaling</td><td>Log of the scaling factor for the PMF histogram. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/awh/<a class="el" href="pointstate_8h.xhtml">pointstate.h</a></li>
<li>src/gromacs/awh/<a class="el" href="pointstate_8cpp.xhtml">pointstate.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:27 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

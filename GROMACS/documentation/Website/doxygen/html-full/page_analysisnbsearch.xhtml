<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: Neighborhood search for analysis tools</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li class="current"><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="index.xhtml">GROMACS</a></li><li class="navelem"><a class="el" href="page_analysisframework.xhtml">Framework for trajectory analysis</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Neighborhood search for analysis tools </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p>The header <a class="el" href="nbsearch_8h.xhtml" title="API for neighborhood searching for analysis. ">nbsearch.h</a> declares a C++ interface to a relatively flexible and efficient neighborhood search. It is currently implemented within the selection module where it originated, but it does not have any dependencies on the other selection code and can be easily split out in the future.</p>
<p>The emphasis is on flexibility and ease of use; one main driver is to have one common implementation of grid-based searching to avoid replicating this in multiple tools (and to make more tools take advantage of the significant performance improvement this allows). The main features that it provides:</p>
<ul>
<li>Grid-based searching with any triclinic box shape that GROMACS supports (i.e., a triangular box matrix and not too skewed).</li>
<li>Grid-based searching with all PBC options except for screw boundary conditions.</li>
<li>With no PBC, grid-based searching where the grid is constructed based on the bounding box of the gridded atoms.</li>
<li>Efficient, rectangular grid cells whose size is determined by particle density and not limited by the cutoff.</li>
<li>Transparent fallback to a simple all-pairs search if the cutoff is too long for the algorithm or grid searching is not otherwise supported.</li>
<li>Support for either N-vs-M pair search with two sets of coordinates, or for all pairs within a single set of coordinates.</li>
<li>Support for computing all distances in the XY plane only (and still grid-based).</li>
<li>Convenience functions for finding the shortest distance or the nearest pair between two sets of positions.</li>
<li>Basic support for exclusions.</li>
<li>Thread-safe handling of multiple concurrent searches with the same cutoff with the same or different reference positions.</li>
</ul>
<h1>Usage </h1>
<p>The neighborhood search works conceptually with two different sets of coordinates:</p>
<ul>
<li><em>reference positions</em>: When initiating the search, you provide one set of reference positions that get placed on the search grid and determine the size of the grid.</li>
<li><em>test positions</em>: For each set of reference positions, you provide a set of test positions (or a single position). The search is performed from each test position, finding the reference positions within the cutoff from this point. It is possible to perform multiple searches against the same set of reference positions (and the same grid).</li>
</ul>
<p>To start using the neighborhood search, you need to first create an instance of <a class="el" href="classgmx_1_1AnalysisNeighborhood.xhtml" title="Neighborhood searching for analysis tools. ">gmx::AnalysisNeighborhood</a>. This class allows you to set some global properties for the search (most notably, the cutoff distance). Then you provide the reference positions as a <a class="el" href="classgmx_1_1AnalysisNeighborhoodPositions.xhtml" title="Input positions for neighborhood searching. ">gmx::AnalysisNeighborhoodPositions</a> and PBC information to get a <a class="el" href="classgmx_1_1AnalysisNeighborhoodSearch.xhtml" title="Initialized neighborhood search with a fixed set of reference positions. ">gmx::AnalysisNeighborhoodSearch</a> instance. You can then either use methods directly in this class to find, e.g., the nearest reference point from a test position, or you can do a full pair search that returns you all the reference-test pairs within a cutoff. The pair search is performed using an instance of <a class="el" href="classgmx_1_1AnalysisNeighborhoodPairSearch.xhtml" title="Initialized neighborhood pair search with a fixed set of positions. ">gmx::AnalysisNeighborhoodPairSearch</a> that the search object returns. Methods that return information about pairs return an instance of <a class="el" href="classgmx_1_1AnalysisNeighborhoodPair.xhtml" title="Value type to represent a pair of positions found in neighborhood searching. ">gmx::AnalysisNeighborhoodPair</a>, which can be used to access the indices of the reference and test positions in the pair, as well as the computed distance. See the class documentation for these classes for details.</p>
<p>For use together with selections, an instance of <a class="el" href="classgmx_1_1Selection.xhtml" title="Provides access to a single selection. ">gmx::Selection</a> or <a class="el" href="classgmx_1_1SelectionPosition.xhtml" title="Provides access to information about a single selected position. ">gmx::SelectionPosition</a> can be transparently passed as the positions for the neighborhood search.</p>
<h1>Implementation </h1>
<p>This section provides a high-level overview of the algorithm used. It is not necessary to understand all the details to use the API, but it can be useful to get the best performance out of it. The main audience is developers who may need to extend the API to make it suitable for more cases.</p>
<p>The grid for the search is initialized based on the reference positions and the PBC information:</p>
<ul>
<li>The grid cells are always rectangular, even for fully triclinic boxes.</li>
<li>If there is no PBC, the grid edges are defined from the bounding box of the reference positions; with PBC, the grid covers the unit cell.</li>
<li>The grid cell size is determined such that on average, each cell contains ten particles. Special considerations are in place for cases where the grid will only be one- or two-dimensional because of a flat box.</li>
<li>If the resulting grid has too few cells in some dimensions, the code falls back automatically to an all-pairs search. For correct operation, the grid algorithm needs three cells in each dimension, but the code can fall back to a non-gridded search for each dimension separately.</li>
<li>The initialization also pre-calculates the shifts required across the periodic boundaries for triclinic cells, i.e., the fractional number of cells that the grid origin is shifted when crossing the periodic boundary in Y or Z directions.</li>
<li>Finally, all the reference positions are mapped to the grid cells.</li>
</ul>
<p>The average number of particles within a cell is somewhat heuristic in the above logic. This has not been particularly optimized for best performance.</p>
<p>When doing the search for test positions, each test position is considered independently:</p>
<ul>
<li>The coordinates of the test position are mapped to the grid coordinate system. The coordinates here are fractional and may lay outside the grid for non-periodic dimensions.</li>
<li>The bounding box of the cutoff sphere centered at the mapped coordinates is determined, and each grid cell that intersects with this box is used for searching the reference positions. So the searched grid cells may vary depending on the coordinates of the test position, even if the test position is within the same cell.</li>
<li>Possible triclinic shifts in the grid are considered when looping over the cells in the cutoff box if the coordinates wrap around a periodic dimension. This is done by shifting the search range in the other dimensions when the Z or Y dimension loop crosses the boundary. </li>
</ul>
</div></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:22 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

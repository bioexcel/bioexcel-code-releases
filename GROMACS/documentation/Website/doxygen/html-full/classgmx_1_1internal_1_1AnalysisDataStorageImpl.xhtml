<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::internal::AnalysisDataStorageImpl Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="namespacegmx_1_1internal.xhtml">internal</a></li><li class="navelem"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml">AnalysisDataStorageImpl</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1internal_1_1AnalysisDataStorageImpl-members.xhtml">List of all members</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a>  </div>
  <div class="headertitle">
<div class="title">gmx::internal::AnalysisDataStorageImpl Class Reference<div class="ingroups"><a class="el" href="group__module__analysisdata.xhtml">Parallelizable Handling of Output Data (analysisdata)</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for gmx::internal::AnalysisDataStorageImpl:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1internal_1_1AnalysisDataStorageImpl__coll__graph.svg" width="443" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Private implementation class for <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml" title="Helper class that implements storage of data. ">AnalysisDataStorage</a>. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a608a9be580bd62fd9a5edff2f5156e3d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a608a9be580bd62fd9a5edff2f5156e3d"></a>
typedef std::unique_ptr<br class="typebreak"/>
&lt; <a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageFrameData.xhtml">AnalysisDataStorageFrameData</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#a608a9be580bd62fd9a5edff2f5156e3d">FramePointer</a></td></tr>
<tr class="memdesc:a608a9be580bd62fd9a5edff2f5156e3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Smart pointer type for managing a stored frame. <br/></td></tr>
<tr class="separator:a608a9be580bd62fd9a5edff2f5156e3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b2af19109dfb91fb162696e97139eeb"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1b2af19109dfb91fb162696e97139eeb"></a>
typedef std::vector&lt; <a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#a608a9be580bd62fd9a5edff2f5156e3d">FramePointer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#a1b2af19109dfb91fb162696e97139eeb">FrameList</a></td></tr>
<tr class="memdesc:a1b2af19109dfb91fb162696e97139eeb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shorthand for a list of data frames that are currently stored. <br/></td></tr>
<tr class="separator:a1b2af19109dfb91fb162696e97139eeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d95ed4cbefa7cb90dec3e817b807e18"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1d95ed4cbefa7cb90dec3e817b807e18"></a>
typedef std::vector<br class="typebreak"/>
&lt; <a class="el" href="namespacegmx_1_1internal.xhtml#a10329904859eb4035ac1a2464a9745b2">AnalysisDataFrameBuilderPointer</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#a1d95ed4cbefa7cb90dec3e817b807e18">FrameBuilderList</a></td></tr>
<tr class="memdesc:a1d95ed4cbefa7cb90dec3e817b807e18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shorthand for a list of currently unused storage frame builders. <br/></td></tr>
<tr class="separator:a1d95ed4cbefa7cb90dec3e817b807e18"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9b02436e20d3554fab2ebdacafc61434"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9b02436e20d3554fab2ebdacafc61434"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#a9b02436e20d3554fab2ebdacafc61434">isMultipoint</a> () const </td></tr>
<tr class="memdesc:a9b02436e20d3554fab2ebdacafc61434"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the storage is set to use multipoint data. <br/></td></tr>
<tr class="separator:a9b02436e20d3554fab2ebdacafc61434"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1974e4a7d11f0f14b682a48dfb11eb90"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#a1974e4a7d11f0f14b682a48dfb11eb90">storeAll</a> () const </td></tr>
<tr class="memdesc:a1974e4a7d11f0f14b682a48dfb11eb90"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether storage of all frames has been requested.  <a href="#a1974e4a7d11f0f14b682a48dfb11eb90">More...</a><br/></td></tr>
<tr class="separator:a1974e4a7d11f0f14b682a48dfb11eb90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e491349abdfd13f99106b471784a1c5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5e491349abdfd13f99106b471784a1c5"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#a5e491349abdfd13f99106b471784a1c5">firstStoredIndex</a> () const </td></tr>
<tr class="memdesc:a5e491349abdfd13f99106b471784a1c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the index of the oldest frame that may be currently stored. <br/></td></tr>
<tr class="separator:a5e491349abdfd13f99106b471784a1c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace2e996c2440bf37f45aa3c44631bd4f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ace2e996c2440bf37f45aa3c44631bd4f"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#ace2e996c2440bf37f45aa3c44631bd4f">firstUnnotifiedIndex</a> () const </td></tr>
<tr class="memdesc:ace2e996c2440bf37f45aa3c44631bd4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the index of the first frame that is not fully notified. <br/></td></tr>
<tr class="separator:ace2e996c2440bf37f45aa3c44631bd4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b67663a76b93b236c0d4ae2bda99931"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#a0b67663a76b93b236c0d4ae2bda99931">computeStorageLocation</a> (int index) const </td></tr>
<tr class="memdesc:a0b67663a76b93b236c0d4ae2bda99931"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes index into <em>frames_</em> for accessing frame <code>index</code>.  <a href="#a0b67663a76b93b236c0d4ae2bda99931">More...</a><br/></td></tr>
<tr class="separator:a0b67663a76b93b236c0d4ae2bda99931"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad17487b105ba7497ba981100618d0bb7"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#ad17487b105ba7497ba981100618d0bb7">endStorageLocation</a> () const </td></tr>
<tr class="memdesc:ad17487b105ba7497ba981100618d0bb7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes an index into <em>frames_</em> that is one past the last frame stored.  <a href="#ad17487b105ba7497ba981100618d0bb7">More...</a><br/></td></tr>
<tr class="separator:ad17487b105ba7497ba981100618d0bb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52d20e652bffaa6a796916d6dc975e34"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#a52d20e652bffaa6a796916d6dc975e34">extendBuffer</a> (size_t newSize)</td></tr>
<tr class="memdesc:a52d20e652bffaa6a796916d6dc975e34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extends <em>frames_</em> to a new size.  <a href="#a52d20e652bffaa6a796916d6dc975e34">More...</a><br/></td></tr>
<tr class="separator:a52d20e652bffaa6a796916d6dc975e34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e21397a5a68634023a17e9ce6b0fd13"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#a6e21397a5a68634023a17e9ce6b0fd13">rotateBuffer</a> ()</td></tr>
<tr class="memdesc:a6e21397a5a68634023a17e9ce6b0fd13"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove oldest frame from the storage to make space for a new one.  <a href="#a6e21397a5a68634023a17e9ce6b0fd13">More...</a><br/></td></tr>
<tr class="separator:a6e21397a5a68634023a17e9ce6b0fd13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6edcde43d7b51eb01c527ba72379570"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacegmx_1_1internal.xhtml#a10329904859eb4035ac1a2464a9745b2">AnalysisDataFrameBuilderPointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#ab6edcde43d7b51eb01c527ba72379570">getFrameBuilder</a> ()</td></tr>
<tr class="memdesc:ab6edcde43d7b51eb01c527ba72379570"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a frame builder object for use with a new frame.  <a href="#ab6edcde43d7b51eb01c527ba72379570">More...</a><br/></td></tr>
<tr class="separator:ab6edcde43d7b51eb01c527ba72379570"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aace97979420f092d74b99828b5a98a6b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#aace97979420f092d74b99828b5a98a6b">shouldNotifyImmediately</a> () const </td></tr>
<tr class="memdesc:aace97979420f092d74b99828b5a98a6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether notifications should be immediately fired.  <a href="#aace97979420f092d74b99828b5a98a6b">More...</a><br/></td></tr>
<tr class="separator:aace97979420f092d74b99828b5a98a6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dfd060c7a8f18c78a8e5ad4854ef000"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#a8dfd060c7a8f18c78a8e5ad4854ef000">needStorage</a> () const </td></tr>
<tr class="memdesc:a8dfd060c7a8f18c78a8e5ad4854ef000"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether data needs to be stored at all.  <a href="#a8dfd060c7a8f18c78a8e5ad4854ef000">More...</a><br/></td></tr>
<tr class="separator:a8dfd060c7a8f18c78a8e5ad4854ef000"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafcfa834aaaba5e7b1ba2f8943516034"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aafcfa834aaaba5e7b1ba2f8943516034"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#aafcfa834aaaba5e7b1ba2f8943516034">finishFrame</a> (int index)</td></tr>
<tr class="memdesc:aafcfa834aaaba5e7b1ba2f8943516034"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementation for <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a27fcfa486e9f6c02da548b5af097c34a" title="Convenience method for finishing a data frame. ">AnalysisDataStorage::finishFrame()</a>. <br/></td></tr>
<tr class="separator:aafcfa834aaaba5e7b1ba2f8943516034"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeebcf9ed0d5804730eb2b01bacae9db2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aeebcf9ed0d5804730eb2b01bacae9db2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#aeebcf9ed0d5804730eb2b01bacae9db2">finishFrameSerial</a> (int index)</td></tr>
<tr class="memdesc:aeebcf9ed0d5804730eb2b01bacae9db2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementation for <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#aacdfffeac9d6a692e2f65a0027f77e60" title="Performs in-order sequential processing for a data frame. ">AnalysisDataStorage::finishFrameSerial()</a>. <br/></td></tr>
<tr class="separator:aeebcf9ed0d5804730eb2b01bacae9db2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ac03a0a077b3e44d0175604d9bd50dff3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac03a0a077b3e44d0175604d9bd50dff3"></a>
const <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml">AbstractAnalysisData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#ac03a0a077b3e44d0175604d9bd50dff3">data_</a></td></tr>
<tr class="memdesc:ac03a0a077b3e44d0175604d9bd50dff3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parent data object to access data dimensionality etc. <br/></td></tr>
<tr class="separator:ac03a0a077b3e44d0175604d9bd50dff3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc3ca7c53a4ebc8e5f737d948413342c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abc3ca7c53a4ebc8e5f737d948413342c"></a>
<a class="el" href="classgmx_1_1AnalysisDataModuleManager.xhtml">AnalysisDataModuleManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#abc3ca7c53a4ebc8e5f737d948413342c">modules_</a></td></tr>
<tr class="memdesc:abc3ca7c53a4ebc8e5f737d948413342c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Manager to use for notification calls. <br/></td></tr>
<tr class="separator:abc3ca7c53a4ebc8e5f737d948413342c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1d54ef9b538206ff5e96a82f0b79d23"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#aa1d54ef9b538206ff5e96a82f0b79d23">storageLimit_</a></td></tr>
<tr class="memdesc:aa1d54ef9b538206ff5e96a82f0b79d23"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of past frames that need to be stored.  <a href="#aa1d54ef9b538206ff5e96a82f0b79d23">More...</a><br/></td></tr>
<tr class="separator:aa1d54ef9b538206ff5e96a82f0b79d23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5a3ef651453e7c82201e5ec01a29833"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#ae5a3ef651453e7c82201e5ec01a29833">pendingLimit_</a></td></tr>
<tr class="memdesc:ae5a3ef651453e7c82201e5ec01a29833"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of future frames that may need to be started.  <a href="#ae5a3ef651453e7c82201e5ec01a29833">More...</a><br/></td></tr>
<tr class="separator:ae5a3ef651453e7c82201e5ec01a29833"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7d3268f5be4c5ad4eaa1bc42ab8d7f8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#a1b2af19109dfb91fb162696e97139eeb">FrameList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#af7d3268f5be4c5ad4eaa1bc42ab8d7f8">frames_</a></td></tr>
<tr class="memdesc:af7d3268f5be4c5ad4eaa1bc42ab8d7f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data frames that are currently stored.  <a href="#af7d3268f5be4c5ad4eaa1bc42ab8d7f8">More...</a><br/></td></tr>
<tr class="separator:af7d3268f5be4c5ad4eaa1bc42ab8d7f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab03605ee86c30840cba9ed1f16d20ca2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab03605ee86c30840cba9ed1f16d20ca2"></a>
size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#ab03605ee86c30840cba9ed1f16d20ca2">firstFrameLocation_</a></td></tr>
<tr class="memdesc:ab03605ee86c30840cba9ed1f16d20ca2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Location of oldest frame in <em>frames_</em>. <br/></td></tr>
<tr class="separator:ab03605ee86c30840cba9ed1f16d20ca2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ca736b9c2eaaa64a9812da0b8d01260"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8ca736b9c2eaaa64a9812da0b8d01260"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#a8ca736b9c2eaaa64a9812da0b8d01260">firstUnnotifiedIndex_</a></td></tr>
<tr class="memdesc:a8ca736b9c2eaaa64a9812da0b8d01260"><td class="mdescLeft">&#160;</td><td class="mdescRight">Index of the first frame that is not fully notified. <br/></td></tr>
<tr class="separator:a8ca736b9c2eaaa64a9812da0b8d01260"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4ddab3cfc0a936aea9d33edcc7347dd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#a1d95ed4cbefa7cb90dec3e817b807e18">FrameBuilderList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#ab4ddab3cfc0a936aea9d33edcc7347dd">builders_</a></td></tr>
<tr class="memdesc:ab4ddab3cfc0a936aea9d33edcc7347dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Currently unused frame builders.  <a href="#ab4ddab3cfc0a936aea9d33edcc7347dd">More...</a><br/></td></tr>
<tr class="separator:ab4ddab3cfc0a936aea9d33edcc7347dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadd456cad913196f7c49cec491200f5c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#aadd456cad913196f7c49cec491200f5c">nextIndex_</a></td></tr>
<tr class="memdesc:aadd456cad913196f7c49cec491200f5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Index of next frame that will be added to <em>frames_</em>.  <a href="#aadd456cad913196f7c49cec491200f5c">More...</a><br/></td></tr>
<tr class="separator:aadd456cad913196f7c49cec491200f5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a0b67663a76b93b236c0d4ae2bda99931"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::internal::AnalysisDataStorageImpl::computeStorageLocation </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Computes index into <em>frames_</em> for accessing frame <code>index</code>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Zero-based frame index. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">-1</td><td>if <code>index</code> is not available in <em>frames_</em>.</td></tr>
  </table>
  </dd>
</dl>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="ad17487b105ba7497ba981100618d0bb7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t gmx::internal::AnalysisDataStorageImpl::endStorageLocation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Computes an index into <em>frames_</em> that is one past the last frame stored. </p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a52d20e652bffaa6a796916d6dc975e34"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::internal::AnalysisDataStorageImpl::extendBuffer </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>newSize</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Extends <em>frames_</em> to a new size. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab6edcde43d7b51eb01c527ba72379570"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacegmx_1_1internal.xhtml#a10329904859eb4035ac1a2464a9745b2">AnalysisDataFrameBuilderPointer</a> gmx::internal::AnalysisDataStorageImpl::getFrameBuilder </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a frame builder object for use with a new frame. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8dfd060c7a8f18c78a8e5ad4854ef000"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::internal::AnalysisDataStorageImpl::needStorage </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns whether data needs to be stored at all. </p>
<p>This is used to optimize multipoint handling for parallel cases (where <a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#aace97979420f092d74b99828b5a98a6b" title="Returns whether notifications should be immediately fired. ">shouldNotifyImmediately()</a> returns false), where it is not necessary to store even a single frame.</p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000007">Todo:</a></b></dt><dd>This could be extended to non-multipoint data as well.</dd></dl>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a6e21397a5a68634023a17e9ce6b0fd13"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::internal::AnalysisDataStorageImpl::rotateBuffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Remove oldest frame from the storage to make space for a new one. </p>
<p>Increments <em>firstFrameLocation_</em> and reinitializes the frame that was made unavailable by this operation.</p>
<p>Does not throw.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#af7d3268f5be4c5ad4eaa1bc42ab8d7f8" title="Data frames that are currently stored. ">frames_</a> </dd></dl>

</div>
</div>
<a class="anchor" id="aace97979420f092d74b99828b5a98a6b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::internal::AnalysisDataStorageImpl::shouldNotifyImmediately </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns whether notifications should be immediately fired. </p>
<p>This is used to optimize multipoint handling for non-parallel cases, where it is not necessary to store even a single frame.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="a1974e4a7d11f0f14b682a48dfb11eb90"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::internal::AnalysisDataStorageImpl::storeAll </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Whether storage of all frames has been requested. </p>
<p>Storage of all frames also works as expected if <em>storageLimit_</em> is used in comparisons directly, but this method should be used to check how to manage <em>frames_</em>. </p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="ab4ddab3cfc0a936aea9d33edcc7347dd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#a1d95ed4cbefa7cb90dec3e817b807e18">FrameBuilderList</a> gmx::internal::AnalysisDataStorageImpl::builders_</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Currently unused frame builders. </p>
<p>The builders are cached to avoid repeatedly allocating memory for them. Typically, there are as many builders as there are concurrent users of the storage object. Whenever a frame is started, a builder is pulled from this pool by <a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#ab6edcde43d7b51eb01c527ba72379570" title="Returns a frame builder object for use with a new frame. ">getFrameBuilder()</a> (a new one is created if none are available), and assigned for that frame. When that frame is finished, the builder is returned to this pool. </p>

</div>
</div>
<a class="anchor" id="af7d3268f5be4c5ad4eaa1bc42ab8d7f8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1internal_1_1AnalysisDataStorageImpl.xhtml#a1b2af19109dfb91fb162696e97139eeb">FrameList</a> gmx::internal::AnalysisDataStorageImpl::frames_</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Data frames that are currently stored. </p>
<p>If storage of all frames has been requested, this is simply a vector of frames up to the latest frame that has been started. In this case, <em>firstFrameLocation_</em> is always zero.</p>
<p>If storage of all frames is not requested, this is a ring buffer of frames of size <code>n=storageLimit_+pendingLimit_+1</code>. If a frame with index <code>index</code> is currently stored, its location is <code>indexframes_.size</code>(). When at most <em>storageLimit_</em> first frames have been finished, this contains storage for the first <code>n-1</code> frames. When more than <em>storageLimit_</em> first frames have been finished, the oldest stored frame is stored in the location <em>firstFrameLocation_</em>, and <em>storageLimit_</em> frames starting from this location are the last finished frames. <em>pendingLimit_</em> frames follow, and some of these may be in progress or finished. There is always one unused frame in the buffer, which is initialized such that when <em>firstFrameLocation_</em> is incremented, it becomes valid. This makes it easier to rotate the buffer in concurrent access scenarions (which are not yet otherwise implemented). </p>

</div>
</div>
<a class="anchor" id="aadd456cad913196f7c49cec491200f5c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::internal::AnalysisDataStorageImpl::nextIndex_</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Index of next frame that will be added to <em>frames_</em>. </p>
<p>If all frames are not stored, this will be the index of the unused frame (see <em>frames_</em>). </p>

</div>
</div>
<a class="anchor" id="ae5a3ef651453e7c82201e5ec01a29833"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::internal::AnalysisDataStorageImpl::pendingLimit_</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Number of future frames that may need to be started. </p>
<p>Should always be at least one.</p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000008">Todo:</a></b></dt><dd>Get rid of this alltogether, as it is no longer used much.</dd></dl>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a3303eeb1ac7f3a697124c5dbff3557e4" title="Starts storing a new frame. ">AnalysisDataStorage::startFrame()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="aa1d54ef9b538206ff5e96a82f0b79d23"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::internal::AnalysisDataStorageImpl::storageLimit_</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Number of past frames that need to be stored. </p>
<p>Always non-negative. If storage of all frames has been requested, this is set to a large number. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/gromacs/analysisdata/<a class="el" href="datastorage_8cpp.xhtml">datastorage.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:30 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

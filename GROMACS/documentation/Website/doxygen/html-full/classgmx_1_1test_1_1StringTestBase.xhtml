<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::test::StringTestBase Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="namespacegmx_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="classgmx_1_1test_1_1StringTestBase.xhtml">StringTestBase</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1test_1_1StringTestBase-members.xhtml">List of all members</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::test::StringTestBase Class Reference<div class="ingroups"><a class="el" href="group__group__libraryapi.xhtml">Library API</a> &#124; <a class="el" href="group__module__testutils.xhtml">Testing Utilities (testutils)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;testutils/stringtest.h&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for gmx::test::StringTestBase:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1test_1_1StringTestBase__inherit__graph.svg" width="222" height="127"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Test fixture for tests that check string formatting. </p>
<p>For development, tests that use this fixture as their base can be run with a '-stdout' command-line option to print out the tested strings to stdout. If this flag is not given, they check the strings using the XML reference framework (see <a class="el" href="classgmx_1_1test_1_1TestReferenceData.xhtml" title="Handles creation of and comparison to test reference data. ">TestReferenceData</a>).</p>
<p>Tests that need simple checking of a string, or container of strings, should consider the normal implementation in <a class="el" href="classgmx_1_1test_1_1TestReferenceChecker.xhtml" title="Handles comparison to test reference data. ">TestReferenceChecker</a>. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2d4aa9337d64971715800e1e512973ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1test_1_1TestReferenceChecker.xhtml">TestReferenceChecker</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1StringTestBase.xhtml#a2d4aa9337d64971715800e1e512973ca">checker</a> ()</td></tr>
<tr class="memdesc:a2d4aa9337d64971715800e1e512973ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the root checker for this test's reference data.  <a href="#a2d4aa9337d64971715800e1e512973ca">More...</a><br/></td></tr>
<tr class="separator:a2d4aa9337d64971715800e1e512973ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac27b306db6617cb199172c9a581cafc0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1StringTestBase.xhtml#ac27b306db6617cb199172c9a581cafc0">checkText</a> (const std::string &amp;text, const char *id)</td></tr>
<tr class="memdesc:ac27b306db6617cb199172c9a581cafc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks a string.  <a href="#ac27b306db6617cb199172c9a581cafc0">More...</a><br/></td></tr>
<tr class="separator:ac27b306db6617cb199172c9a581cafc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7385252da411d966f11163e845f3e3b9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1StringTestBase.xhtml#a7385252da411d966f11163e845f3e3b9">checkFileContents</a> (const std::string &amp;filename, const char *id)</td></tr>
<tr class="memdesc:a7385252da411d966f11163e845f3e3b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks contents of a file as a single string.  <a href="#a7385252da411d966f11163e845f3e3b9">More...</a><br/></td></tr>
<tr class="separator:a7385252da411d966f11163e845f3e3b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b3437f342c706554f02d1bf754f72e6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1StringTestBase.xhtml#a8b3437f342c706554f02d1bf754f72e6">testFilesEqual</a> (const std::string &amp;refFilename, const std::string &amp;testFilename)</td></tr>
<tr class="memdesc:a8b3437f342c706554f02d1bf754f72e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests that contents of two files are equal.  <a href="#a8b3437f342c706554f02d1bf754f72e6">More...</a><br/></td></tr>
<tr class="separator:a8b3437f342c706554f02d1bf754f72e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a210ca295f0d6373a29d10d4ac1ebf033"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1StringTestBase.xhtml#a210ca295f0d6373a29d10d4ac1ebf033">checkText</a> (<a class="el" href="classgmx_1_1test_1_1TestReferenceChecker.xhtml">TestReferenceChecker</a> *<a class="el" href="classgmx_1_1test_1_1StringTestBase.xhtml#a2d4aa9337d64971715800e1e512973ca">checker</a>, const std::string &amp;text, const char *id)</td></tr>
<tr class="memdesc:a210ca295f0d6373a29d10d4ac1ebf033"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks a block of text.  <a href="#a210ca295f0d6373a29d10d4ac1ebf033">More...</a><br/></td></tr>
<tr class="separator:a210ca295f0d6373a29d10d4ac1ebf033"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a2d4aa9337d64971715800e1e512973ca"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1test_1_1TestReferenceChecker.xhtml">TestReferenceChecker</a> &amp; gmx::test::StringTestBase::checker </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the root checker for this test's reference data. </p>
<p>Can be used to perform custom checks against reference data (e.g., if the test needs to check some other values than plain strings. </p>

</div>
</div>
<a class="anchor" id="a7385252da411d966f11163e845f3e3b9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::test::StringTestBase::checkFileContents </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks contents of a file as a single string. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">filename</td><td>Name of the file to check. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>Unique (within a single test) id for the string.</td></tr>
  </table>
  </dd>
</dl>
<p>Provided for convenience. Reads the contents of <code>filename</code> into a single string and calls <a class="el" href="classgmx_1_1test_1_1StringTestBase.xhtml#a210ca295f0d6373a29d10d4ac1ebf033" title="Checks a block of text. ">checkText()</a>. </p>

</div>
</div>
<a class="anchor" id="a210ca295f0d6373a29d10d4ac1ebf033"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::test::StringTestBase::checkText </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1test_1_1TestReferenceChecker.xhtml">TestReferenceChecker</a> *&#160;</td>
          <td class="paramname"><em>checker</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks a block of text. </p>
<p>This static method is provided for code that does not derive from <a class="el" href="classgmx_1_1test_1_1StringTestBase.xhtml" title="Test fixture for tests that check string formatting. ">StringTestBase</a> to use the same functionality, e.g., implementing the <code>-stdout</code> option. </p>

</div>
</div>
<a class="anchor" id="ac27b306db6617cb199172c9a581cafc0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::test::StringTestBase::checkText </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks a string. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">text</td><td>String to check. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>Unique (within a single test) id for the string. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a8b3437f342c706554f02d1bf754f72e6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::test::StringTestBase::testFilesEqual </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>refFilename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>testFilename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tests that contents of two files are equal. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">refFilename</td><td>File with the expected contents. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">testFilename</td><td>File with the contents to be tested. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/testutils/<a class="el" href="stringtest_8h.xhtml">stringtest.h</a></li>
<li>src/testutils/<a class="el" href="stringtest_8cpp.xhtml">stringtest.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:31 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

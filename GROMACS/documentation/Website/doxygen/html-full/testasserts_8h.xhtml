<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/testutils/testasserts.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_8a21c46af9718d1f610eb513153099d7.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_d2bee95dce64d4fd80a3640d91ab4935.xhtml">testutils</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">testasserts.h File Reference<div class="ingroups"><a class="el" href="group__group__libraryapi.xhtml">Library API</a> &#124; <a class="el" href="group__module__testutils.xhtml">Testing Utilities (testutils)</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;string&gt;</code><br/>
<code>#include &lt;gtest/gtest.h&gt;</code><br/>
<code>#include &quot;<a class="el" href="basedefinitions_8h.xhtml">gromacs/utility/basedefinitions.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="exceptions_8h.xhtml">gromacs/utility/exceptions.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="real_8h.xhtml">gromacs/utility/real.h</a>&quot;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for testasserts.h:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="testasserts_8h__incl.svg" width="1544" height="351"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><div class="textblock"><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> This graph shows which files directly or indirectly include this file:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="testasserts_8h__dep__incl.svg" width="9690" height="216"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Extra assertions for unit tests. </p>
<p>This file provides assertion macros that extend/replace Google Test assertions for:</p>
<ul>
<li>exceptions</li>
<li>floating-point comparison</li>
<li>comparison against NULL</li>
</ul>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000116">Todo:</a></b></dt><dd>The implementation is somewhat ugly, and accesses some Google Test internals. Could be nice to clean it up a bit.</dd></dl>
<dl class="section author"><dt>Author</dt><dd>Teemu Murtola <a href="#" onclick="location.href='mai'+'lto:'+'tee'+'mu'+'.mu'+'rt'+'ola'+'@g'+'mai'+'l.'+'com'; return false;">teemu<span style="display: none;">.nosp@m.</span>.mur<span style="display: none;">.nosp@m.</span>tola@<span style="display: none;">.nosp@m.</span>gmai<span style="display: none;">.nosp@m.</span>l.com</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Assertions for floating-point comparison</h2></td></tr>
<tr><td class="ititle" colspan="2"><p><a class="anchor" id="amgrp85037fb0ed1e10a36100983a0e19c5a5"></a>These routines extend <code>(EXPECT|ASSERT)_(FLOAT|DOUBLE)_EQ</code> and <code>(EXPECT|ASSERT)_NEAR</code> from Google Test to provide more flexible assertions for floating-point values.</p>
<p>See <a class="el" href="classgmx_1_1test_1_1FloatingPointTolerance.xhtml" title="Specifies a floating-point comparison tolerance and checks whether a difference is within the toleran...">gmx::test::FloatingPointTolerance</a> for the possible ways to specify the tolerance, and <a class="el" href="classgmx_1_1test_1_1FloatingPointDifference.xhtml" title="Computes and represents a floating-point difference value. ">gmx::test::FloatingPointDifference</a> for some additional details of the difference calculation. </p>
</td></tr>
<tr class="memitem:gab2d4d6b8ac472eccb5aa6ae100d12aa9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gab2d4d6b8ac472eccb5aa6ae100d12aa9"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__testutils.xhtml#gab2d4d6b8ac472eccb5aa6ae100d12aa9">EXPECT_FLOAT_EQ_TOL</a>(value1, value2, tolerance)</td></tr>
<tr class="memdesc:gab2d4d6b8ac472eccb5aa6ae100d12aa9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asserts that two single-precision values are within the given tolerance. <br/></td></tr>
<tr class="separator:gab2d4d6b8ac472eccb5aa6ae100d12aa9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4ca34636bd95cb3738291224d27e9649"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga4ca34636bd95cb3738291224d27e9649"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__testutils.xhtml#ga4ca34636bd95cb3738291224d27e9649">EXPECT_DOUBLE_EQ_TOL</a>(value1, value2, tolerance)</td></tr>
<tr class="memdesc:ga4ca34636bd95cb3738291224d27e9649"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asserts that two double-precision values are within the given tolerance. <br/></td></tr>
<tr class="separator:ga4ca34636bd95cb3738291224d27e9649"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8ee3a0884221d08e838d4e4c46708153"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga8ee3a0884221d08e838d4e4c46708153"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__testutils.xhtml#ga8ee3a0884221d08e838d4e4c46708153">ASSERT_FLOAT_EQ_TOL</a>(value1, value2, tolerance)</td></tr>
<tr class="memdesc:ga8ee3a0884221d08e838d4e4c46708153"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asserts that two single-precision values are within the given tolerance. <br/></td></tr>
<tr class="separator:ga8ee3a0884221d08e838d4e4c46708153"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga010a2c949d35b7f815862bcbd6418ca0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga010a2c949d35b7f815862bcbd6418ca0"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__testutils.xhtml#ga010a2c949d35b7f815862bcbd6418ca0">ASSERT_DOUBLE_EQ_TOL</a>(value1, value2, tolerance)</td></tr>
<tr class="memdesc:ga010a2c949d35b7f815862bcbd6418ca0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asserts that two double-precision values are within the given tolerance. <br/></td></tr>
<tr class="separator:ga010a2c949d35b7f815862bcbd6418ca0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7285ed4e345fac4ba689c8bbcd24118d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga7285ed4e345fac4ba689c8bbcd24118d"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__testutils.xhtml#ga7285ed4e345fac4ba689c8bbcd24118d">EXPECT_REAL_EQ_TOL</a>(value1, value2, tolerance)</td></tr>
<tr class="memdesc:ga7285ed4e345fac4ba689c8bbcd24118d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asserts that two <code>real</code> values are within the given tolerance. <br/></td></tr>
<tr class="separator:ga7285ed4e345fac4ba689c8bbcd24118d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6e4937301d5b94f07bb4d9fd71030555"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga6e4937301d5b94f07bb4d9fd71030555"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__testutils.xhtml#ga6e4937301d5b94f07bb4d9fd71030555">ASSERT_REAL_EQ_TOL</a>(value1, value2, tolerance)</td></tr>
<tr class="memdesc:ga6e4937301d5b94f07bb4d9fd71030555"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asserts that two <code>real</code> values are within the given tolerance. <br/></td></tr>
<tr class="separator:ga6e4937301d5b94f07bb4d9fd71030555"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2e6cf2631a7f8256a5a044685a702fbb"><td class="memTemplParams" colspan="2">template&lt;typename FloatType &gt; </td></tr>
<tr class="memitem:ga2e6cf2631a7f8256a5a044685a702fbb"><td class="memTemplItemLeft" align="right" valign="top">static <br class="typebreak"/>
inline::testing::AssertionResult&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__module__testutils.xhtml#ga2e6cf2631a7f8256a5a044685a702fbb">gmx::test::assertEqualWithinTolerance</a> (const char *expr1, const char *expr2, const char *, FloatType value1, FloatType value2, const FloatingPointTolerance &amp;tolerance)</td></tr>
<tr class="memdesc:ga2e6cf2631a7f8256a5a044685a702fbb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assertion predicate formatter for comparing two floating-point values.  <a href="group__module__testutils.xhtml#ga2e6cf2631a7f8256a5a044685a702fbb">More...</a><br/></td></tr>
<tr class="separator:ga2e6cf2631a7f8256a5a044685a702fbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1FloatingPointDifference.xhtml">gmx::test::FloatingPointDifference</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes and represents a floating-point difference value.  <a href="classgmx_1_1test_1_1FloatingPointDifference.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1FloatingPointTolerance.xhtml">gmx::test::FloatingPointTolerance</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies a floating-point comparison tolerance and checks whether a difference is within the tolerance.  <a href="classgmx_1_1test_1_1FloatingPointTolerance.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga8ed3c4e4b4ce3220687cd59aaca59905"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__testutils.xhtml#ga8ed3c4e4b4ce3220687cd59aaca59905">EXPECT_PLAIN</a>(expr)</td></tr>
<tr class="memdesc:ga8ed3c4e4b4ce3220687cd59aaca59905"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assert for predicates that return AssertionResult and produce a full failure message.  <a href="group__module__testutils.xhtml#ga8ed3c4e4b4ce3220687cd59aaca59905">More...</a><br/></td></tr>
<tr class="separator:ga8ed3c4e4b4ce3220687cd59aaca59905"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga97a0194de1d98402f697adee0fe39a98"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__testutils.xhtml#ga97a0194de1d98402f697adee0fe39a98">ASSERT_PLAIN</a>(expr)</td></tr>
<tr class="memdesc:ga97a0194de1d98402f697adee0fe39a98"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assert for predicates that return AssertionResult and produce a full failure message.  <a href="group__module__testutils.xhtml#ga97a0194de1d98402f697adee0fe39a98">More...</a><br/></td></tr>
<tr class="separator:ga97a0194de1d98402f697adee0fe39a98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Assertions for exceptions</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>These macros replace <code>(ASSERT|EXPECT)(_NO)?_THROW</code> from Google Test. They are used exactly like the Google Test ones, but also print details of any unexpected exceptions using GROMACS-specific routines. This makes it much easier to see at one glance what went wrong. See Google Test documentation for details on how to use the macros. </p>
</div></td></tr>
<tr class="memitem:ga1eec5082a161ff78e7b973d55593828b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__testutils.xhtml#ga1eec5082a161ff78e7b973d55593828b">GMX_TEST_THROW_</a>(statement, expected_exception, fail)</td></tr>
<tr class="memdesc:ga1eec5082a161ff78e7b973d55593828b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internal implementation macro for exception assertations.  <a href="group__module__testutils.xhtml#ga1eec5082a161ff78e7b973d55593828b">More...</a><br/></td></tr>
<tr class="separator:ga1eec5082a161ff78e7b973d55593828b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab5c7b3b6b5b1656debbec8fc2ffe0d99"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__testutils.xhtml#gab5c7b3b6b5b1656debbec8fc2ffe0d99">GMX_TEST_NO_THROW_</a>(statement, fail)</td></tr>
<tr class="memdesc:gab5c7b3b6b5b1656debbec8fc2ffe0d99"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internal implementation macro for exception assertations.  <a href="group__module__testutils.xhtml#gab5c7b3b6b5b1656debbec8fc2ffe0d99">More...</a><br/></td></tr>
<tr class="separator:gab5c7b3b6b5b1656debbec8fc2ffe0d99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga902c620217d0acf1b0f0ab9319ad64ae"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga902c620217d0acf1b0f0ab9319ad64ae"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__testutils.xhtml#ga902c620217d0acf1b0f0ab9319ad64ae">EXPECT_THROW_GMX</a>(statement, expected_exception)</td></tr>
<tr class="memdesc:ga902c620217d0acf1b0f0ab9319ad64ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asserts that a statement throws a given exception. <br/></td></tr>
<tr class="separator:ga902c620217d0acf1b0f0ab9319ad64ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1f05debf4536f9e77a6a0d992fee686f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga1f05debf4536f9e77a6a0d992fee686f"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__testutils.xhtml#ga1f05debf4536f9e77a6a0d992fee686f">EXPECT_NO_THROW_GMX</a>(statement)</td></tr>
<tr class="memdesc:ga1f05debf4536f9e77a6a0d992fee686f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asserts that a statement does not throw. <br/></td></tr>
<tr class="separator:ga1f05debf4536f9e77a6a0d992fee686f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5cd586713beef5aa3cf19b0ed2b3a269"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga5cd586713beef5aa3cf19b0ed2b3a269"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__testutils.xhtml#ga5cd586713beef5aa3cf19b0ed2b3a269">ASSERT_THROW_GMX</a>(statement, expected_exception)</td></tr>
<tr class="memdesc:ga5cd586713beef5aa3cf19b0ed2b3a269"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asserts that a statement throws a given exception. <br/></td></tr>
<tr class="separator:ga5cd586713beef5aa3cf19b0ed2b3a269"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafbd852cd87908495678c48118c02ee82"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gafbd852cd87908495678c48118c02ee82"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__testutils.xhtml#gafbd852cd87908495678c48118c02ee82">ASSERT_NO_THROW_GMX</a>(statement)</td></tr>
<tr class="memdesc:gafbd852cd87908495678c48118c02ee82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asserts that a statement does not throw. <br/></td></tr>
<tr class="separator:gafbd852cd87908495678c48118c02ee82"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a70e5df8e89a760f1a7b0b729ae79d9e9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><b>gmx::test::internal::processExpectedException</b> (const std::exception &amp;ex)</td></tr>
<tr class="memdesc:a70e5df8e89a760f1a7b0b729ae79d9e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called for an expected exception from <a class="el" href="group__module__testutils.xhtml#ga902c620217d0acf1b0f0ab9319ad64ae" title="Asserts that a statement throws a given exception. ">EXPECT_THROW_GMX()</a>.  <a href="#a70e5df8e89a760f1a7b0b729ae79d9e9">More...</a><br/></td></tr>
<tr class="separator:a70e5df8e89a760f1a7b0b729ae79d9e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae9b29d32f4bd98d7af90115c230709d4"><td class="memItemLeft" align="right" valign="top">static <br class="typebreak"/>
inline::testing::AssertionResult&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__testutils.xhtml#gae9b29d32f4bd98d7af90115c230709d4">gmx::test::plainAssertHelper</a> (const char *, const ::testing::AssertionResult &amp;expr)</td></tr>
<tr class="memdesc:gae9b29d32f4bd98d7af90115c230709d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper method for <code>(EXPECT|ASSERT)_PLAIN</code>.  <a href="group__module__testutils.xhtml#gae9b29d32f4bd98d7af90115c230709d4">More...</a><br/></td></tr>
<tr class="separator:gae9b29d32f4bd98d7af90115c230709d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:aef4db207e1b0f1aa686522f429f1c38f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aef4db207e1b0f1aa686522f429f1c38f"></a>
static gmx_uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02testasserts_8h_03.xhtml#aef4db207e1b0f1aa686522f429f1c38f">gmx::test::anonymous_namespace{testasserts.h}::g_defaultUlpTolerance</a> = 4</td></tr>
<tr class="memdesc:aef4db207e1b0f1aa686522f429f1c38f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default tolerance in ULPs for two floating-point values to compare equal. <br/></td></tr>
<tr class="separator:aef4db207e1b0f1aa686522f429f1c38f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:19 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::test::anonymous_namespace{pmesolvetest.cpp} Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li class="current"><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="namespaces.xhtml"><span>Namespace&#160;List</span></a></li>
      <li><a href="namespacemembers.xhtml"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="namespacegmx_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmesolvetest_8cpp_03.xhtml">anonymous_namespace{pmesolvetest.cpp}</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">gmx::test::anonymous_namespace{pmesolvetest.cpp} Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02pmesolvetest_8cpp_03_1_1PmeSolveTest.xhtml">PmeSolveTest</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Test fixture.  <a href="classgmx_1_1test_1_1anonymous__namespace_02pmesolvetest_8cpp_03_1_1PmeSolveTest.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ae47a253093c6f7e7d7033f2914a1dd90"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae47a253093c6f7e7d7033f2914a1dd90"></a>
typedef std::tuple&lt; <a class="el" href="namespacegmx_1_1test.xhtml#a74fe68cc05ba6596ac5d7ab6a397ab5f">Matrix3x3</a>, <br class="typebreak"/>
<a class="el" href="namespacegmx.xhtml#a9699d31c62e2a4cc2c730793a1224411">IVec</a>, <br class="typebreak"/>
<a class="el" href="namespacegmx_1_1test.xhtml#a6f33a6eb9abccf0718e28287d2f65c09">SparseComplexGridValuesInput</a>, <br class="typebreak"/>
double, double, double, <br class="typebreak"/>
<a class="el" href="namespacegmx_1_1test.xhtml#a132e86b8150b498685276c35a87132a3">PmeSolveAlgorithm</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmesolvetest_8cpp_03.xhtml#ae47a253093c6f7e7d7033f2914a1dd90">SolveInputParameters</a></td></tr>
<tr class="memdesc:ae47a253093c6f7e7d7033f2914a1dd90"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convenience typedef of the test input parameters - unit cell box, complex grid dimensions, complex grid values, electrostatic constant epsilon_r, Ewald splitting parameters ewaldcoeff_q and ewaldcoeff_lj, solver type Output: transformed local grid (Fourier space); optionally reciprocal energy and virial matrix. TODO: Implement and test Lorentz-Berthelot. <br/></td></tr>
<tr class="separator:ae47a253093c6f7e7d7033f2914a1dd90"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a78d0ae91366d9cfa8b77fd6414c1e7b1"><td class="memItemLeft" align="right" valign="top">static std::vector&lt; <a class="el" href="namespacegmx_1_1test.xhtml#a74fe68cc05ba6596ac5d7ab6a397ab5f">Matrix3x3</a> &gt;<br class="typebreak"/>
 const&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmesolvetest_8cpp_03.xhtml#a78d0ae91366d9cfa8b77fd6414c1e7b1">c_sampleBoxes</a></td></tr>
<tr class="memdesc:a78d0ae91366d9cfa8b77fd6414c1e7b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">A couple of valid inputs for boxes.  <a href="#a78d0ae91366d9cfa8b77fd6414c1e7b1">More...</a><br/></td></tr>
<tr class="separator:a78d0ae91366d9cfa8b77fd6414c1e7b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae237ce26ac0a06408c115036f118acc8"><td class="memItemLeft" align="right" valign="top">static std::vector&lt; <a class="el" href="namespacegmx.xhtml#a9699d31c62e2a4cc2c730793a1224411">IVec</a> &gt; const&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmesolvetest_8cpp_03.xhtml#ae237ce26ac0a06408c115036f118acc8">c_sampleGridSizes</a></td></tr>
<tr class="memdesc:ae237ce26ac0a06408c115036f118acc8"><td class="mdescLeft">&#160;</td><td class="mdescRight">A couple of valid inputs for grid sizes.  <a href="#ae237ce26ac0a06408c115036f118acc8">More...</a><br/></td></tr>
<tr class="separator:ae237ce26ac0a06408c115036f118acc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff0a16393f466551768d0b95096545c3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aff0a16393f466551768d0b95096545c3"></a>
const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmesolvetest_8cpp_03.xhtml#aff0a16393f466551768d0b95096545c3">c_inputBoxes</a> = ::testing::ValuesIn(<a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmesolvetest_8cpp_03.xhtml#a78d0ae91366d9cfa8b77fd6414c1e7b1">c_sampleBoxes</a>)</td></tr>
<tr class="memdesc:aff0a16393f466551768d0b95096545c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moved out from instantiations for readability. <br/></td></tr>
<tr class="separator:aff0a16393f466551768d0b95096545c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a795c56dd524942d373739fd9f3329613"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a795c56dd524942d373739fd9f3329613"></a>
const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmesolvetest_8cpp_03.xhtml#a795c56dd524942d373739fd9f3329613">c_inputGridSizes</a> = ::testing::ValuesIn(<a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmesolvetest_8cpp_03.xhtml#ae237ce26ac0a06408c115036f118acc8">c_sampleGridSizes</a>)</td></tr>
<tr class="memdesc:a795c56dd524942d373739fd9f3329613"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moved out from instantiations for readability. <br/></td></tr>
<tr class="separator:a795c56dd524942d373739fd9f3329613"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03133e2aa9d9fbaf302d407452f94fd9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a03133e2aa9d9fbaf302d407452f94fd9"></a>
static std::vector<br class="typebreak"/>
&lt; <a class="el" href="namespacegmx_1_1test.xhtml#a6f33a6eb9abccf0718e28287d2f65c09">SparseComplexGridValuesInput</a> &gt;<br class="typebreak"/>
 const&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmesolvetest_8cpp_03.xhtml#a03133e2aa9d9fbaf302d407452f94fd9">c_sampleGrids</a></td></tr>
<tr class="memdesc:a03133e2aa9d9fbaf302d407452f94fd9"><td class="mdescLeft">&#160;</td><td class="mdescRight">2 sample complex grids - only non-zero values have to be listed <br/></td></tr>
<tr class="separator:a03133e2aa9d9fbaf302d407452f94fd9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92d18f8e7db92041a6d70814875d3186"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a92d18f8e7db92041a6d70814875d3186"></a>
const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmesolvetest_8cpp_03.xhtml#a92d18f8e7db92041a6d70814875d3186">c_inputGrids</a> = ::testing::ValuesIn(<a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmesolvetest_8cpp_03.xhtml#a03133e2aa9d9fbaf302d407452f94fd9">c_sampleGrids</a>)</td></tr>
<tr class="memdesc:a92d18f8e7db92041a6d70814875d3186"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moved out from instantiations for readability. <br/></td></tr>
<tr class="separator:a92d18f8e7db92041a6d70814875d3186"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a822ba3c9d42945b1ef4f9f050b80886a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a822ba3c9d42945b1ef4f9f050b80886a"></a>
const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmesolvetest_8cpp_03.xhtml#a822ba3c9d42945b1ef4f9f050b80886a">c_inputEpsilon_r</a> = ::testing::Values(1.2)</td></tr>
<tr class="memdesc:a822ba3c9d42945b1ef4f9f050b80886a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moved out from instantiations for readability. <br/></td></tr>
<tr class="separator:a822ba3c9d42945b1ef4f9f050b80886a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35558c9badc969ff4bef6b66748f8885"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a35558c9badc969ff4bef6b66748f8885"></a>
const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmesolvetest_8cpp_03.xhtml#a35558c9badc969ff4bef6b66748f8885">c_inputEwaldCoeff_q</a> = ::testing::Values(2.0)</td></tr>
<tr class="memdesc:a35558c9badc969ff4bef6b66748f8885"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moved out from instantiations for readability. <br/></td></tr>
<tr class="separator:a35558c9badc969ff4bef6b66748f8885"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5fd2cecbbf9aa899309ffd8fec79500"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab5fd2cecbbf9aa899309ffd8fec79500"></a>
const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmesolvetest_8cpp_03.xhtml#ab5fd2cecbbf9aa899309ffd8fec79500">c_inputEwaldCoeff_lj</a> = ::testing::Values(0.7)</td></tr>
<tr class="memdesc:ab5fd2cecbbf9aa899309ffd8fec79500"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moved out from instantiations for readability. <br/></td></tr>
<tr class="separator:ab5fd2cecbbf9aa899309ffd8fec79500"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac016fba74aa49938d172eb909b32c9ec"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac016fba74aa49938d172eb909b32c9ec"></a>
const auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmesolvetest_8cpp_03.xhtml#ac016fba74aa49938d172eb909b32c9ec">c_inputMethods</a> = ::testing::Values(PmeSolveAlgorithm::Coulomb, PmeSolveAlgorithm::LennardJones)</td></tr>
<tr class="memdesc:ac016fba74aa49938d172eb909b32c9ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moved out from instantiations for readability. <br/></td></tr>
<tr class="separator:ac016fba74aa49938d172eb909b32c9ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="a78d0ae91366d9cfa8b77fd6414c1e7b1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="namespacegmx_1_1test.xhtml#a74fe68cc05ba6596ac5d7ab6a397ab5f">Matrix3x3</a>&gt; const gmx::test::anonymous_namespace{pmesolvetest.cpp}::c_sampleBoxes</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">    </div>
<div class="line">    <a class="code" href="namespacegmx_1_1test.xhtml#a74fe68cc05ba6596ac5d7ab6a397ab5f">Matrix3x3</a> {{</div>
<div class="line">                   8.0f, 0.0f, 0.0f,</div>
<div class="line">                   0.0f, 3.4f, 0.0f,</div>
<div class="line">                   0.0f, 0.0f, 2.0f</div>
<div class="line">               }},</div>
<div class="line">    </div>
<div class="line">    <a class="code" href="namespacegmx_1_1test.xhtml#a74fe68cc05ba6596ac5d7ab6a397ab5f">Matrix3x3</a> {{</div>
<div class="line">                   7.0f, 0.0f, 0.0f,</div>
<div class="line">                   0.0f, 4.1f, 0.0f,</div>
<div class="line">                   3.5f, 2.0f, 12.2f</div>
<div class="line">               }},</div>
<div class="line">}</div>
<div class="ttc" id="namespacegmx_1_1test_xhtml_a74fe68cc05ba6596ac5d7ab6a397ab5f"><div class="ttname"><a href="namespacegmx_1_1test.xhtml#a74fe68cc05ba6596ac5d7ab6a397ab5f">gmx::test::Matrix3x3</a></div><div class="ttdeci">std::array&lt; real, 3 *3 &gt; Matrix3x3</div><div class="ttdoc">TODO: make proper C++ matrix for the whole Gromacs, get rid of this. </div><div class="ttdef"><b>Definition:</b> pmetestcommon.h:96</div></div>
</div><!-- fragment -->
<p>A couple of valid inputs for boxes. </p>

</div>
</div>
<a class="anchor" id="ae237ce26ac0a06408c115036f118acc8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="namespacegmx.xhtml#a9699d31c62e2a4cc2c730793a1224411">IVec</a>&gt; const gmx::test::anonymous_namespace{pmesolvetest.cpp}::c_sampleGridSizes</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="namespacegmx.xhtml#a9699d31c62e2a4cc2c730793a1224411">IVec</a> {</div>
<div class="line">        16, 12, 28</div>
<div class="line">    },</div>
<div class="line">    <a class="code" href="namespacegmx.xhtml#a9699d31c62e2a4cc2c730793a1224411">IVec</a> {</div>
<div class="line">        9, 7, 23</div>
<div class="line">    }</div>
<div class="line">}</div>
<div class="ttc" id="namespacegmx_xhtml_a9699d31c62e2a4cc2c730793a1224411"><div class="ttname"><a href="namespacegmx.xhtml#a9699d31c62e2a4cc2c730793a1224411">gmx::IVec</a></div><div class="ttdeci">BasicVector&lt; int &gt; IVec</div><div class="ttdoc">Shorthand for C++ ivec-equivalent type. </div><div class="ttdef"><b>Definition:</b> vectypes.h:169</div></div>
</div><!-- fragment -->
<p>A couple of valid inputs for grid sizes. </p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:31 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

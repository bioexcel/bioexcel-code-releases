<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/swap/swapcoords.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_8a21c46af9718d1f610eb513153099d7.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a46192700e9e8ed44c648f0a55ee9a53.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_8677c11fac42b008f64484f3e68bc8e9.xhtml">swap</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">swapcoords.cpp File Reference<div class="ingroups"><a class="el" href="group__module__swap.xhtml">&quot;Computational Electrophysiology&quot; position swapping (swap)</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="gmxpre_8h.xhtml">gmxpre.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="swapcoords_8h.xhtml">swapcoords.h</a>&quot;</code><br/>
<code>#include &lt;stdio.h&gt;</code><br/>
<code>#include &lt;stdlib.h&gt;</code><br/>
<code>#include &lt;time.h&gt;</code><br/>
<code>#include &lt;string&gt;</code><br/>
<code>#include &quot;<a class="el" href="domdec__struct_8h.xhtml">gromacs/domdec/domdec_struct.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/fileio/confio.h&quot;</code><br/>
<code>#include &quot;gromacs/fileio/gmxfio.h&quot;</code><br/>
<code>#include &quot;gromacs/fileio/xvgr.h&quot;</code><br/>
<code>#include &quot;gromacs/gmxlib/network.h&quot;</code><br/>
<code>#include &quot;gromacs/math/vec.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="groupcoord_8h.xhtml">gromacs/mdlib/groupcoord.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="mdrun_8h.xhtml">gromacs/mdlib/mdrun.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/mdlib/sim_util.h&quot;</code><br/>
<code>#include &quot;gromacs/mdtypes/commrec.h&quot;</code><br/>
<code>#include &quot;gromacs/mdtypes/inputrec.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="md__enums_8h.xhtml">gromacs/mdtypes/md_enums.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="observableshistory_8h.xhtml">gromacs/mdtypes/observableshistory.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="state_8h.xhtml">gromacs/mdtypes/state.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/mdtypes/swaphistory.h&quot;</code><br/>
<code>#include &quot;gromacs/pbcutil/pbc.h&quot;</code><br/>
<code>#include &quot;gromacs/timing/wallcycle.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="mtop__lookup_8h.xhtml">gromacs/topology/mtop_lookup.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/topology/topology.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="cstringutil_8h.xhtml">gromacs/utility/cstringutil.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="fatalerror_8h.xhtml">gromacs/utility/fatalerror.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="pleasecite_8h.xhtml">gromacs/utility/pleasecite.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="smalloc_8h.xhtml">gromacs/utility/smalloc.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="snprintf_8h.xhtml">gromacs/utility/snprintf.h</a>&quot;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for swapcoords.cpp:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="gromacs_2swap_2swapcoords_8cpp__incl.svg" width="4012" height="544"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Implements functions in <a class="el" href="swapcoords_8h.xhtml" title="The &quot;Computational Electrophysiology&quot; protocol for ion/water position swapping. ">swapcoords.h</a>. </p>
<dl class="section author"><dt>Author</dt><dd>Carsten Kutzner <a href="#" onclick="location.href='mai'+'lto:'+'cku'+'tz'+'ne@'+'gw'+'dg.'+'de'; return false;">ckutz<span style="display: none;">.nosp@m.</span>ne@g<span style="display: none;">.nosp@m.</span>wdg.d<span style="display: none;">.nosp@m.</span>e</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structswap__compartment.xhtml">swap_compartment</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure containing compartment-specific data.  <a href="structswap__compartment.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structswap__group.xhtml">swap_group</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">This structure contains data needed for the groups involved in swapping: split group 0, split group 1, solvent group, ion groups.  <a href="structswap__group.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structt__swap.xhtml">t_swap</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Main (private) data structure for the position swapping protocol.  <a href="structt__swap.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a05ce22240f64704f05ccebe070bf44ee"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structswap__compartment.xhtml">swap_compartment</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a05ce22240f64704f05ccebe070bf44ee">t_compartment</a></td></tr>
<tr class="memdesc:a05ce22240f64704f05ccebe070bf44ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure containing compartment-specific data.  <a href="#a05ce22240f64704f05ccebe070bf44ee">More...</a><br/></td></tr>
<tr class="separator:a05ce22240f64704f05ccebe070bf44ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7aaf7894f28f10cff8666e54ce75fa98"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structswap__group.xhtml">swap_group</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a7aaf7894f28f10cff8666e54ce75fa98">t_swapgrp</a></td></tr>
<tr class="memdesc:a7aaf7894f28f10cff8666e54ce75fa98"><td class="mdescLeft">&#160;</td><td class="mdescRight">This structure contains data needed for the groups involved in swapping: split group 0, split group 1, solvent group, ion groups.  <a href="#a7aaf7894f28f10cff8666e54ce75fa98">More...</a><br/></td></tr>
<tr class="separator:a7aaf7894f28f10cff8666e54ce75fa98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09aa2672d14b668ffdabd163b87fb0b6"><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="structt__swap.xhtml">t_swap</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a09aa2672d14b668ffdabd163b87fb0b6">t_swap</a></td></tr>
<tr class="memdesc:a09aa2672d14b668ffdabd163b87fb0b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Main (private) data structure for the position swapping protocol.  <a href="#a09aa2672d14b668ffdabd163b87fb0b6">More...</a><br/></td></tr>
<tr class="separator:a09aa2672d14b668ffdabd163b87fb0b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:af6a8c133d0f81c73038956aac7684e18"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#af6a8c133d0f81c73038956aac7684e18">eChannelHistory</a> { <b>eChHistPassedNone</b>, 
<b>eChHistPassedCh0</b>, 
<b>eChHistPassedCh1</b>, 
<b>eChHistNr</b>
 }</td></tr>
<tr class="memdesc:af6a8c133d0f81c73038956aac7684e18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Keep track of through which channel the ions have passed. <br/></td></tr>
<tr class="separator:af6a8c133d0f81c73038956aac7684e18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94f95f058c9d43880125a4c12bc455c1"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a94f95f058c9d43880125a4c12bc455c1">eDomain</a> { <b>eDomainNotset</b>, 
<b>eDomainA</b>, 
<b>eDomainB</b>, 
<b>eDomainNr</b>
 }</td></tr>
<tr class="memdesc:a94f95f058c9d43880125a4c12bc455c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Domain identifier.  <a href="gromacs_2swap_2swapcoords_8cpp.xhtml#a94f95f058c9d43880125a4c12bc455c1">More...</a><br/></td></tr>
<tr class="separator:a94f95f058c9d43880125a4c12bc455c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a77b6a402d1008df6dab97e39aae8c25e"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a77b6a402d1008df6dab97e39aae8c25e">is_in_channel</a> (rvec point, rvec center, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> d_up, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> d_down, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> r_cyl2, <a class="el" href="structt__pbc.xhtml">t_pbc</a> *pbc, int normal)</td></tr>
<tr class="memdesc:a77b6a402d1008df6dab97e39aae8c25e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check whether point is in channel.  <a href="#a77b6a402d1008df6dab97e39aae8c25e">More...</a><br/></td></tr>
<tr class="separator:a77b6a402d1008df6dab97e39aae8c25e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a728828849bec81a194e577fe23be9e5f"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a728828849bec81a194e577fe23be9e5f">print_ionlist</a> (<a class="el" href="structt__swap.xhtml">t_swap</a> *s, double time, const char comment[])</td></tr>
<tr class="memdesc:a728828849bec81a194e577fe23be9e5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints output to CompEL output file.  <a href="#a728828849bec81a194e577fe23be9e5f">More...</a><br/></td></tr>
<tr class="separator:a728828849bec81a194e577fe23be9e5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ec9f81c81cb13e117b321e300a4e7a8"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a5ec9f81c81cb13e117b321e300a4e7a8">get_molecule_center</a> (rvec x[], int nat, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *weights, rvec center, <a class="el" href="structt__pbc.xhtml">t_pbc</a> *pbc)</td></tr>
<tr class="memdesc:a5ec9f81c81cb13e117b321e300a4e7a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the center of a group of nat atoms.  <a href="#a5ec9f81c81cb13e117b321e300a4e7a8">More...</a><br/></td></tr>
<tr class="separator:a5ec9f81c81cb13e117b321e300a4e7a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab50897b444c6ce3f4547edc7dfdc16dd"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#ab50897b444c6ce3f4547edc7dfdc16dd">compartment_contains_atom</a> (<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> w1, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> w2, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> x, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> l, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> bulkOffset, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *distance_from_b)</td></tr>
<tr class="memdesc:ab50897b444c6ce3f4547edc7dfdc16dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return TRUE if position x of ion (or water) is found in the compartment, i.e. between w1 and w2.  <a href="#ab50897b444c6ce3f4547edc7dfdc16dd">More...</a><br/></td></tr>
<tr class="separator:ab50897b444c6ce3f4547edc7dfdc16dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7a1b35cf62cd5eb026fba9811a668bb"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad7a1b35cf62cd5eb026fba9811a668bb"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#ad7a1b35cf62cd5eb026fba9811a668bb">update_time_window</a> (<a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a05ce22240f64704f05ccebe070bf44ee">t_compartment</a> *comp, int values, int replace)</td></tr>
<tr class="memdesc:ad7a1b35cf62cd5eb026fba9811a668bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates the time-averaged number of ions in a compartment. <br/></td></tr>
<tr class="separator:ad7a1b35cf62cd5eb026fba9811a668bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1558b848400a73b04408c8de03bc9f9a"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a1558b848400a73b04408c8de03bc9f9a">add_to_list</a> (int ci, <a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a05ce22240f64704f05ccebe070bf44ee">t_compartment</a> *comp, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> distance)</td></tr>
<tr class="memdesc:a1558b848400a73b04408c8de03bc9f9a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the atom with collective index ci to the atom list in compartment 'comp'.  <a href="#a1558b848400a73b04408c8de03bc9f9a">More...</a><br/></td></tr>
<tr class="separator:a1558b848400a73b04408c8de03bc9f9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2190b199ad529f81a39b22bb375c89b7"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2190b199ad529f81a39b22bb375c89b7"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a2190b199ad529f81a39b22bb375c89b7">get_compartment_boundaries</a> (int c, <a class="el" href="structt__swap.xhtml">t_swap</a> *s, const matrix box, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *left, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *right)</td></tr>
<tr class="memdesc:a2190b199ad529f81a39b22bb375c89b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determine the compartment boundaries from the channel centers. <br/></td></tr>
<tr class="separator:a2190b199ad529f81a39b22bb375c89b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39159c663b728af4d12876e5eb2a9c49"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a39159c663b728af4d12876e5eb2a9c49">detect_flux_per_channel</a> (<a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a7aaf7894f28f10cff8666e54ce75fa98">t_swapgrp</a> *g, int iAtom, int comp, rvec atomPosition, unsigned char *comp_now, unsigned char *comp_from, unsigned char *channel_label, t_swapcoords *sc, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> cyl0_r2, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> cyl1_r2, gmx_int64_t step, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bRerun, FILE *fpout)</td></tr>
<tr class="memdesc:a39159c663b728af4d12876e5eb2a9c49"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determine the per-channel ion flux.  <a href="#a39159c663b728af4d12876e5eb2a9c49">More...</a><br/></td></tr>
<tr class="separator:a39159c663b728af4d12876e5eb2a9c49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41ef28c178e7c9d3cb4e0b032be70856"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a41ef28c178e7c9d3cb4e0b032be70856"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a41ef28c178e7c9d3cb4e0b032be70856">sortMoleculesIntoCompartments</a> (<a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a7aaf7894f28f10cff8666e54ce75fa98">t_swapgrp</a> *g, t_commrec *cr, t_swapcoords *sc, const matrix box, gmx_int64_t step, FILE *fpout, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bRerun, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bIsSolvent)</td></tr>
<tr class="memdesc:a41ef28c178e7c9d3cb4e0b032be70856"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determines which ions or solvent molecules are in compartment A and B. <br/></td></tr>
<tr class="separator:a41ef28c178e7c9d3cb4e0b032be70856"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85ec8186e38deaa177d623c253d0871a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a85ec8186e38deaa177d623c253d0871a"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a85ec8186e38deaa177d623c253d0871a">get_initial_ioncounts</a> (t_inputrec *ir, const rvec x[], const matrix box, t_commrec *cr, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bRerun)</td></tr>
<tr class="memdesc:a85ec8186e38deaa177d623c253d0871a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Find out how many group atoms are in the compartments initially. <br/></td></tr>
<tr class="separator:a85ec8186e38deaa177d623c253d0871a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc5cea7c1bf6dee604dbe7197c4cd162"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#adc5cea7c1bf6dee604dbe7197c4cd162">get_initial_ioncounts_from_cpt</a> (t_inputrec *ir, swaphistory_t *swapstate, t_commrec *cr, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bVerbose)</td></tr>
<tr class="memdesc:adc5cea7c1bf6dee604dbe7197c4cd162"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy history of ion counts from checkpoint file.  <a href="#adc5cea7c1bf6dee604dbe7197c4cd162">More...</a><br/></td></tr>
<tr class="separator:adc5cea7c1bf6dee604dbe7197c4cd162"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a787b42726a1b79c65fcfdd0cd0889ae0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a787b42726a1b79c65fcfdd0cd0889ae0"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a787b42726a1b79c65fcfdd0cd0889ae0">bc_initial_concentrations</a> (t_commrec *cr, t_swapcoords *swap)</td></tr>
<tr class="memdesc:a787b42726a1b79c65fcfdd0cd0889ae0"><td class="mdescLeft">&#160;</td><td class="mdescRight">The master lets all others know about the initial ion counts. <br/></td></tr>
<tr class="separator:a787b42726a1b79c65fcfdd0cd0889ae0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32007e69dbe1fc1ea4a019806ffef227"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a32007e69dbe1fc1ea4a019806ffef227"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a32007e69dbe1fc1ea4a019806ffef227">check_swap_groups</a> (<a class="el" href="structt__swap.xhtml">t_swap</a> *s, int nat, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bVerbose)</td></tr>
<tr class="memdesc:a32007e69dbe1fc1ea4a019806ffef227"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ensure that each atom belongs to at most one of the swap groups. <br/></td></tr>
<tr class="separator:a32007e69dbe1fc1ea4a019806ffef227"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac187dda2eebdcca944225499824c7a24"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#ac187dda2eebdcca944225499824c7a24">get_group_apm_check</a> (int igroup, <a class="el" href="structt__swap.xhtml">t_swap</a> *s, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bVerbose, gmx_mtop_t *mtop)</td></tr>
<tr class="memdesc:ac187dda2eebdcca944225499824c7a24"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the number of atoms per molecule for this group.  <a href="#ac187dda2eebdcca944225499824c7a24">More...</a><br/></td></tr>
<tr class="separator:ac187dda2eebdcca944225499824c7a24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af12dac66f752186580c42fa88bfc5788"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#af12dac66f752186580c42fa88bfc5788">print_ionlist_legend</a> (t_inputrec *ir, const gmx_output_env_t *oenv)</td></tr>
<tr class="memdesc:af12dac66f752186580c42fa88bfc5788"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print the legend to the swap output file.  <a href="#af12dac66f752186580c42fa88bfc5788">More...</a><br/></td></tr>
<tr class="separator:af12dac66f752186580c42fa88bfc5788"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9101d529ad081c7a216a4411ca333b0"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#aa9101d529ad081c7a216a4411ca333b0">detect_flux_per_channel_init</a> (<a class="el" href="structt__swap.xhtml">t_swap</a> *s, swaphistory_t *swapstate, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bStartFromCpt)</td></tr>
<tr class="memdesc:aa9101d529ad081c7a216a4411ca333b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize channel ion flux detection routine.  <a href="#aa9101d529ad081c7a216a4411ca333b0">More...</a><br/></td></tr>
<tr class="separator:aa9101d529ad081c7a216a4411ca333b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a471882c5a6664c37c788e681fc5509b9"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a471882c5a6664c37c788e681fc5509b9">outputStartStructureIfWanted</a> (gmx_mtop_t *mtop, rvec *x, int ePBC, const matrix box)</td></tr>
<tr class="memdesc:a471882c5a6664c37c788e681fc5509b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Outputs the initial structure to PDB file for debugging reasons.  <a href="#a471882c5a6664c37c788e681fc5509b9">More...</a><br/></td></tr>
<tr class="separator:a471882c5a6664c37c788e681fc5509b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a933c4c2a923125f8a0b12993085b54"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a2a933c4c2a923125f8a0b12993085b54">init_swapstate</a> (swaphistory_t *swapstate, t_swapcoords *sc, gmx_mtop_t *mtop, const rvec *x, const matrix box, t_inputrec *ir)</td></tr>
<tr class="memdesc:a2a933c4c2a923125f8a0b12993085b54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the swapstate structure, used for checkpoint writing.  <a href="#a2a933c4c2a923125f8a0b12993085b54">More...</a><br/></td></tr>
<tr class="separator:a2a933c4c2a923125f8a0b12993085b54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68037d4379c6380d861698bf7532d4a7"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a68037d4379c6380d861698bf7532d4a7"></a>
static <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a68037d4379c6380d861698bf7532d4a7">getRequestedChargeImbalance</a> (<a class="el" href="structt__swap.xhtml">t_swap</a> *s)</td></tr>
<tr class="memdesc:a68037d4379c6380d861698bf7532d4a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determine the total charge imbalance resulting from the swap groups. <br/></td></tr>
<tr class="separator:a68037d4379c6380d861698bf7532d4a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab8b76dd1dc02d3470291da278bffd92"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#aab8b76dd1dc02d3470291da278bffd92">copyIndicesToGroup</a> (int *indIons, int nIons, t_swapGroup *g, t_commrec *cr)</td></tr>
<tr class="memdesc:aab8b76dd1dc02d3470291da278bffd92"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sorts anions and cations into two separate groups.  <a href="#aab8b76dd1dc02d3470291da278bffd92">More...</a><br/></td></tr>
<tr class="separator:aab8b76dd1dc02d3470291da278bffd92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae35396dab1751171995e22b13dbb482e"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#ae35396dab1751171995e22b13dbb482e">convertOldToNewGroupFormat</a> (t_swapcoords *sc, gmx_mtop_t *mtop, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bVerbose, t_commrec *cr)</td></tr>
<tr class="memdesc:ae35396dab1751171995e22b13dbb482e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts old .tpr file CompEL contents to new data layout.  <a href="#ae35396dab1751171995e22b13dbb482e">More...</a><br/></td></tr>
<tr class="separator:ae35396dab1751171995e22b13dbb482e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac49b9b79589120e5f86736f19b5fb40"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#aac49b9b79589120e5f86736f19b5fb40">bConvertFromOldTpr</a> (t_swapcoords *sc)</td></tr>
<tr class="memdesc:aac49b9b79589120e5f86736f19b5fb40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns TRUE if we started from an old .tpr.  <a href="#aac49b9b79589120e5f86736f19b5fb40">More...</a><br/></td></tr>
<tr class="separator:aac49b9b79589120e5f86736f19b5fb40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedf43f79b0f60bff267f7d0238d2485f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#aedf43f79b0f60bff267f7d0238d2485f">init_swapcoords</a> (FILE *fplog, t_inputrec *ir, const char *fn, gmx_mtop_t *mtop, const <a class="el" href="classt__state.xhtml">t_state</a> *globalState, <a class="el" href="structObservablesHistory.xhtml">ObservablesHistory</a> *oh, t_commrec *cr, const gmx_output_env_t *oenv, const <a class="el" href="structMdrunOptions.xhtml">MdrunOptions</a> &amp;mdrunOptions)</td></tr>
<tr class="memdesc:aedf43f79b0f60bff267f7d0238d2485f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize ion / water position swapping ("Computational Electrophysiology").  <a href="#aedf43f79b0f60bff267f7d0238d2485f">More...</a><br/></td></tr>
<tr class="separator:aedf43f79b0f60bff267f7d0238d2485f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdb661b9210ffab279294198a1b029f7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#afdb661b9210ffab279294198a1b029f7">finish_swapcoords</a> (t_swapcoords *sc)</td></tr>
<tr class="memdesc:afdb661b9210ffab279294198a1b029f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finalizes ion / water position swapping.  <a href="#afdb661b9210ffab279294198a1b029f7">More...</a><br/></td></tr>
<tr class="separator:afdb661b9210ffab279294198a1b029f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf6e68844c12ffa9495a1fe49aafde76"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#adf6e68844c12ffa9495a1fe49aafde76">dd_make_local_swap_groups</a> (gmx_domdec_t *dd, t_swapcoords *sc)</td></tr>
<tr class="memdesc:adf6e68844c12ffa9495a1fe49aafde76"><td class="mdescLeft">&#160;</td><td class="mdescRight">Make a selection of the home atoms for the swap groups. These are the ions, the water, and the channels. This routine should be called at every domain decomposition.  <a href="#adf6e68844c12ffa9495a1fe49aafde76">More...</a><br/></td></tr>
<tr class="separator:adf6e68844c12ffa9495a1fe49aafde76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a8cea4b6b6128f19c22fb2374756b83"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a8a8cea4b6b6128f19c22fb2374756b83">need_swap</a> (t_swapcoords *sc)</td></tr>
<tr class="memdesc:a8a8cea4b6b6128f19c22fb2374756b83"><td class="mdescLeft">&#160;</td><td class="mdescRight">Do we need to swap a molecule in any of the ion groups with a water molecule at this step?  <a href="#a8a8cea4b6b6128f19c22fb2374756b83">More...</a><br/></td></tr>
<tr class="separator:a8a8cea4b6b6128f19c22fb2374756b83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee789cd0e8c00d7ea9bbc4ca285cb993"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#aee789cd0e8c00d7ea9bbc4ca285cb993">get_index_of_distant_atom</a> (<a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a05ce22240f64704f05ccebe070bf44ee">t_compartment</a> *comp, const char molname[])</td></tr>
<tr class="memdesc:aee789cd0e8c00d7ea9bbc4ca285cb993"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the index of an atom or molecule suitable for swapping.  <a href="#aee789cd0e8c00d7ea9bbc4ca285cb993">More...</a><br/></td></tr>
<tr class="separator:aee789cd0e8c00d7ea9bbc4ca285cb993"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af85436adf396ea680ef5b6707a65a6f5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af85436adf396ea680ef5b6707a65a6f5"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#af85436adf396ea680ef5b6707a65a6f5">translate_positions</a> (rvec *x, int apm, rvec old_com, rvec new_com, <a class="el" href="structt__pbc.xhtml">t_pbc</a> *pbc)</td></tr>
<tr class="memdesc:af85436adf396ea680ef5b6707a65a6f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Swaps centers of mass and makes molecule whole if broken. <br/></td></tr>
<tr class="separator:af85436adf396ea680ef5b6707a65a6f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f3e0cb0d87a2d8c88bd9e26607eabee"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3f3e0cb0d87a2d8c88bd9e26607eabee"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a3f3e0cb0d87a2d8c88bd9e26607eabee">apply_modified_positions</a> (<a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a7aaf7894f28f10cff8666e54ce75fa98">t_swapgrp</a> *g, rvec x[])</td></tr>
<tr class="memdesc:a3f3e0cb0d87a2d8c88bd9e26607eabee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Write back the the modified local positions from the collective array to the official positions. <br/></td></tr>
<tr class="separator:a3f3e0cb0d87a2d8c88bd9e26607eabee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04683091f8a9e62cb8cdbe479efa4fb6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a04683091f8a9e62cb8cdbe479efa4fb6">do_swapcoords</a> (t_commrec *cr, gmx_int64_t step, double t, t_inputrec *ir, gmx_wallcycle *wcycle, rvec x[], matrix box, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bVerbose, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bRerun)</td></tr>
<tr class="memdesc:a04683091f8a9e62cb8cdbe479efa4fb6"><td class="mdescLeft">&#160;</td><td class="mdescRight">"Computational Electrophysiology" main routine within MD loop.  <a href="#a04683091f8a9e62cb8cdbe479efa4fb6">More...</a><br/></td></tr>
<tr class="separator:a04683091f8a9e62cb8cdbe479efa4fb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a639d8486c076777c4d005071838060e3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a639d8486c076777c4d005071838060e3"></a>
static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a639d8486c076777c4d005071838060e3">SwS</a> = {&quot;SWAP:&quot;}</td></tr>
<tr class="memdesc:a639d8486c076777c4d005071838060e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">For output that comes from the swap module. <br/></td></tr>
<tr class="separator:a639d8486c076777c4d005071838060e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb74003dd41d61ceb42c2359ee7e2c6a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acb74003dd41d61ceb42c2359ee7e2c6a"></a>
static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#acb74003dd41d61ceb42c2359ee7e2c6a">SwSEmpty</a> = {&quot; &quot;}</td></tr>
<tr class="memdesc:acb74003dd41d61ceb42c2359ee7e2c6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Placeholder for multi-line output. <br/></td></tr>
<tr class="separator:acb74003dd41d61ceb42c2359ee7e2c6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9075e09a33582fe302041d3b54af2708"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9075e09a33582fe302041d3b54af2708"></a>
static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a9075e09a33582fe302041d3b54af2708">CompStr</a> [eCompNR] = {&quot;A&quot;, &quot;B&quot; }</td></tr>
<tr class="memdesc:a9075e09a33582fe302041d3b54af2708"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compartment name. <br/></td></tr>
<tr class="separator:a9075e09a33582fe302041d3b54af2708"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69de0fe539172a552c8219176baf1fe6"><td class="memItemLeft" align="right" valign="top">static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a69de0fe539172a552c8219176baf1fe6">SwapStr</a> [eSwapTypesNR+1] = { &quot;&quot;, &quot;X-&quot;, &quot;Y-&quot;, &quot;Z-&quot;, nullptr}</td></tr>
<tr class="memdesc:a69de0fe539172a552c8219176baf1fe6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Name for the swap types.  <a href="#a69de0fe539172a552c8219176baf1fe6">More...</a><br/></td></tr>
<tr class="separator:a69de0fe539172a552c8219176baf1fe6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b5e747d5b3477ad051038126dc994cf"><td class="memItemLeft" align="right" valign="top">static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a8b5e747d5b3477ad051038126dc994cf">DimStr</a> [3+1] = { &quot;X&quot;, &quot;Y&quot;, &quot;Z&quot;, nullptr}</td></tr>
<tr class="memdesc:a8b5e747d5b3477ad051038126dc994cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Name for the swap dimension.  <a href="#a8b5e747d5b3477ad051038126dc994cf">More...</a><br/></td></tr>
<tr class="separator:a8b5e747d5b3477ad051038126dc994cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e8d833597872131d18657d05483119c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8e8d833597872131d18657d05483119c"></a>
static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a8e8d833597872131d18657d05483119c">ChannelString</a> [eChHistNr] = { &quot;none&quot;, &quot;channel0&quot;, &quot;channel1&quot; }</td></tr>
<tr class="memdesc:a8e8d833597872131d18657d05483119c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Name for the channels. <br/></td></tr>
<tr class="separator:a8e8d833597872131d18657d05483119c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1b319dc9c206d8c20cc8621ec21707c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad1b319dc9c206d8c20cc8621ec21707c"></a>
static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#ad1b319dc9c206d8c20cc8621ec21707c">DomainString</a> [eDomainNr] = { &quot;not_assigned&quot;, &quot;Domain_A&quot;, &quot;Domain_B&quot; }</td></tr>
<tr class="memdesc:ad1b319dc9c206d8c20cc8621ec21707c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Name for the domains. <br/></td></tr>
<tr class="separator:ad1b319dc9c206d8c20cc8621ec21707c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="a05ce22240f64704f05ccebe070bf44ee"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structswap__compartment.xhtml">swap_compartment</a>  <a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a05ce22240f64704f05ccebe070bf44ee">t_compartment</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Structure containing compartment-specific data. </p>

</div>
</div>
<a class="anchor" id="a09aa2672d14b668ffdabd163b87fb0b6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structt__swap.xhtml">t_swap</a>  <a class="el" href="structt__swap.xhtml">t_swap</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Main (private) data structure for the position swapping protocol. </p>

</div>
</div>
<a class="anchor" id="a7aaf7894f28f10cff8666e54ce75fa98"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="structswap__group.xhtml">swap_group</a>  <a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a7aaf7894f28f10cff8666e54ce75fa98">t_swapgrp</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This structure contains data needed for the groups involved in swapping: split group 0, split group 1, solvent group, ion groups. </p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a class="anchor" id="a94f95f058c9d43880125a4c12bc455c1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a94f95f058c9d43880125a4c12bc455c1">eDomain</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Domain identifier. </p>
<p>Keeps track of from which compartment the ions came before passing the channel. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a1558b848400a73b04408c8de03bc9f9a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void add_to_list </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ci</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a05ce22240f64704f05ccebe070bf44ee">t_compartment</a> *&#160;</td>
          <td class="paramname"><em>comp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>distance</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add the atom with collective index ci to the atom list in compartment 'comp'. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ci</td><td>Index of this ion in the collective xc array. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">comp</td><td>Compartment to add this atom to. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">distance</td><td>Shortest distance of this atom to the bulk layer, from which ion/water pairs are selected for swapping. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aac49b9b79589120e5f86736f19b5fb40"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bConvertFromOldTpr </td>
          <td>(</td>
          <td class="paramtype">t_swapcoords *&#160;</td>
          <td class="paramname"><em>sc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns TRUE if we started from an old .tpr. </p>
<p>Then we need to re-sort anions and cations into separate groups </p>

</div>
</div>
<a class="anchor" id="ab50897b444c6ce3f4547edc7dfdc16dd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> compartment_contains_atom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>w1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>w2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>l</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>bulkOffset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td>
          <td class="paramname"><em>distance_from_b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return TRUE if position x of ion (or water) is found in the compartment, i.e. between w1 and w2. </p>
<p>One can define and additional offset "b" if one wants to exchange ions/water to or from a plane not directly in the middle of w1 and w2. The offset can be in ]-1.0, ..., +1.0 [. A bulkOffset of 0.0 means 'no offset', so the swap-layer is directly in the middle between w1 and w2. Offsets -1.0 &lt; b &lt; 0.0 will yield swaps nearer to w1, whereas offsets 0.0 &lt; 0 &lt; +1.0 will yield swaps nearer to w2.</p>
<div class="fragment"><div class="line">*</div>
<div class="line">* ||--------------+-------------|-------------+------------------------||</div>
<div class="line">*                w1  ? ? ? ? ? ? ? ? ? ? ?   w2</div>
<div class="line">* ||--------------+-------------|----b--------+------------------------||</div>
<div class="line">*                -1            0.0           +1</div>
<div class="line">*</div>
<div class="line">* </div>
</div><!-- fragment --><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">w1</td><td>Position of 'wall' atom 1. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">w2</td><td>Position of 'wall' atom 2. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Position of the ion or the water molecule under consideration. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">l</td><td>Length of the box, from || to || in the sketch. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bulkOffset</td><td>Where is the bulk layer "b" to be found between w1 and w2? </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">distance_from_b</td><td>Distance of x to the bulk layer "b".</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>TRUE if x is between w1 and w2.</dd></dl>
<p>Also computes the distance of x to the compartment center (the layer that is normally situated in the middle of w1 and w2 that would be considered as having the bulk concentration of ions). </p>

</div>
</div>
<a class="anchor" id="ae35396dab1751171995e22b13dbb482e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void convertOldToNewGroupFormat </td>
          <td>(</td>
          <td class="paramtype">t_swapcoords *&#160;</td>
          <td class="paramname"><em>sc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gmx_mtop_t *&#160;</td>
          <td class="paramname"><em>mtop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bVerbose</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">t_commrec *&#160;</td>
          <td class="paramname"><em>cr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Converts old .tpr file CompEL contents to new data layout. </p>
<p>If we have read an old .tpr file (tpxv &lt;= tpxv_CompElPolyatomicIonsAndMultipleIonTypes), anions and cations are stored together in group #3. In the new format we store each ion type in a separate group. The 'classic' groups are: #0 split group 0 - OK #1 split group 1 - OK #2 solvent - OK #3 anions - contains also cations, needs to be converted #4 cations - empty before conversion </p>

</div>
</div>
<a class="anchor" id="aab8b76dd1dc02d3470291da278bffd92"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void copyIndicesToGroup </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>indIons</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nIons</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">t_swapGroup *&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">t_commrec *&#160;</td>
          <td class="paramname"><em>cr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sorts anions and cations into two separate groups. </p>
<p>This routine should be called for the 'anions' and 'cations' group, of which the indices were lumped together in the older version of the code. </p>

</div>
</div>
<a class="anchor" id="adf6e68844c12ffa9495a1fe49aafde76"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dd_make_local_swap_groups </td>
          <td>(</td>
          <td class="paramtype">gmx_domdec_t *&#160;</td>
          <td class="paramname"><em>dd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">t_swapcoords *&#160;</td>
          <td class="paramname"><em>si_pub</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Make a selection of the home atoms for the swap groups. These are the ions, the water, and the channels. This routine should be called at every domain decomposition. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">dd</td><td>Structure containing domain decomposition data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">si_pub</td><td>Pointer to the swap data structure. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a39159c663b728af4d12876e5eb2a9c49"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void detect_flux_per_channel </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a7aaf7894f28f10cff8666e54ce75fa98">t_swapgrp</a> *&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iAtom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>comp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>atomPosition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>comp_now</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>comp_from</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>channel_label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">t_swapcoords *&#160;</td>
          <td class="paramname"><em>sc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>cyl0_r2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>cyl1_r2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gmx_int64_t&#160;</td>
          <td class="paramname"><em>step</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bRerun</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FILE *&#160;</td>
          <td class="paramname"><em>fpout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Determine the per-channel ion flux. </p>
<p>To determine the flux through the individual channels, we remember the compartment and channel history of each ion. An ion can be either in channel0 or channel1, or in the remaining volume of compartment A or B.</p>
<div class="fragment"><div class="line">*    +-----------------+</div>
<div class="line">*    |                 | B</div>
<div class="line">*    |                 | B compartment</div>
<div class="line">*    ||||||||||0|||||||| bilayer with channel 0</div>
<div class="line">*    |                 | A</div>
<div class="line">*    |                 | A</div>
<div class="line">*    |                 | A compartment</div>
<div class="line">*    |                 | A</div>
<div class="line">*    |||||1||||||||||||| bilayer with channel 1</div>
<div class="line">*    |                 | B</div>
<div class="line">*    |                 | B compartment</div>
<div class="line">*    +-----------------+</div>
<div class="line">*</div>
<div class="line">* </div>
</div><!-- fragment --> 
</div>
</div>
<a class="anchor" id="aa9101d529ad081c7a216a4411ca333b0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void detect_flux_per_channel_init </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structt__swap.xhtml">t_swap</a> *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">swaphistory_t *&#160;</td>
          <td class="paramname"><em>swapstate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bStartFromCpt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialize channel ion flux detection routine. </p>
<p>Initialize arrays that keep track of where the ions come from and where they go. </p>

</div>
</div>
<a class="anchor" id="a04683091f8a9e62cb8cdbe479efa4fb6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> do_swapcoords </td>
          <td>(</td>
          <td class="paramtype">t_commrec *&#160;</td>
          <td class="paramname"><em>cr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gmx_int64_t&#160;</td>
          <td class="paramname"><em>step</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>t</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">t_inputrec *&#160;</td>
          <td class="paramname"><em>ir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gmx_wallcycle *&#160;</td>
          <td class="paramname"><em>wcycle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>x</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">matrix&#160;</td>
          <td class="paramname"><em>box</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bVerbose</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bRerun</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>"Computational Electrophysiology" main routine within MD loop. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">cr</td><td>Pointer to MPI communication data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">step</td><td>The number of the MD time step. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">t</td><td>The time. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ir</td><td>Structure containing MD input parameters, among those also the structure needed for position swapping. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">wcycle</td><td>Count wallcycles of swap routines for diagnostic output. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Positions of home particles this node owns. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">box</td><td>The simulation box. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bVerbose</td><td>Should we be quiet or verbose? </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bRerun</td><td>Are we doing a rerun?</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Whether at least one pair of molecules was swapped. </dd></dl>

</div>
</div>
<a class="anchor" id="afdb661b9210ffab279294198a1b029f7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void finish_swapcoords </td>
          <td>(</td>
          <td class="paramtype">t_swapcoords *&#160;</td>
          <td class="paramname"><em>sc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Finalizes ion / water position swapping. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sc</td><td>Pointer to swap data. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac187dda2eebdcca944225499824c7a24"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int get_group_apm_check </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>igroup</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__swap.xhtml">t_swap</a> *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bVerbose</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gmx_mtop_t *&#160;</td>
          <td class="paramname"><em>mtop</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the number of atoms per molecule for this group. </p>
<p>Also ensure that all the molecules in this group have this number of atoms. </p>

</div>
</div>
<a class="anchor" id="aee789cd0e8c00d7ea9bbc4ca285cb993"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int get_index_of_distant_atom </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="gromacs_2swap_2swapcoords_8cpp.xhtml#a05ce22240f64704f05ccebe070bf44ee">t_compartment</a> *&#160;</td>
          <td class="paramname"><em>comp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>molname</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the index of an atom or molecule suitable for swapping. </p>
<p>Returns the index of an atom that is far off the compartment boundaries, that is near to the bulk layer to/from which the swaps take place. Other atoms of the molecule (if any) will directly follow the returned index.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">comp</td><td>Structure containing compartment-specific data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">molname</td><td>Name of the molecule.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Index of the first atom of the molecule chosen for a position exchange. </dd></dl>

</div>
</div>
<a class="anchor" id="adc5cea7c1bf6dee604dbe7197c4cd162"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void get_initial_ioncounts_from_cpt </td>
          <td>(</td>
          <td class="paramtype">t_inputrec *&#160;</td>
          <td class="paramname"><em>ir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">swaphistory_t *&#160;</td>
          <td class="paramname"><em>swapstate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">t_commrec *&#160;</td>
          <td class="paramname"><em>cr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bVerbose</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copy history of ion counts from checkpoint file. </p>
<p>When called, the checkpoint file has already been read in. Here we copy over the values from .cpt file to the swap data structure. </p>

</div>
</div>
<a class="anchor" id="a5ec9f81c81cb13e117b321e300a4e7a8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void get_molecule_center </td>
          <td>(</td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>x</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td>
          <td class="paramname"><em>weights</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>center</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__pbc.xhtml">t_pbc</a> *&#160;</td>
          <td class="paramname"><em>pbc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the center of a group of nat atoms. </p>
<p>Since with PBC an atom group might not be whole, use the first atom as the reference atom and determine the center with respect to this reference. </p>

</div>
</div>
<a class="anchor" id="aedf43f79b0f60bff267f7d0238d2485f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void init_swapcoords </td>
          <td>(</td>
          <td class="paramtype">FILE *&#160;</td>
          <td class="paramname"><em>fplog</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">t_inputrec *&#160;</td>
          <td class="paramname"><em>ir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>fn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gmx_mtop_t *&#160;</td>
          <td class="paramname"><em>mtop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classt__state.xhtml">t_state</a> *&#160;</td>
          <td class="paramname"><em>globalState</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structObservablesHistory.xhtml">ObservablesHistory</a> *&#160;</td>
          <td class="paramname"><em>oh</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">t_commrec *&#160;</td>
          <td class="paramname"><em>cr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const gmx_output_env_t *&#160;</td>
          <td class="paramname"><em>oenv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structMdrunOptions.xhtml">MdrunOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>mdrunOptions</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize ion / water position swapping ("Computational Electrophysiology"). </p>
<p>This routine does the memory allocation for various helper arrays, opens the output file, sets up swap data checkpoint writing, etc.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fplog</td><td>General output file, normally md.log. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ir</td><td>Structure containing MD input parameters, among those also the structure needed for position swapping. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">fn</td><td>Output file name for swap data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mtop</td><td>Molecular topology. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">globalState</td><td>The global state, only used on the master rank. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oh</td><td>Contains struct with swap data that is read from or written to checkpoint. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cr</td><td>Pointer to MPI communication data. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">oenv</td><td>Needed to open the swap output XVGR file. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mdrunOptions</td><td>Options for mdrun. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2a933c4c2a923125f8a0b12993085b54"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void init_swapstate </td>
          <td>(</td>
          <td class="paramtype">swaphistory_t *&#160;</td>
          <td class="paramname"><em>swapstate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">t_swapcoords *&#160;</td>
          <td class="paramname"><em>sc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gmx_mtop_t *&#160;</td>
          <td class="paramname"><em>mtop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const rvec *&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const matrix&#160;</td>
          <td class="paramname"><em>box</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">t_inputrec *&#160;</td>
          <td class="paramname"><em>ir</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialize the swapstate structure, used for checkpoint writing. </p>
<p>The swapstate struct stores the information we need to make the channels whole again after restarts from a checkpoint file. Here we do the following: a) If we did not start from .cpt, we prepare the struct for proper .cpt writing, b) if we did start from .cpt, we copy over the last whole structures from .cpt, c) in any case, for subsequent checkpoint writing, we set the pointers in swapstate to the x_old arrays, which contain the correct PBC representation of multimeric channels at the last time step. </p>

</div>
</div>
<a class="anchor" id="a77b6a402d1008df6dab97e39aae8c25e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> is_in_channel </td>
          <td>(</td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>point</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>center</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>d_up</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>d_down</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>r_cyl2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__pbc.xhtml">t_pbc</a> *&#160;</td>
          <td class="paramname"><em>pbc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>normal</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check whether point is in channel. </p>
<p>A channel is a cylinder defined by a disc with radius r around its center c. The thickness of the cylinder is d_up - d_down.</p>
<div class="fragment"><div class="line">*               ^  d_up</div>
<div class="line">*               |</div>
<div class="line">*     r         |</div>
<div class="line">*     &lt;---------c---------&gt;</div>
<div class="line">*               |</div>
<div class="line">*               v  d_down</div>
<div class="line">*</div>
<div class="line">* </div>
</div><!-- fragment --><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">point</td><td>The position (xyz) under consideration. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">center</td><td>The center of the cylinder. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">d_up</td><td>The upper extension of the cylinder. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">d_down</td><td>The lower extension. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">r_cyl2</td><td>Cylinder radius squared. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pbc</td><td>Structure with info about periodic boundary conditions. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">normal</td><td>The membrane normal direction is typically 3, i.e. z, but can be x or y also.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Whether the point is inside the defined cylindric channel. </dd></dl>

</div>
</div>
<a class="anchor" id="a8a8cea4b6b6128f19c22fb2374756b83"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> need_swap </td>
          <td>(</td>
          <td class="paramtype">t_swapcoords *&#160;</td>
          <td class="paramname"><em>sc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Do we need to swap a molecule in any of the ion groups with a water molecule at this step? </p>
<p>From the requested and average molecule counts we determine whether a swap is needed at this time step. </p>

</div>
</div>
<a class="anchor" id="a471882c5a6664c37c788e681fc5509b9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void outputStartStructureIfWanted </td>
          <td>(</td>
          <td class="paramtype">gmx_mtop_t *&#160;</td>
          <td class="paramname"><em>mtop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec *&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ePBC</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const matrix&#160;</td>
          <td class="paramname"><em>box</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Outputs the initial structure to PDB file for debugging reasons. </p>
<p>Output the starting structure so that in case of multimeric channels the user can check whether we have the correct PBC image for all atoms. If this is not correct, the ion counts per channel will be very likely wrong. </p>

</div>
</div>
<a class="anchor" id="a728828849bec81a194e577fe23be9e5f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void print_ionlist </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structt__swap.xhtml">t_swap</a> *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>time</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>comment</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prints output to CompEL output file. </p>
<p>Prints to swap output file how many ions are in each compartment, where the centers of the split groups are, and how many ions of each type passed the channels. </p>

</div>
</div>
<a class="anchor" id="af12dac66f752186580c42fa88bfc5788"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void print_ionlist_legend </td>
          <td>(</td>
          <td class="paramtype">t_inputrec *&#160;</td>
          <td class="paramname"><em>ir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const gmx_output_env_t *&#160;</td>
          <td class="paramname"><em>oenv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Print the legend to the swap output file. </p>
<p>Also print the initial values of ion counts and position of split groups. </p>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="a8b5e747d5b3477ad051038126dc994cf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char* DimStr[3+1] = { &quot;X&quot;, &quot;Y&quot;, &quot;Z&quot;, nullptr}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Name for the swap dimension. </p>

</div>
</div>
<a class="anchor" id="a69de0fe539172a552c8219176baf1fe6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char* SwapStr[eSwapTypesNR+1] = { &quot;&quot;, &quot;X-&quot;, &quot;Y-&quot;, &quot;Z-&quot;, nullptr}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Name for the swap types. </p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:18 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

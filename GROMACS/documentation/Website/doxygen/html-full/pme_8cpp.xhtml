<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/ewald/pme.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_8a21c46af9718d1f610eb513153099d7.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a46192700e9e8ed44c648f0a55ee9a53.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_69ef3b2caaf4d875cb2a3215a087d3ea.xhtml">ewald</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">pme.cpp File Reference<div class="ingroups"><a class="el" href="group__module__ewald.xhtml">Ewald-family treatments of long-ranged forces</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="gmxpre_8h.xhtml">gmxpre.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="pme_8h.xhtml">pme.h</a>&quot;</code><br/>
<code>#include &quot;config.h&quot;</code><br/>
<code>#include &lt;assert.h&gt;</code><br/>
<code>#include &lt;stdio.h&gt;</code><br/>
<code>#include &lt;stdlib.h&gt;</code><br/>
<code>#include &lt;string.h&gt;</code><br/>
<code>#include &lt;cmath&gt;</code><br/>
<code>#include &lt;algorithm&gt;</code><br/>
<code>#include &quot;<a class="el" href="ewald-utils_8h.xhtml">gromacs/ewald/ewald-utils.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/fft/parallel_3dfft.h&quot;</code><br/>
<code>#include &quot;gromacs/fileio/pdbio.h&quot;</code><br/>
<code>#include &quot;gromacs/gmxlib/network.h&quot;</code><br/>
<code>#include &quot;gromacs/gmxlib/nrnb.h&quot;</code><br/>
<code>#include &quot;gromacs/math/gmxcomplex.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="invertmatrix_8h.xhtml">gromacs/math/invertmatrix.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/math/units.h&quot;</code><br/>
<code>#include &quot;gromacs/math/vec.h&quot;</code><br/>
<code>#include &quot;gromacs/math/vectypes.h&quot;</code><br/>
<code>#include &quot;gromacs/mdtypes/commrec.h&quot;</code><br/>
<code>#include &quot;gromacs/mdtypes/forcerec.h&quot;</code><br/>
<code>#include &quot;gromacs/mdtypes/inputrec.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="md__enums_8h.xhtml">gromacs/mdtypes/md_enums.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/pbcutil/pbc.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="cyclecounter_8h.xhtml">gromacs/timing/cyclecounter.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/timing/wallcycle.h&quot;</code><br/>
<code>#include &quot;gromacs/timing/walltime_accounting.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="basedefinitions_8h.xhtml">gromacs/utility/basedefinitions.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="exceptions_8h.xhtml">gromacs/utility/exceptions.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="fatalerror_8h.xhtml">gromacs/utility/fatalerror.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="gmxmpi_8h.xhtml">gromacs/utility/gmxmpi.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="gmxomp_8h.xhtml">gromacs/utility/gmxomp.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="logger_8h.xhtml">gromacs/utility/logger.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="real_8h.xhtml">gromacs/utility/real.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="smalloc_8h.xhtml">gromacs/utility/smalloc.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="stringutil_8h.xhtml">gromacs/utility/stringutil.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="unique__cptr_8h.xhtml">gromacs/utility/unique_cptr.h</a>&quot;</code><br/>
<code>#include &quot;calculate-spline-moduli.h&quot;</code><br/>
<code>#include &quot;pme-gather.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="pme-gpu-internal_8h.xhtml">pme-gpu-internal.h</a>&quot;</code><br/>
<code>#include &quot;pme-grid.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="pme-internal_8h.xhtml">pme-internal.h</a>&quot;</code><br/>
<code>#include &quot;pme-redistribute.h&quot;</code><br/>
<code>#include &quot;pme-solve.h&quot;</code><br/>
<code>#include &quot;pme-spline-work.h&quot;</code><br/>
<code>#include &quot;pme-spread.h&quot;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for pme.cpp:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="pme_8cpp__incl.svg" width="3262" height="604"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>This file contains function definitions necessary for computing energies and forces for the PME long-ranged part (Coulomb and LJ). </p>
<dl class="section author"><dt>Author</dt><dd>Erik Lindahl <a href="#" onclick="location.href='mai'+'lto:'+'eri'+'k@'+'kth'+'.s'+'e'; return false;">erik@<span style="display: none;">.nosp@m.</span>kth.<span style="display: none;">.nosp@m.</span>se</a> </dd>
<dd>
Berk Hess <a href="#" onclick="location.href='mai'+'lto:'+'hes'+'s@'+'kth'+'.s'+'e'; return false;">hess@<span style="display: none;">.nosp@m.</span>kth.<span style="display: none;">.nosp@m.</span>se</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ac8bf1ddb4bd1106ab8bc38356ea13a0b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac8bf1ddb4bd1106ab8bc38356ea13a0b"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#ac8bf1ddb4bd1106ab8bc38356ea13a0b">setup_coordinate_communication</a> (pme_atomcomm_t *atc)</td></tr>
<tr class="memdesc:ac8bf1ddb4bd1106ab8bc38356ea13a0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set up coordinate communication. <br/></td></tr>
<tr class="separator:ac8bf1ddb4bd1106ab8bc38356ea13a0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a866e345e15a8e70ecdd4b828bffa4c00"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a866e345e15a8e70ecdd4b828bffa4c00"></a>
static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#a866e345e15a8e70ecdd4b828bffa4c00">mult_up</a> (int n, int f)</td></tr>
<tr class="memdesc:a866e345e15a8e70ecdd4b828bffa4c00"><td class="mdescLeft">&#160;</td><td class="mdescRight">Round <code>n</code> up to the next multiple of <code>f</code>. <br/></td></tr>
<tr class="separator:a866e345e15a8e70ecdd4b828bffa4c00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a712c4245133ef3c597852d8e47967480"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a712c4245133ef3c597852d8e47967480"></a>
static double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#a712c4245133ef3c597852d8e47967480">estimate_pme_load_imbalance</a> (struct gmx_pme_t *pme)</td></tr>
<tr class="memdesc:a712c4245133ef3c597852d8e47967480"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return estimate of the load imbalance from the PME grid not being a good match for the number of PME ranks. <br/></td></tr>
<tr class="separator:a712c4245133ef3c597852d8e47967480"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac05de49faacf5ec93399224d65cacb87"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac05de49faacf5ec93399224d65cacb87"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#ac05de49faacf5ec93399224d65cacb87">init_atomcomm</a> (struct gmx_pme_t *pme, pme_atomcomm_t *atc, int dimind, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bSpread)</td></tr>
<tr class="memdesc:ac05de49faacf5ec93399224d65cacb87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize atom communication data structure. <br/></td></tr>
<tr class="separator:ac05de49faacf5ec93399224d65cacb87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac58687570b4e72d45cc297098b910a74"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac58687570b4e72d45cc297098b910a74"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#ac58687570b4e72d45cc297098b910a74">destroy_atomcomm</a> (pme_atomcomm_t *atc)</td></tr>
<tr class="memdesc:ac58687570b4e72d45cc297098b910a74"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroy an atom communication data structure and its child structs. <br/></td></tr>
<tr class="separator:ac58687570b4e72d45cc297098b910a74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aede0dd04a29bfd579994e95b169f440f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aede0dd04a29bfd579994e95b169f440f"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#aede0dd04a29bfd579994e95b169f440f">init_overlap_comm</a> (pme_overlap_t *ol, int norder, int nnodes, int nodeid, int ndata, int commplainsize)</td></tr>
<tr class="memdesc:aede0dd04a29bfd579994e95b169f440f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize data structure for communication. <br/></td></tr>
<tr class="separator:aede0dd04a29bfd579994e95b169f440f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b4d24fac66ae49783074ed1190b71e0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5b4d24fac66ae49783074ed1190b71e0"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#a5b4d24fac66ae49783074ed1190b71e0">destroy_overlap_comm</a> (const pme_overlap_t *ol)</td></tr>
<tr class="memdesc:a5b4d24fac66ae49783074ed1190b71e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroy data structure for communication. <br/></td></tr>
<tr class="separator:a5b4d24fac66ae49783074ed1190b71e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3167e04d492823ba4279c5e11417cb8f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3167e04d492823ba4279c5e11417cb8f"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#a3167e04d492823ba4279c5e11417cb8f">minimalPmeGridSize</a> (int pmeOrder)</td></tr>
<tr class="memdesc:a3167e04d492823ba4279c5e11417cb8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the smallest allowed PME grid size for <code>pmeOrder</code>. <br/></td></tr>
<tr class="separator:a3167e04d492823ba4279c5e11417cb8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addb389aeee720cd4f4d6bd2f33b31873"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#addb389aeee720cd4f4d6bd2f33b31873">gmx_pme_check_restrictions</a> (int pme_order, int nkx, int nky, int nkz, int nnodes_major, bool useThreads, bool errorsAreFatal)</td></tr>
<tr class="memdesc:addb389aeee720cd4f4d6bd2f33b31873"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check restrictions on pme_order and the PME grid nkx,nky,nkz.  <a href="#addb389aeee720cd4f4d6bd2f33b31873">More...</a><br/></td></tr>
<tr class="separator:addb389aeee720cd4f4d6bd2f33b31873"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c99073294c93f3840e0802b05a8acd8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1c99073294c93f3840e0802b05a8acd8"></a>
static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#a1c99073294c93f3840e0802b05a8acd8">div_round_up</a> (int enumerator, int denominator)</td></tr>
<tr class="memdesc:a1c99073294c93f3840e0802b05a8acd8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Round <code>enumerator</code>. <br/></td></tr>
<tr class="separator:a1c99073294c93f3840e0802b05a8acd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a246102dd8135fa4f989aa847b68d0b8b"><td class="memItemLeft" align="right" valign="top">gmx_pme_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#a246102dd8135fa4f989aa847b68d0b8b">gmx_pme_init</a> (const t_commrec *cr, int nnodes_major, int nnodes_minor, const t_inputrec *ir, int homenr, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bFreeEnergy_q, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bFreeEnergy_lj, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bReproducible, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> ewaldcoeff_q, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> ewaldcoeff_lj, int nthread, <a class="el" href="pme_8h.xhtml#adc082ed1af9a4868af13352373ed3791">PmeRunMode</a> runMode, <a class="el" href="structPmeGpu.xhtml">PmeGpu</a> *pmeGpu, <a class="el" href="structgmx__device__info__t.xhtml">gmx_device_info_t</a> *gpuInfo, const <a class="el" href="classgmx_1_1MDLogger.xhtml">gmx::MDLogger</a> &amp;)</td></tr>
<tr class="memdesc:a246102dd8135fa4f989aa847b68d0b8b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct PME data.  <a href="#a246102dd8135fa4f989aa847b68d0b8b">More...</a><br/></td></tr>
<tr class="separator:a246102dd8135fa4f989aa847b68d0b8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1273a06d97c1b4cca35e4a3beb692f3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab1273a06d97c1b4cca35e4a3beb692f3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#ab1273a06d97c1b4cca35e4a3beb692f3">gmx_pme_reinit</a> (struct gmx_pme_t **pmedata, t_commrec *cr, struct gmx_pme_t *pme_src, const t_inputrec *ir, const ivec grid_size, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> ewaldcoeff_q, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> ewaldcoeff_lj)</td></tr>
<tr class="memdesc:ab1273a06d97c1b4cca35e4a3beb692f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">As gmx_pme_init, but takes most settings, except the grid/Ewald coefficients, from pme_src. This is only called when the PME cut-off/grid size changes. <br/></td></tr>
<tr class="separator:ab1273a06d97c1b4cca35e4a3beb692f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a1f7f848b8e4e23576a856f80251abd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#a6a1f7f848b8e4e23576a856f80251abd">gmx_pme_calc_energy</a> (struct gmx_pme_t *pme, int n, rvec *x, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *q, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *V)</td></tr>
<tr class="memdesc:a6a1f7f848b8e4e23576a856f80251abd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the PME grid energy V for n charges.  <a href="#a6a1f7f848b8e4e23576a856f80251abd">More...</a><br/></td></tr>
<tr class="separator:a6a1f7f848b8e4e23576a856f80251abd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7a5185a91a46eed6a3697c01811ca07"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad7a5185a91a46eed6a3697c01811ca07"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#ad7a5185a91a46eed6a3697c01811ca07">calc_initial_lb_coeffs</a> (struct gmx_pme_t *pme, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *local_c6, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *local_sigma)</td></tr>
<tr class="memdesc:ad7a5185a91a46eed6a3697c01811ca07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate initial Lorentz-Berthelot coefficients for LJ-PME. <br/></td></tr>
<tr class="separator:ad7a5185a91a46eed6a3697c01811ca07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a364d3cab157c2a340484202d88bdee10"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a364d3cab157c2a340484202d88bdee10"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#a364d3cab157c2a340484202d88bdee10">calc_next_lb_coeffs</a> (struct gmx_pme_t *pme, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *local_sigma)</td></tr>
<tr class="memdesc:a364d3cab157c2a340484202d88bdee10"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate next Lorentz-Berthelot coefficients for LJ-PME. <br/></td></tr>
<tr class="separator:a364d3cab157c2a340484202d88bdee10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f11dc953f2403aea6e1e1e49a0a3ac3"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#a4f11dc953f2403aea6e1e1e49a0a3ac3">gmx_pme_do</a> (struct gmx_pme_t *pme, int start, int homenr, rvec x[], rvec f[], <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> chargeA[], <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> chargeB[], <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> c6A[], <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> c6B[], <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> sigmaA[], <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> sigmaB[], matrix box, t_commrec *cr, int maxshift_x, int maxshift_y, t_nrnb *nrnb, gmx_wallcycle_t wcycle, matrix vir_q, matrix vir_lj, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *energy_q, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *energy_lj, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> lambda_q, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> lambda_lj, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *dvdlambda_q, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *dvdlambda_lj, int flags)</td></tr>
<tr class="memdesc:a4f11dc953f2403aea6e1e1e49a0a3ac3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Do a PME calculation on a CPU for the long range electrostatics and/or LJ.  <a href="#a4f11dc953f2403aea6e1e1e49a0a3ac3">More...</a><br/></td></tr>
<tr class="separator:a4f11dc953f2403aea6e1e1e49a0a3ac3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5a75a2d477885fcb0260908f6e7b2f2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac5a75a2d477885fcb0260908f6e7b2f2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#ac5a75a2d477885fcb0260908f6e7b2f2">gmx_pme_destroy</a> (gmx_pme_t *pme)</td></tr>
<tr class="memdesc:ac5a75a2d477885fcb0260908f6e7b2f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys the PME data structure. <br/></td></tr>
<tr class="separator:ac5a75a2d477885fcb0260908f6e7b2f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bbcd1698af0baadd183fc819b0c96f2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#a2bbcd1698af0baadd183fc819b0c96f2">gmx_pme_reinit_atoms</a> (const gmx_pme_t *pme, const int nAtoms, const <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *charges)</td></tr>
<tr class="memdesc:a2bbcd1698af0baadd183fc819b0c96f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function updates the local atom data on GPU after DD (charges, coordinates, etc.). TODO: it should update the PME CPU atom data as well. (currently PME CPU call <a class="el" href="pme_8cpp.xhtml#a4f11dc953f2403aea6e1e1e49a0a3ac3" title="Do a PME calculation on a CPU for the long range electrostatics and/or LJ. ">gmx_pme_do()</a> gets passed the input pointers for each computation).  <a href="#a2bbcd1698af0baadd183fc819b0c96f2">More...</a><br/></td></tr>
<tr class="separator:a2bbcd1698af0baadd183fc819b0c96f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a36c5a3e4872fe57779ce11f166c22bad"><td class="memItemLeft" align="right" valign="top">const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pme_8cpp.xhtml#a36c5a3e4872fe57779ce11f166c22bad">gmxCacheLineSize</a> = 64</td></tr>
<tr class="memdesc:a36c5a3e4872fe57779ce11f166c22bad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of bytes in a cache line.  <a href="#a36c5a3e4872fe57779ce11f166c22bad">More...</a><br/></td></tr>
<tr class="separator:a36c5a3e4872fe57779ce11f166c22bad"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a6a1f7f848b8e4e23576a856f80251abd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx_pme_calc_energy </td>
          <td>(</td>
          <td class="paramtype">struct gmx_pme_t *&#160;</td>
          <td class="paramname"><em>pme</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec *&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td>
          <td class="paramname"><em>q</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td>
          <td class="paramname"><em>V</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculate the PME grid energy V for n charges. </p>
<p>The potential (found in <code>pme</code>) must have been found already with a call to <a class="el" href="pme_8cpp.xhtml#a4f11dc953f2403aea6e1e1e49a0a3ac3" title="Do a PME calculation on a CPU for the long range electrostatics and/or LJ. ">gmx_pme_do()</a> with at least GMX_PME_SPREAD and GMX_PME_SOLVE specified. Note that the charges are not spread on the grid in the pme struct. Currently does not work in parallel or with free energy. </p>

</div>
</div>
<a class="anchor" id="addb389aeee720cd4f4d6bd2f33b31873"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx_pme_check_restrictions </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>pme_order</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nkx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nky</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nkz</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nnodes_major</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>useThreads</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>errorsAreFatal</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check restrictions on pme_order and the PME grid nkx,nky,nkz. </p>
<p>With errorsAreFatal=true, an exception or fatal error is generated on violation of restrictions. With errorsAreFatal=false, false is returned on violation of restrictions. When all restrictions are obeyed, true is returned. Argument useThreads tells if any MPI rank doing PME uses more than 1 threads. If at calling useThreads is unknown, pass true for conservative checking.</p>
<p>The PME GPU restrictions are checked separately during <a class="el" href="pme-gpu-internal_8cpp.xhtml#adf72d90341055cd222ad34c061236cb9" title="Initializes the PME GPU data at the beginning of the run. ">pme_gpu_init()</a>. </p>

</div>
</div>
<a class="anchor" id="a4f11dc953f2403aea6e1e1e49a0a3ac3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx_pme_do </td>
          <td>(</td>
          <td class="paramtype">struct gmx_pme_t *&#160;</td>
          <td class="paramname"><em>pme</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>homenr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>x</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>f</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>chargeA</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>chargeB</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>c6A</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>c6B</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>sigmaA</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>sigmaB</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">matrix&#160;</td>
          <td class="paramname"><em>box</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">t_commrec *&#160;</td>
          <td class="paramname"><em>cr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>maxshift_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>maxshift_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">t_nrnb *&#160;</td>
          <td class="paramname"><em>nrnb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gmx_wallcycle_t&#160;</td>
          <td class="paramname"><em>wcycle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">matrix&#160;</td>
          <td class="paramname"><em>vir_q</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">matrix&#160;</td>
          <td class="paramname"><em>vir_lj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td>
          <td class="paramname"><em>energy_q</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td>
          <td class="paramname"><em>energy_lj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>lambda_q</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>lambda_lj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td>
          <td class="paramname"><em>dvdlambda_q</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td>
          <td class="paramname"><em>dvdlambda_lj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>flags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Do a PME calculation on a CPU for the long range electrostatics and/or LJ. </p>
<p>The meaning of <code>flags</code> is defined above, and determines which parts of the calculation are performed.</p>
<dl class="section return"><dt>Returns</dt><dd>0 indicates all well, non zero is an error code. </dd></dl>

</div>
</div>
<a class="anchor" id="a246102dd8135fa4f989aa847b68d0b8b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">gmx_pme_t* gmx_pme_init </td>
          <td>(</td>
          <td class="paramtype">const t_commrec *&#160;</td>
          <td class="paramname"><em>cr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nnodes_major</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nnodes_minor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const t_inputrec *&#160;</td>
          <td class="paramname"><em>ir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>homenr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bFreeEnergy_q</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bFreeEnergy_lj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bReproducible</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>ewaldcoeff_q</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>ewaldcoeff_lj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nthread</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="pme_8h.xhtml#adc082ed1af9a4868af13352373ed3791">PmeRunMode</a>&#160;</td>
          <td class="paramname"><em>runMode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structPmeGpu.xhtml">PmeGpu</a> *&#160;</td>
          <td class="paramname"><em>pmeGpu</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structgmx__device__info__t.xhtml">gmx_device_info_t</a> *&#160;</td>
          <td class="paramname"><em>gpuInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1MDLogger.xhtml">gmx::MDLogger</a> &amp;&#160;</td>
          <td class="paramname"><em>mdlog</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Construct PME data. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InconsistentInputError.xhtml" title="Exception class for situations where user input is inconsistent. ">gmx::InconsistentInputError</a></td><td>if input grid sizes/PME order are inconsistent. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Pointer to newly allocated and initialized PME data. </dd></dl>

</div>
</div>
<a class="anchor" id="a2bbcd1698af0baadd183fc819b0c96f2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx_pme_reinit_atoms </td>
          <td>(</td>
          <td class="paramtype">const gmx_pme_t *&#160;</td>
          <td class="paramname"><em>pme</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>nAtoms</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> *&#160;</td>
          <td class="paramname"><em>charges</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This function updates the local atom data on GPU after DD (charges, coordinates, etc.). TODO: it should update the PME CPU atom data as well. (currently PME CPU call <a class="el" href="pme_8cpp.xhtml#a4f11dc953f2403aea6e1e1e49a0a3ac3" title="Do a PME calculation on a CPU for the long range electrostatics and/or LJ. ">gmx_pme_do()</a> gets passed the input pointers for each computation). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pme</td><td>The PME structure. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">nAtoms</td><td>The number of particles. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">charges</td><td>The pointer to the array of particle charges. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="a36c5a3e4872fe57779ce11f166c22bad"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int gmxCacheLineSize = 64</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Number of bytes in a cache line. </p>
<p>Must also be a multiple of the SIMD and SIMD4 register size, to preserve alignment. </p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:16 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::AnalysisDataStorage Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml">AnalysisDataStorage</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1AnalysisDataStorage-members.xhtml">List of all members</a> &#124;
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">gmx::AnalysisDataStorage Class Reference<div class="ingroups"><a class="el" href="group__group__libraryapi.xhtml">Library API</a> &#124; <a class="el" href="group__module__analysisdata.xhtml">Parallelizable Handling of Output Data (analysisdata)</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/analysisdata/datastorage.h&gt;</code></p>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Helper class that implements storage of data. </p>
<p>This class implements a standard way of storing data to avoid implementing storage in each class derived from <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml" title="Abstract base class for all objects that provide data. ">AbstractAnalysisData</a> separately. To use this class in a class derived from <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml" title="Abstract base class for all objects that provide data. ">AbstractAnalysisData</a>, a member variable of this type should be declared and the pure virtual methods forwarded to <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a56d27e3c160f201597e7fa62caeb42d7" title="Returns the number of ready frames. ">frameCount()</a>, <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#ac6ce446a216b2dbeeba1be5215893604" title="Implements access to data frames. ">tryGetDataFrame()</a> and <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a1aeabd17f2b025e1bf31b65766094e8b" title="Implements storage requests. ">requestStorage()</a>. Storage properties should be set up, and then <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#acb12e0e755e7c46565b65c7a2bb7078e" title="Start storing data. ">startDataStorage()</a> or <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a15556beb1726d7503e9c45bb6d385dbb" title="Start storing data in parallel. ">startParallelDataStorage()</a> called. New frames can then be added using <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a3303eeb1ac7f3a697124c5dbff3557e4" title="Starts storing a new frame. ">startFrame()</a>, <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a07082e8d572d1dc0c74f14ad69feed01" title="Obtains a frame object for an in-progress frame. ">currentFrame()</a>, <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a27fcfa486e9f6c02da548b5af097c34a" title="Convenience method for finishing a data frame. ">finishFrame()</a>, and <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#aacdfffeac9d6a692e2f65a0027f77e60" title="Performs in-order sequential processing for a data frame. ">finishFrameSerial()</a> methods (the last is only necessary if <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a15556beb1726d7503e9c45bb6d385dbb" title="Start storing data in parallel. ">startParallelDataStorage()</a> is used). When all frames are ready, <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#ae53f2e2ecb9b51fd57076e174ddb3b29" title="Finishes storing data. ">finishDataStorage()</a> must be called. These methods (and <a class="el" href="classgmx_1_1AnalysisDataStorageFrame.xhtml#a12fa5fc11e6826ccf0e6f0a25fb2e1cf" title="Mark point set as finished for multipoint data. ">AnalysisDataStorageFrame::finishPointSet()</a>) take the responsibility of calling all the notification methods in <a class="el" href="classgmx_1_1AnalysisDataModuleManager.xhtml" title="Encapsulates handling of data modules attached to AbstractAnalysisData. ">AnalysisDataModuleManager</a>,</p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000009">Todo:</a></b></dt><dd>Proper multi-threaded implementation.</dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa64bc4f3afe3e5d481c4140fa1004e9b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa64bc4f3afe3e5d481c4140fa1004e9b"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#aa64bc4f3afe3e5d481c4140fa1004e9b">AnalysisDataStorage</a> ()</td></tr>
<tr class="memdesc:aa64bc4f3afe3e5d481c4140fa1004e9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs a storage object. <br/></td></tr>
<tr class="separator:aa64bc4f3afe3e5d481c4140fa1004e9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56d27e3c160f201597e7fa62caeb42d7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a56d27e3c160f201597e7fa62caeb42d7">frameCount</a> () const </td></tr>
<tr class="memdesc:a56d27e3c160f201597e7fa62caeb42d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of ready frames.  <a href="#a56d27e3c160f201597e7fa62caeb42d7">More...</a><br/></td></tr>
<tr class="separator:a56d27e3c160f201597e7fa62caeb42d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6ce446a216b2dbeeba1be5215893604"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1AnalysisDataFrameRef.xhtml">AnalysisDataFrameRef</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#ac6ce446a216b2dbeeba1be5215893604">tryGetDataFrame</a> (int index) const </td></tr>
<tr class="memdesc:ac6ce446a216b2dbeeba1be5215893604"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements access to data frames.  <a href="#ac6ce446a216b2dbeeba1be5215893604">More...</a><br/></td></tr>
<tr class="separator:ac6ce446a216b2dbeeba1be5215893604"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1aeabd17f2b025e1bf31b65766094e8b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a1aeabd17f2b025e1bf31b65766094e8b">requestStorage</a> (int nframes)</td></tr>
<tr class="memdesc:a1aeabd17f2b025e1bf31b65766094e8b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements storage requests.  <a href="#a1aeabd17f2b025e1bf31b65766094e8b">More...</a><br/></td></tr>
<tr class="separator:a1aeabd17f2b025e1bf31b65766094e8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb12e0e755e7c46565b65c7a2bb7078e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#acb12e0e755e7c46565b65c7a2bb7078e">startDataStorage</a> (<a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml">AbstractAnalysisData</a> *data, <a class="el" href="classgmx_1_1AnalysisDataModuleManager.xhtml">AnalysisDataModuleManager</a> *modules)</td></tr>
<tr class="memdesc:acb12e0e755e7c46565b65c7a2bb7078e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start storing data.  <a href="#acb12e0e755e7c46565b65c7a2bb7078e">More...</a><br/></td></tr>
<tr class="separator:acb12e0e755e7c46565b65c7a2bb7078e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15556beb1726d7503e9c45bb6d385dbb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a15556beb1726d7503e9c45bb6d385dbb">startParallelDataStorage</a> (<a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml">AbstractAnalysisData</a> *data, <a class="el" href="classgmx_1_1AnalysisDataModuleManager.xhtml">AnalysisDataModuleManager</a> *modules, const <a class="el" href="classgmx_1_1AnalysisDataParallelOptions.xhtml">AnalysisDataParallelOptions</a> &amp;options)</td></tr>
<tr class="memdesc:a15556beb1726d7503e9c45bb6d385dbb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start storing data in parallel.  <a href="#a15556beb1726d7503e9c45bb6d385dbb">More...</a><br/></td></tr>
<tr class="separator:a15556beb1726d7503e9c45bb6d385dbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3303eeb1ac7f3a697124c5dbff3557e4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1AnalysisDataStorageFrame.xhtml">AnalysisDataStorageFrame</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a3303eeb1ac7f3a697124c5dbff3557e4">startFrame</a> (const <a class="el" href="classgmx_1_1AnalysisDataFrameHeader.xhtml">AnalysisDataFrameHeader</a> &amp;header)</td></tr>
<tr class="memdesc:a3303eeb1ac7f3a697124c5dbff3557e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts storing a new frame.  <a href="#a3303eeb1ac7f3a697124c5dbff3557e4">More...</a><br/></td></tr>
<tr class="separator:a3303eeb1ac7f3a697124c5dbff3557e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9006e8a3f7e34f261de406b3d11c52d4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1AnalysisDataStorageFrame.xhtml">AnalysisDataStorageFrame</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a9006e8a3f7e34f261de406b3d11c52d4">startFrame</a> (int index, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> x, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> dx)</td></tr>
<tr class="memdesc:a9006e8a3f7e34f261de406b3d11c52d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convenience method to start storing a new frame.  <a href="#a9006e8a3f7e34f261de406b3d11c52d4">More...</a><br/></td></tr>
<tr class="separator:a9006e8a3f7e34f261de406b3d11c52d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07082e8d572d1dc0c74f14ad69feed01"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classgmx_1_1AnalysisDataStorageFrame.xhtml">AnalysisDataStorageFrame</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a07082e8d572d1dc0c74f14ad69feed01">currentFrame</a> (int index)</td></tr>
<tr class="memdesc:a07082e8d572d1dc0c74f14ad69feed01"><td class="mdescLeft">&#160;</td><td class="mdescRight">Obtains a frame object for an in-progress frame.  <a href="#a07082e8d572d1dc0c74f14ad69feed01">More...</a><br/></td></tr>
<tr class="separator:a07082e8d572d1dc0c74f14ad69feed01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27fcfa486e9f6c02da548b5af097c34a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a27fcfa486e9f6c02da548b5af097c34a">finishFrame</a> (int index)</td></tr>
<tr class="memdesc:a27fcfa486e9f6c02da548b5af097c34a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convenience method for finishing a data frame.  <a href="#a27fcfa486e9f6c02da548b5af097c34a">More...</a><br/></td></tr>
<tr class="separator:a27fcfa486e9f6c02da548b5af097c34a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacdfffeac9d6a692e2f65a0027f77e60"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#aacdfffeac9d6a692e2f65a0027f77e60">finishFrameSerial</a> (int index)</td></tr>
<tr class="memdesc:aacdfffeac9d6a692e2f65a0027f77e60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs in-order sequential processing for a data frame.  <a href="#aacdfffeac9d6a692e2f65a0027f77e60">More...</a><br/></td></tr>
<tr class="separator:aacdfffeac9d6a692e2f65a0027f77e60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae53f2e2ecb9b51fd57076e174ddb3b29"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#ae53f2e2ecb9b51fd57076e174ddb3b29">finishDataStorage</a> ()</td></tr>
<tr class="memdesc:ae53f2e2ecb9b51fd57076e174ddb3b29"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finishes storing data.  <a href="#ae53f2e2ecb9b51fd57076e174ddb3b29">More...</a><br/></td></tr>
<tr class="separator:ae53f2e2ecb9b51fd57076e174ddb3b29"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a07082e8d572d1dc0c74f14ad69feed01"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1AnalysisDataStorageFrame.xhtml">AnalysisDataStorageFrame</a> &amp; gmx::AnalysisDataStorage::currentFrame </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Obtains a frame object for an in-progress frame. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Frame index. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">Frame</td><td>object corresponding to <code>index</code>.</td></tr>
  </table>
  </dd>
</dl>
<p><a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a3303eeb1ac7f3a697124c5dbff3557e4" title="Starts storing a new frame. ">startFrame()</a> should have been called for the frame with index <code>index</code>, and <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a27fcfa486e9f6c02da548b5af097c34a" title="Convenience method for finishing a data frame. ">finishFrame()</a> should not yet have been called. Returns the same object as returned by the original <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a3303eeb1ac7f3a697124c5dbff3557e4" title="Starts storing a new frame. ">startFrame()</a> call for the same index.</p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="ae53f2e2ecb9b51fd57076e174ddb3b29"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AnalysisDataStorage::finishDataStorage </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Finishes storing data. </p>
<p>Calls <a class="el" href="classgmx_1_1AnalysisDataModuleManager.xhtml#af64ece81e837628f70c6efb32b2cd719" title="Notifies attached modules of the end of data. ">AnalysisDataModuleManager::notifyDataFinish()</a>, and throws any exceptions this method throws. </p>

</div>
</div>
<a class="anchor" id="a27fcfa486e9f6c02da548b5af097c34a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AnalysisDataStorage::finishFrame </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convenience method for finishing a data frame. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Frame index.</td></tr>
  </table>
  </dd>
</dl>
<p>Identical to <code>currentFrame(index)</code>.<a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a27fcfa486e9f6c02da548b5af097c34a" title="Convenience method for finishing a data frame. ">finishFrame()</a>.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1AnalysisDataStorageFrame.xhtml#a0e9f6a09788573f6f53c777d1d63b5ba" title="Finish storing a frame. ">AnalysisDataStorageFrame::finishFrame()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="aacdfffeac9d6a692e2f65a0027f77e60"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AnalysisDataStorage::finishFrameSerial </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Performs in-order sequential processing for a data frame. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td>Frame index.</td></tr>
  </table>
  </dd>
</dl>
<p>If <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a15556beb1726d7503e9c45bb6d385dbb" title="Start storing data in parallel. ">startParallelDataStorage()</a> has been called with options that indicate parallelism, this method must be called after <code>finishFrame(index)</code> (or the equivalent call in <a class="el" href="classgmx_1_1AnalysisDataStorageFrame.xhtml" title="Allows assigning values for a data frame in AnalysisDataStorage. ">AnalysisDataStorageFrame</a>), such that it is called in the correct order sequentially for each frame.</p>
<p>If there is no parallelism, this method does nothing; the equivalent processing is done already during <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a27fcfa486e9f6c02da548b5af097c34a" title="Convenience method for finishing a data frame. ">finishFrame()</a>. </p>

</div>
</div>
<a class="anchor" id="a56d27e3c160f201597e7fa62caeb42d7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::AnalysisDataStorage::frameCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of ready frames. </p>
<p>This method is designed such that calls to <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a49ff8cb5c6087a8081f72b436b9824e7" title="Returns the total number of frames in the data. ">AbstractAnalysisData::frameCount()</a> can be directly forwarded to this method. See that method for more documentation.</p>
<p>If this method returns N, this means that the first N frames have all been finished.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a49ff8cb5c6087a8081f72b436b9824e7" title="Returns the total number of frames in the data. ">AbstractAnalysisData::frameCount()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a1aeabd17f2b025e1bf31b65766094e8b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::AnalysisDataStorage::requestStorage </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nframes</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Implements storage requests. </p>
<p>This method is designed such that calls to <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a7b0f26e6b9b4c981ca611ca782570aa6" title="Implements storage requests. ">AbstractAnalysisData::requestStorageInternal()</a> can be directly forwarded to this method. See that method for more documentation.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#a7b0f26e6b9b4c981ca611ca782570aa6" title="Implements storage requests. ">AbstractAnalysisData::requestStorageInternal()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="acb12e0e755e7c46565b65c7a2bb7078e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AnalysisDataStorage::startDataStorage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml">AbstractAnalysisData</a> *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classgmx_1_1AnalysisDataModuleManager.xhtml">AnalysisDataModuleManager</a> *&#160;</td>
          <td class="paramname"><em>modules</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Start storing data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">data</td><td><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml" title="Abstract base class for all objects that provide data. ">AbstractAnalysisData</a> object containing this storage. </td></tr>
    <tr><td class="paramdir"></td><td class="paramname">modules</td><td>Module manager for <code>data</code>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if storage allocation fails.</td></tr>
  </table>
  </dd>
</dl>
<p>Typically called as <code>startDataStorage</code>(this, &amp;moduleManager()) from a member of <code>data</code> when the data is ready to be started. The storage object will take responsibility of calling all module notification methods in <a class="el" href="classgmx_1_1AnalysisDataModuleManager.xhtml" title="Encapsulates handling of data modules attached to AbstractAnalysisData. ">AnalysisDataModuleManager</a> using <code>modules</code>.</p>
<p>Lifetime of <code>data</code> and <code>modules</code> must exceed the lifetime of the storage object (typically, the storage object will be a member in <code>data</code>).</p>
<p>Calls <a class="el" href="classgmx_1_1AnalysisDataModuleManager.xhtml#a7348344412f0078fbebbb985dac1e7ce" title="Notifies attached modules of the start of serial data. ">AnalysisDataModuleManager::notifyDataStart()</a>, and throws any exceptions this method throws. </p>

</div>
</div>
<a class="anchor" id="a3303eeb1ac7f3a697124c5dbff3557e4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1AnalysisDataStorageFrame.xhtml">AnalysisDataStorageFrame</a> &amp; gmx::AnalysisDataStorage::startFrame </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1AnalysisDataFrameHeader.xhtml">AnalysisDataFrameHeader</a> &amp;&#160;</td>
          <td class="paramname"><em>header</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Starts storing a new frame. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">header</td><td>Header for the new frame. </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">Frame</td><td>object corresponding to the started frame. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if storage reallocation fails (only possible if storage of all frames has been requested). </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a></td><td>if frame is too far in the future.</td></tr>
  </table>
  </dd>
</dl>
<p>The returned object will be valid until the corresponding <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a27fcfa486e9f6c02da548b5af097c34a" title="Convenience method for finishing a data frame. ">finishFrame()</a> call.</p>
<p>Must be called exactly once for each frame index.</p>
<p>Currently, the implementation only works if the new frame is not too far in the future: If <code>i</code> is the index of the last frame such that all frames from 0, ..., <code>i</code> have been finished, then <code>header()</code>.index() should be at most <code>parallelizationFactor</code> larger than <code>i</code>, where parallelizationFactor is the parallelization factor passed to setParallelOptions(). Throws <a class="el" href="classgmx_1_1APIError.xhtml" title="Exception class for incorrect use of an API. ">APIError</a> if this constraint is violated.</p>
<p>Calls <a class="el" href="classgmx_1_1AnalysisDataModuleManager.xhtml#a1412c4288dfd26fdb37ca2d45d4e5e10" title="Notifies attached serial modules of the start of a frame. ">AnalysisDataModuleManager::notifyFrameStart()</a> (in certain cases) and <a class="el" href="classgmx_1_1AnalysisDataModuleManager.xhtml#a6da2faaf764fd3eb877aa0e78e1f6522" title="Notifies attached parallel modules of the start of a frame. ">AnalysisDataModuleManager::notifyParallelFrameStart()</a>, and throws any exceptions these methods throw. </p>

</div>
</div>
<a class="anchor" id="a9006e8a3f7e34f261de406b3d11c52d4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1AnalysisDataStorageFrame.xhtml">AnalysisDataStorageFrame</a> &amp; gmx::AnalysisDataStorage::startFrame </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td>
          <td class="paramname"><em>dx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convenience method to start storing a new frame. </p>
<p>Identical to <code>startFrame</code>(AnalysisDataFrameHeader(index, x, dx)); </p>

</div>
</div>
<a class="anchor" id="a15556beb1726d7503e9c45bb6d385dbb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::AnalysisDataStorage::startParallelDataStorage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml">AbstractAnalysisData</a> *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classgmx_1_1AnalysisDataModuleManager.xhtml">AnalysisDataModuleManager</a> *&#160;</td>
          <td class="paramname"><em>modules</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classgmx_1_1AnalysisDataParallelOptions.xhtml">AnalysisDataParallelOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Start storing data in parallel. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">data</td><td><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml" title="Abstract base class for all objects that provide data. ">AbstractAnalysisData</a> object containing this storage. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">options</td><td>Parallelization options to use. </td></tr>
    <tr><td class="paramdir"></td><td class="paramname">modules</td><td>Module manager for <code>data</code>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if storage allocation fails.</td></tr>
  </table>
  </dd>
</dl>
<p>Should be called instead of <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#acb12e0e755e7c46565b65c7a2bb7078e" title="Start storing data. ">startDataStorage()</a> if the data will be produced in parallel. Works as <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#acb12e0e755e7c46565b65c7a2bb7078e" title="Start storing data. ">startDataStorage()</a>, but additionally initializes the storage and the attached modules to prepare for out-of-order data frames.</p>
<p>Calls <a class="el" href="classgmx_1_1AnalysisDataModuleManager.xhtml#a13448be130f5e49e2b34b749ca37bd71" title="Notifies attached modules of the start of parallel data. ">AnalysisDataModuleManager::notifyParallelDataStart()</a>, and throws any exceptions this method throws. </p>

</div>
</div>
<a class="anchor" id="ac6ce446a216b2dbeeba1be5215893604"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1AnalysisDataFrameRef.xhtml">AnalysisDataFrameRef</a> gmx::AnalysisDataStorage::tryGetDataFrame </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Implements access to data frames. </p>
<p>This method is designed such that calls to <a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#af919927886d1ac547b1841b09af8bd59" title="Implements access to data frames. ">AbstractAnalysisData::tryGetDataFrameInternal()</a> can be directly forwarded to this method. See that method for more documentation.</p>
<p>A valid reference for a frame will be returned after <a class="el" href="classgmx_1_1AnalysisDataStorage.xhtml#a27fcfa486e9f6c02da548b5af097c34a" title="Convenience method for finishing a data frame. ">finishFrame()</a> has been called for that frame.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classgmx_1_1AbstractAnalysisData.xhtml#af919927886d1ac547b1841b09af8bd59" title="Implements access to data frames. ">AbstractAnalysisData::tryGetDataFrameInternal()</a> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/analysisdata/<a class="el" href="datastorage_8h.xhtml">datastorage.h</a></li>
<li>src/gromacs/analysisdata/<a class="el" href="datastorage_8cpp.xhtml">datastorage.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:27 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/simd/tests/simd.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_8a21c46af9718d1f610eb513153099d7.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a46192700e9e8ed44c648f0a55ee9a53.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_32d26fbaf0abd8bf4548e7cba9bbcf59.xhtml">simd</a></li><li class="navelem"><a class="el" href="dir_e6a8df90faa71fbc1a1982c7ab1ea2c4.xhtml">tests</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">simd.h File Reference<div class="ingroups"><a class="el" href="group__module__simd.xhtml">SIMD intrinsics interface (simd)</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;vector&gt;</code><br/>
<code>#include &lt;gtest/gtest.h&gt;</code><br/>
<code>#include &quot;<a class="el" href="simd_8h.xhtml">gromacs/simd/simd.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="base_8h.xhtml">base.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="data_8h.xhtml">data.h</a>&quot;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for simd.h:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="tests_2simd_8h__incl.svg" width="3370" height="648"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><div class="textblock"><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> This graph shows which files directly or indirectly include this file:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="tests_2simd_8h__dep__incl.svg" width="170" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Declares fixture for testing of normal SIMD (not SIMD4) functionality. </p>
<p>The SIMD tests are both simple and complicated. The actual testing logic is <em>very</em> straightforward since we just need to test single values against the math library, and for some math functions we need to do it in a loop. This could have been achieved in minutes with the default Google Test tools, if it wasn't for the problem that we cannot access or compare SIMD contents directly without using lots of other SIMD functionality. For this reason we have separate the basic testing of load/store operations into a separate bootstrapping test. Once this works, we use a set of utility routines to convert SIMD contents to/from std:vector&lt;&gt; and perform the rest of the tests, which then can farmed out to the base class SimdBaseTest that is common to SIMD and SIMD4.</p>
<p>Another complication is that the width of the SIMD implementation will depend on the hardware and precision. For some simple operations it is sufficient to set all SIMD elements to the same value, and check that the result is present in all elements. However, for a few more complex instructions that might rely on shuffling under-the-hood it is important that we can test operations with different elements. We achieve this by having test code that can initialize a SIMD variable from an std::vector of arbitrary length; the vector is simply repeated to fill all elements in the SIMD variable. We also have similar routines to compare a SIMD result with values in a vector, which returns true iff all elements match.</p>
<p>This way we can write simple tests that use different values for all SIMD elements. Personally I like using vectors of length 3, since this means there are no simple repeated patterns in low/high halves of SIMD variables that are 2,4,8,or 16 elements wide, and we still don't have to care about the exact SIMD width of the underlying implementation.</p>
<p>Note that this utility uses a few SIMD load/store instructions internally - those have been tested separately in the <a class="el" href="bootstrap__loadstore_8cpp.xhtml" title="Separate test of SIMD load/store, before we use them in the SIMD test classes. ">bootstrap_loadstore.cpp</a> file.</p>
<dl class="section author"><dt>Author</dt><dd>Erik Lindahl <a href="#" onclick="location.href='mai'+'lto:'+'eri'+'k.'+'lin'+'da'+'hl@'+'sc'+'ili'+'fe'+'lab'+'.s'+'e'; return false;">erik.<span style="display: none;">.nosp@m.</span>lind<span style="display: none;">.nosp@m.</span>ahl@s<span style="display: none;">.nosp@m.</span>cili<span style="display: none;">.nosp@m.</span>felab<span style="display: none;">.nosp@m.</span>.se</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1SimdTest.xhtml">gmx::test::SimdTest</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Test fixture for SIMD tests.  <a href="classgmx_1_1test_1_1SimdTest.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:ga20a19ada7d3af0169977cf041100dbe5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga20a19ada7d3af0169977cf041100dbe5"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga20a19ada7d3af0169977cf041100dbe5">GMX_EXPECT_SIMD_REAL_EQ</a>(ref, tst)&#160;&#160;&#160;EXPECT_PRED_FORMAT2(compareSimdEq, ref, tst)</td></tr>
<tr class="memdesc:ga20a19ada7d3af0169977cf041100dbe5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Test if a SIMD real is bitwise identical to reference SIMD value. <br/></td></tr>
<tr class="separator:ga20a19ada7d3af0169977cf041100dbe5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5f22ab2d66b66788a7818f12393f3825"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga5f22ab2d66b66788a7818f12393f3825"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga5f22ab2d66b66788a7818f12393f3825">GMX_EXPECT_SIMD_EQ</a>(ref, tst)&#160;&#160;&#160;EXPECT_PRED_FORMAT2(compareSimdEq, ref, tst)</td></tr>
<tr class="memdesc:ga5f22ab2d66b66788a7818f12393f3825"><td class="mdescLeft">&#160;</td><td class="mdescRight">Test if a SIMD is bitwise identical to reference SIMD value. <br/></td></tr>
<tr class="separator:ga5f22ab2d66b66788a7818f12393f3825"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga259280aa3c4e2bd328ffe48a122716db"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga259280aa3c4e2bd328ffe48a122716db"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga259280aa3c4e2bd328ffe48a122716db">GMX_EXPECT_SIMD_REAL_NEAR</a>(ref, tst)&#160;&#160;&#160;EXPECT_PRED_FORMAT2(compareSimdRealUlp, ref, tst)</td></tr>
<tr class="memdesc:ga259280aa3c4e2bd328ffe48a122716db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Test if a SIMD real is within tolerance of reference SIMD value. <br/></td></tr>
<tr class="separator:ga259280aa3c4e2bd328ffe48a122716db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga212e5a5aa78448872129f5e3b6e5e3d8"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga212e5a5aa78448872129f5e3b6e5e3d8">GMX_EXPECT_SIMD_INT_EQ</a>(ref, tst)&#160;&#160;&#160;EXPECT_PRED_FORMAT2(compareSimdEq, ref, tst)</td></tr>
<tr class="memdesc:ga212e5a5aa78448872129f5e3b6e5e3d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Macro that checks SIMD integer expression against SIMD or reference int.  <a href="group__module__simd.xhtml#ga212e5a5aa78448872129f5e3b6e5e3d8">More...</a><br/></td></tr>
<tr class="separator:ga212e5a5aa78448872129f5e3b6e5e3d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga33bbe34e961d7692b0c7e37dfd6e07b2"><td class="memItemLeft" align="right" valign="top">::std::vector&lt; <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga33bbe34e961d7692b0c7e37dfd6e07b2">gmx::test::simdReal2Vector</a> (const SimdReal simd)</td></tr>
<tr class="memdesc:ga33bbe34e961d7692b0c7e37dfd6e07b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert SIMD real to std::vector&lt;real&gt;.  <a href="group__module__simd.xhtml#ga33bbe34e961d7692b0c7e37dfd6e07b2">More...</a><br/></td></tr>
<tr class="separator:ga33bbe34e961d7692b0c7e37dfd6e07b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaac7b6345f9ce8f85ba985367cda65c72"><td class="memItemLeft" align="right" valign="top">SimdReal&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#gaac7b6345f9ce8f85ba985367cda65c72">gmx::test::vector2SimdReal</a> (const std::vector&lt; <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> &gt; &amp;v)</td></tr>
<tr class="memdesc:gaac7b6345f9ce8f85ba985367cda65c72"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return floating-point SIMD value from std::vector&lt;real&gt;.  <a href="group__module__simd.xhtml#gaac7b6345f9ce8f85ba985367cda65c72">More...</a><br/></td></tr>
<tr class="separator:gaac7b6345f9ce8f85ba985367cda65c72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacc5ed5bd5dd0134c7c96738eb931da71"><td class="memItemLeft" align="right" valign="top">SimdReal&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#gacc5ed5bd5dd0134c7c96738eb931da71">gmx::test::setSimdRealFrom3R</a> (<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> r0, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> r1, <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> r2)</td></tr>
<tr class="memdesc:gacc5ed5bd5dd0134c7c96738eb931da71"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set SIMD register contents from three real values.  <a href="group__module__simd.xhtml#gacc5ed5bd5dd0134c7c96738eb931da71">More...</a><br/></td></tr>
<tr class="separator:gacc5ed5bd5dd0134c7c96738eb931da71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaba1a90972512fc9f1b870efb7d2c6133"><td class="memItemLeft" align="right" valign="top">SimdReal&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#gaba1a90972512fc9f1b870efb7d2c6133">gmx::test::setSimdRealFrom1R</a> (<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> value)</td></tr>
<tr class="memdesc:gaba1a90972512fc9f1b870efb7d2c6133"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set SIMD register contents from single real value.  <a href="group__module__simd.xhtml#gaba1a90972512fc9f1b870efb7d2c6133">More...</a><br/></td></tr>
<tr class="separator:gaba1a90972512fc9f1b870efb7d2c6133"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0c8e9af4c3cce6ac9f674d4872c0f520"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::int32_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga0c8e9af4c3cce6ac9f674d4872c0f520">gmx::test::simdInt2Vector</a> (const SimdInt32 simd)</td></tr>
<tr class="memdesc:ga0c8e9af4c3cce6ac9f674d4872c0f520"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert SIMD integer to std::vector&lt;int&gt;.  <a href="group__module__simd.xhtml#ga0c8e9af4c3cce6ac9f674d4872c0f520">More...</a><br/></td></tr>
<tr class="separator:ga0c8e9af4c3cce6ac9f674d4872c0f520"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga40fb1daa9017473f0202879e818b1395"><td class="memItemLeft" align="right" valign="top">SimdInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga40fb1daa9017473f0202879e818b1395">gmx::test::vector2SimdInt</a> (const std::vector&lt; std::int32_t &gt; &amp;v)</td></tr>
<tr class="memdesc:ga40fb1daa9017473f0202879e818b1395"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return 32-bit integer SIMD value from std::vector&lt;int&gt;.  <a href="group__module__simd.xhtml#ga40fb1daa9017473f0202879e818b1395">More...</a><br/></td></tr>
<tr class="separator:ga40fb1daa9017473f0202879e818b1395"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9d8939c4f0f48738a4f0621c8ae4d94c"><td class="memItemLeft" align="right" valign="top">SimdInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga9d8939c4f0f48738a4f0621c8ae4d94c">gmx::test::setSimdIntFrom3I</a> (int i0, int i1, int i2)</td></tr>
<tr class="memdesc:ga9d8939c4f0f48738a4f0621c8ae4d94c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set SIMD register contents from three int values.  <a href="group__module__simd.xhtml#ga9d8939c4f0f48738a4f0621c8ae4d94c">More...</a><br/></td></tr>
<tr class="separator:ga9d8939c4f0f48738a4f0621c8ae4d94c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2a7a383c9c8de6a3c2bf26af047a73d9"><td class="memItemLeft" align="right" valign="top">SimdInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga2a7a383c9c8de6a3c2bf26af047a73d9">gmx::test::setSimdIntFrom1I</a> (int value)</td></tr>
<tr class="memdesc:ga2a7a383c9c8de6a3c2bf26af047a73d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set SIMD register contents from single integer value.  <a href="group__module__simd.xhtml#ga2a7a383c9c8de6a3c2bf26af047a73d9">More...</a><br/></td></tr>
<tr class="separator:ga2a7a383c9c8de6a3c2bf26af047a73d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:gadbcc932f6bb869f13adf284528d2366d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gadbcc932f6bb869f13adf284528d2366d"></a>
const SimdReal&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#gadbcc932f6bb869f13adf284528d2366d">gmx::test::rSimd_Bits1</a></td></tr>
<tr class="memdesc:gadbcc932f6bb869f13adf284528d2366d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pattern F0 repeated to fill single/double. <br/></td></tr>
<tr class="separator:gadbcc932f6bb869f13adf284528d2366d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac829b4c1528431222df5f95873f6cf37"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gac829b4c1528431222df5f95873f6cf37"></a>
const SimdReal&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#gac829b4c1528431222df5f95873f6cf37">gmx::test::rSimd_Bits2</a></td></tr>
<tr class="memdesc:gac829b4c1528431222df5f95873f6cf37"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pattern CC repeated to fill single/double. <br/></td></tr>
<tr class="separator:gac829b4c1528431222df5f95873f6cf37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga48b1883028e43d752c39f6e723f2204a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga48b1883028e43d752c39f6e723f2204a"></a>
const SimdReal&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga48b1883028e43d752c39f6e723f2204a">gmx::test::rSimd_Bits3</a></td></tr>
<tr class="memdesc:ga48b1883028e43d752c39f6e723f2204a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pattern C0 repeated to fill single/double. <br/></td></tr>
<tr class="separator:ga48b1883028e43d752c39f6e723f2204a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga942c70e13478dedfa22c28c75a36ca2b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga942c70e13478dedfa22c28c75a36ca2b"></a>
const SimdReal&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga942c70e13478dedfa22c28c75a36ca2b">gmx::test::rSimd_Bits4</a></td></tr>
<tr class="memdesc:ga942c70e13478dedfa22c28c75a36ca2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pattern 0C repeated to fill single/double. <br/></td></tr>
<tr class="separator:ga942c70e13478dedfa22c28c75a36ca2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafe712e1f0a738fd002437cc15c157bb1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gafe712e1f0a738fd002437cc15c157bb1"></a>
const SimdReal&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#gafe712e1f0a738fd002437cc15c157bb1">gmx::test::rSimd_Bits5</a></td></tr>
<tr class="memdesc:gafe712e1f0a738fd002437cc15c157bb1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pattern FC repeated to fill single/double. <br/></td></tr>
<tr class="separator:gafe712e1f0a738fd002437cc15c157bb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga38cf621ea8663900bdf4e836e8cc45fe"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga38cf621ea8663900bdf4e836e8cc45fe"></a>
const SimdReal&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga38cf621ea8663900bdf4e836e8cc45fe">gmx::test::rSimd_Bits6</a></td></tr>
<tr class="memdesc:ga38cf621ea8663900bdf4e836e8cc45fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pattern 3C repeated to fill single/double. <br/></td></tr>
<tr class="separator:ga38cf621ea8663900bdf4e836e8cc45fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:18 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

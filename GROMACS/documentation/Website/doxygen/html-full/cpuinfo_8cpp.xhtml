<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/hardware/cpuinfo.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_8a21c46af9718d1f610eb513153099d7.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a46192700e9e8ed44c648f0a55ee9a53.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_6b3b8422586d1e10d2f2c774b7d6921a.xhtml">hardware</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">cpuinfo.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="gmxpre_8h.xhtml">gmxpre.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="cpuinfo_8h.xhtml">cpuinfo.h</a>&quot;</code><br/>
<code>#include &quot;config.h&quot;</code><br/>
<code>#include &lt;cctype&gt;</code><br/>
<code>#include &lt;cstdlib&gt;</code><br/>
<code>#include &lt;algorithm&gt;</code><br/>
<code>#include &lt;fstream&gt;</code><br/>
<code>#include &lt;map&gt;</code><br/>
<code>#include &lt;set&gt;</code><br/>
<code>#include &lt;sstream&gt;</code><br/>
<code>#include &lt;string&gt;</code><br/>
<code>#include &quot;<a class="el" href="basedefinitions_8h.xhtml">gromacs/utility/basedefinitions.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="architecture_8h.xhtml">architecture.h</a>&quot;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for cpuinfo.cpp:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="cpuinfo_8cpp__incl.svg" width="1246" height="202"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Implements <a class="el" href="classgmx_1_1CpuInfo.xhtml" title="Detect CPU capabilities and basic logical processor info. ">gmx::CpuInfo</a>. </p>
<p>We need to be able to compile this file in stand-alone mode to use basic CPU feature detection to set the SIMD acceleration and similar things in CMake, while we still want to use more features that enable topology detection when config.h is present.</p>
<p>We solve this by skipping the advanced stuff when the preprocessor macro GMX_CPUINFO_STANDALONE is defined. In this case you likely also need to define GMX_X86_GCC_INLINE_ASM if you are on x86; without inline assembly support it is not possible to perform the actual detection on Linux/Mac. Since these macros are specific to this file, they do not use the GMX prefix.</p>
<p>The remaining defines (GMX_NATIVE_WINDOWS,HAVE_UNISTD_H,HAVE_SCHED_H, HAVE_SYSCONF, HAVE_SCHED_AFFINITY) are only used to determine the topology on 86, and for this we rely on including config.h.</p>
<dl class="section author"><dt>Author</dt><dd>Erik Lindahl <a href="#" onclick="location.href='mai'+'lto:'+'eri'+'k.'+'lin'+'da'+'hl@'+'gm'+'ail'+'.c'+'om'; return false;">erik.<span style="display: none;">.nosp@m.</span>lind<span style="display: none;">.nosp@m.</span>ahl@g<span style="display: none;">.nosp@m.</span>mail<span style="display: none;">.nosp@m.</span>.com</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1anonymous__namespace_02cpuinfo_8cpp_03_1_1ApicIdLayout.xhtml">gmx::anonymous_namespace{cpuinfo.cpp}::ApicIdLayout</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The layout of the bits in the APIC ID.  <a href="structgmx_1_1anonymous__namespace_02cpuinfo_8cpp_03_1_1ApicIdLayout.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a44e29d4443e1e21b3d4ac6e2bf33bd3b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02cpuinfo_8cpp_03.xhtml#a44e29d4443e1e21b3d4ac6e2bf33bd3b">gmx::anonymous_namespace{cpuinfo.cpp}::trimString</a> (std::string *s)</td></tr>
<tr class="memdesc:a44e29d4443e1e21b3d4ac6e2bf33bd3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove initial and trailing whitespace from string.  <a href="#a44e29d4443e1e21b3d4ac6e2bf33bd3b">More...</a><br/></td></tr>
<tr class="separator:a44e29d4443e1e21b3d4ac6e2bf33bd3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bdcaf6e3d69274eccecdeeae144d1bd"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02cpuinfo_8cpp_03.xhtml#a4bdcaf6e3d69274eccecdeeae144d1bd">gmx::anonymous_namespace{cpuinfo.cpp}::executeX86CpuID</a> (unsigned int level, unsigned int ecxval, unsigned int *eax, unsigned int *ebx, unsigned int *ecx, unsigned int *edx)</td></tr>
<tr class="memdesc:a4bdcaf6e3d69274eccecdeeae144d1bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">execute x86 cpuid instructions with custom level and extended level  <a href="#a4bdcaf6e3d69274eccecdeeae144d1bd">More...</a><br/></td></tr>
<tr class="separator:a4bdcaf6e3d69274eccecdeeae144d1bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeee53d102302715b4473dca0c1dca042"><td class="memItemLeft" align="right" valign="top">CpuInfo::Vendor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02cpuinfo_8cpp_03.xhtml#aeee53d102302715b4473dca0c1dca042">gmx::anonymous_namespace{cpuinfo.cpp}::detectX86Vendor</a> ()</td></tr>
<tr class="memdesc:aeee53d102302715b4473dca0c1dca042"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detect x86 vendors by using the cpuid assembly instructions.  <a href="#aeee53d102302715b4473dca0c1dca042">More...</a><br/></td></tr>
<tr class="separator:aeee53d102302715b4473dca0c1dca042"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f74228670a6b37eb982e7ee0b40e414"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02cpuinfo_8cpp_03.xhtml#a7f74228670a6b37eb982e7ee0b40e414">gmx::anonymous_namespace{cpuinfo.cpp}::setFeatureFromBit</a> (<a class="el" href="parser__internal_8h.xhtml#a8553aeb4ef79ad62e90241cf54e221d5">std::set</a>&lt; CpuInfo::Feature &gt; *featureSet, CpuInfo::Feature feature, unsigned int registerValue, unsigned char bit)</td></tr>
<tr class="memdesc:a7f74228670a6b37eb982e7ee0b40e414"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple utility function to set/clear feature in a set.  <a href="#a7f74228670a6b37eb982e7ee0b40e414">More...</a><br/></td></tr>
<tr class="separator:a7f74228670a6b37eb982e7ee0b40e414"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74301a4d26acaa1d54b9fa6307238ebe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02cpuinfo_8cpp_03.xhtml#a74301a4d26acaa1d54b9fa6307238ebe">gmx::anonymous_namespace{cpuinfo.cpp}::detectX86Features</a> (std::string *brand, int *family, int *model, int *stepping, <a class="el" href="parser__internal_8h.xhtml#a8553aeb4ef79ad62e90241cf54e221d5">std::set</a>&lt; CpuInfo::Feature &gt; *features)</td></tr>
<tr class="memdesc:a74301a4d26acaa1d54b9fa6307238ebe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Process x86 cpuinfo features that are common to Intel and AMD CPUs.  <a href="#a74301a4d26acaa1d54b9fa6307238ebe">More...</a><br/></td></tr>
<tr class="separator:a74301a4d26acaa1d54b9fa6307238ebe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7e75432756584073167c1afadfbbafa"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; unsigned int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02cpuinfo_8cpp_03.xhtml#ad7e75432756584073167c1afadfbbafa">gmx::anonymous_namespace{cpuinfo.cpp}::detectX86ApicIDs</a> (bool haveX2Apic)</td></tr>
<tr class="memdesc:ad7e75432756584073167c1afadfbbafa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a vector with x86 APIC IDs for all threads.  <a href="#ad7e75432756584073167c1afadfbbafa">More...</a><br/></td></tr>
<tr class="separator:ad7e75432756584073167c1afadfbbafa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d715595b28fc59b8ad7293a0adf48fc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02cpuinfo_8cpp_03.xhtml#a5d715595b28fc59b8ad7293a0adf48fc">gmx::anonymous_namespace{cpuinfo.cpp}::renumberIndex</a> (std::vector&lt; unsigned int &gt; *v)</td></tr>
<tr class="memdesc:a5d715595b28fc59b8ad7293a0adf48fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility to renumber indices extracted from APIC IDs.  <a href="#a5d715595b28fc59b8ad7293a0adf48fc">More...</a><br/></td></tr>
<tr class="separator:a5d715595b28fc59b8ad7293a0adf48fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63909edc88ac1cf356d3d31f6f7e6de0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a63909edc88ac1cf356d3d31f6f7e6de0"></a>
ApicIdLayout&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02cpuinfo_8cpp_03.xhtml#a63909edc88ac1cf356d3d31f6f7e6de0">gmx::anonymous_namespace{cpuinfo.cpp}::detectX2ApicIdLayout</a> ()</td></tr>
<tr class="memdesc:a63909edc88ac1cf356d3d31f6f7e6de0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detect the APIC ID layout for x2APIC. <br/></td></tr>
<tr class="separator:a63909edc88ac1cf356d3d31f6f7e6de0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba97bd2744c1dae8d09128ba04728b59"><td class="memItemLeft" align="right" valign="top">ApicIdLayout&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02cpuinfo_8cpp_03.xhtml#aba97bd2744c1dae8d09128ba04728b59">gmx::anonymous_namespace{cpuinfo.cpp}::detectAmdApicIdLayout</a> (unsigned int maxExtLevel)</td></tr>
<tr class="memdesc:aba97bd2744c1dae8d09128ba04728b59"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detect the APIC ID layout for standard APIC or xAPIC on AMD.  <a href="#aba97bd2744c1dae8d09128ba04728b59">More...</a><br/></td></tr>
<tr class="separator:aba97bd2744c1dae8d09128ba04728b59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad382ef6cdcccb70e56a4c6036afd56e6"><td class="memItemLeft" align="right" valign="top">std::vector<br class="typebreak"/>
&lt; CpuInfo::LogicalProcessor &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02cpuinfo_8cpp_03.xhtml#ad382ef6cdcccb70e56a4c6036afd56e6">gmx::anonymous_namespace{cpuinfo.cpp}::detectX86LogicalProcessors</a> ()</td></tr>
<tr class="memdesc:ad382ef6cdcccb70e56a4c6036afd56e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Try to detect basic CPU topology information using x86 cpuid.  <a href="#ad382ef6cdcccb70e56a4c6036afd56e6">More...</a><br/></td></tr>
<tr class="separator:ad382ef6cdcccb70e56a4c6036afd56e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48bc3acdd308d4c69c76b239d96de2a2"><td class="memItemLeft" align="right" valign="top">const std::map&lt; std::string, <br class="typebreak"/>
std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02cpuinfo_8cpp_03.xhtml#a48bc3acdd308d4c69c76b239d96de2a2">gmx::anonymous_namespace{cpuinfo.cpp}::parseProcCpuInfo</a> ()</td></tr>
<tr class="memdesc:a48bc3acdd308d4c69c76b239d96de2a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parse /proc/cpuinfo into a simple string map.  <a href="#a48bc3acdd308d4c69c76b239d96de2a2">More...</a><br/></td></tr>
<tr class="separator:a48bc3acdd308d4c69c76b239d96de2a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae08bde9ffb0fd51a7b932b30906876dd"><td class="memItemLeft" align="right" valign="top">CpuInfo::Vendor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02cpuinfo_8cpp_03.xhtml#ae08bde9ffb0fd51a7b932b30906876dd">gmx::anonymous_namespace{cpuinfo.cpp}::detectProcCpuInfoVendor</a> (const std::map&lt; std::string, std::string &gt; &amp;cpuInfo)</td></tr>
<tr class="memdesc:ae08bde9ffb0fd51a7b932b30906876dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Try to detect vendor from /proc/cpuinfo.  <a href="#ae08bde9ffb0fd51a7b932b30906876dd">More...</a><br/></td></tr>
<tr class="separator:ae08bde9ffb0fd51a7b932b30906876dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade3cf177f1036630e2a1bc0fbb7e8a42"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02cpuinfo_8cpp_03.xhtml#ade3cf177f1036630e2a1bc0fbb7e8a42">gmx::anonymous_namespace{cpuinfo.cpp}::detectProcCpuInfoIbm</a> (const std::map&lt; std::string, std::string &gt; &amp;cpuInfo, std::string *brand, <a class="el" href="parser__internal_8h.xhtml#a8553aeb4ef79ad62e90241cf54e221d5">std::set</a>&lt; CpuInfo::Feature &gt; *features)</td></tr>
<tr class="memdesc:ade3cf177f1036630e2a1bc0fbb7e8a42"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detect IBM processor name and features from /proc/cpuinfo.  <a href="#ade3cf177f1036630e2a1bc0fbb7e8a42">More...</a><br/></td></tr>
<tr class="separator:ade3cf177f1036630e2a1bc0fbb7e8a42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e4b8369e087c591af34972269eaedbd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02cpuinfo_8cpp_03.xhtml#a3e4b8369e087c591af34972269eaedbd">gmx::anonymous_namespace{cpuinfo.cpp}::detectProcCpuInfoArm</a> (const std::map&lt; std::string, std::string &gt; &amp;cpuInfo, std::string *brand, int *family, int *model, int *stepping, <a class="el" href="parser__internal_8h.xhtml#a8553aeb4ef79ad62e90241cf54e221d5">std::set</a>&lt; CpuInfo::Feature &gt; *features)</td></tr>
<tr class="memdesc:a3e4b8369e087c591af34972269eaedbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detect ARM processor name and features from /proc/cpuinfo.  <a href="#a3e4b8369e087c591af34972269eaedbd">More...</a><br/></td></tr>
<tr class="separator:a3e4b8369e087c591af34972269eaedbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbf5bc3ecda5f4158fb6f39ca9408876"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1anonymous__namespace_02cpuinfo_8cpp_03.xhtml#afbf5bc3ecda5f4158fb6f39ca9408876">gmx::anonymous_namespace{cpuinfo.cpp}::detectProcCpuInfo</a> (CpuInfo::Vendor *vendor, std::string *brand, int *family, int *model, int *stepping, <a class="el" href="parser__internal_8h.xhtml#a8553aeb4ef79ad62e90241cf54e221d5">std::set</a>&lt; CpuInfo::Feature &gt; *features)</td></tr>
<tr class="memdesc:afbf5bc3ecda5f4158fb6f39ca9408876"><td class="mdescLeft">&#160;</td><td class="mdescRight">Try to detect vendor, cpu and features from /proc/cpuinfo.  <a href="#afbf5bc3ecda5f4158fb6f39ca9408876">More...</a><br/></td></tr>
<tr class="separator:afbf5bc3ecda5f4158fb6f39ca9408876"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af536d7a23a442f3c0876b05ac20d7d40"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#af536d7a23a442f3c0876b05ac20d7d40">gmx::cpuIsX86Nehalem</a> (const CpuInfo &amp;cpuInfo)</td></tr>
<tr class="memdesc:af536d7a23a442f3c0876b05ac20d7d40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return true if the CPU is an Intel x86 Nehalem.  <a href="#af536d7a23a442f3c0876b05ac20d7d40">More...</a><br/></td></tr>
<tr class="separator:af536d7a23a442f3c0876b05ac20d7d40"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:16 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

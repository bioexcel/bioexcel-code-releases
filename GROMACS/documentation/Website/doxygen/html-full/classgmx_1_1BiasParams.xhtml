<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::BiasParams Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1BiasParams.xhtml">BiasParams</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1BiasParams-members.xhtml">List of all members</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a>  </div>
  <div class="headertitle">
<div class="title">gmx::BiasParams Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/awh/biasparams.h&gt;</code></p>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Constant parameters for the bias. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a6e4efe51c269090a20241639f64bcb03"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#a6e4efe51c269090a20241639f64bcb03">DisableUpdateSkips</a> { <a class="el" href="classgmx_1_1BiasParams.xhtml#a6e4efe51c269090a20241639f64bcb03a7fa3b767c460b54a2be4d49030b349c7">DisableUpdateSkips::no</a>, 
<a class="el" href="classgmx_1_1BiasParams.xhtml#a6e4efe51c269090a20241639f64bcb03aa6105c0a611b41b08f1209506350279e">DisableUpdateSkips::yes</a>
 }</td></tr>
<tr class="memdesc:a6e4efe51c269090a20241639f64bcb03"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switch to turn off update skips, useful for testing.  <a href="classgmx_1_1BiasParams.xhtml#a6e4efe51c269090a20241639f64bcb03">More...</a><br/></td></tr>
<tr class="separator:a6e4efe51c269090a20241639f64bcb03"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7e8d3d19c4a13d4b51b8707e7ffddc0b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#a7e8d3d19c4a13d4b51b8707e7ffddc0b">skipUpdates</a> () const </td></tr>
<tr class="memdesc:a7e8d3d19c4a13d4b51b8707e7ffddc0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the parameters permit skipping updates.  <a href="#a7e8d3d19c4a13d4b51b8707e7ffddc0b">More...</a><br/></td></tr>
<tr class="separator:a7e8d3d19c4a13d4b51b8707e7ffddc0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a043b395847a506911f187e2edff3db9c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a043b395847a506911f187e2edff3db9c"></a>
const <a class="el" href="namespacegmx.xhtml#a74baae008f9132c5e0daf2a02b122b3b">awh_ivec</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#a043b395847a506911f187e2edff3db9c">coverRadius</a> () const </td></tr>
<tr class="memdesc:a043b395847a506911f187e2edff3db9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the the radius that needs to be sampled around a point before it is considered covered. <br/></td></tr>
<tr class="separator:a043b395847a506911f187e2edff3db9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dab8bc8f31247274ce81f3c16fb2495"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#a9dab8bc8f31247274ce81f3c16fb2495">isSampleCoordStep</a> (gmx_int64_t step) const </td></tr>
<tr class="memdesc:a9dab8bc8f31247274ce81f3c16fb2495"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether we should sample the coordinate.  <a href="#a9dab8bc8f31247274ce81f3c16fb2495">More...</a><br/></td></tr>
<tr class="separator:a9dab8bc8f31247274ce81f3c16fb2495"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad41a5ecc7ba665d3e33a942bf103533"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#aad41a5ecc7ba665d3e33a942bf103533">isUpdateFreeEnergyStep</a> (gmx_int64_t step) const </td></tr>
<tr class="memdesc:aad41a5ecc7ba665d3e33a942bf103533"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether we should update the free energy.  <a href="#aad41a5ecc7ba665d3e33a942bf103533">More...</a><br/></td></tr>
<tr class="separator:aad41a5ecc7ba665d3e33a942bf103533"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b2ba7c3f81bbd25e6c25bb55cc71d7b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#a4b2ba7c3f81bbd25e6c25bb55cc71d7b">isUpdateTargetStep</a> (gmx_int64_t step) const </td></tr>
<tr class="memdesc:a4b2ba7c3f81bbd25e6c25bb55cc71d7b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether we should update the target distribution.  <a href="#a4b2ba7c3f81bbd25e6c25bb55cc71d7b">More...</a><br/></td></tr>
<tr class="separator:a4b2ba7c3f81bbd25e6c25bb55cc71d7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afac08c7d89a37eace1c5507c48bcb836"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#afac08c7d89a37eace1c5507c48bcb836">isCheckCoveringStep</a> (gmx_int64_t step) const </td></tr>
<tr class="memdesc:afac08c7d89a37eace1c5507c48bcb836"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns if to do checks for covering in the initial stage.  <a href="#afac08c7d89a37eace1c5507c48bcb836">More...</a><br/></td></tr>
<tr class="separator:afac08c7d89a37eace1c5507c48bcb836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96a51eae4505718c235f144898884bea"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#a96a51eae4505718c235f144898884bea">isCheckHistogramForAnomaliesStep</a> (gmx_int64_t step) const </td></tr>
<tr class="memdesc:a96a51eae4505718c235f144898884bea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns if to perform checks for anomalies in the histogram.  <a href="#a96a51eae4505718c235f144898884bea">More...</a><br/></td></tr>
<tr class="separator:a96a51eae4505718c235f144898884bea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a858fe61a08d1233f442381e6c269726f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#a858fe61a08d1233f442381e6c269726f">BiasParams</a> (const AwhParams &amp;awhParams, const AwhBiasParams &amp;awhBiasParams, const std::vector&lt; <a class="el" href="structgmx_1_1DimParams.xhtml">DimParams</a> &gt; &amp;dimParams, double beta, double mdTimeStep, <a class="el" href="classgmx_1_1BiasParams.xhtml#a6e4efe51c269090a20241639f64bcb03">DisableUpdateSkips</a> disableUpdateSkips, int numSharingSimulations, const std::vector&lt; <a class="el" href="classgmx_1_1GridAxis.xhtml">GridAxis</a> &gt; &amp;gridAxis, int <a class="el" href="classgmx_1_1BiasParams.xhtml#a7fa5cad419188cbb341c7618f3bc495e">biasIndex</a>)</td></tr>
<tr class="memdesc:a858fe61a08d1233f442381e6c269726f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <a href="#a858fe61a08d1233f442381e6c269726f">More...</a><br/></td></tr>
<tr class="separator:a858fe61a08d1233f442381e6c269726f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a7d2f1a20fff7c87a25b59b5f77220202"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7d2f1a20fff7c87a25b59b5f77220202"></a>
const double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#a7d2f1a20fff7c87a25b59b5f77220202">invBeta</a></td></tr>
<tr class="memdesc:a7d2f1a20fff7c87a25b59b5f77220202"><td class="mdescLeft">&#160;</td><td class="mdescRight">1/beta = kT in kJ/mol <br/></td></tr>
<tr class="separator:a7d2f1a20fff7c87a25b59b5f77220202"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b39cb074a0f31413b639771a011b9d2"><td class="memItemLeft" align="right" valign="top">const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#a4b39cb074a0f31413b639771a011b9d2">numSamplesUpdateFreeEnergy_</a></td></tr>
<tr class="memdesc:a4b39cb074a0f31413b639771a011b9d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of samples per free energy update.  <a href="#a4b39cb074a0f31413b639771a011b9d2">More...</a><br/></td></tr>
<tr class="separator:a4b39cb074a0f31413b639771a011b9d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a965ae2f09870d182640a794edb091b28"><td class="memItemLeft" align="right" valign="top">const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#a965ae2f09870d182640a794edb091b28">eTarget</a></td></tr>
<tr class="memdesc:a965ae2f09870d182640a794edb091b28"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of target distribution.  <a href="#a965ae2f09870d182640a794edb091b28">More...</a><br/></td></tr>
<tr class="separator:a965ae2f09870d182640a794edb091b28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4baa0d2030d45f652466cc1359c51f19"><td class="memItemLeft" align="right" valign="top">const double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#a4baa0d2030d45f652466cc1359c51f19">freeEnergyCutoffInKT</a></td></tr>
<tr class="memdesc:a4baa0d2030d45f652466cc1359c51f19"><td class="mdescLeft">&#160;</td><td class="mdescRight">Free energy cut-off in kT for cut-off target distribution.  <a href="#a4baa0d2030d45f652466cc1359c51f19">More...</a><br/></td></tr>
<tr class="separator:a4baa0d2030d45f652466cc1359c51f19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d7cb956ee559bec39af2ffddf044a96"><td class="memItemLeft" align="right" valign="top">const double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#a3d7cb956ee559bec39af2ffddf044a96">temperatureScaleFactor</a></td></tr>
<tr class="memdesc:a3d7cb956ee559bec39af2ffddf044a96"><td class="mdescLeft">&#160;</td><td class="mdescRight">Temperature scaling factor for temperature scaled targed distributions.  <a href="#a3d7cb956ee559bec39af2ffddf044a96">More...</a><br/></td></tr>
<tr class="separator:a3d7cb956ee559bec39af2ffddf044a96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb2dc471a03d8f74ec34f583910abd2a"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#afb2dc471a03d8f74ec34f583910abd2a">idealWeighthistUpdate</a></td></tr>
<tr class="memdesc:afb2dc471a03d8f74ec34f583910abd2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update reference weighthistogram using the target distribution? Otherwise use the realized distribution.  <a href="#afb2dc471a03d8f74ec34f583910abd2a">More...</a><br/></td></tr>
<tr class="separator:afb2dc471a03d8f74ec34f583910abd2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2534637aaccbd2e475bb138f58634033"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2534637aaccbd2e475bb138f58634033"></a>
const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#a2534637aaccbd2e475bb138f58634033">numSharedUpdate</a></td></tr>
<tr class="memdesc:a2534637aaccbd2e475bb138f58634033"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of (multi-)simulations sharing the bias update. <br/></td></tr>
<tr class="separator:a2534637aaccbd2e475bb138f58634033"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0592d5d3d02e79af3d0cd4ee7346a981"><td class="memItemLeft" align="right" valign="top">const double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#a0592d5d3d02e79af3d0cd4ee7346a981">updateWeight</a></td></tr>
<tr class="memdesc:a0592d5d3d02e79af3d0cd4ee7346a981"><td class="mdescLeft">&#160;</td><td class="mdescRight">The probability weight accumulated for each update.  <a href="#a0592d5d3d02e79af3d0cd4ee7346a981">More...</a><br/></td></tr>
<tr class="separator:a0592d5d3d02e79af3d0cd4ee7346a981"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afada61a4e15bafed5aa2a02978e8b55b"><td class="memItemLeft" align="right" valign="top">const double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#afada61a4e15bafed5aa2a02978e8b55b">localWeightScaling</a></td></tr>
<tr class="memdesc:afada61a4e15bafed5aa2a02978e8b55b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scaling factor applied to a sample before adding it to the reference weight histogram (= 1, usually).  <a href="#afada61a4e15bafed5aa2a02978e8b55b">More...</a><br/></td></tr>
<tr class="separator:afada61a4e15bafed5aa2a02978e8b55b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02989e074db5ea72610213d74f165c58"><td class="memItemLeft" align="right" valign="top">const double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#a02989e074db5ea72610213d74f165c58">initialErrorInKT</a></td></tr>
<tr class="memdesc:a02989e074db5ea72610213d74f165c58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Estimated initial free energy error in kT.  <a href="#a02989e074db5ea72610213d74f165c58">More...</a><br/></td></tr>
<tr class="separator:a02989e074db5ea72610213d74f165c58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad746093d79df33a26e18542efc5ea8df"><td class="memItemLeft" align="right" valign="top">const double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#ad746093d79df33a26e18542efc5ea8df">initialHistogramSize</a></td></tr>
<tr class="memdesc:ad746093d79df33a26e18542efc5ea8df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initial reference weight histogram size.  <a href="#ad746093d79df33a26e18542efc5ea8df">More...</a><br/></td></tr>
<tr class="separator:ad746093d79df33a26e18542efc5ea8df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45598bd3d7d1fdb654b70ea0b731fd94"><td class="memItemLeft" align="right" valign="top">const bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#a45598bd3d7d1fdb654b70ea0b731fd94">convolveForce</a></td></tr>
<tr class="memdesc:a45598bd3d7d1fdb654b70ea0b731fd94"><td class="mdescLeft">&#160;</td><td class="mdescRight">True if we convolve the force, false means use MC between umbrellas.  <a href="#a45598bd3d7d1fdb654b70ea0b731fd94">More...</a><br/></td></tr>
<tr class="separator:a45598bd3d7d1fdb654b70ea0b731fd94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fa5cad419188cbb341c7618f3bc495e"><td class="memItemLeft" align="right" valign="top">const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BiasParams.xhtml#a7fa5cad419188cbb341c7618f3bc495e">biasIndex</a></td></tr>
<tr class="memdesc:a7fa5cad419188cbb341c7618f3bc495e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Index of the bias, used as a second random seed and for priting.  <a href="#a7fa5cad419188cbb341c7618f3bc495e">More...</a><br/></td></tr>
<tr class="separator:a7fa5cad419188cbb341c7618f3bc495e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="a6e4efe51c269090a20241639f64bcb03"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classgmx_1_1BiasParams.xhtml#a6e4efe51c269090a20241639f64bcb03">gmx::BiasParams::DisableUpdateSkips</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Switch to turn off update skips, useful for testing. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><em><a class="anchor" id="a6e4efe51c269090a20241639f64bcb03a7fa3b767c460b54a2be4d49030b349c7"></a>no</em>&nbsp;</td><td class="fielddoc">
<p>Allow update skips (when supported by the method) </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="a6e4efe51c269090a20241639f64bcb03aa6105c0a611b41b08f1209506350279e"></a>yes</em>&nbsp;</td><td class="fielddoc">
<p>Disable update skips. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a858fe61a08d1233f442381e6c269726f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">gmx::BiasParams::BiasParams </td>
          <td>(</td>
          <td class="paramtype">const AwhParams &amp;&#160;</td>
          <td class="paramname"><em>awhParams</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const AwhBiasParams &amp;&#160;</td>
          <td class="paramname"><em>awhBiasParams</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="structgmx_1_1DimParams.xhtml">DimParams</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>dimParams</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>beta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>mdTimeStep</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classgmx_1_1BiasParams.xhtml#a6e4efe51c269090a20241639f64bcb03">DisableUpdateSkips</a>&#160;</td>
          <td class="paramname"><em>disableUpdateSkips</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>numSharingSimulations</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classgmx_1_1GridAxis.xhtml">GridAxis</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>gridAxis</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>biasIndex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>The local Boltzmann target distibution is defined by 1) Adding the sampled weights instead of the target weights to the reference weight histogram. 2) Scaling the weights of these samples by the beta scaling factor. 3) Setting the target distribution equal the reference weight histogram. This requires the following special update settings: localWeightScaling = targetParam idealWeighthistUpdate = false Note: these variables could in principle be set to something else also for other target distribution types. However, localWeightScaling &lt; 1 is in general expected to give lower efficiency and, except for local Boltzmann, idealWeightHistUpdate = false gives (in my experience) unstable, non-converging results.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">awhParams</td><td>AWH parameters. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">awhBiasParams</td><td><a class="el" href="classgmx_1_1Bias.xhtml" title="A bias acting on a multidimensional coordinate. ">Bias</a> parameters. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">dimParams</td><td><a class="el" href="classgmx_1_1Bias.xhtml" title="A bias acting on a multidimensional coordinate. ">Bias</a> dimension parameters. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">beta</td><td>1/(k_B T) in units of 1/(kJ/mol), should be &gt; 0. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mdTimeStep</td><td>The MD time step. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numSharingSimulations</td><td>The number of simulations to share the bias across. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">gridAxis</td><td>The grid axes. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">disableUpdateSkips</td><td>If to disable update skips, useful for testing. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">biasIndex</td><td>Index of the bias. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="afac08c7d89a37eace1c5507c48bcb836"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::BiasParams::isCheckCoveringStep </td>
          <td>(</td>
          <td class="paramtype">gmx_int64_t&#160;</td>
          <td class="paramname"><em>step</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns if to do checks for covering in the initial stage. </p>
<p>To avoid overhead due to expensive checks, we do not check at every free energy update. However, if checks are performed too rarely the detection of coverings will be delayed, ultimately affecting free energy convergence.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">step</td><td>Time step. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true at steps where checks should be performed. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Only returns true at free energy update steps. </dd></dl>

</div>
</div>
<a class="anchor" id="a96a51eae4505718c235f144898884bea"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::BiasParams::isCheckHistogramForAnomaliesStep </td>
          <td>(</td>
          <td class="paramtype">gmx_int64_t&#160;</td>
          <td class="paramname"><em>step</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns if to perform checks for anomalies in the histogram. </p>
<p>To avoid overhead due to expensive checks, we do not check at every free energy update. These checks are only used for warning the user and can be made as infrequently as neccessary without affecting the algorithm itself.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">step</td><td>Time step. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true at steps where checks should be performed. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Only returns true at free energy update steps. </dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000013">Todo:</a></b></dt><dd>Currently this function just calls isCheckCoveringStep but the checks could be done less frequently. </dd></dl>

</div>
</div>
<a class="anchor" id="a9dab8bc8f31247274ce81f3c16fb2495"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::BiasParams::isSampleCoordStep </td>
          <td>(</td>
          <td class="paramtype">gmx_int64_t&#160;</td>
          <td class="paramname"><em>step</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns whether we should sample the coordinate. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">step</td><td>The MD step number. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aad41a5ecc7ba665d3e33a942bf103533"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::BiasParams::isUpdateFreeEnergyStep </td>
          <td>(</td>
          <td class="paramtype">gmx_int64_t&#160;</td>
          <td class="paramname"><em>step</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns whether we should update the free energy. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">step</td><td>The MD step number. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a4b2ba7c3f81bbd25e6c25bb55cc71d7b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::BiasParams::isUpdateTargetStep </td>
          <td>(</td>
          <td class="paramtype">gmx_int64_t&#160;</td>
          <td class="paramname"><em>step</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns whether we should update the target distribution. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">step</td><td>The MD step number. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a7e8d3d19c4a13d4b51b8707e7ffddc0b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::BiasParams::skipUpdates </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if the parameters permit skipping updates. </p>
<p>Generally, we can skip updates of points that are non-local at the time of the update if we for later times, when the points with skipped updates have become local, know exactly how to apply the previous updates. The free energy updates only depend on local sampling, but the histogram rescaling factors generally depend on the histogram size (all samples). If the histogram size is kept constant or the scaling factors are trivial, this is not a problem. However, if the histogram growth is scaled down by some factor the size at the time of the update needs to be known. It would be fairly simple to, for a deterministically growing histogram, backtrack and calculate this value, but currently we just disallow this case. This is not a restriction because it only affects the local Boltzmann target type for which every update is currently anyway global because the target is always updated globally.</p>
<dl class="section return"><dt>Returns</dt><dd>true when we can skip updates. </dd></dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a7fa5cad419188cbb341c7618f3bc495e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int gmx::BiasParams::biasIndex</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Index of the bias, used as a second random seed and for priting. </p>

</div>
</div>
<a class="anchor" id="a45598bd3d7d1fdb654b70ea0b731fd94"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool gmx::BiasParams::convolveForce</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>True if we convolve the force, false means use MC between umbrellas. </p>

</div>
</div>
<a class="anchor" id="a965ae2f09870d182640a794edb091b28"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int gmx::BiasParams::eTarget</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Type of target distribution. </p>

</div>
</div>
<a class="anchor" id="a4baa0d2030d45f652466cc1359c51f19"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const double gmx::BiasParams::freeEnergyCutoffInKT</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Free energy cut-off in kT for cut-off target distribution. </p>

</div>
</div>
<a class="anchor" id="afb2dc471a03d8f74ec34f583910abd2a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const bool gmx::BiasParams::idealWeighthistUpdate</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Update reference weighthistogram using the target distribution? Otherwise use the realized distribution. </p>

</div>
</div>
<a class="anchor" id="a02989e074db5ea72610213d74f165c58"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const double gmx::BiasParams::initialErrorInKT</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Estimated initial free energy error in kT. </p>

</div>
</div>
<a class="anchor" id="ad746093d79df33a26e18542efc5ea8df"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const double gmx::BiasParams::initialHistogramSize</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initial reference weight histogram size. </p>

</div>
</div>
<a class="anchor" id="afada61a4e15bafed5aa2a02978e8b55b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const double gmx::BiasParams::localWeightScaling</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Scaling factor applied to a sample before adding it to the reference weight histogram (= 1, usually). </p>

</div>
</div>
<a class="anchor" id="a4b39cb074a0f31413b639771a011b9d2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int gmx::BiasParams::numSamplesUpdateFreeEnergy_</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Number of samples per free energy update. </p>

</div>
</div>
<a class="anchor" id="a3d7cb956ee559bec39af2ffddf044a96"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const double gmx::BiasParams::temperatureScaleFactor</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Temperature scaling factor for temperature scaled targed distributions. </p>

</div>
</div>
<a class="anchor" id="a0592d5d3d02e79af3d0cd4ee7346a981"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const double gmx::BiasParams::updateWeight</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The probability weight accumulated for each update. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/awh/<a class="el" href="biasparams_8h.xhtml">biasparams.h</a></li>
<li>src/gromacs/awh/<a class="el" href="biasparams_8cpp.xhtml">biasparams.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:27 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

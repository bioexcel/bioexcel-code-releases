<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/simd/simd.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_8a21c46af9718d1f610eb513153099d7.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a46192700e9e8ed44c648f0a55ee9a53.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_32d26fbaf0abd8bf4548e7cba9bbcf59.xhtml">simd</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">simd.h File Reference<div class="ingroups"><a class="el" href="group__group__libraryapi.xhtml">Library API</a> &#124; <a class="el" href="group__module__simd.xhtml">SIMD intrinsics interface (simd)</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;config.h&quot;</code><br/>
<code>#include &lt;cstddef&gt;</code><br/>
<code>#include &lt;cstdint&gt;</code><br/>
<code>#include &lt;array&gt;</code><br/>
<code>#include &quot;<a class="el" href="classhelpers_8h.xhtml">gromacs/utility/classhelpers.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="real_8h.xhtml">gromacs/utility/real.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="impl__reference_8h.xhtml">impl_reference/impl_reference.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="scalar_8h.xhtml">gromacs/simd/scalar/scalar.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="scalar__math_8h.xhtml">gromacs/simd/scalar/scalar_math.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="scalar__util_8h.xhtml">gromacs/simd/scalar/scalar_util.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="simd__memory_8h.xhtml">gromacs/simd/simd_memory.h</a>&quot;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for simd.h:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="simd_8h__incl.svg" width="3367" height="559"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><div class="textblock"><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> This graph shows which files directly or indirectly include this file:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="simd_8h__dep__incl.svg" width="2066" height="216"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Definitions, capabilities, and wrappers for SIMD module. </p>
<p>The macros in this file are intended to be used for writing architecture-independent SIMD intrinsics code. To support a new architecture, adding a new sub-include with macros here should be (nearly) all that is needed.</p>
<p>The defines in this top-level file will set default Gromacs real precision operations to either single or double precision based on whether GMX_DOUBLE is 1. The actual implementation - including e.g. conversion operations specifically between single and double - is documented in <a class="el" href="impl__reference_8h.xhtml" title="Reference SIMD implementation, including SIMD documentation. ">impl_reference.h</a>.</p>
<dl class="section author"><dt>Author</dt><dd>Erik Lindahl <a href="#" onclick="location.href='mai'+'lto:'+'eri'+'k.'+'lin'+'da'+'hl@'+'sc'+'ili'+'fe'+'lab'+'.s'+'e'; return false;">erik.<span style="display: none;">.nosp@m.</span>lind<span style="display: none;">.nosp@m.</span>ahl@s<span style="display: none;">.nosp@m.</span>cili<span style="display: none;">.nosp@m.</span>felab<span style="display: none;">.nosp@m.</span>.se</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
SIMD data types</h2></td></tr>
<tr><td class="ititle" colspan="2"><p><a class="anchor" id="amgrp5429a761b097c74da542c11971a50054"></a> The actual storage of these types is implementation dependent. The documentation is generated from the reference implementation, but for normal usage this will likely not be what you are using. </p>
</td></tr>
<tr class="memitem:a8591d5e5ac6d1bec936a013fdc41b904"><td class="memItemLeft" align="right" valign="top">typedef SimdFloat&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a8591d5e5ac6d1bec936a013fdc41b904">gmx::SimdReal</a></td></tr>
<tr class="memdesc:a8591d5e5ac6d1bec936a013fdc41b904"><td class="mdescLeft">&#160;</td><td class="mdescRight">Real precision floating-point SIMD datatype.  <a href="#a8591d5e5ac6d1bec936a013fdc41b904">More...</a><br/></td></tr>
<tr class="separator:a8591d5e5ac6d1bec936a013fdc41b904"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a307172d59a1a7c9ed87bc2cb4df83efa"><td class="memItemLeft" align="right" valign="top">typedef SimdFBool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a307172d59a1a7c9ed87bc2cb4df83efa">gmx::SimdBool</a></td></tr>
<tr class="memdesc:a307172d59a1a7c9ed87bc2cb4df83efa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Boolean SIMD type for usage with <a class="el" href="namespacegmx.xhtml#a8591d5e5ac6d1bec936a013fdc41b904">SimdReal</a>.  <a href="#a307172d59a1a7c9ed87bc2cb4df83efa">More...</a><br/></td></tr>
<tr class="separator:a307172d59a1a7c9ed87bc2cb4df83efa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6598cea23dd103ce19bff4743279e3bc"><td class="memItemLeft" align="right" valign="top">typedef SimdFInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a6598cea23dd103ce19bff4743279e3bc">gmx::SimdInt32</a></td></tr>
<tr class="memdesc:a6598cea23dd103ce19bff4743279e3bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">32-bit integer SIMD type.  <a href="#a6598cea23dd103ce19bff4743279e3bc">More...</a><br/></td></tr>
<tr class="separator:a6598cea23dd103ce19bff4743279e3bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e12584989a27abf28198dc8a709d604"><td class="memItemLeft" align="right" valign="top">typedef SimdFIBool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a5e12584989a27abf28198dc8a709d604">gmx::SimdIBool</a></td></tr>
<tr class="memdesc:a5e12584989a27abf28198dc8a709d604"><td class="mdescLeft">&#160;</td><td class="mdescRight">Boolean SIMD type for usage with <a class="el" href="namespacegmx.xhtml#a6598cea23dd103ce19bff4743279e3bc">SimdInt32</a>.  <a href="#a5e12584989a27abf28198dc8a709d604">More...</a><br/></td></tr>
<tr class="separator:a5e12584989a27abf28198dc8a709d604"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37686b0c2ec48a361d6c4473c1fdb70c"><td class="memItemLeft" align="right" valign="top">typedef Simd4Float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a37686b0c2ec48a361d6c4473c1fdb70c">gmx::Simd4Real</a></td></tr>
<tr class="memdesc:a37686b0c2ec48a361d6c4473c1fdb70c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Real precision floating-point SIMD4 datatype.  <a href="#a37686b0c2ec48a361d6c4473c1fdb70c">More...</a><br/></td></tr>
<tr class="separator:a37686b0c2ec48a361d6c4473c1fdb70c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb6a84be080be397c2c09cda9f315037"><td class="memItemLeft" align="right" valign="top">typedef Simd4FBool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#acb6a84be080be397c2c09cda9f315037">gmx::Simd4Bool</a></td></tr>
<tr class="memdesc:acb6a84be080be397c2c09cda9f315037"><td class="mdescLeft">&#160;</td><td class="mdescRight">Boolean SIMD4 type for usage with <a class="el" href="namespacegmx.xhtml#a8591d5e5ac6d1bec936a013fdc41b904">SimdReal</a>.  <a href="#acb6a84be080be397c2c09cda9f315037">More...</a><br/></td></tr>
<tr class="separator:acb6a84be080be397c2c09cda9f315037"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8eebcb368cafe13131f39ffd69130e0b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8eebcb368cafe13131f39ffd69130e0b"></a>
const int&#160;</td><td class="memItemRight" valign="bottom"><b>gmx::c_simdBestPairAlignment</b> = c_simdBestPairAlignmentFloat</td></tr>
<tr class="separator:a8eebcb368cafe13131f39ffd69130e0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
High-level SIMD proxy objects to disambiguate load/set operations</h2></td></tr>
<tr class="memitem:a5a32ff26e38f94fdffdc253d1a871ca4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5a32ff26e38f94fdffdc253d1a871ca4"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>GMX_SIMD_HAVE_4NSIMD_UTIL_FLOAT</b>&#160;&#160;&#160;<a class="el" href="group__module__simd.xhtml#gacf774b2a886d1ed4149f825c50c8fec2">GMX_SIMD_HAVE_LOADU</a></td></tr>
<tr class="separator:a5a32ff26e38f94fdffdc253d1a871ca4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5152f217d6a08cecee7f44b011865d7"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac5152f217d6a08cecee7f44b011865d7"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>GMX_SIMD4N_FLOAT_WIDTH</b>&#160;&#160;&#160;<a class="el" href="group__module__simd.xhtml#gafdbf804a40bfa3dcb15bc50055e58e74">GMX_SIMD_FLOAT_WIDTH</a></td></tr>
<tr class="separator:ac5152f217d6a08cecee7f44b011865d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad27c7840e17aec417f07c73362efb87d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad27c7840e17aec417f07c73362efb87d"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>GMX_SIMD_HAVE_4NSIMD_UTIL_DOUBLE</b>&#160;&#160;&#160;<a class="el" href="group__module__simd.xhtml#gacf774b2a886d1ed4149f825c50c8fec2">GMX_SIMD_HAVE_LOADU</a></td></tr>
<tr class="separator:ad27c7840e17aec417f07c73362efb87d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3995bdc818f73733dbcd4f5b5f71d37a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3995bdc818f73733dbcd4f5b5f71d37a"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>GMX_SIMD4N_DOUBLE_WIDTH</b>&#160;&#160;&#160;<a class="el" href="group__module__simd.xhtml#ga417e9d28b6310876bb2c69eb528c0a86">GMX_SIMD_DOUBLE_WIDTH</a></td></tr>
<tr class="separator:a3995bdc818f73733dbcd4f5b5f71d37a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a4e00d8bf8551a9f61c5f68656f1270"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8a4e00d8bf8551a9f61c5f68656f1270"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>GMX_SIMD_HAVE_4NSIMD_UTIL_REAL</b>&#160;&#160;&#160;<a class="el" href="group__module__simd.xhtml#ga5a32ff26e38f94fdffdc253d1a871ca4">GMX_SIMD_HAVE_4NSIMD_UTIL_FLOAT</a></td></tr>
<tr class="separator:a8a4e00d8bf8551a9f61c5f68656f1270"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a189844f1c8b104833734513c2ae480a9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a189844f1c8b104833734513c2ae480a9"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>GMX_SIMD4N_REAL_WIDTH</b>&#160;&#160;&#160;GMX_SIMD4N_FLOAT_WIDTH</td></tr>
<tr class="separator:a189844f1c8b104833734513c2ae480a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e2d06152cf299753d6046f0d76b8496"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1e2d06152cf299753d6046f0d76b8496"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>gmx::Simd4NFloat</b> = SimdFloat</td></tr>
<tr class="separator:a1e2d06152cf299753d6046f0d76b8496"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a781e60259284e0496bbea24eda24117d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a781e60259284e0496bbea24eda24117d"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>gmx::Simd4NDouble</b> = SimdDouble</td></tr>
<tr class="separator:a781e60259284e0496bbea24eda24117d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bfcaeb60dd544d31c8af564b06f145e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1bfcaeb60dd544d31c8af564b06f145e"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>gmx::Simd4NReal</b> = Simd4NFloat</td></tr>
<tr class="separator:a1bfcaeb60dd544d31c8af564b06f145e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8783c95126ea5762fe5bbfeddbf36206"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a8783c95126ea5762fe5bbfeddbf36206"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a8783c95126ea5762fe5bbfeddbf36206">gmx::load</a> (const typename internal::SimdTraits&lt; T &gt;::type *m)</td></tr>
<tr class="memdesc:a8783c95126ea5762fe5bbfeddbf36206"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load function that returns SIMD or scalar.  <a href="#a8783c95126ea5762fe5bbfeddbf36206">More...</a><br/></td></tr>
<tr class="separator:a8783c95126ea5762fe5bbfeddbf36206"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d539f70c7a30bf16935cf83232f2b59"><td class="memTemplParams" colspan="2"><a class="anchor" id="a8d539f70c7a30bf16935cf83232f2b59"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:a8d539f70c7a30bf16935cf83232f2b59"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><b>gmx::load</b> (const typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value, T &gt;::type *m)</td></tr>
<tr class="separator:a8d539f70c7a30bf16935cf83232f2b59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50196c7d69f552f73c7cff18a0b6a178"><td class="memTemplParams" colspan="2"><a class="anchor" id="a50196c7d69f552f73c7cff18a0b6a178"></a>
template&lt;typename T , size_t N&gt; </td></tr>
<tr class="memitem:a50196c7d69f552f73c7cff18a0b6a178"><td class="memTemplItemLeft" align="right" valign="top">static T gmx_simdcall&#160;</td><td class="memTemplItemRight" valign="bottom"><b>gmx::load</b> (const AlignedArray&lt; typename internal::SimdTraits&lt; T &gt;::type, N &gt; &amp;m)</td></tr>
<tr class="separator:a50196c7d69f552f73c7cff18a0b6a178"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac241ee0251cb49d8b1753407e8fda2c4"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ac241ee0251cb49d8b1753407e8fda2c4"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#ac241ee0251cb49d8b1753407e8fda2c4">gmx::loadU</a> (const typename internal::SimdTraits&lt; T &gt;::type *m)</td></tr>
<tr class="memdesc:ac241ee0251cb49d8b1753407e8fda2c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load function that returns SIMD or scalar based on template argument.  <a href="#ac241ee0251cb49d8b1753407e8fda2c4">More...</a><br/></td></tr>
<tr class="separator:ac241ee0251cb49d8b1753407e8fda2c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11d048ddfb192915003efd8f23c77de7"><td class="memTemplParams" colspan="2"><a class="anchor" id="a11d048ddfb192915003efd8f23c77de7"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:a11d048ddfb192915003efd8f23c77de7"><td class="memTemplItemLeft" align="right" valign="top">static T&#160;</td><td class="memTemplItemRight" valign="bottom"><b>gmx::loadU</b> (const typename std::enable_if&lt; std::is_arithmetic&lt; T &gt;::value, T &gt;::type *m)</td></tr>
<tr class="separator:a11d048ddfb192915003efd8f23c77de7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74df9081b339748d0aa9ebd5b78d66ca"><td class="memTemplParams" colspan="2"><a class="anchor" id="a74df9081b339748d0aa9ebd5b78d66ca"></a>
template&lt;typename T , size_t N&gt; </td></tr>
<tr class="memitem:a74df9081b339748d0aa9ebd5b78d66ca"><td class="memTemplItemLeft" align="right" valign="top">static T gmx_simdcall&#160;</td><td class="memTemplItemRight" valign="bottom"><b>gmx::loadU</b> (const AlignedArray&lt; typename internal::SimdTraits&lt; T &gt;::type, N &gt; &amp;m)</td></tr>
<tr class="separator:a74df9081b339748d0aa9ebd5b78d66ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b9689c4629a14843a0464a0053c8e9e"><td class="memItemLeft" align="right" valign="top">static const <br class="typebreak"/>
SimdSetZeroProxyInternal <br class="typebreak"/>
gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a1b9689c4629a14843a0464a0053c8e9e">gmx::setZero</a> ()</td></tr>
<tr class="memdesc:a1b9689c4629a14843a0464a0053c8e9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Proxy object to set any SIMD or scalar variable to zero.  <a href="#a1b9689c4629a14843a0464a0053c8e9e">More...</a><br/></td></tr>
<tr class="separator:a1b9689c4629a14843a0464a0053c8e9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd9d916eb98b39ab81aa0773cfedb547"><td class="memTemplParams" colspan="2"><a class="anchor" id="acd9d916eb98b39ab81aa0773cfedb547"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:acd9d916eb98b39ab81aa0773cfedb547"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><b>gmx::load</b> (const typename internal::Simd4Traits&lt; T &gt;::type *m)</td></tr>
<tr class="separator:acd9d916eb98b39ab81aa0773cfedb547"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bf0525da09ca0e0d24214431bf7ebab"><td class="memTemplParams" colspan="2"><a class="anchor" id="a5bf0525da09ca0e0d24214431bf7ebab"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:a5bf0525da09ca0e0d24214431bf7ebab"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><b>gmx::loadU</b> (const typename internal::Simd4Traits&lt; T &gt;::type *m)</td></tr>
<tr class="separator:a5bf0525da09ca0e0d24214431bf7ebab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85540ec7b6a258c84456a4fc426da401"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a85540ec7b6a258c84456a4fc426da401"></a>
static Simd4NFloat gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><b>gmx::loadUNDuplicate4</b> (const float *f)</td></tr>
<tr class="separator:a85540ec7b6a258c84456a4fc426da401"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bb6f1e384d91021f356dd696f538d14"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2bb6f1e384d91021f356dd696f538d14"></a>
static Simd4NFloat gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><b>gmx::load4DuplicateN</b> (const float *f)</td></tr>
<tr class="separator:a2bb6f1e384d91021f356dd696f538d14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9305776a0e1a6757b8a2dbe0b4c9eb38"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9305776a0e1a6757b8a2dbe0b4c9eb38"></a>
static Simd4NFloat gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><b>gmx::loadU4NOffset</b> (const float *f, int)</td></tr>
<tr class="separator:a9305776a0e1a6757b8a2dbe0b4c9eb38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4972180b2af1301ee04efb61b1d0b58c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4972180b2af1301ee04efb61b1d0b58c"></a>
static Simd4NDouble gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><b>gmx::loadUNDuplicate4</b> (const double *f)</td></tr>
<tr class="separator:a4972180b2af1301ee04efb61b1d0b58c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc754c4d654ec192a8b8d545eb805fec"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adc754c4d654ec192a8b8d545eb805fec"></a>
static Simd4NDouble gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><b>gmx::load4DuplicateN</b> (const double *f)</td></tr>
<tr class="separator:adc754c4d654ec192a8b8d545eb805fec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ae133bdb2c6ef811f3d872ccb30dae2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1ae133bdb2c6ef811f3d872ccb30dae2"></a>
static Simd4NDouble gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><b>gmx::loadU4NOffset</b> (const double *f, int)</td></tr>
<tr class="separator:a1ae133bdb2c6ef811f3d872ccb30dae2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1SimdFloatTag.xhtml">gmx::SimdFloatTag</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tag type to select to load <a class="el" href="classgmx_1_1SimdFloat.xhtml" title="Float SIMD variable. Available if GMX_SIMD_HAVE_FLOAT is 1. ">SimdFloat</a> with simdLoad(U)  <a href="structgmx_1_1SimdFloatTag.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1SimdDoubleTag.xhtml">gmx::SimdDoubleTag</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tag type to select to load <a class="el" href="classgmx_1_1SimdDouble.xhtml" title="Double SIMD variable. Available if GMX_SIMD_HAVE_DOUBLE is 1. ">SimdDouble</a> with simdLoad(U)  <a href="structgmx_1_1SimdDoubleTag.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1SimdFInt32Tag.xhtml">gmx::SimdFInt32Tag</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tag type to select to load <a class="el" href="classgmx_1_1SimdFInt32.xhtml" title="Integer SIMD variable type to use for conversions to/from float. ">SimdFInt32</a> with simdLoad(U)  <a href="structgmx_1_1SimdFInt32Tag.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1SimdDInt32Tag.xhtml">gmx::SimdDInt32Tag</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tag type to select to load <a class="el" href="classgmx_1_1SimdDInt32.xhtml" title="Integer SIMD variable type to use for conversions to/from double. ">SimdDInt32</a> with simdLoad(U)  <a href="structgmx_1_1SimdDInt32Tag.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1AlignedArray_3_01float_00_01N_01_4.xhtml">gmx::AlignedArray&lt; float, N &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identical to std::array with GMX_SIMD_FLOAT_WIDTH alignment. Should not be deleted through base pointer (destructor is non-virtual).  <a href="structgmx_1_1AlignedArray_3_01float_00_01N_01_4.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1AlignedArray_3_01double_00_01N_01_4.xhtml">gmx::AlignedArray&lt; double, N &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identical to std::array with GMX_SIMD_DOUBLE_WIDTH alignment. Should not be deleted through base pointer (destructor is non-virtual).  <a href="structgmx_1_1AlignedArray_3_01double_00_01N_01_4.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1internal_1_1SimdTraits.xhtml">gmx::internal::SimdTraits&lt; T &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simd traits.  <a href="structgmx_1_1internal_1_1SimdTraits.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SimdSetZeroProxyInternal.xhtml">gmx::SimdSetZeroProxyInternal</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Proxy object to enable <a class="el" href="classgmx_1_1SimdSetZeroProxyInternal.xhtml#af71c09938a422089a14ddbbf50defeee" title="Proxy object to set any SIMD or scalar variable to zero. ">setZero()</a> for SIMD and real types.  <a href="classgmx_1_1SimdSetZeroProxyInternal.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">SIMD predefined macros to describe high-level capabilities</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>These macros are used to describe the features available in default Gromacs real precision. They are set from the lower-level implementation files that have macros describing single and double precision individually, as well as the implementation details. </p>
</div></td></tr>
<tr class="memitem:ga1578fccdb327f36a2bea338457cbf883"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga1578fccdb327f36a2bea338457cbf883">GMX_SIMD_HAVE_REAL</a>&#160;&#160;&#160;<a class="el" href="group__module__simd.xhtml#ga8d093280bad2b3ebecbcd426bdddb73b">GMX_SIMD_HAVE_FLOAT</a></td></tr>
<tr class="memdesc:ga1578fccdb327f36a2bea338457cbf883"><td class="mdescLeft">&#160;</td><td class="mdescRight">1 if SimdReal is available, otherwise 0.  <a href="group__module__simd.xhtml#ga1578fccdb327f36a2bea338457cbf883">More...</a><br/></td></tr>
<tr class="separator:ga1578fccdb327f36a2bea338457cbf883"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga586ccc19c21a1d5e9c97e15b70822fba"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga586ccc19c21a1d5e9c97e15b70822fba">GMX_SIMD_REAL_WIDTH</a>&#160;&#160;&#160;<a class="el" href="group__module__simd.xhtml#gafdbf804a40bfa3dcb15bc50055e58e74">GMX_SIMD_FLOAT_WIDTH</a></td></tr>
<tr class="memdesc:ga586ccc19c21a1d5e9c97e15b70822fba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Width of SimdReal.  <a href="group__module__simd.xhtml#ga586ccc19c21a1d5e9c97e15b70822fba">More...</a><br/></td></tr>
<tr class="separator:ga586ccc19c21a1d5e9c97e15b70822fba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga036e9a3893a355aa51267fef7b5d4cae"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga036e9a3893a355aa51267fef7b5d4cae">GMX_SIMD_HAVE_INT32_EXTRACT</a>&#160;&#160;&#160;<a class="el" href="group__module__simd.xhtml#ga23ac53a0050467ac215f146f6afc6380">GMX_SIMD_HAVE_FINT32_EXTRACT</a></td></tr>
<tr class="memdesc:ga036e9a3893a355aa51267fef7b5d4cae"><td class="mdescLeft">&#160;</td><td class="mdescRight">1 if support is available for extracting elements from SimdInt32, otherwise 0  <a href="group__module__simd.xhtml#ga036e9a3893a355aa51267fef7b5d4cae">More...</a><br/></td></tr>
<tr class="separator:ga036e9a3893a355aa51267fef7b5d4cae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga69de9b6e1473a9dc3ab6a5588d00192a"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga69de9b6e1473a9dc3ab6a5588d00192a">GMX_SIMD_HAVE_INT32_LOGICAL</a>&#160;&#160;&#160;<a class="el" href="group__module__simd.xhtml#ga354867d2570fecb6b341047947bee0d1">GMX_SIMD_HAVE_FINT32_LOGICAL</a></td></tr>
<tr class="memdesc:ga69de9b6e1473a9dc3ab6a5588d00192a"><td class="mdescLeft">&#160;</td><td class="mdescRight">1 if logical ops are supported on SimdInt32, otherwise 0.  <a href="group__module__simd.xhtml#ga69de9b6e1473a9dc3ab6a5588d00192a">More...</a><br/></td></tr>
<tr class="separator:ga69de9b6e1473a9dc3ab6a5588d00192a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8a9534860edf5a3f2b9cd1bc60529b39"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga8a9534860edf5a3f2b9cd1bc60529b39">GMX_SIMD_HAVE_INT32_ARITHMETICS</a>&#160;&#160;&#160;<a class="el" href="group__module__simd.xhtml#ga9febc62e1abd58eb8a035b8b81f93292">GMX_SIMD_HAVE_FINT32_ARITHMETICS</a></td></tr>
<tr class="memdesc:ga8a9534860edf5a3f2b9cd1bc60529b39"><td class="mdescLeft">&#160;</td><td class="mdescRight">1 if arithmetic ops are supported on SimdInt32, otherwise 0.  <a href="group__module__simd.xhtml#ga8a9534860edf5a3f2b9cd1bc60529b39">More...</a><br/></td></tr>
<tr class="separator:ga8a9534860edf5a3f2b9cd1bc60529b39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad1350cf295aeed5d4fce461ca2048c56"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#gad1350cf295aeed5d4fce461ca2048c56">GMX_SIMD_HAVE_GATHER_LOADU_BYSIMDINT_TRANSPOSE_REAL</a>&#160;&#160;&#160;<a class="el" href="group__module__simd.xhtml#ga5ba6c684641af238fb2a5a7d4c6e0237">GMX_SIMD_HAVE_GATHER_LOADU_BYSIMDINT_TRANSPOSE_FLOAT</a></td></tr>
<tr class="memdesc:gad1350cf295aeed5d4fce461ca2048c56"><td class="mdescLeft">&#160;</td><td class="mdescRight">1 if gmx::simdGatherLoadUBySimdIntTranspose is present, otherwise 0  <a href="group__module__simd.xhtml#gad1350cf295aeed5d4fce461ca2048c56">More...</a><br/></td></tr>
<tr class="separator:gad1350cf295aeed5d4fce461ca2048c56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0d9f8d6284ecbbd135b89f2ad8999839"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga0d9f8d6284ecbbd135b89f2ad8999839">GMX_SIMD_HAVE_HSIMD_UTIL_REAL</a>&#160;&#160;&#160;<a class="el" href="group__module__simd.xhtml#gac40bf3261e36fb7ff022e8ab37b04fcf">GMX_SIMD_HAVE_HSIMD_UTIL_FLOAT</a></td></tr>
<tr class="memdesc:ga0d9f8d6284ecbbd135b89f2ad8999839"><td class="mdescLeft">&#160;</td><td class="mdescRight">1 if real half-register load/store/reduce utils present, otherwise 0  <a href="group__module__simd.xhtml#ga0d9f8d6284ecbbd135b89f2ad8999839">More...</a><br/></td></tr>
<tr class="separator:ga0d9f8d6284ecbbd135b89f2ad8999839"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6c015b9c619e63324df85f91e25191c5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga6c015b9c619e63324df85f91e25191c5">GMX_SIMD4_HAVE_REAL</a>&#160;&#160;&#160;<a class="el" href="group__module__simd.xhtml#ga86b316f5c5de088d4cb073300198f4d3">GMX_SIMD4_HAVE_FLOAT</a></td></tr>
<tr class="memdesc:ga6c015b9c619e63324df85f91e25191c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">1 if Simd4Real is available, otherwise 0.  <a href="group__module__simd.xhtml#ga6c015b9c619e63324df85f91e25191c5">More...</a><br/></td></tr>
<tr class="separator:ga6c015b9c619e63324df85f91e25191c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a9f58ab34a077d84e7cef974919e2d01f"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="simd_8h.xhtml#a9f58ab34a077d84e7cef974919e2d01f">isSimdAligned</a> (const float *ptr)</td></tr>
<tr class="memdesc:a9f58ab34a077d84e7cef974919e2d01f"><td class="mdescLeft">&#160;</td><td class="mdescRight">end of condition libapi  <a href="#a9f58ab34a077d84e7cef974919e2d01f">More...</a><br/></td></tr>
<tr class="separator:a9f58ab34a077d84e7cef974919e2d01f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a664965c682fd4510b51f33b2528fe272"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="simd_8h.xhtml#a664965c682fd4510b51f33b2528fe272">isSimdAligned</a> (const double *ptr)</td></tr>
<tr class="memdesc:a664965c682fd4510b51f33b2528fe272"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether a pointer to double is aligned to a SIMD boundary.  <a href="#a664965c682fd4510b51f33b2528fe272">More...</a><br/></td></tr>
<tr class="separator:a664965c682fd4510b51f33b2528fe272"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a9f58ab34a077d84e7cef974919e2d01f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool isSimdAligned </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>end of condition libapi </p>
<p>Returns whether a pointer to float is aligned to a SIMD boundary</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ptr</td><td>A pointer to a float </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a664965c682fd4510b51f33b2528fe272"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool isSimdAligned </td>
          <td>(</td>
          <td class="paramtype">const double *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns whether a pointer to double is aligned to a SIMD boundary. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ptr</td><td>A pointer to a double </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:18 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

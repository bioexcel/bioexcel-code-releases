<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: Extensible Handling of Options (options)</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a> &#124;
<a href="#dirs">Directories</a> &#124;
<a href="#files">Files</a>  </div>
  <div class="headertitle">
<div class="title">Extensible Handling of Options (options)<div class="ingroups"><a class="el" href="group__group__utilitymodules.xhtml">Utility Modules</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for Extensible Handling of Options (options):</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<center><table><tr><td><div class="center"><iframe scrolling="no" frameborder="0" src="group__module__options.svg" width="632" height="755"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</td></tr></table></center>
</div>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<p>Provides functionality for handling options. </p>
<h3>Basic Use</h3>
<p>Code that provides options does so using methods in <a class="el" href="classgmx_1_1IOptionsContainer.xhtml" title="Interface for adding input options. ">gmx::IOptionsContainer</a> and classes defined in <a class="el" href="basicoptions_8h.xhtml" title="Declares option objects for basic option types. ">basicoptions.h</a>. Only these are needed if a class wants to provide a set of standard options (other modules can provide additional option types, such as <a class="el" href="classgmx_1_1SelectionOption.xhtml" title="Specifies an option that provides selection(s). ">gmx::SelectionOption</a>). For each option, the caller provides an output variable that will receive the final value of the option once user input has been parsed. When adding options, it is possible to also provide descriptions for the options for use in generated help text.</p>
<p>Generic code that handles the user input does so by creating a <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">gmx::Options</a> instance and passing it (as <a class="el" href="classgmx_1_1IOptionsContainer.xhtml" title="Interface for adding input options. ">gmx::IOptionsContainer</a>) to the classes that add the actual options. It can then use a parser to set values to the options. Final values for the options can be inspected in the code that added the individual options, from the provided output variables.</p>
<p>The sequence charts below provides an overview of how the options work from usage perspective. They include two fictional modules, A and B, that provide options, and a main routine that manages these. The first chart shows a typical initialization sequence, where the main routine creates an options object, and calls an <a class="el" href="namespaceanonymous__namespace_02cmdlinerunner_8cpp_03.xhtml#a60534e7c72d5738ccd2a45dec4d87882" title="Initializes options for help testing. ">initOptions()</a> method in each module that can provide options (the modules may also request their submodules to add their own options). Each module uses <a class="el" href="classgmx_1_1IOptionsContainer.xhtml#a24e2aea4956eadf7dc78dc4a75fb5a63" title="Adds a recognized option. ">gmx::IOptionsContainer::addOption()</a> to add the options they require, and specify output variables into which the options values are stored. </p>
<div align="center">
<img src="msc_inline_mscgraph_1.png" alt="msc_inline_mscgraph_1" border="0" usemap="#msc_inline_mscgraph_1.map"/>
<map name="msc_inline_mscgraph_1.map" id="msc_inline_mscgraph_1.map"><area href="classgmx_1_1Options.xhtml" shape="rect" coords="200,7,250,20" alt=""/>
<area href="classgmx_1_1Options.xhtml#a488515445eb8fd101a43b1903e64bdbf" shape="rect" coords="130,58,170,71" alt=""/>
<area href="classgmx_1_1IOptionsContainer.xhtml#a24e2aea4956eadf7dc78dc4a75fb5a63" shape="rect" coords="262,122,338,135" alt=""/>
<area href="classgmx_1_1IOptionsContainer.xhtml#a24e2aea4956eadf7dc78dc4a75fb5a63" shape="rect" coords="337,237,413,250" alt=""/>
</map>
</div>
<p>After all options have been specified, they can be parsed. A parser splits the input into option-value pairs (one option may have multiple values), and passes these into the <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">gmx::Options</a> object, which is responsible for converting them into the appropriate types and storing the values into the variables provided in the calls to <a class="el" href="classgmx_1_1IOptionsContainer.xhtml#a24e2aea4956eadf7dc78dc4a75fb5a63" title="Adds a recognized option. ">gmx::IOptionsContainer::addOption()</a>. </p>
<div align="center">
<img src="msc_inline_mscgraph_2.png" alt="msc_inline_mscgraph_2" border="0" usemap="#msc_inline_mscgraph_2.map"/>
<map name="msc_inline_mscgraph_2.map" id="msc_inline_mscgraph_2.map"><area href="classgmx_1_1Options.xhtml" shape="rect" coords="275,7,325,20" alt=""/>
</map>
</div>
<p>After all options have been parsed (possibly using multiple different parsers), <a class="el" href="classgmx_1_1Options.xhtml#a3316f3681c71daa04098696d4417f2f9" title="Notifies the collection that all option values are assigned. ">gmx::Options::finish()</a> is called. This performs final validation of the options and may further adjust the values stored in the output variables (see documentation on individual option types on when this may happen). </p>
<div align="center">
<img src="msc_inline_mscgraph_3.png" alt="msc_inline_mscgraph_3" border="0" usemap="#msc_inline_mscgraph_3.map"/>
<map name="msc_inline_mscgraph_3.map" id="msc_inline_mscgraph_3.map"><area href="classgmx_1_1Options.xhtml" shape="rect" coords="200,7,250,20" alt=""/>
<area href="classgmx_1_1Options.xhtml#a3316f3681c71daa04098696d4417f2f9" shape="rect" coords="128,26,172,39" alt=""/>
</map>
</div>
<p>Module <a class="el" href="group__module__commandline.xhtml">Command Line Program Management (commandline)</a> implements classes that assign option values from command line and produce help for programs that use the command line parser.</p>
<h3>Advanced Use (in library API)</h3>
<p>It is possible to extend the module with new option types and/or parsers for option values.</p>
<p>To implement new option types, it is necessary to subclass the templates <a class="el" href="classgmx_1_1OptionTemplate.xhtml" title="Templated base class for constructing concrete option settings classes. ">OptionTemplate</a> and <a class="el" href="classgmx_1_1OptionStorageTemplate.xhtml" title="Templated base class for constructing option value storage classes. ">OptionStorageTemplate</a> with the type of the values that the option should provide as the template argument. After this is done, it is possible to add options of this new type using <a class="el" href="classgmx_1_1IOptionsContainer.xhtml#a24e2aea4956eadf7dc78dc4a75fb5a63" title="Adds a recognized option. ">IOptionsContainer::addOption()</a>.</p>
<p>To implement new parsers, one can use <a class="el" href="classgmx_1_1OptionsAssigner.xhtml" title="Decorator class for assigning values to Options. ">OptionsAssigner</a>, which provides an interface to set values in an <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a> object.</p>
<p>There is also an interface to iterate over all options in an <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a> object. One should implement the <a class="el" href="classgmx_1_1OptionsVisitor.xhtml" title="Pure interface for visiting options in a Options object. ">OptionsVisitor</a> interface, and then use <a class="el" href="classgmx_1_1OptionsIterator.xhtml" title="Decorator class for visiting options in a Options object. ">OptionsIterator</a> to apply this visitor to the <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a> object.</p>
<dl class="section author"><dt>Author</dt><dd>Teemu Murtola <a href="#" onclick="location.href='mai'+'lto:'+'tee'+'mu'+'.mu'+'rt'+'ola'+'@g'+'mai'+'l.'+'com'; return false;">teemu<span style="display: none;">.nosp@m.</span>.mur<span style="display: none;">.nosp@m.</span>tola@<span style="display: none;">.nosp@m.</span>gmai<span style="display: none;">.nosp@m.</span>l.com</a> </dd></dl>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractOption.xhtml">gmx::AbstractOption</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract base class for specifying option properties.  <a href="classgmx_1_1AbstractOption.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionTemplate.xhtml">gmx::OptionTemplate&lt; T, U &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Templated base class for constructing concrete option settings classes.  <a href="classgmx_1_1OptionTemplate.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionInfo.xhtml">gmx::OptionInfo</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives information and allows modifications to an option after creation.  <a href="classgmx_1_1OptionInfo.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractOptionStorage.xhtml">gmx::AbstractOptionStorage</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract base class for converting, validating, and storing option values.  <a href="classgmx_1_1AbstractOptionStorage.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractOptionSection.xhtml">gmx::AbstractOptionSection</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for specifying option section properties.  <a href="classgmx_1_1AbstractOptionSection.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1AbstractOptionSectionHandle.xhtml">gmx::AbstractOptionSectionHandle</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for handles to option sections.  <a href="classgmx_1_1AbstractOptionSectionHandle.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BooleanOption.xhtml">gmx::BooleanOption</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies an option that provides boolean values.  <a href="classgmx_1_1BooleanOption.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1IntegerOption.xhtml">gmx::IntegerOption</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies an option that provides integer values.  <a href="classgmx_1_1IntegerOption.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Int64Option.xhtml">gmx::Int64Option</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies an option that provides 64-bit integer values.  <a href="classgmx_1_1Int64Option.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1DoubleOption.xhtml">gmx::DoubleOption</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies an option that provides floating-point (double) values.  <a href="classgmx_1_1DoubleOption.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FloatOption.xhtml">gmx::FloatOption</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies an option that provides floating-point (float) values.  <a href="classgmx_1_1FloatOption.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1StringOption.xhtml">gmx::StringOption</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies an option that provides string values.  <a href="classgmx_1_1StringOption.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1EnumIndexStore.xhtml">gmx::internal::EnumIndexStore&lt; EnumType &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type-specific implementation for <a class="el" href="classgmx_1_1IOptionValueStore.xhtml" title="Represents the final storage location of option values. ">IOptionValueStore</a> for an enum option.  <a href="classgmx_1_1internal_1_1EnumIndexStore.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1EnumOption.xhtml">gmx::EnumOption&lt; EnumType &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies an option that accepts enumerated string values and writes the selected index into an <code>enum</code> variable.  <a href="classgmx_1_1EnumOption.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BooleanOptionInfo.xhtml">gmx::BooleanOptionInfo</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wrapper class for accessing boolean option information.  <a href="classgmx_1_1BooleanOptionInfo.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1IntegerOptionInfo.xhtml">gmx::IntegerOptionInfo</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wrapper class for accessing integer option information.  <a href="classgmx_1_1IntegerOptionInfo.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Int64OptionInfo.xhtml">gmx::Int64OptionInfo</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wrapper class for accessing 64-bit integer option information.  <a href="classgmx_1_1Int64OptionInfo.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1DoubleOptionInfo.xhtml">gmx::DoubleOptionInfo</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wrapper class for accessing floating-point option information.  <a href="classgmx_1_1DoubleOptionInfo.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FloatOptionInfo.xhtml">gmx::FloatOptionInfo</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wrapper class for accessing floating-point option information.  <a href="classgmx_1_1FloatOptionInfo.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1StringOptionInfo.xhtml">gmx::StringOptionInfo</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wrapper class for accessing string option information.  <a href="classgmx_1_1StringOptionInfo.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1EnumOptionInfo.xhtml">gmx::EnumOptionInfo</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wrapper class for accessing enum option information.  <a href="classgmx_1_1EnumOptionInfo.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1BooleanOptionStorage.xhtml">gmx::BooleanOptionStorage</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts, validates, and stores boolean values.  <a href="classgmx_1_1BooleanOptionStorage.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1IntegerOptionStorage.xhtml">gmx::IntegerOptionStorage</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts, validates, and stores integer values.  <a href="classgmx_1_1IntegerOptionStorage.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Int64OptionStorage.xhtml">gmx::Int64OptionStorage</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts, validates, and stores integer values.  <a href="classgmx_1_1Int64OptionStorage.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1DoubleOptionStorage.xhtml">gmx::DoubleOptionStorage</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts, validates, and stores floating-point (double) values.  <a href="classgmx_1_1DoubleOptionStorage.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FloatOptionStorage.xhtml">gmx::FloatOptionStorage</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts, validates, and stores floating-point (float) values.  <a href="classgmx_1_1FloatOptionStorage.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1StringOptionStorage.xhtml">gmx::StringOptionStorage</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts, validates, and stores string values.  <a href="classgmx_1_1StringOptionStorage.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1EnumOptionStorage.xhtml">gmx::EnumOptionStorage</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts, validates, and stores enum values.  <a href="classgmx_1_1EnumOptionStorage.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionsBehaviorCollection.xhtml">gmx::OptionsBehaviorCollection</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Container for <a class="el" href="classgmx_1_1IOptionsBehavior.xhtml" title="Interface to provide extension points for options parsing. ">IOptionsBehavior</a> objects.  <a href="classgmx_1_1OptionsBehaviorCollection.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1anonymous__namespace_02filenameoption_8cpp_03_1_1FileTypeMapping.xhtml">gmx::anonymous_namespace{filenameoption.cpp}::FileTypeMapping</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mapping from OptionFileType to a file type in filetypes.h.  <a href="structgmx_1_1anonymous__namespace_02filenameoption_8cpp_03_1_1FileTypeMapping.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1anonymous__namespace_02filenameoption_8cpp_03_1_1FileTypeHandler.xhtml">gmx::anonymous_namespace{filenameoption.cpp}::FileTypeHandler</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handles a single file type known to <a class="el" href="classgmx_1_1FileNameOptionStorage.xhtml" title="Converts, validates, and stores file names. ">FileNameOptionStorage</a>.  <a href="classgmx_1_1anonymous__namespace_02filenameoption_8cpp_03_1_1FileTypeHandler.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FileNameOption.xhtml">gmx::FileNameOption</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies an option that provides file names.  <a href="classgmx_1_1FileNameOption.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FileNameOptionInfo.xhtml">gmx::FileNameOptionInfo</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wrapper class for accessing file name option information.  <a href="classgmx_1_1FileNameOptionInfo.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1FileNameOptionManager_1_1Impl.xhtml">gmx::FileNameOptionManager::Impl</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Private implemention class for <a class="el" href="classgmx_1_1FileNameOptionManager.xhtml" title="Handles interaction of file name options with global options. ">FileNameOptionManager</a>.  <a href="classgmx_1_1FileNameOptionManager_1_1Impl.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1IOptionsBehavior.xhtml">gmx::IOptionsBehavior</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface to provide extension points for options parsing.  <a href="classgmx_1_1IOptionsBehavior.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1IOptionsContainer.xhtml">gmx::IOptionsContainer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface for adding input options.  <a href="classgmx_1_1IOptionsContainer.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1IOptionsContainerWithSections.xhtml">gmx::IOptionsContainerWithSections</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interface for adding input options with sections.  <a href="classgmx_1_1IOptionsContainerWithSections.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1IOptionSectionStorage.xhtml">gmx::IOptionSectionStorage</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides behavior specific to a certain option section type.  <a href="classgmx_1_1IOptionSectionStorage.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1IOptionValueStore.xhtml">gmx::IOptionValueStore&lt; T &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Represents the final storage location of option values.  <a href="classgmx_1_1IOptionValueStore.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionManagerContainer.xhtml">gmx::OptionManagerContainer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Container to keep managers added with <a class="el" href="classgmx_1_1Options.xhtml#aec34346be097c2d666ff4434c4bf562e" title="Adds an option manager. ">Options::addManager()</a> and pass them to options.  <a href="classgmx_1_1OptionManagerContainer.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1OptionSectionImpl.xhtml">gmx::internal::OptionSectionImpl</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internal implementation class for storing an option section.  <a href="classgmx_1_1internal_1_1OptionSectionImpl.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1OptionSectionImpl_1_1Group.xhtml">gmx::internal::OptionSectionImpl::Group</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Describes a group of options (see <a class="el" href="classgmx_1_1Options.xhtml#a9244e7acb4e31fa96099bcd73537349a" title="Creates a subgroup of options within the current options. ">Options::addGroup()</a>).  <a href="classgmx_1_1internal_1_1OptionSectionImpl_1_1Group.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1OptionsImpl.xhtml">gmx::internal::OptionsImpl</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Private implementation class for <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a>.  <a href="classgmx_1_1internal_1_1OptionsImpl.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1IOptionManager.xhtml">gmx::IOptionManager</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for option managers.  <a href="classgmx_1_1IOptionManager.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1Options.xhtml">gmx::Options</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Collection of options.  <a href="classgmx_1_1Options.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionsAssigner.xhtml">gmx::OptionsAssigner</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decorator class for assigning values to <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a>.  <a href="classgmx_1_1OptionsAssigner.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionSection.xhtml">gmx::OptionSection</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares a simple option section.  <a href="classgmx_1_1OptionSection.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionSectionHandle.xhtml">gmx::OptionSectionHandle</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows adding options to an <a class="el" href="classgmx_1_1OptionSection.xhtml" title="Declares a simple option section. ">OptionSection</a>.  <a href="classgmx_1_1OptionSectionHandle.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionStorageTemplate.xhtml">gmx::OptionStorageTemplate&lt; T &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Templated base class for constructing option value storage classes.  <a href="classgmx_1_1OptionStorageTemplate.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionStorageTemplateSimple.xhtml">gmx::OptionStorageTemplateSimple&lt; T &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simplified option storage template for options that have one-to-one value conversion.  <a href="classgmx_1_1OptionStorageTemplateSimple.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionsVisitor.xhtml">gmx::OptionsVisitor</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pure interface for visiting options in a <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a> object.  <a href="classgmx_1_1OptionsVisitor.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionsTypeVisitor.xhtml">gmx::OptionsTypeVisitor&lt; InfoType &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract base class for visiting options of a particular type.  <a href="classgmx_1_1OptionsTypeVisitor.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionsIterator.xhtml">gmx::OptionsIterator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decorator class for visiting options in a <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a> object.  <a href="classgmx_1_1OptionsIterator.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionsModifyingVisitor.xhtml">gmx::OptionsModifyingVisitor</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pure interface for visiting options in a <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a> object, allowing modifications.  <a href="classgmx_1_1OptionsModifyingVisitor.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionsModifyingTypeVisitor.xhtml">gmx::OptionsModifyingTypeVisitor&lt; InfoType &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract base class for visiting options of a particular type, allowing modifications.  <a href="classgmx_1_1OptionsModifyingTypeVisitor.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionsModifyingIterator.xhtml">gmx::OptionsModifyingIterator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decorator class for visiting options in a <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a> object, allowing changes.  <a href="classgmx_1_1OptionsModifyingIterator.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1RepeatingOptionSection.xhtml">gmx::RepeatingOptionSection&lt; T &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares an option section that creates a structure for each instance.  <a href="classgmx_1_1RepeatingOptionSection.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1RepeatingOptionSectionStorage.xhtml">gmx::RepeatingOptionSectionStorage&lt; T &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements handling of the structures that stores per-section values.  <a href="classgmx_1_1RepeatingOptionSectionStorage.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1RepeatingOptionSectionHandle.xhtml">gmx::RepeatingOptionSectionHandle&lt; T &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows adding options to an <a class="el" href="classgmx_1_1RepeatingOptionSection.xhtml" title="Declares an option section that creates a structure for each instance. ">RepeatingOptionSection</a>.  <a href="classgmx_1_1RepeatingOptionSectionHandle.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage.xhtml">anonymous_namespace{abstractoptionstorage.cpp}::MockOptionStorage</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mock implementation of an option storage class for unit testing.  <a href="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOptionStorage.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOption.xhtml">anonymous_namespace{abstractoptionstorage.cpp}::MockOption</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies an option that has a mock storage object for unit testing.  <a href="classanonymous__namespace_02abstractoptionstorage_8cpp_03_1_1MockOption.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1anonymous__namespace_02timeunitmanager_8cpp_03_1_1TimeOptionScaler.xhtml">gmx::anonymous_namespace{timeunitmanager.cpp}::TimeOptionScaler&lt; FloatingPointOptionInfo &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Option visitor that scales time options.  <a href="classgmx_1_1anonymous__namespace_02timeunitmanager_8cpp_03_1_1TimeOptionScaler.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TimeUnitManager.xhtml">gmx::TimeUnitManager</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides common functionality for time unit conversions.  <a href="classgmx_1_1TimeUnitManager.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1TimeUnitBehavior.xhtml">gmx::TimeUnitBehavior</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a> behavior to add a time unit option.  <a href="classgmx_1_1TimeUnitBehavior.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionValueConverterSimple.xhtml">gmx::OptionValueConverterSimple&lt; OutType &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper for converting from <a class="el" href="classgmx_1_1Variant.xhtml" title="Represents a dynamically typed value of an arbitrary type. ">Variant</a> to a given type.  <a href="classgmx_1_1OptionValueConverterSimple.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1OptionValueStoreNull.xhtml">gmx::OptionValueStoreNull&lt; T &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Value storage that does not store anywhere.  <a href="classgmx_1_1OptionValueStoreNull.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:gafdd645721a8da7d18eec7f0bc84efe29"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gafdd645721a8da7d18eec7f0bc84efe29"></a>
typedef EnumOption&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__options.xhtml#gafdd645721a8da7d18eec7f0bc84efe29">gmx::EnumIntOption</a></td></tr>
<tr class="memdesc:gafdd645721a8da7d18eec7f0bc84efe29"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shorthand for an enumerated option that stores into an <code>int</code> variable. <br/></td></tr>
<tr class="separator:gafdd645721a8da7d18eec7f0bc84efe29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7552279e0ab63edd1e9324c5786e28e7"><td class="memItemLeft" align="right" valign="top">typedef FloatOption&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__options.xhtml#ga7552279e0ab63edd1e9324c5786e28e7">gmx::RealOption</a></td></tr>
<tr class="memdesc:ga7552279e0ab63edd1e9324c5786e28e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Typedef for either <a class="el" href="classgmx_1_1DoubleOption.xhtml" title="Specifies an option that provides floating-point (double) values. ">DoubleOption</a> or <a class="el" href="classgmx_1_1FloatOption.xhtml" title="Specifies an option that provides floating-point (float) values. ">FloatOption</a>, depending on precision.  <a href="#ga7552279e0ab63edd1e9324c5786e28e7">More...</a><br/></td></tr>
<tr class="separator:ga7552279e0ab63edd1e9324c5786e28e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab1c4e0b93e5d22b0c9a534f0235496f5"><td class="memItemLeft" align="right" valign="top">typedef FloatOptionInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__options.xhtml#gab1c4e0b93e5d22b0c9a534f0235496f5">gmx::RealOptionInfo</a></td></tr>
<tr class="memdesc:gab1c4e0b93e5d22b0c9a534f0235496f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Typedef for either <a class="el" href="classgmx_1_1DoubleOptionInfo.xhtml" title="Wrapper class for accessing floating-point option information. ">DoubleOptionInfo</a> or <a class="el" href="classgmx_1_1FloatOptionInfo.xhtml" title="Wrapper class for accessing floating-point option information. ">FloatOptionInfo</a>, depending on precision.  <a href="#gab1c4e0b93e5d22b0c9a534f0235496f5">More...</a><br/></td></tr>
<tr class="separator:gab1c4e0b93e5d22b0c9a534f0235496f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga89f55fd684646bb146f99a8c6c18569b"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__options.xhtml#ga89f55fd684646bb146f99a8c6c18569b">gmx::OptionFileType</a> { <br/>
&#160;&#160;<b>eftUnknown</b>, 
<b>eftTopology</b>, 
<b>eftTrajectory</b>, 
<b>eftEnergy</b>, 
<br/>
&#160;&#160;<b>eftPDB</b>, 
<b>eftIndex</b>, 
<b>eftPlot</b>, 
<b>eftGenericData</b>, 
<br/>
&#160;&#160;<b>eftOptionFileType_NR</b>
<br/>
 }</td></tr>
<tr class="memdesc:ga89f55fd684646bb146f99a8c6c18569b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Purpose of file(s) provided through an option. <br/></td></tr>
<tr class="separator:ga89f55fd684646bb146f99a8c6c18569b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga1f658c04b8319b831b5abe8e381dc13f"><td class="memTemplParams" colspan="2">template&lt;typename ValueType &gt; </td></tr>
<tr class="memitem:ga1f658c04b8319b831b5abe8e381dc13f"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__module__options.xhtml#ga1f658c04b8319b831b5abe8e381dc13f">anonymous_namespace{basicoptions.cpp}::expandVector</a> (size_t length, std::vector&lt; ValueType &gt; *values)</td></tr>
<tr class="memdesc:ga1f658c04b8319b831b5abe8e381dc13f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Expands a single value to a vector by copying the value.  <a href="#ga1f658c04b8319b831b5abe8e381dc13f">More...</a><br/></td></tr>
<tr class="separator:ga1f658c04b8319b831b5abe8e381dc13f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1e85ff6ce9288d3902e6002f10db35c3"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::string &gt;<br class="typebreak"/>
::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__options.xhtml#ga1e85ff6ce9288d3902e6002f10db35c3">anonymous_namespace{basicoptions.cpp}::findEnumValue</a> (const std::vector&lt; std::string &gt; &amp;allowedValues, const std::string &amp;value)</td></tr>
<tr class="memdesc:ga1e85ff6ce9288d3902e6002f10db35c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds an enumerated value from the list of allowed values.  <a href="#ga1e85ff6ce9288d3902e6002f10db35c3">More...</a><br/></td></tr>
<tr class="separator:ga1e85ff6ce9288d3902e6002f10db35c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5d6e44acec82796430372618e7b7919e"><td class="memItemLeft" align="right" valign="top">AbstractOptionStorage *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__options.xhtml#ga5d6e44acec82796430372618e7b7919e">gmx::internal::createEnumOptionStorage</a> (const AbstractOption &amp;option, const char *const *enumValues, int count, int defaultValue, int defaultValueIfSet, IOptionValueStore&lt; int &gt; *store)</td></tr>
<tr class="memdesc:ga5d6e44acec82796430372618e7b7919e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper to create <a class="el" href="classgmx_1_1EnumOptionStorage.xhtml" title="Converts, validates, and stores enum values. ">EnumOptionStorage</a> instances.  <a href="#ga5d6e44acec82796430372618e7b7919e">More...</a><br/></td></tr>
<tr class="separator:ga5d6e44acec82796430372618e7b7919e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabd95045f0b0bc6bc36cf666e1da22162"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__options.xhtml#gabd95045f0b0bc6bc36cf666e1da22162">gmx::assignOptionsFromKeyValueTree</a> (Options *options, const KeyValueTreeObject &amp;tree, IKeyValueTreeErrorHandler *errorHandler)</td></tr>
<tr class="memdesc:gabd95045f0b0bc6bc36cf666e1da22162"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns option values from a given KeyValueTreeObject.  <a href="#gabd95045f0b0bc6bc36cf666e1da22162">More...</a><br/></td></tr>
<tr class="separator:gabd95045f0b0bc6bc36cf666e1da22162"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7c18bea4ebc5cb035834d3f117906952"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__options.xhtml#ga7c18bea4ebc5cb035834d3f117906952">gmx::checkForUnknownOptionsInKeyValueTree</a> (const KeyValueTreeObject &amp;tree, const Options &amp;options)</td></tr>
<tr class="memdesc:ga7c18bea4ebc5cb035834d3f117906952"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks that a given KeyValueTreeObject can be assigned to given <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a>.  <a href="#ga7c18bea4ebc5cb035834d3f117906952">More...</a><br/></td></tr>
<tr class="separator:ga7c18bea4ebc5cb035834d3f117906952"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4ff33b942520181157f23d0204fde157"><td class="memItemLeft" align="right" valign="top">KeyValueTreeObject&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__options.xhtml#ga4ff33b942520181157f23d0204fde157">gmx::adjustKeyValueTreeFromOptions</a> (const KeyValueTreeObject &amp;tree, const Options &amp;options)</td></tr>
<tr class="memdesc:ga4ff33b942520181157f23d0204fde157"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adjusts a KeyValueTreeObject to the structure of given <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a>.  <a href="#ga4ff33b942520181157f23d0204fde157">More...</a><br/></td></tr>
<tr class="separator:ga4ff33b942520181157f23d0204fde157"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga20dcd0d5550324aeeda083b2a8668738"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__options.xhtml#ga20dcd0d5550324aeeda083b2a8668738">gmx::anonymous_namespace{filenameoption.cpp}::FileTypeHandler::FileTypeHandler</a> (int fileType)</td></tr>
<tr class="memdesc:ga20dcd0d5550324aeeda083b2a8668738"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a handler for a single file type.  <a href="#ga20dcd0d5550324aeeda083b2a8668738">More...</a><br/></td></tr>
<tr class="separator:ga20dcd0d5550324aeeda083b2a8668738"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga55b99034e93ce6f0945881c58a66ba22"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga55b99034e93ce6f0945881c58a66ba22"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__options.xhtml#ga55b99034e93ce6f0945881c58a66ba22">gmx::anonymous_namespace{filenameoption.cpp}::FileTypeHandler::extensionCount</a> () const </td></tr>
<tr class="memdesc:ga55b99034e93ce6f0945881c58a66ba22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of acceptable extensions for this file type. <br/></td></tr>
<tr class="separator:ga55b99034e93ce6f0945881c58a66ba22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1f043fdd75da63ae1d836c517a58e443"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga1f043fdd75da63ae1d836c517a58e443"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__options.xhtml#ga1f043fdd75da63ae1d836c517a58e443">gmx::anonymous_namespace{filenameoption.cpp}::FileTypeHandler::extension</a> (int i) const </td></tr>
<tr class="memdesc:ga1f043fdd75da63ae1d836c517a58e443"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the extension with the given index. <br/></td></tr>
<tr class="separator:ga1f043fdd75da63ae1d836c517a58e443"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b7cb946f9ed58688c657595086bf72f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga4b7cb946f9ed58688c657595086bf72f"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__options.xhtml#ga4b7cb946f9ed58688c657595086bf72f">gmx::anonymous_namespace{filenameoption.cpp}::FileTypeHandler::isValidType</a> (int fileType) const </td></tr>
<tr class="memdesc:ga4b7cb946f9ed58688c657595086bf72f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether <code>fileType</code> (from filetypes.h) is accepted for this type. <br/></td></tr>
<tr class="separator:ga4b7cb946f9ed58688c657595086bf72f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ga8beb9f3d1d31d9ab3070249ac57c68dd"><td class="memItemLeft" align="right" valign="top">const FileTypeMapping&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__options.xhtml#ga8beb9f3d1d31d9ab3070249ac57c68dd">gmx::anonymous_namespace{filenameoption.cpp}::c_fileTypeMapping</a> []</td></tr>
<tr class="memdesc:ga8beb9f3d1d31d9ab3070249ac57c68dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mappings from OptionFileType to file types in filetypes.h.  <a href="#ga8beb9f3d1d31d9ab3070249ac57c68dd">More...</a><br/></td></tr>
<tr class="separator:ga8beb9f3d1d31d9ab3070249ac57c68dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="dirs"></a>
Directories</h2></td></tr>
<tr class="memitem:dir_7368f1a5a3cf04a409e4d90d99595fa7"><td class="memItemLeft" align="right" valign="top">directory&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dir_7368f1a5a3cf04a409e4d90d99595fa7.xhtml">options</a></td></tr>
<tr class="memdesc:dir_7368f1a5a3cf04a409e4d90d99595fa7"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="group__module__options.xhtml">Extensible Handling of Options (options)</a> <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:dir_17f96ce329c7a080bed56ffb6c977438"><td class="memItemLeft" align="right" valign="top">directory&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="dir_17f96ce329c7a080bed56ffb6c977438.xhtml">tests</a></td></tr>
<tr class="memdesc:dir_17f96ce329c7a080bed56ffb6c977438"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unit tests for <a class="el" href="group__module__options.xhtml">Extensible Handling of Options (options)</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="files"></a>
Files</h2></td></tr>
<tr class="memitem:abstractoption_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="abstractoption_8cpp.xhtml">abstractoption.cpp</a></td></tr>
<tr class="memdesc:abstractoption_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements classes in <a class="el" href="abstractoption_8h.xhtml" title="Defines gmx::AbstractOption, gmx::OptionTemplate and gmx::OptionInfo. ">abstractoption.h</a> and <a class="el" href="abstractoptionstorage_8h.xhtml" title="Declares gmx::AbstractOptionStorage. ">abstractoptionstorage.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abstractoption_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="abstractoption_8h.xhtml">abstractoption.h</a></td></tr>
<tr class="memdesc:abstractoption_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines <a class="el" href="classgmx_1_1AbstractOption.xhtml" title="Abstract base class for specifying option properties. ">gmx::AbstractOption</a>, <a class="el" href="classgmx_1_1OptionTemplate.xhtml" title="Templated base class for constructing concrete option settings classes. ">gmx::OptionTemplate</a> and <a class="el" href="classgmx_1_1OptionInfo.xhtml" title="Gives information and allows modifications to an option after creation. ">gmx::OptionInfo</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abstractoptionstorage_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="abstractoptionstorage_8h.xhtml">abstractoptionstorage.h</a></td></tr>
<tr class="memdesc:abstractoptionstorage_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1AbstractOptionStorage.xhtml" title="Abstract base class for converting, validating, and storing option values. ">gmx::AbstractOptionStorage</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abstractsection_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="abstractsection_8cpp.xhtml">abstractsection.cpp</a></td></tr>
<tr class="memdesc:abstractsection_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements classes from <a class="el" href="abstractsection_8h.xhtml" title="Declares base classes for declaring option sections. ">abstractsection.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abstractsection_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="abstractsection_8h.xhtml">abstractsection.h</a></td></tr>
<tr class="memdesc:abstractsection_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares base classes for declaring option sections. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:basicoptions_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="basicoptions_8cpp.xhtml">basicoptions.cpp</a></td></tr>
<tr class="memdesc:basicoptions_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements classes in <a class="el" href="basicoptions_8h.xhtml" title="Declares option objects for basic option types. ">basicoptions.h</a> and <a class="el" href="basicoptionstorage_8h.xhtml" title="Declares storage classes for basic option types. ">basicoptionstorage.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:basicoptions_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="basicoptions_8h.xhtml">basicoptions.h</a></td></tr>
<tr class="memdesc:basicoptions_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares option objects for basic option types. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:basicoptionstorage_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="basicoptionstorage_8h.xhtml">basicoptionstorage.h</a></td></tr>
<tr class="memdesc:basicoptionstorage_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares storage classes for basic option types. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:behaviorcollection_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="behaviorcollection_8cpp.xhtml">behaviorcollection.cpp</a></td></tr>
<tr class="memdesc:behaviorcollection_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements <a class="el" href="classgmx_1_1OptionsBehaviorCollection.xhtml" title="Container for IOptionsBehavior objects. ">gmx::OptionsBehaviorCollection</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:behaviorcollection_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="behaviorcollection_8h.xhtml">behaviorcollection.h</a></td></tr>
<tr class="memdesc:behaviorcollection_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1OptionsBehaviorCollection.xhtml" title="Container for IOptionsBehavior objects. ">gmx::OptionsBehaviorCollection</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:filenameoption_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="filenameoption_8cpp.xhtml">filenameoption.cpp</a></td></tr>
<tr class="memdesc:filenameoption_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements classes in <a class="el" href="filenameoption_8h.xhtml" title="Declares gmx::FileNameOption and gmx::FileNameOptionInfo. ">filenameoption.h</a> and <a class="el" href="filenameoptionstorage_8h.xhtml" title="Declares gmx::FileNameOptionStorage. ">filenameoptionstorage.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:filenameoption_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="filenameoption_8h.xhtml">filenameoption.h</a></td></tr>
<tr class="memdesc:filenameoption_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1FileNameOption.xhtml" title="Specifies an option that provides file names. ">gmx::FileNameOption</a> and <a class="el" href="classgmx_1_1FileNameOptionInfo.xhtml" title="Wrapper class for accessing file name option information. ">gmx::FileNameOptionInfo</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:filenameoptionmanager_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="filenameoptionmanager_8cpp.xhtml">filenameoptionmanager.cpp</a></td></tr>
<tr class="memdesc:filenameoptionmanager_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements <a class="el" href="classgmx_1_1FileNameOptionManager.xhtml" title="Handles interaction of file name options with global options. ">gmx::FileNameOptionManager</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:filenameoptionmanager_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="filenameoptionmanager_8h.xhtml">filenameoptionmanager.h</a></td></tr>
<tr class="memdesc:filenameoptionmanager_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1FileNameOptionManager.xhtml" title="Handles interaction of file name options with global options. ">gmx::FileNameOptionManager</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:filenameoptionstorage_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="filenameoptionstorage_8h.xhtml">filenameoptionstorage.h</a></td></tr>
<tr class="memdesc:filenameoptionstorage_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1FileNameOptionStorage.xhtml" title="Converts, validates, and stores file names. ">gmx::FileNameOptionStorage</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ioptionsbehavior_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ioptionsbehavior_8h.xhtml">ioptionsbehavior.h</a></td></tr>
<tr class="memdesc:ioptionsbehavior_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1IOptionsBehavior.xhtml" title="Interface to provide extension points for options parsing. ">gmx::IOptionsBehavior</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ioptionscontainer_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ioptionscontainer_8h.xhtml">ioptionscontainer.h</a></td></tr>
<tr class="memdesc:ioptionscontainer_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1IOptionsContainer.xhtml" title="Interface for adding input options. ">gmx::IOptionsContainer</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ioptionscontainerwithsections_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ioptionscontainerwithsections_8h.xhtml">ioptionscontainerwithsections.h</a></td></tr>
<tr class="memdesc:ioptionscontainerwithsections_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1IOptionsContainerWithSections.xhtml" title="Interface for adding input options with sections. ">gmx::IOptionsContainerWithSections</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:isectionstorage_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="isectionstorage_8h.xhtml">isectionstorage.h</a></td></tr>
<tr class="memdesc:isectionstorage_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1IOptionSectionStorage.xhtml" title="Provides behavior specific to a certain option section type. ">gmx::IOptionSectionStorage</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ivaluestore_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ivaluestore_8h.xhtml">ivaluestore.h</a></td></tr>
<tr class="memdesc:ivaluestore_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1IOptionValueStore.xhtml" title="Represents the final storage location of option values. ">gmx::IOptionValueStore</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:optionfiletype_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="optionfiletype_8h.xhtml">optionfiletype.h</a></td></tr>
<tr class="memdesc:optionfiletype_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines an enumeration type for specifying file types for options. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:optionflags_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="optionflags_8h.xhtml">optionflags.h</a></td></tr>
<tr class="memdesc:optionflags_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines flags used in option implementation. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:optionmanagercontainer_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="optionmanagercontainer_8h.xhtml">optionmanagercontainer.h</a></td></tr>
<tr class="memdesc:optionmanagercontainer_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1OptionManagerContainer.xhtml" title="Container to keep managers added with Options::addManager() and pass them to options. ">gmx::OptionManagerContainer</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:options-impl_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="options-impl_8h.xhtml">options-impl.h</a></td></tr>
<tr class="memdesc:options-impl_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares private implementation class for <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">gmx::Options</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:options_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="options_8cpp.xhtml">options.cpp</a></td></tr>
<tr class="memdesc:options_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">gmx::Options</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:options_2options_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="options_2options_8h.xhtml">options.h</a></td></tr>
<tr class="memdesc:options_2options_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">gmx::Options</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:optionsassigner_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="optionsassigner_8cpp.xhtml">optionsassigner.cpp</a></td></tr>
<tr class="memdesc:optionsassigner_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements <a class="el" href="classgmx_1_1OptionsAssigner.xhtml" title="Decorator class for assigning values to Options. ">gmx::OptionsAssigner</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:optionsassigner_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="optionsassigner_8h.xhtml">optionsassigner.h</a></td></tr>
<tr class="memdesc:optionsassigner_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1OptionsAssigner.xhtml" title="Decorator class for assigning values to Options. ">gmx::OptionsAssigner</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:optionsection_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="optionsection_8h.xhtml">optionsection.h</a></td></tr>
<tr class="memdesc:optionsection_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1OptionSection.xhtml" title="Declares a simple option section. ">gmx::OptionSection</a> and gmx::OptionSectionInfo. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:optionstoragetemplate_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="optionstoragetemplate_8h.xhtml">optionstoragetemplate.h</a></td></tr>
<tr class="memdesc:optionstoragetemplate_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines <a class="el" href="classgmx_1_1OptionStorageTemplate.xhtml" title="Templated base class for constructing option value storage classes. ">gmx::OptionStorageTemplate</a> template. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:optionsvisitor_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="optionsvisitor_8cpp.xhtml">optionsvisitor.cpp</a></td></tr>
<tr class="memdesc:optionsvisitor_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements classes in <a class="el" href="optionsvisitor_8h.xhtml" title="Declares gmx::OptionsVisitor interface and supporting classes. ">optionsvisitor.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:optionsvisitor_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="optionsvisitor_8h.xhtml">optionsvisitor.h</a></td></tr>
<tr class="memdesc:optionsvisitor_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1OptionsVisitor.xhtml" title="Pure interface for visiting options in a Options object. ">gmx::OptionsVisitor</a> interface and supporting classes. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:repeatingsection_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="repeatingsection_8h.xhtml">repeatingsection.h</a></td></tr>
<tr class="memdesc:repeatingsection_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1RepeatingOptionSection.xhtml" title="Declares an option section that creates a structure for each instance. ">gmx::RepeatingOptionSection</a> and related classes. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abstractoptionstorage_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="abstractoptionstorage_8cpp.xhtml">abstractoptionstorage.cpp</a></td></tr>
<tr class="memdesc:abstractoptionstorage_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests proper handling of option storage. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:tests_2filenameoption_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="tests_2filenameoption_8cpp.xhtml">filenameoption.cpp</a></td></tr>
<tr class="memdesc:tests_2filenameoption_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests basic file name option implementation. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:tests_2filenameoptionmanager_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="tests_2filenameoptionmanager_8cpp.xhtml">filenameoptionmanager.cpp</a></td></tr>
<tr class="memdesc:tests_2filenameoptionmanager_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests file name option implementation dependent on <a class="el" href="classgmx_1_1FileNameOptionManager.xhtml" title="Handles interaction of file name options with global options. ">gmx::FileNameOptionManager</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:option_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="option_8cpp.xhtml">option.cpp</a></td></tr>
<tr class="memdesc:option_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests creation of basic option types. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:tests_2optionsassigner_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="tests_2optionsassigner_8cpp.xhtml">optionsassigner.cpp</a></td></tr>
<tr class="memdesc:tests_2optionsassigner_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests option assignment. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:repeatingsection_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="repeatingsection_8cpp.xhtml">repeatingsection.cpp</a></td></tr>
<tr class="memdesc:repeatingsection_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests functionality related to repeating sections. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:tests_2timeunitmanager_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="tests_2timeunitmanager_8cpp.xhtml">timeunitmanager.cpp</a></td></tr>
<tr class="memdesc:tests_2timeunitmanager_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests handling of time units with <a class="el" href="classgmx_1_1TimeUnitManager.xhtml" title="Provides common functionality for time unit conversions. ">gmx::TimeUnitManager</a> and <a class="el" href="classgmx_1_1TimeUnitBehavior.xhtml" title="Options behavior to add a time unit option. ">gmx::TimeUnitBehavior</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:tests_2treesupport_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="tests_2treesupport_8cpp.xhtml">treesupport.cpp</a></td></tr>
<tr class="memdesc:tests_2treesupport_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests option support for operations on KeyValueTree. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:timeunitmanager_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="timeunitmanager_8cpp.xhtml">timeunitmanager.cpp</a></td></tr>
<tr class="memdesc:timeunitmanager_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements <a class="el" href="classgmx_1_1TimeUnitManager.xhtml" title="Provides common functionality for time unit conversions. ">gmx::TimeUnitManager</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:timeunitmanager_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="timeunitmanager_8h.xhtml">timeunitmanager.h</a></td></tr>
<tr class="memdesc:timeunitmanager_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares <a class="el" href="classgmx_1_1TimeUnitManager.xhtml" title="Provides common functionality for time unit conversions. ">gmx::TimeUnitManager</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:treesupport_8cpp"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="treesupport_8cpp.xhtml">treesupport.cpp</a></td></tr>
<tr class="memdesc:treesupport_8cpp"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implements functions from <a class="el" href="treesupport_8h.xhtml" title="Declares functions for using keyvaluetree.h with Options. ">treesupport.h</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:treesupport_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="treesupport_8h.xhtml">treesupport.h</a></td></tr>
<tr class="memdesc:treesupport_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares functions for using <a class="el" href="keyvaluetree_8h.xhtml" title="Declares a data structure for JSON-like structured key-value mapping. ">keyvaluetree.h</a> with Options. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:valueconverter_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="valueconverter_8h.xhtml">valueconverter.h</a></td></tr>
<tr class="memdesc:valueconverter_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides <a class="el" href="classgmx_1_1OptionValueConverterSimple.xhtml" title="Helper for converting from Variant to a given type. ">gmx::OptionValueConverterSimple</a>. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:valuestore_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="valuestore_8h.xhtml">valuestore.h</a></td></tr>
<tr class="memdesc:valuestore_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Declares implementations for IOptionValueStore. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:options_8h"><td class="memItemLeft" align="right" valign="top">file &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="options_8h.xhtml">options.h</a></td></tr>
<tr class="memdesc:options_8h"><td class="mdescLeft">&#160;</td><td class="mdescRight">Public API convenience header for handling of options. <br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="ga7552279e0ab63edd1e9324c5786e28e7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__module__options.xhtml#ga7552279e0ab63edd1e9324c5786e28e7">gmx::RealOption</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Typedef for either <a class="el" href="classgmx_1_1DoubleOption.xhtml" title="Specifies an option that provides floating-point (double) values. ">DoubleOption</a> or <a class="el" href="classgmx_1_1FloatOption.xhtml" title="Specifies an option that provides floating-point (float) values. ">FloatOption</a>, depending on precision. </p>
<p>Generally, new would be better using <a class="el" href="classgmx_1_1DoubleOption.xhtml" title="Specifies an option that provides floating-point (double) values. ">DoubleOption</a>, but this is provided for cases where the output value needs to be of type <code>real</code> for some reason. </p>

</div>
</div>
<a class="anchor" id="gab1c4e0b93e5d22b0c9a534f0235496f5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__module__options.xhtml#gab1c4e0b93e5d22b0c9a534f0235496f5">gmx::RealOptionInfo</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Typedef for either <a class="el" href="classgmx_1_1DoubleOptionInfo.xhtml" title="Wrapper class for accessing floating-point option information. ">DoubleOptionInfo</a> or <a class="el" href="classgmx_1_1FloatOptionInfo.xhtml" title="Wrapper class for accessing floating-point option information. ">FloatOptionInfo</a>, depending on precision. </p>
<p>Generally, new would be better using <a class="el" href="classgmx_1_1DoubleOption.xhtml" title="Specifies an option that provides floating-point (double) values. ">DoubleOption</a>, but this is provided for cases where the output value needs to be of type <code>real</code> for some reason. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ga4ff33b942520181157f23d0204fde157"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">KeyValueTreeObject gmx::adjustKeyValueTreeFromOptions </td>
          <td>(</td>
          <td class="paramtype">const KeyValueTreeObject &amp;&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Options &amp;&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adjusts a KeyValueTreeObject to the structure of given <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a>. </p>
<p>Assumes that all values in the input KeyValueTreeObject are valid values for the options. The output has all the values in the input, but in the order they are in the options. Values are also converted to the native type for the underlying option (e.g., strings are parsed to integers if the option accepts those). For any option that does not have a corresponding value in the input, the output has it with a default value (if one exists for the option).</p>
<p>Any values in <code>tree</code> that do not have matching options are not present in the output. If this is not desirable, call <a class="el" href="group__module__options.xhtml#ga7c18bea4ebc5cb035834d3f117906952" title="Checks that a given KeyValueTreeObject can be assigned to given Options. ">checkForUnknownOptionsInKeyValueTree()</a> before calling this function to ensure that no such values are present.</p>
<p>Does not currently work for option sections in an array. </p>

</div>
</div>
<a class="anchor" id="gabd95045f0b0bc6bc36cf666e1da22162"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::assignOptionsFromKeyValueTree </td>
          <td>(</td>
          <td class="paramtype">Options *&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const KeyValueTreeObject &amp;&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IKeyValueTreeErrorHandler *&#160;</td>
          <td class="paramname"><em>errorHandler</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assigns option values from a given KeyValueTreeObject. </p>
<p>Each property with a simple value (or an array of simple values) is assigned to an option with the same name. Objects and arrays of objects are assigned to sections with the same name. </p>

</div>
</div>
<a class="anchor" id="ga7c18bea4ebc5cb035834d3f117906952"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::checkForUnknownOptionsInKeyValueTree </td>
          <td>(</td>
          <td class="paramtype">const KeyValueTreeObject &amp;&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const Options &amp;&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks that a given KeyValueTreeObject can be assigned to given <a class="el" href="classgmx_1_1Options.xhtml" title="Collection of options. ">Options</a>. </p>
<p>Throws an exception if <code>tree</code> contains any values that are not recognized by <code>options</code>. Does not verify the type of the values, only that an option with the correct names exists. </p>

</div>
</div>
<a class="anchor" id="ga5d6e44acec82796430372618e7b7919e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">AbstractOptionStorage * gmx::internal::createEnumOptionStorage </td>
          <td>(</td>
          <td class="paramtype">const AbstractOption &amp;&#160;</td>
          <td class="paramname"><em>option</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const *&#160;</td>
          <td class="paramname"><em>enumValues</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>defaultValue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>defaultValueIfSet</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IOptionValueStore&lt; int &gt; *&#160;</td>
          <td class="paramname"><em>store</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Helper to create <a class="el" href="classgmx_1_1EnumOptionStorage.xhtml" title="Converts, validates, and stores enum values. ">EnumOptionStorage</a> instances. </p>
<p>This function works as a proxy between EnumOption::createStorage() and the <a class="el" href="classgmx_1_1EnumOptionStorage.xhtml" title="Converts, validates, and stores enum values. ">EnumOptionStorage</a> constructor, such that the latter does not need to be exposed in the header. </p>

</div>
</div>
<a class="anchor" id="ga1f658c04b8319b831b5abe8e381dc13f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ValueType &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void anonymous_namespace{basicoptions.cpp}::expandVector </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; ValueType &gt; *&#160;</td>
          <td class="paramname"><em>values</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Expands a single value to a vector by copying the value. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">ValueType</td><td>Type of values to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">length</td><td>Length of the resulting vector. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">values</td><td>Values to process. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname">InvalidInputError</td><td>if <code>values</code> has an invalid number of values.</td></tr>
  </table>
  </dd>
</dl>
<p><code>values</code> should have 0, 1, or <code>length</code> values. If <code>values</code> has 1 value, it is expanded such that it has <code>length</code> identical values. In other valid cases, nothing is done. </p>

</div>
</div>
<a class="anchor" id="ga20dcd0d5550324aeeda083b2a8668738"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">gmx::anonymous_namespace{filenameoption.cpp}::FileTypeHandler::FileTypeHandler </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fileType</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a handler for a single file type. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fileType</td><td>File type (from filetypes.h) to use. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga1e85ff6ce9288d3902e6002f10db35c3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::string&gt;::const_iterator anonymous_namespace{basicoptions.cpp}::findEnumValue </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>allowedValues</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Finds an enumerated value from the list of allowed values. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">allowedValues</td><td>List of allowed values. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>Value to search for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InvalidInputError.xhtml" title="Exception class for situations where user input cannot be parsed/understood. ">gmx::InvalidInputError</a></td><td>if <code>value</code> does not match anything in <code>allowedValues</code>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Iterator to the found value. </dd></dl>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="ga8beb9f3d1d31d9ab3070249ac57c68dd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const FileTypeMapping gmx::anonymous_namespace{filenameoption.cpp}::c_fileTypeMapping[]</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">=</div>
<div class="line">{</div>
<div class="line">    { eftTopology,    efTPS },</div>
<div class="line">    { eftTrajectory,  efTRX },</div>
<div class="line">    { eftEnergy,      efEDR },</div>
<div class="line">    { eftPDB,         efPDB },</div>
<div class="line">    { eftIndex,       efNDX },</div>
<div class="line">    { eftPlot,        efXVG },</div>
<div class="line">    { eftGenericData, efDAT }</div>
<div class="line">}</div>
</div><!-- fragment -->
<p>Mappings from OptionFileType to file types in filetypes.h. </p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:23 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

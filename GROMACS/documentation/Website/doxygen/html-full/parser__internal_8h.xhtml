<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/selection/parser_internal.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_8a21c46af9718d1f610eb513153099d7.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a46192700e9e8ed44c648f0a55ee9a53.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_e7e88b26b6f22ac834fce3ecdbf03d20.xhtml">selection</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">parser_internal.h File Reference<div class="ingroups"><a class="el" href="group__module__selection.xhtml">Parsing and Evaluation of Analysis Selections (selection)</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;exception&gt;</code><br/>
<code>#include &lt;memory&gt;</code><br/>
<code>#include &quot;<a class="el" href="exceptions_8h.xhtml">gromacs/utility/exceptions.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="gmxassert_8h.xhtml">gromacs/utility/gmxassert.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="stringutil_8h.xhtml">gromacs/utility/stringutil.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="parsetree_8h.xhtml">parsetree.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="scanner_8h.xhtml">scanner.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="selelem_8h.xhtml">selelem.h</a>&quot;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for parser_internal.h:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="parser__internal_8h__incl.svg" width="1948" height="366"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Helper functions for the selection parser. </p>
<p>This header is includes only from parser.cpp (generated from parser.y), and it includes functions and macros used internally by the parser. They are in a separate file to make then easier to edit (no need to regenerate the parser), and to keep parser.y as simple as possible.</p>
<dl class="section author"><dt>Author</dt><dd>Teemu Murtola <a href="#" onclick="location.href='mai'+'lto:'+'tee'+'mu'+'.mu'+'rt'+'ola'+'@g'+'mai'+'l.'+'com'; return false;">teemu<span style="display: none;">.nosp@m.</span>.mur<span style="display: none;">.nosp@m.</span>tola@<span style="display: none;">.nosp@m.</span>gmai<span style="display: none;">.nosp@m.</span>l.com</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a7004132c344d4c030cc9c1596e8fe644"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="parser__internal_8h.xhtml#a7004132c344d4c030cc9c1596e8fe644">GMX_YYFORCE_C_STACK_EXTENSION</a>&#160;&#160;&#160;1</td></tr>
<tr class="memdesc:a7004132c344d4c030cc9c1596e8fe644"><td class="mdescLeft">&#160;</td><td class="mdescRight">Custom macro to influence Bison behavior.  <a href="#a7004132c344d4c030cc9c1596e8fe644">More...</a><br/></td></tr>
<tr class="separator:a7004132c344d4c030cc9c1596e8fe644"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62f90d9ec52c521531374502dccc7cc2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="parser__internal_8h.xhtml#a62f90d9ec52c521531374502dccc7cc2">CHECK_SEL</a>(sel)</td></tr>
<tr class="memdesc:a62f90d9ec52c521531374502dccc7cc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks that a valid tree was set.  <a href="#a62f90d9ec52c521531374502dccc7cc2">More...</a><br/></td></tr>
<tr class="separator:a62f90d9ec52c521531374502dccc7cc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Exception handling macros for actions</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>These macros should be used at the beginning and end of each semantic action that may throw an exception. For robustness, it's best to wrap all actions that call functions declared outside parser.y should be wrapped. These macros take care to catch any exceptions, store the exception (or handle it and allow the parser to continue), and terminate the parser cleanly if necessary. The code calling the parser should use <a class="el" href="scanner_8h.xhtml#a929450c01a1ff7f2f001b91eeb29cf4e" title="Rethrows and clears the stored exception if one is present. ">_gmx_sel_lexer_rethrow_exception_if_occurred()</a> to rethrow any exceptions. </p>
</div></td></tr>
<tr class="memitem:adc0616ed62829750149da924ee4176a9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adc0616ed62829750149da924ee4176a9"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="parser__internal_8h.xhtml#adc0616ed62829750149da924ee4176a9">BEGIN_ACTION</a>&#160;&#160;&#160;try {</td></tr>
<tr class="memdesc:adc0616ed62829750149da924ee4176a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts an action that may throw exceptions. <br/></td></tr>
<tr class="separator:adc0616ed62829750149da924ee4176a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cff21a873fa69df9a845af194a2bb38"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="parser__internal_8h.xhtml#a8cff21a873fa69df9a845af194a2bb38">END_ACTION</a></td></tr>
<tr class="memdesc:a8cff21a873fa69df9a845af194a2bb38"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finishes an action that may throw exceptions.  <a href="#a8cff21a873fa69df9a845af194a2bb38">More...</a><br/></td></tr>
<tr class="separator:a8cff21a873fa69df9a845af194a2bb38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac78a505847a3259da9fdc0ab88fd97f2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="parser__internal_8h.xhtml#ac78a505847a3259da9fdc0ab88fd97f2">END_ACTION_TOPLEVEL</a></td></tr>
<tr class="memdesc:ac78a505847a3259da9fdc0ab88fd97f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finishes an action that may throw exceptions and does not support resuming.  <a href="#ac78a505847a3259da9fdc0ab88fd97f2">More...</a><br/></td></tr>
<tr class="separator:ac78a505847a3259da9fdc0ab88fd97f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a0c1fffb107955e3a6c98e6a8d44bc66b"><td class="memTemplParams" colspan="2">template&lt;typename ValueType &gt; </td></tr>
<tr class="memitem:a0c1fffb107955e3a6c98e6a8d44bc66b"><td class="memTemplItemLeft" align="right" valign="top">static ValueType&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="parser__internal_8h.xhtml#a0c1fffb107955e3a6c98e6a8d44bc66b">get</a> (ValueType *src)</td></tr>
<tr class="memdesc:a0c1fffb107955e3a6c98e6a8d44bc66b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves a semantic value.  <a href="#a0c1fffb107955e3a6c98e6a8d44bc66b">More...</a><br/></td></tr>
<tr class="separator:a0c1fffb107955e3a6c98e6a8d44bc66b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8553aeb4ef79ad62e90241cf54e221d5"><td class="memTemplParams" colspan="2">template&lt;typename ValueType &gt; </td></tr>
<tr class="memitem:a8553aeb4ef79ad62e90241cf54e221d5"><td class="memTemplItemLeft" align="right" valign="top">static void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="parser__internal_8h.xhtml#a8553aeb4ef79ad62e90241cf54e221d5">set</a> (ValueType *&amp;dest, ValueType value)</td></tr>
<tr class="memdesc:a8553aeb4ef79ad62e90241cf54e221d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a semantic value.  <a href="#a8553aeb4ef79ad62e90241cf54e221d5">More...</a><br/></td></tr>
<tr class="separator:a8553aeb4ef79ad62e90241cf54e221d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0340e95b333de1fa7bf551b2a87448e7"><td class="memTemplParams" colspan="2">template&lt;typename ValueType &gt; </td></tr>
<tr class="memitem:a0340e95b333de1fa7bf551b2a87448e7"><td class="memTemplItemLeft" align="right" valign="top">static void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="parser__internal_8h.xhtml#a0340e95b333de1fa7bf551b2a87448e7">set_empty</a> (ValueType *&amp;dest)</td></tr>
<tr class="memdesc:a0340e95b333de1fa7bf551b2a87448e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets an empty semantic value.  <a href="#a0340e95b333de1fa7bf551b2a87448e7">More...</a><br/></td></tr>
<tr class="separator:a0340e95b333de1fa7bf551b2a87448e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="a62f90d9ec52c521531374502dccc7cc2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CHECK_SEL</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">sel</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">if</span> (!*(sel)) { \</div>
<div class="line">        delete sel; \</div>
<div class="line">        YYERROR; \</div>
<div class="line">    }</div>
</div><!-- fragment -->
<p>Checks that a valid tree was set. </p>
<p>Should be called after <a class="el" href="parser__internal_8h.xhtml#a8553aeb4ef79ad62e90241cf54e221d5" title="Sets a semantic value. ">set()</a> if it was used to set a value where NULL pointer indicates an error.</p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000078">Todo:</a></b></dt><dd>Get rid of this macro. It should now be possible to handle all errors using exceptions. </dd></dl>

</div>
</div>
<a class="anchor" id="a8cff21a873fa69df9a845af194a2bb38"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define END_ACTION</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">}                                                           \</div>
<div class="line">    catch (std::exception &amp;ex)                                  \</div>
<div class="line">    {                                                           \</div>
<div class="line">        if (<a class="code" href="parsetree_8cpp.xhtml#a893373e3653d6fac0ccce527cce6a383">_gmx_selparser_handle_exception</a>(scanner, &amp;ex))      \</div>
<div class="line">        {                                                       \</div>
<div class="line">            YYERROR;                                            \</div>
<div class="line">        }                                                       \</div>
<div class="line">        else                                                    \</div>
<div class="line">        {                                                       \</div>
<div class="line">            YYABORT;                                            \</div>
<div class="line">        }                                                       \</div>
<div class="line">    }</div>
<div class="ttc" id="parsetree_8cpp_xhtml_a893373e3653d6fac0ccce527cce6a383"><div class="ttname"><a href="parsetree_8cpp.xhtml#a893373e3653d6fac0ccce527cce6a383">_gmx_selparser_handle_exception</a></div><div class="ttdeci">bool _gmx_selparser_handle_exception(yyscan_t scanner, std::exception *ex)</div><div class="ttdoc">Handles exceptions caught within the Bison code. </div><div class="ttdef"><b>Definition:</b> parsetree.cpp:278</div></div>
</div><!-- fragment -->
<p>Finishes an action that may throw exceptions. </p>

</div>
</div>
<a class="anchor" id="ac78a505847a3259da9fdc0ab88fd97f2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define END_ACTION_TOPLEVEL</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line">}                                                           \</div>
<div class="line">    catch (<span class="keyword">const</span> std::exception &amp;)                              \</div>
<div class="line">    {                                                           <a class="code" href="scanner_8h.xhtml#acded92fa1a923c7b946a510b15ba92b7">\</a></div>
<div class="line"><a class="code" href="scanner_8h.xhtml#acded92fa1a923c7b946a510b15ba92b7">        _gmx_sel_lexer_set_exception</a>(scanner, std::current_exception()); \</div>
<div class="line">        YYABORT;                                                \</div>
<div class="line">    }</div>
<div class="ttc" id="scanner_8h_xhtml_acded92fa1a923c7b946a510b15ba92b7"><div class="ttname"><a href="scanner_8h.xhtml#acded92fa1a923c7b946a510b15ba92b7">_gmx_sel_lexer_set_exception</a></div><div class="ttdeci">void _gmx_sel_lexer_set_exception(yyscan_t scanner, const std::exception_ptr &amp;ex)</div><div class="ttdoc">Stores an exception that is caught during parsing. </div><div class="ttdef"><b>Definition:</b> scanner_internal.cpp:430</div></div>
</div><!-- fragment -->
<p>Finishes an action that may throw exceptions and does not support resuming. </p>

</div>
</div>
<a class="anchor" id="a7004132c344d4c030cc9c1596e8fe644"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GMX_YYFORCE_C_STACK_EXTENSION&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Custom macro to influence Bison behavior. </p>
<p>This macro added to parser.cpp through our patch to force Bison to use C-style logic for stack reallocation even though we have provided YYLTYPE and are compiling the code in C++ (our YYLTYPE can safely be copied this way). An alternative would be to provide the whole reallocation logic through an undocumented yyoverflow() macro, but that is probably also more trouble than it is worth. </p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a0c1fffb107955e3a6c98e6a8d44bc66b"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ValueType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static ValueType get </td>
          <td>(</td>
          <td class="paramtype">ValueType *&#160;</td>
          <td class="paramname"><em>src</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves a semantic value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">src</td><td>Semantic value to get the value from. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Retrieved value. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">unspecified</td><td>Any exception thrown by the move constructor of ValueType.</td></tr>
  </table>
  </dd>
</dl>
<p>There should be no statements that may throw exceptions in actions before this function has been called for all semantic values that have a C++ object stored. Together with <a class="el" href="parser__internal_8h.xhtml#a8553aeb4ef79ad62e90241cf54e221d5" title="Sets a semantic value. ">set()</a>, this function abstracts away exception safety issues that arise from the use of a plain pointer for storing the semantic values.</p>
<p>Does not throw for smart pointer types. If used with types that may throw, the order of operations should be such that it is exception-safe. </p>

</div>
</div>
<a class="anchor" id="a8553aeb4ef79ad62e90241cf54e221d5"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ValueType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void set </td>
          <td>(</td>
          <td class="paramtype">ValueType *&amp;&#160;</td>
          <td class="paramname"><em>dest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ValueType&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets a semantic value. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">ValueType</td><td>Type of value to set. </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">dest</td><td>Semantic value to set (typically $$). </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>Value to put into the semantic value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname">unspecified</td><td>Any exception thrown by the move constructor of ValueType.</td></tr>
  </table>
  </dd>
</dl>
<p>This should be the last statement before <a class="el" href="parser__internal_8h.xhtml#a8cff21a873fa69df9a845af194a2bb38" title="Finishes an action that may throw exceptions. ">END_ACTION</a>, except for a possible <a class="el" href="parser__internal_8h.xhtml#a62f90d9ec52c521531374502dccc7cc2" title="Checks that a valid tree was set. ">CHECK_SEL</a>. </p>

</div>
</div>
<a class="anchor" id="a0340e95b333de1fa7bf551b2a87448e7"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ValueType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void set_empty </td>
          <td>(</td>
          <td class="paramtype">ValueType *&amp;&#160;</td>
          <td class="paramname"><em>dest</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets an empty semantic value. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">ValueType</td><td>Type of value to set (must be default constructible). </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">dest</td><td>Semantic value to set (typically $$). </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname">unspecified</td><td>Any exception thrown by the default constructor of ValueType.</td></tr>
  </table>
  </dd>
</dl>
<p>This should be the last statement before <a class="el" href="parser__internal_8h.xhtml#a8cff21a873fa69df9a845af194a2bb38" title="Finishes an action that may throw exceptions. ">END_ACTION</a>, except for a possible <a class="el" href="parser__internal_8h.xhtml#a62f90d9ec52c521531374502dccc7cc2" title="Checks that a valid tree was set. ">CHECK_SEL</a>. </p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:18 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::internal::SimdArrayRef&lt; T &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="namespacegmx_1_1internal.xhtml">internal</a></li><li class="navelem"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml">SimdArrayRef</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1internal_1_1SimdArrayRef-members.xhtml">List of all members</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a>  </div>
  <div class="headertitle">
<div class="title">gmx::internal::SimdArrayRef&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/simd/simd_memory.h&gt;</code></p>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><h3>template&lt;typename T&gt;<br/>
class gmx::internal::SimdArrayRef&lt; T &gt;</h3>

<p>STL-like container for aligned SIMD type. Used as ArrayRef&lt;SimdReal&gt;. </p>
<p>Should provide the same interface as <a class="el" href="classgmx_1_1ArrayRef.xhtml" title="STL-like container for an interface to a C array of T (or part of a std::vector&lt;T, A&gt; or std::array&lt;T&gt;). ">ArrayRef</a>. Any missing functions should be added as needed. The pointer type (used e.g. for initialization) is a real pointer. The reference type (used e.g. for operator[] and iterator dereference) is SimdReference which executes the aligned load/store as is appropriate. For both iterator and element access, the access happens in blocks of SIMD width. Meaning that a[1] refers to the 2nd SIMD vector and thus reals 8-15 for 8-wide SIMD. The starting address has to be aligned and the length has to be multiple of the SIMD width.</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">T</td><td>SIMD type (e.g. SimdReal) </td></tr>
  </table>
  </dd>
</dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a375b67a0f8545d2877232224bb32c32e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a375b67a0f8545d2877232224bb32c32e"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a375b67a0f8545d2877232224bb32c32e">size_type</a> = size_t</td></tr>
<tr class="memdesc:a375b67a0f8545d2877232224bb32c32e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type for representing size of the container. <br/></td></tr>
<tr class="separator:a375b67a0f8545d2877232224bb32c32e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa63e91ba0deaea694f85e59d12b1468e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa63e91ba0deaea694f85e59d12b1468e"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#aa63e91ba0deaea694f85e59d12b1468e">difference_type</a> = std::ptrdiff_t</td></tr>
<tr class="memdesc:aa63e91ba0deaea694f85e59d12b1468e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type for representing difference between two container indices. <br/></td></tr>
<tr class="separator:aa63e91ba0deaea694f85e59d12b1468e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc6fc0445ad26fb84527cb1872bc436d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adc6fc0445ad26fb84527cb1872bc436d"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#adc6fc0445ad26fb84527cb1872bc436d">value_type</a> = T</td></tr>
<tr class="memdesc:adc6fc0445ad26fb84527cb1872bc436d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of values stored in the container. <br/></td></tr>
<tr class="separator:adc6fc0445ad26fb84527cb1872bc436d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a036683d2c237ad1643a20f1e28349e6b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a036683d2c237ad1643a20f1e28349e6b"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a036683d2c237ad1643a20f1e28349e6b">pointer</a> = typename <a class="el" href="structgmx_1_1internal_1_1SimdTraits.xhtml">SimdTraits</a>&lt; T &gt;::type *</td></tr>
<tr class="memdesc:a036683d2c237ad1643a20f1e28349e6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer to a container element. <br/></td></tr>
<tr class="separator:a036683d2c237ad1643a20f1e28349e6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee3fd31d08439e9d2c711f370e54fadf"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aee3fd31d08439e9d2c711f370e54fadf"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#aee3fd31d08439e9d2c711f370e54fadf">reference</a> = internal::SimdReference&lt; T &gt;</td></tr>
<tr class="memdesc:aee3fd31d08439e9d2c711f370e54fadf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reference to a container element. <br/></td></tr>
<tr class="separator:aee3fd31d08439e9d2c711f370e54fadf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8eddd187d2aa8753b9b340b6e545506d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8eddd187d2aa8753b9b340b6e545506d"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a8eddd187d2aa8753b9b340b6e545506d">iterator</a> = SimdIterator&lt; T &gt;</td></tr>
<tr class="memdesc:a8eddd187d2aa8753b9b340b6e545506d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Iterator type for the container. <br/></td></tr>
<tr class="separator:a8eddd187d2aa8753b9b340b6e545506d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae18f861cba1efafc6244762cd5297be0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae18f861cba1efafc6244762cd5297be0"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#ae18f861cba1efafc6244762cd5297be0">reverse_iterator</a> = std::reverse_iterator&lt; <a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a8eddd187d2aa8753b9b340b6e545506d">iterator</a> &gt;</td></tr>
<tr class="memdesc:ae18f861cba1efafc6244762cd5297be0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard reverse iterator. <br/></td></tr>
<tr class="separator:ae18f861cba1efafc6244762cd5297be0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5204b9593b3a9c201efeb784171c7579"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a5204b9593b3a9c201efeb784171c7579">SimdArrayRef</a> (<a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a036683d2c237ad1643a20f1e28349e6b">pointer</a> <a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a245a0ce8a81742f190696df48582a3c7">begin</a>, <a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a036683d2c237ad1643a20f1e28349e6b">pointer</a> <a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#ae5106f86a9838b411af49738a6f50dc9">end</a>)</td></tr>
<tr class="memdesc:a5204b9593b3a9c201efeb784171c7579"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs a reference to a particular range.  <a href="#a5204b9593b3a9c201efeb784171c7579">More...</a><br/></td></tr>
<tr class="separator:a5204b9593b3a9c201efeb784171c7579"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1c91efb5938da2e5d98f0eba3ade9b7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#aa1c91efb5938da2e5d98f0eba3ade9b7">SimdArrayRef</a> (const <a class="el" href="structgmx_1_1EmptyArrayRef.xhtml">EmptyArrayRef</a> &amp;)</td></tr>
<tr class="memdesc:aa1c91efb5938da2e5d98f0eba3ade9b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs an empty reference.  <a href="#aa1c91efb5938da2e5d98f0eba3ade9b7">More...</a><br/></td></tr>
<tr class="separator:aa1c91efb5938da2e5d98f0eba3ade9b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefbfd15fc7041c25560e8977755f7ae1"><td class="memTemplParams" colspan="2">template&lt;typename U , typename  = typename std::enable_if&lt;                         std::is_convertible&lt;typename std::remove_reference&lt;U&gt;::type::pointer,                                             pointer&gt;::value&gt;::type&gt; </td></tr>
<tr class="memitem:aefbfd15fc7041c25560e8977755f7ae1"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#aefbfd15fc7041c25560e8977755f7ae1">SimdArrayRef</a> (U &amp;&amp;o)</td></tr>
<tr class="separator:aefbfd15fc7041c25560e8977755f7ae1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a867b6b1982ef251fe960b4dfa5598727"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a867b6b1982ef251fe960b4dfa5598727"></a>
<a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a375b67a0f8545d2877232224bb32c32e">size_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a867b6b1982ef251fe960b4dfa5598727">size</a> () const </td></tr>
<tr class="memdesc:a867b6b1982ef251fe960b4dfa5598727"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the size of the container. <br/></td></tr>
<tr class="separator:a867b6b1982ef251fe960b4dfa5598727"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5f86c0310a43901a836e017407020d3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab5f86c0310a43901a836e017407020d3"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#ab5f86c0310a43901a836e017407020d3">empty</a> () const </td></tr>
<tr class="memdesc:ab5f86c0310a43901a836e017407020d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the container is empty. <br/></td></tr>
<tr class="separator:ab5f86c0310a43901a836e017407020d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a245a0ce8a81742f190696df48582a3c7"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a245a0ce8a81742f190696df48582a3c7"></a>
<a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a8eddd187d2aa8753b9b340b6e545506d">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a245a0ce8a81742f190696df48582a3c7">begin</a> () const </td></tr>
<tr class="memdesc:a245a0ce8a81742f190696df48582a3c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an iterator to the beginning of the container. <br/></td></tr>
<tr class="separator:a245a0ce8a81742f190696df48582a3c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5106f86a9838b411af49738a6f50dc9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae5106f86a9838b411af49738a6f50dc9"></a>
<a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a8eddd187d2aa8753b9b340b6e545506d">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#ae5106f86a9838b411af49738a6f50dc9">end</a> () const </td></tr>
<tr class="memdesc:ae5106f86a9838b411af49738a6f50dc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an iterator to the end of the container. <br/></td></tr>
<tr class="separator:ae5106f86a9838b411af49738a6f50dc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d827cc183213269fd50ded567b814c9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9d827cc183213269fd50ded567b814c9"></a>
<a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#aee3fd31d08439e9d2c711f370e54fadf">reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a9d827cc183213269fd50ded567b814c9">operator[]</a> (<a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a375b67a0f8545d2877232224bb32c32e">size_type</a> n)</td></tr>
<tr class="memdesc:a9d827cc183213269fd50ded567b814c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Access container element. <br/></td></tr>
<tr class="separator:a9d827cc183213269fd50ded567b814c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1dee5e05a32a45a8c2efb894b9f6cb07"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1dee5e05a32a45a8c2efb894b9f6cb07"></a>
<a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#aee3fd31d08439e9d2c711f370e54fadf">reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a1dee5e05a32a45a8c2efb894b9f6cb07">front</a> () const </td></tr>
<tr class="memdesc:a1dee5e05a32a45a8c2efb894b9f6cb07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the first element in the container. <br/></td></tr>
<tr class="separator:a1dee5e05a32a45a8c2efb894b9f6cb07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ff8a49ce22473e07bcb0718f9aec4e0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8ff8a49ce22473e07bcb0718f9aec4e0"></a>
<a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#aee3fd31d08439e9d2c711f370e54fadf">reference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a8ff8a49ce22473e07bcb0718f9aec4e0">back</a> () const </td></tr>
<tr class="memdesc:a8ff8a49ce22473e07bcb0718f9aec4e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the first element in the container. <br/></td></tr>
<tr class="separator:a8ff8a49ce22473e07bcb0718f9aec4e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a3be525338217ac4ad8a1cfa036a8f4f2"><td class="memTemplParams" colspan="2"><a class="anchor" id="a3be525338217ac4ad8a1cfa036a8f4f2"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a3be525338217ac4ad8a1cfa036a8f4f2"><td class="memTemplItemLeft" align="right" valign="top">class&#160;</td><td class="memTemplItemRight" valign="bottom"><b>SimdArrayRef</b></td></tr>
<tr class="separator:a3be525338217ac4ad8a1cfa036a8f4f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a5204b9593b3a9c201efeb784171c7579"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml">gmx::internal::SimdArrayRef</a>&lt; T &gt;::<a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml">SimdArrayRef</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a036683d2c237ad1643a20f1e28349e6b">pointer</a>&#160;</td>
          <td class="paramname"><em>begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml#a036683d2c237ad1643a20f1e28349e6b">pointer</a>&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructs a reference to a particular range. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">begin</td><td>Pointer to the beginning of a range. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">end</td><td>Pointer to the end of a range.</td></tr>
  </table>
  </dd>
</dl>
<p>Passed pointers must remain valid for the lifetime of this object. </p>

</div>
</div>
<a class="anchor" id="aa1c91efb5938da2e5d98f0eba3ade9b7"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml">gmx::internal::SimdArrayRef</a>&lt; T &gt;::<a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml">SimdArrayRef</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structgmx_1_1EmptyArrayRef.xhtml">EmptyArrayRef</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructs an empty reference. </p>
<p>This is provided for convenience, such that <a class="el" href="structgmx_1_1EmptyArrayRef.xhtml" title="Tag type to initialize empty array references. ">EmptyArrayRef</a> can be used to initialize any <a class="el" href="classgmx_1_1ArrayRef.xhtml" title="STL-like container for an interface to a C array of T (or part of a std::vector&lt;T, A&gt; or std::array&lt;T&gt;). ">ArrayRef</a>, without specifying the template type. It is not explicit to enable that usage. </p>

</div>
</div>
<a class="anchor" id="aefbfd15fc7041c25560e8977755f7ae1"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<div class="memtemplate">
template&lt;typename U , typename  = typename std::enable_if&lt;                         std::is_convertible&lt;typename std::remove_reference&lt;U&gt;::type::pointer,                                             pointer&gt;::value&gt;::type&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml">gmx::internal::SimdArrayRef</a>&lt; T &gt;::<a class="el" href="classgmx_1_1internal_1_1SimdArrayRef.xhtml">SimdArrayRef</a> </td>
          <td>(</td>
          <td class="paramtype">U &amp;&amp;&#160;</td>
          <td class="paramname"><em>o</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>src/gromacs/simd/<a class="el" href="simd__memory_8h.xhtml">simd_memory.h</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:31 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

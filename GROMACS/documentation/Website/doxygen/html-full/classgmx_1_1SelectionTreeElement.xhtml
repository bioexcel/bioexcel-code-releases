<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::SelectionTreeElement Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml">SelectionTreeElement</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="classgmx_1_1SelectionTreeElement-members.xhtml">List of all members</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a>  </div>
  <div class="headertitle">
<div class="title">gmx::SelectionTreeElement Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;gromacs/selection/selelem.h&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for gmx::SelectionTreeElement:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classgmx_1_1SelectionTreeElement__coll__graph.svg" width="1484" height="742"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Represents an element of a selection expression. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a90b6bd5da4be6d3e365dfa5bca479a33"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a90b6bd5da4be6d3e365dfa5bca479a33">SelectionTreeElement</a> (<a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46">e_selelem_t</a> <a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a736adc8c9144c93b431a77687c4f7ba2">type</a>, const <a class="el" href="structgmx_1_1SelectionLocation.xhtml">SelectionLocation</a> &amp;<a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a07dbd0d1a03452dc78fc6133703f5e60">location</a>)</td></tr>
<tr class="memdesc:a90b6bd5da4be6d3e365dfa5bca479a33"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocates memory and performs common initialization.  <a href="#a90b6bd5da4be6d3e365dfa5bca479a33">More...</a><br/></td></tr>
<tr class="separator:a90b6bd5da4be6d3e365dfa5bca479a33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae975003186d24e163d3548c47569e21b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae975003186d24e163d3548c47569e21b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#ae975003186d24e163d3548c47569e21b">freeValues</a> ()</td></tr>
<tr class="memdesc:ae975003186d24e163d3548c47569e21b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Frees the memory allocated for the <em>v</em> union. <br/></td></tr>
<tr class="separator:ae975003186d24e163d3548c47569e21b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe843015251a92095b7e43024fb1b416"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abe843015251a92095b7e43024fb1b416"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#abe843015251a92095b7e43024fb1b416">freeExpressionData</a> ()</td></tr>
<tr class="memdesc:abe843015251a92095b7e43024fb1b416"><td class="mdescLeft">&#160;</td><td class="mdescRight">Frees the memory allocated for the <em>u</em> union. <br/></td></tr>
<tr class="separator:abe843015251a92095b7e43024fb1b416"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f3df8ba32bc39724757412bdbde3045"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a1f3df8ba32bc39724757412bdbde3045">freeCompilerData</a> ()</td></tr>
<tr class="memdesc:a1f3df8ba32bc39724757412bdbde3045"><td class="mdescLeft">&#160;</td><td class="mdescRight">Frees the memory allocated for the selection compiler.  <a href="#a1f3df8ba32bc39724757412bdbde3045">More...</a><br/></td></tr>
<tr class="separator:a1f3df8ba32bc39724757412bdbde3045"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac86b86e785ad8b6436890b33629f3802"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#ac86b86e785ad8b6436890b33629f3802">mempoolReserve</a> (int count)</td></tr>
<tr class="memdesc:ac86b86e785ad8b6436890b33629f3802"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reserves memory for value from a memory pool.  <a href="#ac86b86e785ad8b6436890b33629f3802">More...</a><br/></td></tr>
<tr class="separator:ac86b86e785ad8b6436890b33629f3802"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc9d89e342d78b081aacbf1dfc724534"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#afc9d89e342d78b081aacbf1dfc724534">mempoolRelease</a> ()</td></tr>
<tr class="memdesc:afc9d89e342d78b081aacbf1dfc724534"><td class="mdescLeft">&#160;</td><td class="mdescRight">Releases memory pool used for value.  <a href="#afc9d89e342d78b081aacbf1dfc724534">More...</a><br/></td></tr>
<tr class="separator:afc9d89e342d78b081aacbf1dfc724534"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a980b2e4c094c61a455ed745baf177616"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a980b2e4c094c61a455ed745baf177616"></a>
const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a980b2e4c094c61a455ed745baf177616">name</a> () const </td></tr>
<tr class="memdesc:a980b2e4c094c61a455ed745baf177616"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the element. <br/></td></tr>
<tr class="separator:a980b2e4c094c61a455ed745baf177616"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07dbd0d1a03452dc78fc6133703f5e60"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a07dbd0d1a03452dc78fc6133703f5e60"></a>
const <a class="el" href="structgmx_1_1SelectionLocation.xhtml">SelectionLocation</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a07dbd0d1a03452dc78fc6133703f5e60">location</a> () const </td></tr>
<tr class="memdesc:a07dbd0d1a03452dc78fc6133703f5e60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the location of the element. <br/></td></tr>
<tr class="separator:a07dbd0d1a03452dc78fc6133703f5e60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a026816b0349af8280a9014e4f3d038aa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a026816b0349af8280a9014e4f3d038aa">setName</a> (const char *<a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a69e4a72bbcb657ba8b782f51d78b761c">name</a>)</td></tr>
<tr class="memdesc:a026816b0349af8280a9014e4f3d038aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the name of the element.  <a href="#a026816b0349af8280a9014e4f3d038aa">More...</a><br/></td></tr>
<tr class="separator:a026816b0349af8280a9014e4f3d038aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a391d0056f1404b7b9f8b0d5ea970e1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a1a391d0056f1404b7b9f8b0d5ea970e1">setName</a> (const std::string &amp;<a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a69e4a72bbcb657ba8b782f51d78b761c">name</a>)</td></tr>
<tr class="memdesc:a1a391d0056f1404b7b9f8b0d5ea970e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the name of the element.  <a href="#a1a391d0056f1404b7b9f8b0d5ea970e1">More...</a><br/></td></tr>
<tr class="separator:a1a391d0056f1404b7b9f8b0d5ea970e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cb314af4ffcd9792f5b7e9e4991e977"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a5cb314af4ffcd9792f5b7e9e4991e977">fillNameIfMissing</a> (const char *selectionText)</td></tr>
<tr class="memdesc:a5cb314af4ffcd9792f5b7e9e4991e977"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the name of a root element if it is missing.  <a href="#a5cb314af4ffcd9792f5b7e9e4991e977">More...</a><br/></td></tr>
<tr class="separator:a5cb314af4ffcd9792f5b7e9e4991e977"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75e1fcca2745c27907224ec15ad08161"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structgmx_1_1SelectionTopologyProperties.xhtml">SelectionTopologyProperties</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a75e1fcca2745c27907224ec15ad08161">requiredTopologyProperties</a> () const </td></tr>
<tr class="memdesc:a75e1fcca2745c27907224ec15ad08161"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns which topology properties the selection element subtree requires for evaluation.  <a href="#a75e1fcca2745c27907224ec15ad08161">More...</a><br/></td></tr>
<tr class="separator:a75e1fcca2745c27907224ec15ad08161"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58a06d39b0b3e2ea404fdc03fcf2fc64"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a58a06d39b0b3e2ea404fdc03fcf2fc64">checkUnsortedAtoms</a> (bool bUnsortedAllowed, <a class="el" href="classgmx_1_1ExceptionInitializer.xhtml">ExceptionInitializer</a> *errors) const </td></tr>
<tr class="memdesc:a58a06d39b0b3e2ea404fdc03fcf2fc64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks that this element and its children do not contain unsupported elements with unsorted atoms.  <a href="#a58a06d39b0b3e2ea404fdc03fcf2fc64">More...</a><br/></td></tr>
<tr class="separator:a58a06d39b0b3e2ea404fdc03fcf2fc64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46d06c693b1ecf4f9b461f736e5ed56a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a46d06c693b1ecf4f9b461f736e5ed56a">requiresIndexGroups</a> () const </td></tr>
<tr class="memdesc:a46d06c693b1ecf4f9b461f736e5ed56a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the element or its children have unresolved index group references.  <a href="#a46d06c693b1ecf4f9b461f736e5ed56a">More...</a><br/></td></tr>
<tr class="separator:a46d06c693b1ecf4f9b461f736e5ed56a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aced165fd2e76c0a4b347a842df08e6b3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#aced165fd2e76c0a4b347a842df08e6b3">resolveIndexGroupReference</a> (<a class="el" href="structgmx__ana__indexgrps__t.xhtml">gmx_ana_indexgrps_t</a> *grps, int natoms)</td></tr>
<tr class="memdesc:aced165fd2e76c0a4b347a842df08e6b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resolves an unresolved reference to an index group.  <a href="#aced165fd2e76c0a4b347a842df08e6b3">More...</a><br/></td></tr>
<tr class="separator:aced165fd2e76c0a4b347a842df08e6b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af88e2db8e3e6bfaa992e355687bd2f2f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#af88e2db8e3e6bfaa992e355687bd2f2f">checkIndexGroup</a> (int natoms)</td></tr>
<tr class="memdesc:af88e2db8e3e6bfaa992e355687bd2f2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks that an index group has valid atom indices.  <a href="#af88e2db8e3e6bfaa992e355687bd2f2f">More...</a><br/></td></tr>
<tr class="separator:af88e2db8e3e6bfaa992e355687bd2f2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a736adc8c9144c93b431a77687c4f7ba2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a736adc8c9144c93b431a77687c4f7ba2"></a>
<a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46">e_selelem_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a736adc8c9144c93b431a77687c4f7ba2">type</a></td></tr>
<tr class="memdesc:a736adc8c9144c93b431a77687c4f7ba2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Type of the element. <br/></td></tr>
<tr class="separator:a736adc8c9144c93b431a77687c4f7ba2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2085e80677c9c9f9e0427332fa08bc19"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structgmx__ana__selvalue__t.xhtml">gmx_ana_selvalue_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a2085e80677c9c9f9e0427332fa08bc19">v</a></td></tr>
<tr class="memdesc:a2085e80677c9c9f9e0427332fa08bc19"><td class="mdescLeft">&#160;</td><td class="mdescRight">Value storage of the element.  <a href="#a2085e80677c9c9f9e0427332fa08bc19">More...</a><br/></td></tr>
<tr class="separator:a2085e80677c9c9f9e0427332fa08bc19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2729334e9625ab9446f87dee5e2acf4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacegmx.xhtml#af63a35a5828a347c7d53a3365de983e9">sel_evalfunc</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#aa2729334e9625ab9446f87dee5e2acf4">evaluate</a></td></tr>
<tr class="memdesc:aa2729334e9625ab9446f87dee5e2acf4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluation function for the element.  <a href="#aa2729334e9625ab9446f87dee5e2acf4">More...</a><br/></td></tr>
<tr class="separator:aa2729334e9625ab9446f87dee5e2acf4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1d4776443f7193597655f14415aabab"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#ae1d4776443f7193597655f14415aabab">flags</a></td></tr>
<tr class="memdesc:ae1d4776443f7193597655f14415aabab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Information flags about the element.  <a href="#ae1d4776443f7193597655f14415aabab">More...</a><br/></td></tr>
<tr class="separator:ae1d4776443f7193597655f14415aabab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1306ac006263a789f1ac63ed62c541c1"><td class="memItemLeft" ><a class="anchor" id="a1306ac006263a789f1ac63ed62c541c1"></a>
union {</td></tr>
<tr class="memitem:a1bbf813107592d2c657da6bc2875e4a6"><td class="memItemLeft" >&#160;&#160;&#160;<a class="el" href="structgmx__ana__index__t.xhtml">gmx_ana_index_t</a>&#160;&#160;&#160;<a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#af90dd41be850fc4afbafa49fb3ce67e8">cgrp</a></td></tr>
<tr class="memdesc:a1bbf813107592d2c657da6bc2875e4a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Index group data for several element types.  <a href="#a1bbf813107592d2c657da6bc2875e4a6">More...</a><br/></td></tr>
<tr class="separator:a1bbf813107592d2c657da6bc2875e4a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e8f3d07fe249f87e8c8f8c281d53299"><td class="memItemLeft" >&#160;&#160;&#160;struct {</td></tr>
<tr class="memitem:a7b65ae7413e1654a5cfeb814bb78263f"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;struct <a class="el" href="structgmx__ana__selmethod__t.xhtml">gmx_ana_selmethod_t</a> *&#160;&#160;&#160;<a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a54e0a2e6530911e98b0b49ecb877fe76">method</a></td></tr>
<tr class="memdesc:a7b65ae7413e1654a5cfeb814bb78263f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer the the method used in this expression. <br/></td></tr>
<tr class="separator:a7b65ae7413e1654a5cfeb814bb78263f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa15506406aa13c72cbc0e8b4b92a0ba8"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;void *&#160;&#160;&#160;<a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a1173ae4061374013d0fead828f1fa4d4">mdata</a></td></tr>
<tr class="memdesc:aa15506406aa13c72cbc0e8b4b92a0ba8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer to the data allocated by the method's <code>init_data</code> (see <a class="el" href="selmethod_8h.xhtml#a5acbf2d7bead71c4d96f9e69b267df56" title="Allocates and initializes internal data and parameter values. ">sel_datafunc()</a>). <br/></td></tr>
<tr class="separator:aa15506406aa13c72cbc0e8b4b92a0ba8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeef3c53932d053fef4a2077a1896322a"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;struct <a class="el" href="structgmx__ana__pos__t.xhtml">gmx_ana_pos_t</a> *&#160;&#160;&#160;<a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#ac78b536909e9843043af491cc3df4775">pos</a></td></tr>
<tr class="memdesc:aeef3c53932d053fef4a2077a1896322a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer to the position data passed to the method. <br/></td></tr>
<tr class="separator:aeef3c53932d053fef4a2077a1896322a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7372c527d4a636031d0e486d54a13210"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;struct <a class="el" href="structgmx__ana__poscalc__t.xhtml">gmx_ana_poscalc_t</a> *&#160;&#160;&#160;<a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a16711f8089fd04a0822a56a977adfdb3">pc</a></td></tr>
<tr class="memdesc:a7372c527d4a636031d0e486d54a13210"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer to the evaluation data for <code>pos</code>. <br/></td></tr>
<tr class="separator:a7372c527d4a636031d0e486d54a13210"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e8f3d07fe249f87e8c8f8c281d53299"><td class="memItemLeft" valign="top">&#160;&#160;&#160;}&#160;&#160;&#160;<a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a7893ed74728de0ce7ee876751fc6ac25">expr</a></td></tr>
<tr class="memdesc:a2e8f3d07fe249f87e8c8f8c281d53299"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data for <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46a3d3bb644ace8fdc5beac6feed4911a1f">SEL_EXPRESSION</a> and <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46a6be1ee895a50c28639608b8b47843422">SEL_MODIFIER</a> elements. <br/></td></tr>
<tr class="separator:a2e8f3d07fe249f87e8c8f8c281d53299"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79b0bfd9fc21585b50d5eeb1c3f07e2b"><td class="memItemLeft" >&#160;&#160;&#160;<a class="el" href="selelem_8h.xhtml#ad24657d98854e03c3d6c46c37022a446">e_boolean_t</a>&#160;&#160;&#160;<a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a5681faa349b7dd17efe8c2bcdaac9804">boolt</a></td></tr>
<tr class="memdesc:a79b0bfd9fc21585b50d5eeb1c3f07e2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Operation type for <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46ae886c4e170c3abd5527de0af74ba4a45">SEL_BOOLEAN</a> elements. <br/></td></tr>
<tr class="separator:a79b0bfd9fc21585b50d5eeb1c3f07e2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ea8647176bfb0110491c6419e814393"><td class="memItemLeft" >&#160;&#160;&#160;struct {</td></tr>
<tr class="memitem:a175413b913d55cfedc860a18948cf7d6"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;<a class="el" href="selelem_8h.xhtml#a0c506fcb4663a5ee8b9340527b7178d7">e_arithmetic_t</a>&#160;&#160;&#160;<a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#ac741386565f22982c7a3ded0d569be09">type</a></td></tr>
<tr class="memdesc:a175413b913d55cfedc860a18948cf7d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Operation type. <br/></td></tr>
<tr class="separator:a175413b913d55cfedc860a18948cf7d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7c53e9df90fd644a31ff44fbf66b6bc"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;char *&#160;&#160;&#160;<a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a882b1257de051bc987e626a48bfdfd5d">opstr</a></td></tr>
<tr class="memdesc:ae7c53e9df90fd644a31ff44fbf66b6bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">String representation. <br/></td></tr>
<tr class="separator:ae7c53e9df90fd644a31ff44fbf66b6bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ea8647176bfb0110491c6419e814393"><td class="memItemLeft" valign="top">&#160;&#160;&#160;}&#160;&#160;&#160;<a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#ac08c4bb1ac78c5bbfebd69e6095345c1">arith</a></td></tr>
<tr class="memdesc:a3ea8647176bfb0110491c6419e814393"><td class="mdescLeft">&#160;</td><td class="mdescRight">Operation type for <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46a8b75dccbec633c2002ea8c8fd3639b0e">SEL_ARITHMETIC</a> elements. <br/></td></tr>
<tr class="separator:a3ea8647176bfb0110491c6419e814393"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa42fa26a6187b990e5ad97f590dc80ce"><td class="memItemLeft" >&#160;&#160;&#160;struct <a class="el" href="structgmx__ana__selparam__t.xhtml">gmx_ana_selparam_t</a> *&#160;&#160;&#160;<a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a0b4956164b6ed61094a550099fa90d3b">param</a></td></tr>
<tr class="memdesc:aa42fa26a6187b990e5ad97f590dc80ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Associated selection parameter for <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46af3e44c019a776df8511a73457f9b32b4">SEL_SUBEXPRREF</a> elements. <br/></td></tr>
<tr class="separator:aa42fa26a6187b990e5ad97f590dc80ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37a13fe534f8401929f7aa54aaea28da"><td class="memItemLeft" >&#160;&#160;&#160;struct {</td></tr>
<tr class="memitem:a60747ad9c7c34470fe4bb3374fbc4889"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;char *&#160;&#160;&#160;<a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a69e4a72bbcb657ba8b782f51d78b761c">name</a></td></tr>
<tr class="memdesc:a60747ad9c7c34470fe4bb3374fbc4889"><td class="mdescLeft">&#160;</td><td class="mdescRight">Name of the referenced external group. <br/></td></tr>
<tr class="separator:a60747ad9c7c34470fe4bb3374fbc4889"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20faf8479b5557b94efea2c07456fbeb"><td class="memItemLeft" >&#160;&#160;&#160;&#160;&#160;&#160;int&#160;&#160;&#160;<a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a46dfcd0739945171790e29857f14ce0a">id</a></td></tr>
<tr class="memdesc:a20faf8479b5557b94efea2c07456fbeb"><td class="mdescLeft">&#160;</td><td class="mdescRight">If <em>name</em> is NULL, the index number of the referenced group. <br/></td></tr>
<tr class="separator:a20faf8479b5557b94efea2c07456fbeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37a13fe534f8401929f7aa54aaea28da"><td class="memItemLeft" valign="top">&#160;&#160;&#160;}&#160;&#160;&#160;<a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a8e43c1c2d66ea5a3bc7138adc2c9e2ea">gref</a></td></tr>
<tr class="memdesc:a37a13fe534f8401929f7aa54aaea28da"><td class="mdescLeft">&#160;</td><td class="mdescRight">The string/number used to reference the group. <br/></td></tr>
<tr class="separator:a37a13fe534f8401929f7aa54aaea28da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1306ac006263a789f1ac63ed62c541c1"><td class="memItemLeft" valign="top">}&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a1306ac006263a789f1ac63ed62c541c1">u</a></td></tr>
<tr class="memdesc:a1306ac006263a789f1ac63ed62c541c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data required by the evaluation function. <br/></td></tr>
<tr class="separator:a1306ac006263a789f1ac63ed62c541c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0376436664dd47fa7608738e3534c849"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0376436664dd47fa7608738e3534c849"></a>
struct <a class="el" href="structgmx__sel__mempool__t.xhtml">gmx_sel_mempool_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a0376436664dd47fa7608738e3534c849">mempool</a></td></tr>
<tr class="memdesc:a0376436664dd47fa7608738e3534c849"><td class="mdescLeft">&#160;</td><td class="mdescRight">Memory pool to use for values, or NULL if standard memory handling. <br/></td></tr>
<tr class="separator:a0376436664dd47fa7608738e3534c849"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af30728cbc6cd5a0c0ad8e6efa91f4632"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af30728cbc6cd5a0c0ad8e6efa91f4632"></a>
<a class="el" href="structt__compiler__data.xhtml">t_compiler_data</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#af30728cbc6cd5a0c0ad8e6efa91f4632">cdata</a></td></tr>
<tr class="memdesc:af30728cbc6cd5a0c0ad8e6efa91f4632"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internal data for the selection compiler. <br/></td></tr>
<tr class="separator:af30728cbc6cd5a0c0ad8e6efa91f4632"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87e8bb0ca4b76068e2f18328b162f3b0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacegmx.xhtml#a2804c9c82f2a9bd0ec94d3c2f1003f42">SelectionTreeElementPointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a87e8bb0ca4b76068e2f18328b162f3b0">child</a></td></tr>
<tr class="memdesc:a87e8bb0ca4b76068e2f18328b162f3b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">The first child element.  <a href="#a87e8bb0ca4b76068e2f18328b162f3b0">More...</a><br/></td></tr>
<tr class="separator:a87e8bb0ca4b76068e2f18328b162f3b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fdde6f3d324aebbb90c4e12e9645485"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9fdde6f3d324aebbb90c4e12e9645485"></a>
<a class="el" href="namespacegmx.xhtml#a2804c9c82f2a9bd0ec94d3c2f1003f42">SelectionTreeElementPointer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1SelectionTreeElement.xhtml#a9fdde6f3d324aebbb90c4e12e9645485">next</a></td></tr>
<tr class="memdesc:a9fdde6f3d324aebbb90c4e12e9645485"><td class="mdescLeft">&#160;</td><td class="mdescRight">The next sibling element. <br/></td></tr>
<tr class="separator:a9fdde6f3d324aebbb90c4e12e9645485"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a90b6bd5da4be6d3e365dfa5bca479a33"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">gmx::SelectionTreeElement::SelectionTreeElement </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46">e_selelem_t</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structgmx_1_1SelectionLocation.xhtml">SelectionLocation</a> &amp;&#160;</td>
          <td class="paramname"><em>location</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allocates memory and performs common initialization. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td>Type of selection element to create. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">location</td><td>Location of the element.</td></tr>
  </table>
  </dd>
</dl>
<p><em>type</em> is set to <code>type</code>, <em>v::type</em> is set to <a class="el" href="selvalue_8h.xhtml#a70b42b87d434580bf1493591857b8beca70a2af6eafa48adfab506ceee60471f6">GROUP_VALUE</a> for boolean and comparison expressions and <a class="el" href="selvalue_8h.xhtml#a70b42b87d434580bf1493591857b8beca4d694119ce83b62d74ff06b5e017dca8">NO_VALUE</a> for others, and <a class="el" href="selelem_8h.xhtml#a6fee1910b915d2f6e873f134e297ab47">SEL_ALLOCVAL</a> is set for non-root elements (<a class="el" href="selelem_8h.xhtml#a9014d6430c86dbc2ed5a067436bcf6f4">SEL_ALLOCDATA</a> is also set for <a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46ae886c4e170c3abd5527de0af74ba4a45">SEL_BOOLEAN</a> elements). All the pointers are set to NULL. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="af88e2db8e3e6bfaa992e355687bd2f2f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionTreeElement::checkIndexGroup </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>natoms</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks that an index group has valid atom indices. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">natoms</td><td>Maximum number of atoms the selections can evaluate to. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InconsistentInputError.xhtml" title="Exception class for situations where user input is inconsistent. ">InconsistentInputError</a></td><td>if there are invalid atom indices. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a58a06d39b0b3e2ea404fdc03fcf2fc64"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionTreeElement::checkUnsortedAtoms </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bUnsortedAllowed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classgmx_1_1ExceptionInitializer.xhtml">ExceptionInitializer</a> *&#160;</td>
          <td class="paramname"><em>errors</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks that this element and its children do not contain unsupported elements with unsorted atoms. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">bUnsortedAllowed</td><td>Whether this element's parents allow it to have unsorted atoms. </td></tr>
    <tr><td class="paramdir"></td><td class="paramname">errors</td><td>Object for reporting any error messages. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory.</td></tr>
  </table>
  </dd>
</dl>
<p>Errors are reported as nested exceptions in <code>errors</code>. </p>

</div>
</div>
<a class="anchor" id="a5cb314af4ffcd9792f5b7e9e4991e977"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionTreeElement::fillNameIfMissing </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>selectionText</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the name of a root element if it is missing. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">selectionText</td><td>Full selection text to use as a fallback. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory.</td></tr>
  </table>
  </dd>
</dl>
<p>If index groups have not yet been set and the selection is a result of a group reference, the name may still be empty after this call.</p>
<p>Strong exception safety guarantee. </p>

</div>
</div>
<a class="anchor" id="a1f3df8ba32bc39724757412bdbde3045"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionTreeElement::freeCompilerData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Frees the memory allocated for the selection compiler. </p>
<p>This function only frees the data for the given selection, not its children. It is safe to call the function when compiler data has not been allocated or has already been freed; in such a case, nothing is done. </p>

</div>
</div>
<a class="anchor" id="afc9d89e342d78b081aacbf1dfc724534"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionTreeElement::mempoolRelease </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Releases memory pool used for value. </p>
<p>Releases the memory allocated for the values of this element from the <em>mempool</em> memory pool. If no memory pool is set, nothing is done. </p>

</div>
</div>
<a class="anchor" id="ac86b86e785ad8b6436890b33629f3802"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionTreeElement::mempoolReserve </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>count</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reserves memory for value from a memory pool. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Number of values to reserve memory for.</td></tr>
  </table>
  </dd>
</dl>
<p>Reserves memory for the values of this element from the <em>mempool</em> memory pool. If no memory pool is set, nothing is done. </p>

</div>
</div>
<a class="anchor" id="a75e1fcca2745c27907224ec15ad08161"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structgmx_1_1SelectionTopologyProperties.xhtml">SelectionTopologyProperties</a> gmx::SelectionTreeElement::requiredTopologyProperties </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns which topology properties the selection element subtree requires for evaluation. </p>
<dl class="section return"><dt>Returns</dt><dd>List of topology properties required for evaluation. </dd></dl>

</div>
</div>
<a class="anchor" id="a46d06c693b1ecf4f9b461f736e5ed56a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool gmx::SelectionTreeElement::requiresIndexGroups </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks whether the element or its children have unresolved index group references. </p>
<p>Does not throw. </p>

</div>
</div>
<a class="anchor" id="aced165fd2e76c0a4b347a842df08e6b3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionTreeElement::resolveIndexGroupReference </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structgmx__ana__indexgrps__t.xhtml">gmx_ana_indexgrps_t</a> *&#160;</td>
          <td class="paramname"><em>grps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>natoms</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resolves an unresolved reference to an index group. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">grps</td><td>Index groups to use to resolve the reference. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">natoms</td><td>Maximum number of atoms the selections can evaluate to (zero if the topology/atom count is not set yet). </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
    <tr><td class="paramname"><a class="el" href="classgmx_1_1InconsistentInputError.xhtml" title="Exception class for situations where user input is inconsistent. ">InconsistentInputError</a></td><td>if the reference cannot be resolved. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a026816b0349af8280a9014e4f3d038aa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionTreeElement::setName </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the name of the element. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name to set (can be NULL). </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1a391d0056f1404b7b9f8b0d5ea970e1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void gmx::SelectionTreeElement::setName </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the name of the element. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name to set (can be NULL). </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::bad_alloc</td><td>if out of memory. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="af90dd41be850fc4afbafa49fb3ce67e8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structgmx__ana__index__t.xhtml">gmx_ana_index_t</a> gmx::SelectionTreeElement::cgrp</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Index group data for several element types. </p>
<ul>
<li><a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46afae2ba2c065f70efcda76e4b7a7d17d0">SEL_CONST</a> : if the value type is <a class="el" href="selvalue_8h.xhtml#a70b42b87d434580bf1493591857b8beca70a2af6eafa48adfab506ceee60471f6">GROUP_VALUE</a>, this field holds the unprocessed group value.</li>
<li><a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46a4374c0be00e03bae94a94c4f2d88569d">SEL_ROOT</a> : holds the group value for which the selection subtree should be evaluated.</li>
<li><a class="el" href="selelem_8h.xhtml#a1f104d5c71b1198ef51acc4ef016ae46a4b01539a457afb7dbdf486c2a2e6dafb">SEL_SUBEXPR</a> : holds the group for which the subexpression has been evaluated. </li>
</ul>

</div>
</div>
<a class="anchor" id="a87e8bb0ca4b76068e2f18328b162f3b0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacegmx.xhtml#a2804c9c82f2a9bd0ec94d3c2f1003f42">SelectionTreeElementPointer</a> gmx::SelectionTreeElement::child</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The first child element. </p>
<p>Other children can be accessed through the <code>next</code> field of <code>child</code>. </p>

</div>
</div>
<a class="anchor" id="aa2729334e9625ab9446f87dee5e2acf4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacegmx.xhtml#af63a35a5828a347c7d53a3365de983e9">sel_evalfunc</a> gmx::SelectionTreeElement::evaluate</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Evaluation function for the element. </p>
<p>Can be either NULL (if the expression is a constant and does not require evaluation) or point to one of the functions defined in <a class="el" href="evaluate_8h.xhtml" title="Evaluation functions for sel_evalfunc(). ">evaluate.h</a>. </p>

</div>
</div>
<a class="anchor" id="ae1d4776443f7193597655f14415aabab"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gmx::SelectionTreeElement::flags</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Information flags about the element. </p>
<p>Allowed flags are listed here: <a class="el" href="selelem_8h.xhtml#selelem_flags">flags for gmx::SelectionTreeElement</a>. </p>

</div>
</div>
<a class="anchor" id="a2085e80677c9c9f9e0427332fa08bc19"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structgmx__ana__selvalue__t.xhtml">gmx_ana_selvalue_t</a> gmx::SelectionTreeElement::v</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Value storage of the element. </p>
<p>This field contains the evaluated value of the element, as well as the output value type. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/gromacs/selection/<a class="el" href="selelem_8h.xhtml">selelem.h</a></li>
<li>src/gromacs/selection/<a class="el" href="compiler_8cpp.xhtml">compiler.cpp</a></li>
<li>src/gromacs/selection/<a class="el" href="selelem_8cpp.xhtml">selelem.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:29 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

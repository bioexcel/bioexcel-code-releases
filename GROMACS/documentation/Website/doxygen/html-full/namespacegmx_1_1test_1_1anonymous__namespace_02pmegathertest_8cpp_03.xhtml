<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: gmx::test::anonymous_namespace{pmegathertest.cpp} Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li class="current"><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="namespaces.xhtml"><span>Namespace&#160;List</span></a></li>
      <li><a href="namespacemembers.xhtml"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespacegmx.xhtml">gmx</a></li><li class="navelem"><a class="el" href="namespacegmx_1_1test.xhtml">test</a></li><li class="navelem"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03.xhtml">anonymous_namespace{pmegathertest.cpp}</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">gmx::test::anonymous_namespace{pmegathertest.cpp} Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03_1_1AtomAndPmeOrderSizedData.xhtml">AtomAndPmeOrderSizedData</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A structure for all the spline data which depends in size both on the PME order and atom count.  <a href="structgmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03_1_1AtomAndPmeOrderSizedData.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structgmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03_1_1AtomSizedData.xhtml">AtomSizedData</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A structure for all the input atom data which depends in size on atom count - including a range of spline data for different PME orders.  <a href="structgmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03_1_1AtomSizedData.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classgmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03_1_1PmeGatherTest.xhtml">PmeGatherTest</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Test fixture.  <a href="classgmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03_1_1PmeGatherTest.xhtml#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ac86ca692904cb1a3f2d8c5a1c79ef50f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac86ca692904cb1a3f2d8c5a1c79ef50f"></a>
typedef std::map&lt; size_t, <br class="typebreak"/>
<a class="el" href="structgmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03_1_1AtomSizedData.xhtml">AtomSizedData</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03.xhtml#ac86ca692904cb1a3f2d8c5a1c79ef50f">InputDataByAtomCount</a></td></tr>
<tr class="memdesc:ac86ca692904cb1a3f2d8c5a1c79ef50f"><td class="mdescLeft">&#160;</td><td class="mdescRight">A range of the test input data sets, uniquely identified by the atom count. <br/></td></tr>
<tr class="separator:ac86ca692904cb1a3f2d8c5a1c79ef50f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3ae538c25a1d1c835f0031fc95e2b36"><td class="memItemLeft" align="right" valign="top">typedef std::tuple&lt; <a class="el" href="namespacegmx_1_1test.xhtml#a74fe68cc05ba6596ac5d7ab6a397ab5f">Matrix3x3</a>, <br class="typebreak"/>
int, <a class="el" href="namespacegmx.xhtml#a9699d31c62e2a4cc2c730793a1224411">IVec</a>, <br class="typebreak"/>
<a class="el" href="namespacegmx_1_1test.xhtml#ae3abf010984bd9d86117531d390cc818">SparseRealGridValuesInput</a>, <br class="typebreak"/>
<a class="el" href="pme_8h.xhtml#acbcd1495b351f6a99fa2bf5b10aca640">PmeForceOutputHandling</a>, size_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03.xhtml#ae3ae538c25a1d1c835f0031fc95e2b36">GatherInputParameters</a></td></tr>
<tr class="memdesc:ae3ae538c25a1d1c835f0031fc95e2b36"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convenience typedef of the test input parameters - unit cell box, PME interpolation order, grid dimensions, grid values, overwriting/reducing the input forces, atom count.  <a href="#ae3ae538c25a1d1c835f0031fc95e2b36">More...</a><br/></td></tr>
<tr class="separator:ae3ae538c25a1d1c835f0031fc95e2b36"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:aeaba9ee74c265084b5cf6c90958bbcc2"><td class="memItemLeft" align="right" valign="top">static std::vector&lt; <a class="el" href="namespacegmx_1_1test.xhtml#a74fe68cc05ba6596ac5d7ab6a397ab5f">Matrix3x3</a> &gt;<br class="typebreak"/>
 const&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03.xhtml#aeaba9ee74c265084b5cf6c90958bbcc2">c_sampleBoxes</a></td></tr>
<tr class="memdesc:aeaba9ee74c265084b5cf6c90958bbcc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">A couple of valid inputs for boxes.  <a href="#aeaba9ee74c265084b5cf6c90958bbcc2">More...</a><br/></td></tr>
<tr class="separator:aeaba9ee74c265084b5cf6c90958bbcc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8989c809b3400f51ee81d3f003eb5c5"><td class="memItemLeft" align="right" valign="top">static std::vector&lt; <a class="el" href="namespacegmx.xhtml#a9699d31c62e2a4cc2c730793a1224411">IVec</a> &gt; const&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03.xhtml#ac8989c809b3400f51ee81d3f003eb5c5">c_sampleGridSizes</a></td></tr>
<tr class="memdesc:ac8989c809b3400f51ee81d3f003eb5c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">A couple of valid inputs for grid sizes.  <a href="#ac8989c809b3400f51ee81d3f003eb5c5">More...</a><br/></td></tr>
<tr class="separator:ac8989c809b3400f51ee81d3f003eb5c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affa412741e95eb316cff6e9fb503e8cc"><td class="memItemLeft" align="right" valign="top">static std::vector&lt; <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> &gt; const&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03.xhtml#affa412741e95eb316cff6e9fb503e8cc">c_sampleChargesFull</a></td></tr>
<tr class="memdesc:affa412741e95eb316cff6e9fb503e8cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Random charges.  <a href="#affa412741e95eb316cff6e9fb503e8cc">More...</a><br/></td></tr>
<tr class="separator:affa412741e95eb316cff6e9fb503e8cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a477ff9315786b0c6048e366fad44712a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a477ff9315786b0c6048e366fad44712a"></a>
static std::vector&lt; <a class="el" href="namespacegmx.xhtml#a9699d31c62e2a4cc2c730793a1224411">IVec</a> &gt; const&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03.xhtml#a477ff9315786b0c6048e366fad44712a">c_sampleGridLineIndicesFull</a></td></tr>
<tr class="memdesc:a477ff9315786b0c6048e366fad44712a"><td class="mdescLeft">&#160;</td><td class="mdescRight">All the input atom gridline indices. <br/></td></tr>
<tr class="separator:a477ff9315786b0c6048e366fad44712a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73a32c2013fd0c7525df20024cc67458"><td class="memItemLeft" align="right" valign="top">static std::vector&lt; <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> &gt; const&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03.xhtml#a73a32c2013fd0c7525df20024cc67458">c_sampleSplineValuesFull</a></td></tr>
<tr class="memdesc:a73a32c2013fd0c7525df20024cc67458"><td class="mdescLeft">&#160;</td><td class="mdescRight">A lot of bogus input spline values - should have at list (max PME order = 5) * (DIM = 3) * (total unique atom number in all test cases = 16) values.  <a href="#a73a32c2013fd0c7525df20024cc67458">More...</a><br/></td></tr>
<tr class="separator:a73a32c2013fd0c7525df20024cc67458"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cbe219a00afb98b49f499a25a7a4746"><td class="memItemLeft" align="right" valign="top">static std::vector&lt; <a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> &gt; const&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03.xhtml#a0cbe219a00afb98b49f499a25a7a4746">c_sampleSplineDerivativesFull</a></td></tr>
<tr class="memdesc:a0cbe219a00afb98b49f499a25a7a4746"><td class="mdescLeft">&#160;</td><td class="mdescRight">A lot of bogus input spline derivatives - should have at list (max PME order = 5) * (DIM = 3) * (total unique atom number in all test cases = 16) values.  <a href="#a0cbe219a00afb98b49f499a25a7a4746">More...</a><br/></td></tr>
<tr class="separator:a0cbe219a00afb98b49f499a25a7a4746"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bc30dcaba36fd70d7a2f3ffddc2afc9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5bc30dcaba36fd70d7a2f3ffddc2afc9"></a>
static std::vector<br class="typebreak"/>
&lt; <a class="el" href="namespacegmx_1_1test.xhtml#ae3abf010984bd9d86117531d390cc818">SparseRealGridValuesInput</a> &gt;<br class="typebreak"/>
 const&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03.xhtml#a5bc30dcaba36fd70d7a2f3ffddc2afc9">c_sampleGrids</a></td></tr>
<tr class="memdesc:a5bc30dcaba36fd70d7a2f3ffddc2afc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">2 c_sample grids - only non-zero values have to be listed <br/></td></tr>
<tr class="separator:a5bc30dcaba36fd70d7a2f3ffddc2afc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a096c0d45afd6872145063fb37bfca485"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a096c0d45afd6872145063fb37bfca485"></a>
static std::vector&lt; <a class="el" href="namespacegmx.xhtml#a139c1919a9680de4ad1450f42e37d33b">RVec</a> &gt; const&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03.xhtml#a096c0d45afd6872145063fb37bfca485">c_sampleForcesFull</a></td></tr>
<tr class="memdesc:a096c0d45afd6872145063fb37bfca485"><td class="mdescLeft">&#160;</td><td class="mdescRight">Input forces for reduction. <br/></td></tr>
<tr class="separator:a096c0d45afd6872145063fb37bfca485"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a663d134f261d35582fd7bed3cd586326"><td class="memItemLeft" align="right" valign="top">static std::vector&lt; int &gt; const&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03.xhtml#a663d134f261d35582fd7bed3cd586326">pmeOrders</a></td></tr>
<tr class="memdesc:a663d134f261d35582fd7bed3cd586326"><td class="mdescLeft">&#160;</td><td class="mdescRight">PME orders to test.  <a href="#a663d134f261d35582fd7bed3cd586326">More...</a><br/></td></tr>
<tr class="separator:a663d134f261d35582fd7bed3cd586326"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f5fbfaa7dd004e1b978a4f9045029cc"><td class="memItemLeft" align="right" valign="top">static std::vector&lt; size_t &gt; const&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03.xhtml#a6f5fbfaa7dd004e1b978a4f9045029cc">atomCounts</a></td></tr>
<tr class="memdesc:a6f5fbfaa7dd004e1b978a4f9045029cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Atom counts to test.  <a href="#a6f5fbfaa7dd004e1b978a4f9045029cc">More...</a><br/></td></tr>
<tr class="separator:a6f5fbfaa7dd004e1b978a4f9045029cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="ae3ae538c25a1d1c835f0031fc95e2b36"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::tuple&lt;<a class="el" href="namespacegmx_1_1test.xhtml#a74fe68cc05ba6596ac5d7ab6a397ab5f">Matrix3x3</a>, int, <a class="el" href="namespacegmx.xhtml#a9699d31c62e2a4cc2c730793a1224411">IVec</a>, <a class="el" href="namespacegmx_1_1test.xhtml#ae3abf010984bd9d86117531d390cc818">SparseRealGridValuesInput</a>, <a class="el" href="pme_8h.xhtml#acbcd1495b351f6a99fa2bf5b10aca640">PmeForceOutputHandling</a>, size_t&gt; gmx::test::anonymous_namespace{pmegathertest.cpp}::<a class="el" href="namespacegmx_1_1test_1_1anonymous__namespace_02pmegathertest_8cpp_03.xhtml#ae3ae538c25a1d1c835f0031fc95e2b36">GatherInputParameters</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convenience typedef of the test input parameters - unit cell box, PME interpolation order, grid dimensions, grid values, overwriting/reducing the input forces, atom count. </p>
<p>The rest of the atom-related input data - gridline indices, spline theta values, spline dtheta values, atom charges - is looked up in the inputAtomDataSets_ test fixture variable. </p>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="a6f5fbfaa7dd004e1b978a4f9045029cc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;size_t&gt; const gmx::test::anonymous_namespace{pmegathertest.cpp}::atomCounts</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">    1, 2, 13</div>
<div class="line">}</div>
</div><!-- fragment -->
<p>Atom counts to test. </p>

</div>
</div>
<a class="anchor" id="aeaba9ee74c265084b5cf6c90958bbcc2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="namespacegmx_1_1test.xhtml#a74fe68cc05ba6596ac5d7ab6a397ab5f">Matrix3x3</a>&gt; const gmx::test::anonymous_namespace{pmegathertest.cpp}::c_sampleBoxes</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">    </div>
<div class="line">    <a class="code" href="namespacegmx_1_1test.xhtml#a74fe68cc05ba6596ac5d7ab6a397ab5f">Matrix3x3</a> {{</div>
<div class="line">                   8.0f, 0.0f, 0.0f,</div>
<div class="line">                   0.0f, 3.4f, 0.0f,</div>
<div class="line">                   0.0f, 0.0f, 2.0f</div>
<div class="line">               }},</div>
<div class="line">    </div>
<div class="line">    <a class="code" href="namespacegmx_1_1test.xhtml#a74fe68cc05ba6596ac5d7ab6a397ab5f">Matrix3x3</a> {{</div>
<div class="line">                   7.0f, 0.0f, 0.0f,</div>
<div class="line">                   0.0f, 4.1f, 0.0f,</div>
<div class="line">                   3.5f, 2.0f, 12.2f</div>
<div class="line">               }},</div>
<div class="line">}</div>
<div class="ttc" id="namespacegmx_1_1test_xhtml_a74fe68cc05ba6596ac5d7ab6a397ab5f"><div class="ttname"><a href="namespacegmx_1_1test.xhtml#a74fe68cc05ba6596ac5d7ab6a397ab5f">gmx::test::Matrix3x3</a></div><div class="ttdeci">std::array&lt; real, 3 *3 &gt; Matrix3x3</div><div class="ttdoc">TODO: make proper C++ matrix for the whole Gromacs, get rid of this. </div><div class="ttdef"><b>Definition:</b> pmetestcommon.h:96</div></div>
</div><!-- fragment -->
<p>A couple of valid inputs for boxes. </p>

</div>
</div>
<a class="anchor" id="affa412741e95eb316cff6e9fb503e8cc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&gt; const gmx::test::anonymous_namespace{pmegathertest.cpp}::c_sampleChargesFull</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">    4.95f, 3.11f, 3.97f, 1.08f, 2.09f, 1.1f, 4.13f, 3.31f, 2.8f, 5.83f, 5.09f, 6.1f, 2.86f, 0.24f, 5.76f, 5.19f, 0.72f</div>
<div class="line">}</div>
</div><!-- fragment -->
<p>Random charges. </p>

</div>
</div>
<a class="anchor" id="ac8989c809b3400f51ee81d3f003eb5c5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="namespacegmx.xhtml#a9699d31c62e2a4cc2c730793a1224411">IVec</a>&gt; const gmx::test::anonymous_namespace{pmegathertest.cpp}::c_sampleGridSizes</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">    <a class="code" href="namespacegmx.xhtml#a9699d31c62e2a4cc2c730793a1224411">IVec</a> {</div>
<div class="line">        16, 12, 14</div>
<div class="line">    },</div>
<div class="line">    <a class="code" href="namespacegmx.xhtml#a9699d31c62e2a4cc2c730793a1224411">IVec</a> {</div>
<div class="line">        13, 15, 11</div>
<div class="line">    }</div>
<div class="line">}</div>
<div class="ttc" id="namespacegmx_xhtml_a9699d31c62e2a4cc2c730793a1224411"><div class="ttname"><a href="namespacegmx.xhtml#a9699d31c62e2a4cc2c730793a1224411">gmx::IVec</a></div><div class="ttdeci">BasicVector&lt; int &gt; IVec</div><div class="ttdoc">Shorthand for C++ ivec-equivalent type. </div><div class="ttdef"><b>Definition:</b> vectypes.h:169</div></div>
</div><!-- fragment -->
<p>A couple of valid inputs for grid sizes. </p>

</div>
</div>
<a class="anchor" id="a0cbe219a00afb98b49f499a25a7a4746"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&gt; const gmx::test::anonymous_namespace{pmegathertest.cpp}::c_sampleSplineDerivativesFull</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">    0.82f, 0.88f, 0.83f, 0.11f, 0.93f, 0.32f, 0.71f, 0.37f, 0.69f, 0.88f, 0.11f, 0.38f, 0.25f, 0.5f, 0.36f, 0.81f, 0.78f, 0.31f, 0.66f, 0.32f, 0.27f, 0.35f, 0.53f, 0.83f, 0.08f, 0.08f, 0.94f, 0.71f, 0.65f, 0.24f, 0.13f, 0.01f, 0.33f, 0.65f, 0.24f, 0.53f, 0.45f, 0.84f, 0.33f, 0.97f, 0.31f, 0.7f, 0.03f, 0.31f, 0.41f, 0.76f, 0.12f, 0.3f, 0.57f, 0.65f, 0.87f, 0.99f, 0.42f, 0.97f, 0.32f, 0.39f, 0.73f, 0.23f, 0.03f, 0.67f, 0.97f, 0.57f, 0.42f, 0.38f, 0.54f, 0.17f, 0.53f, 0.54f, 0.18f, 0.8f, 0.76f, 0.13f, 0.29f, 0.83f, 0.77f, 0.56f, 0.4f, 0.87f, 0.36f, 0.18f, 0.59f, 0.04f, 0.05f, 0.61f, 0.26f, 0.91f, 0.62f, 0.16f, 0.89f, 0.23f, 0.26f, 0.59f, 0.33f, 0.2f, 0.49f, 0.41f, 0.25f, 0.4f, 0.16f, 0.83f,</div>
<div class="line">    0.44f, 0.82f, 0.21f, 0.95f, 0.14f, 0.8f, 0.37f, 0.31f, 0.41f, 0.53f, 0.15f, 0.85f, 0.78f, 0.17f, 0.92f, 0.03f, 0.13f, 0.2f, 0.03f, 0.33f, 0.87f, 0.38f, 0, 0.08f, 0.79f, 0.36f, 0.53f, 0.05f, 0.07f, 0.94f, 0.23f, 0.85f, 0.13f, 0.27f, 0.23f, 0.22f, 0.26f, 0.38f, 0.15f, 0.48f, 0.18f, 0.33f, 0.23f, 0.62f, 0.1f, 0.36f, 0.99f, 0.07f, 0.02f, 0.04f, 0.09f, 0.29f, 0.52f, 0.29f, 0.83f, 0.97f, 0.61f, 0.81f, 0.49f, 0.56f, 0.08f, 0.09f, 0.03f, 0.65f, 0.46f, 0.1f, 0.06f, 0.06f, 0.39f, 0.29f, 0.04f, 0.03f, 0.1f, 0.83f, 0.94f, 0.59f, 0.97f, 0.82f, 0.2f, 0.66f, 0.23f, 0.11f, 0.03f, 0.16f, 0.27f, 0.53f, 0.94f, 0.46f, 0.43f, 0.29f, 0.97f, 0.64f, 0.46f, 0.37f, 0.43f, 0.48f, 0.37f, 0.93f, 0.5f, 0.2f,</div>
<div class="line">    0.92f, 0.09f, 0.74f, 0.55f, 0.44f, 0.05f, 0.13f, 0.17f, 0.79f, 0.44f, 0.11f, 0.6f, 0.64f, 0.05f, 0.96f, 0.3f, 0.45f, 0.47f, 0.42f, 0.74f, 0.91f, 0.06f, 0.89f, 0.24f, 0.26f, 0.68f, 0.4f, 0.88f, 0.5f, 0.65f, 0.48f, 0.15f, 0.0f, 0.41f, 0.67f, 0.4f, 0.31f, 0.73f, 0.77f, 0.36f, 0.26f, 0.74f, 0.46f, 0.56f, 0.78f, 0.92f, 0.32f, 0.9f, 0.06f, 0.55f, 0.6f, 0.13f, 0.38f, 0.93f, 0.5f, 0.92f, 0.96f, 0.82f, 0.0f, 0.04f, 0.9f, 0.55f, 0.97f, 1.0f, 0.23f, 0.46f, 0.52f, 0.49f, 0.0f, 0.32f, 0.16f, 0.4f, 0.62f, 0.36f, 0.03f, 0.63f, 0.16f, 0.58f, 0.97f, 0.03f, 0.44f, 0.07f, 0.22f, 0.75f, 0.32f, 0.61f, 0.94f, 0.33f, 0.7f, 0.57f, 0.5f, 0.84f, 0.7f, 0.47f, 0.18f, 0.09f, 0.25f, 0.77f, 0.94f, 0.85f,</div>
<div class="line">    0.09f, 0.83f, 0.02f, 0.91f,</div>
<div class="line">}</div>
</div><!-- fragment -->
<p>A lot of bogus input spline derivatives - should have at list (max PME order = 5) * (DIM = 3) * (total unique atom number in all test cases = 16) values. </p>

</div>
</div>
<a class="anchor" id="a73a32c2013fd0c7525df20024cc67458"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&gt; const gmx::test::anonymous_namespace{pmegathertest.cpp}::c_sampleSplineValuesFull</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">    0.12f, 0.81f, 0.29f, 0.22f, 0.13f, 0.19f, 0.12f, 0.8f, 0.44f, 0.38f, 0.32f, 0.36f, 0.27f, 0.11f, 0.17f, 0.94f, 0.07f, 0.9f, 0.98f, 0.96f, 0.07f, 0.94f, 0.77f, 0.24f, 0.84f, 0.16f, 0.77f, 0.57f, 0.52f, 0.27f, 0.39f, 0.45f, 0.6f, 0.59f, 0.44f, 0.91f, 0.97f, 0.43f, 0.24f, 0.52f, 0.73f, 0.55f, 0.99f, 0.39f, 0.97f, 0.35f, 0.1f, 0.68f, 0.19f, 0.1f, 0.77f, 0.2f, 0.43f, 0.69f, 0.76f, 0.32f, 0.31f, 0.94f, 0.53f, 0.6f, 0.93f, 0.57f, 0.94f, 0.88f, 0.75f, 0.77f, 0.91f, 0.72f, 0.07f, 0.78f, 0.09f, 0.02f, 0.48f, 0.97f, 0.89f, 0.39f, 0.48f, 0.19f, 0.02f, 0.92f, 0.8f, 0.41f, 0.53f, 0.32f, 0.38f, 0.58f, 0.36f, 0.46f, 0.92f, 0.91f, 0.01f, 0.86f, 0.54f, 0.86f, 0.94f, 0.37f, 0.35f, 0.81f, 0.89f, 0.48f,</div>
<div class="line">    0.34f, 0.18f, 0.11f, 0.02f, 0.87f, 0.95f, 0.66f, 0.67f, 0.38f, 0.45f, 0.04f, 0.94f, 0.54f, 0.76f, 0.58f, 0.83f, 0.31f, 0.73f, 0.71f, 0.06f, 0.35f, 0.32f, 0.35f, 0.61f, 0.27f, 0.98f, 0.83f, 0.11f, 0.3f, 0.42f, 0.95f, 0.69f, 0.58f, 0.29f, 0.1f, 0.68f, 0.94f, 0.62f, 0.51f, 0.47f, 0.04f, 0.47f, 0.34f, 0.71f, 0.52f, 0.19f, 0.69f, 0.5f, 0.59f, 0.05f, 0.74f, 0.11f, 0.4f, 0.81f, 0.24f, 0.53f, 0.71f, 0.07f, 0.17f, 0.41f, 0.23f, 0.78f, 0.27f, 0.1f, 0.71f, 0.36f, 0.67f, 0.6f, 0.94f, 0.69f, 0.19f, 0.58f, 0.68f, 0.5f, 0.62f, 0.38f, 0.29f, 0.44f, 0.04f, 0.89f, 0.0f, 0.76f, 0.22f, 0.16f, 0.08f, 0.62f, 0.51f, 0.62f, 0.83f, 0.72f, 0.96f, 0.99f, 0.4f, 0.79f, 0.83f, 0.21f, 0.43f, 0.32f, 0.44f, 0.72f,</div>
<div class="line">    0.21f, 0.4f, 0.93f, 0.07f, 0.11f, 0.41f, 0.24f, 0.04f, 0.36f, 0.15f, 0.92f, 0.08f, 0.99f, 0.35f, 0.42f, 0.7f, 0.17f, 0.39f, 0.69f, 0.0f, 0.86f, 0.89f, 0.59f, 0.81f, 0.77f, 0.15f, 0.89f, 0.17f, 0.76f, 0.67f, 0.58f, 0.78f, 0.26f, 0.19f, 0.69f, 0.18f, 0.46f, 0.6f, 0.69f, 0.23f, 0.34f, 0.3f, 0.64f, 0.34f, 0.6f, 0.99f, 0.69f, 0.57f, 0.75f, 0.07f, 0.36f, 0.75f, 0.81f, 0.8f, 0.42f, 0.09f, 0.94f, 0.66f, 0.35f, 0.67f, 0.34f, 0.66f, 0.02f, 0.47f, 0.78f, 0.21f, 0.02f, 0.18f, 0.42f, 0.2f, 0.46f, 0.34f, 0.4f, 0.46f, 0.96f, 0.86f, 0.25f, 0.25f, 0.22f, 0.37f, 0.59f, 0.19f, 0.45f, 0.61f, 0.04f, 0.71f, 0.77f, 0.51f, 0.77f, 0.15f, 0.78f, 0.36f, 0.62f, 0.24f, 0.86f, 0.2f, 0.77f, 0.08f, 0.09f, 0.3f,</div>
<div class="line">    0.0f, 0.6f, 0.99f, 0.69f,</div>
<div class="line">}</div>
</div><!-- fragment -->
<p>A lot of bogus input spline values - should have at list (max PME order = 5) * (DIM = 3) * (total unique atom number in all test cases = 16) values. </p>

</div>
</div>
<a class="anchor" id="a663d134f261d35582fd7bed3cd586326"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;int&gt; const gmx::test::anonymous_namespace{pmegathertest.cpp}::pmeOrders</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{</div>
<div class="line">    3, 4, 5</div>
<div class="line">}</div>
</div><!-- fragment -->
<p>PME orders to test. </p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:31 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

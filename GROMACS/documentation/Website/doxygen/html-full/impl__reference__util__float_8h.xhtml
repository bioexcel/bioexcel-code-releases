<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/simd/impl_reference/impl_reference_util_float.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_8a21c46af9718d1f610eb513153099d7.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a46192700e9e8ed44c648f0a55ee9a53.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_32d26fbaf0abd8bf4548e7cba9bbcf59.xhtml">simd</a></li><li class="navelem"><a class="el" href="dir_4242faa404381290c30424dc74094328.xhtml">impl_reference</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">impl_reference_util_float.h File Reference<div class="ingroups"><a class="el" href="group__module__simd.xhtml">SIMD intrinsics interface (simd)</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;config.h&quot;</code><br/>
<code>#include &lt;cassert&gt;</code><br/>
<code>#include &lt;cstddef&gt;</code><br/>
<code>#include &lt;cstdint&gt;</code><br/>
<code>#include &lt;algorithm&gt;</code><br/>
<code>#include &quot;<a class="el" href="impl__reference__definitions_8h.xhtml">impl_reference_definitions.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="impl__reference__simd__float_8h.xhtml">impl_reference_simd_float.h</a>&quot;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for impl_reference_util_float.h:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="impl__reference__util__float_8h__incl.svg" width="808" height="231"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><div class="textblock"><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> This graph shows which files directly or indirectly include this file:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="impl__reference__util__float_8h__dep__incl.svg" width="2066" height="410"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Reference impl., higher-level single prec. SIMD utility functions. </p>
<dl class="section author"><dt>Author</dt><dd>Erik Lindahl <a href="#" onclick="location.href='mai'+'lto:'+'eri'+'k.'+'lin'+'da'+'hl@'+'sc'+'ili'+'fe'+'lab'+'.s'+'e'; return false;">erik.<span style="display: none;">.nosp@m.</span>lind<span style="display: none;">.nosp@m.</span>ahl@s<span style="display: none;">.nosp@m.</span>cili<span style="display: none;">.nosp@m.</span>felab<span style="display: none;">.nosp@m.</span>.se</a> </dd></dl>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga0f9f9c71226ae1d2f0065dd66e1027f0"><td class="memTemplParams" colspan="2">template&lt;int align&gt; </td></tr>
<tr class="memitem:ga0f9f9c71226ae1d2f0065dd66e1027f0"><td class="memTemplItemLeft" align="right" valign="top">static void gmx_simdcall&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga0f9f9c71226ae1d2f0065dd66e1027f0">gmx::gatherLoadTranspose</a> (const float *base, const std::int32_t offset[], SimdFloat *v0, SimdFloat *v1, SimdFloat *v2, SimdFloat *v3)</td></tr>
<tr class="memdesc:ga0f9f9c71226ae1d2f0065dd66e1027f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load 4 consecutive floats from each of GMX_SIMD_FLOAT_WIDTH offsets, and transpose into 4 SIMD float variables.  <a href="group__module__simd.xhtml#ga0f9f9c71226ae1d2f0065dd66e1027f0">More...</a><br/></td></tr>
<tr class="separator:ga0f9f9c71226ae1d2f0065dd66e1027f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6823a0b3cbc43eee3918b137d2b18384"><td class="memTemplParams" colspan="2">template&lt;int align&gt; </td></tr>
<tr class="memitem:ga6823a0b3cbc43eee3918b137d2b18384"><td class="memTemplItemLeft" align="right" valign="top">static void gmx_simdcall&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga6823a0b3cbc43eee3918b137d2b18384">gmx::gatherLoadTranspose</a> (const float *base, const std::int32_t offset[], SimdFloat *v0, SimdFloat *v1)</td></tr>
<tr class="memdesc:ga6823a0b3cbc43eee3918b137d2b18384"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load 2 consecutive floats from each of GMX_SIMD_FLOAT_WIDTH offsets, and transpose into 2 SIMD float variables.  <a href="group__module__simd.xhtml#ga6823a0b3cbc43eee3918b137d2b18384">More...</a><br/></td></tr>
<tr class="separator:ga6823a0b3cbc43eee3918b137d2b18384"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa5581add75787fa1304acdac5af0ad7d"><td class="memTemplParams" colspan="2">template&lt;int align&gt; </td></tr>
<tr class="memitem:gaa5581add75787fa1304acdac5af0ad7d"><td class="memTemplItemLeft" align="right" valign="top">static void gmx_simdcall&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#gaa5581add75787fa1304acdac5af0ad7d">gmx::gatherLoadUTranspose</a> (const float *base, const std::int32_t offset[], SimdFloat *v0, SimdFloat *v1, SimdFloat *v2)</td></tr>
<tr class="memdesc:gaa5581add75787fa1304acdac5af0ad7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load 3 consecutive floats from each of GMX_SIMD_FLOAT_WIDTH offsets, and transpose into 3 SIMD float variables.  <a href="group__module__simd.xhtml#gaa5581add75787fa1304acdac5af0ad7d">More...</a><br/></td></tr>
<tr class="separator:gaa5581add75787fa1304acdac5af0ad7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaba67dbea2a790730dfa78999209959b2"><td class="memTemplParams" colspan="2">template&lt;int align&gt; </td></tr>
<tr class="memitem:gaba67dbea2a790730dfa78999209959b2"><td class="memTemplItemLeft" align="right" valign="top">static void gmx_simdcall&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#gaba67dbea2a790730dfa78999209959b2">gmx::transposeScatterStoreU</a> (float *base, const std::int32_t offset[], SimdFloat v0, SimdFloat v1, SimdFloat v2)</td></tr>
<tr class="memdesc:gaba67dbea2a790730dfa78999209959b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transpose and store 3 SIMD floats to 3 consecutive addresses at GMX_SIMD_FLOAT_WIDTH offsets.  <a href="group__module__simd.xhtml#gaba67dbea2a790730dfa78999209959b2">More...</a><br/></td></tr>
<tr class="separator:gaba67dbea2a790730dfa78999209959b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac36c2fd8a466fb309ba9ae1dbf8dffbd"><td class="memTemplParams" colspan="2">template&lt;int align&gt; </td></tr>
<tr class="memitem:gac36c2fd8a466fb309ba9ae1dbf8dffbd"><td class="memTemplItemLeft" align="right" valign="top">static void gmx_simdcall&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#gac36c2fd8a466fb309ba9ae1dbf8dffbd">gmx::transposeScatterIncrU</a> (float *base, const std::int32_t offset[], SimdFloat v0, SimdFloat v1, SimdFloat v2)</td></tr>
<tr class="memdesc:gac36c2fd8a466fb309ba9ae1dbf8dffbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transpose and add 3 SIMD floats to 3 consecutive addresses at GMX_SIMD_FLOAT_WIDTH offsets.  <a href="group__module__simd.xhtml#gac36c2fd8a466fb309ba9ae1dbf8dffbd">More...</a><br/></td></tr>
<tr class="separator:gac36c2fd8a466fb309ba9ae1dbf8dffbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6889b6665cbfc5fa0bce09fe5db5e49c"><td class="memTemplParams" colspan="2">template&lt;int align&gt; </td></tr>
<tr class="memitem:ga6889b6665cbfc5fa0bce09fe5db5e49c"><td class="memTemplItemLeft" align="right" valign="top">static void gmx_simdcall&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga6889b6665cbfc5fa0bce09fe5db5e49c">gmx::transposeScatterDecrU</a> (float *base, const std::int32_t offset[], SimdFloat v0, SimdFloat v1, SimdFloat v2)</td></tr>
<tr class="memdesc:ga6889b6665cbfc5fa0bce09fe5db5e49c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transpose and subtract 3 SIMD floats to 3 consecutive addresses at GMX_SIMD_FLOAT_WIDTH offsets.  <a href="group__module__simd.xhtml#ga6889b6665cbfc5fa0bce09fe5db5e49c">More...</a><br/></td></tr>
<tr class="separator:ga6889b6665cbfc5fa0bce09fe5db5e49c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga82af54acc2b9eae6e58b646b5022aef5"><td class="memItemLeft" align="right" valign="top">static void gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga82af54acc2b9eae6e58b646b5022aef5">gmx::expandScalarsToTriplets</a> (SimdFloat scalar, SimdFloat *triplets0, SimdFloat *triplets1, SimdFloat *triplets2)</td></tr>
<tr class="memdesc:ga82af54acc2b9eae6e58b646b5022aef5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Expand each element of float SIMD variable into three identical consecutive elements in three SIMD outputs.  <a href="group__module__simd.xhtml#ga82af54acc2b9eae6e58b646b5022aef5">More...</a><br/></td></tr>
<tr class="separator:ga82af54acc2b9eae6e58b646b5022aef5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac7ba60b7340036a984888bbca43616e4"><td class="memTemplParams" colspan="2">template&lt;int align&gt; </td></tr>
<tr class="memitem:gac7ba60b7340036a984888bbca43616e4"><td class="memTemplItemLeft" align="right" valign="top">static void gmx_simdcall&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#gac7ba60b7340036a984888bbca43616e4">gmx::gatherLoadBySimdIntTranspose</a> (const float *base, SimdFInt32 offset, SimdFloat *v0, SimdFloat *v1, SimdFloat *v2, SimdFloat *v3)</td></tr>
<tr class="memdesc:gac7ba60b7340036a984888bbca43616e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load 4 consecutive floats from each of GMX_SIMD_FLOAT_WIDTH offsets specified by a SIMD integer, transpose into 4 SIMD float variables.  <a href="group__module__simd.xhtml#gac7ba60b7340036a984888bbca43616e4">More...</a><br/></td></tr>
<tr class="separator:gac7ba60b7340036a984888bbca43616e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b26c79db832542ab73a692f7db941c2"><td class="memTemplParams" colspan="2">template&lt;int align&gt; </td></tr>
<tr class="memitem:ga4b26c79db832542ab73a692f7db941c2"><td class="memTemplItemLeft" align="right" valign="top">static void gmx_simdcall&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga4b26c79db832542ab73a692f7db941c2">gmx::gatherLoadUBySimdIntTranspose</a> (const float *base, SimdFInt32 offset, SimdFloat *v0, SimdFloat *v1)</td></tr>
<tr class="memdesc:ga4b26c79db832542ab73a692f7db941c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load 2 consecutive floats from each of GMX_SIMD_FLOAT_WIDTH offsets (unaligned) specified by SIMD integer, transpose into 2 SIMD floats.  <a href="group__module__simd.xhtml#ga4b26c79db832542ab73a692f7db941c2">More...</a><br/></td></tr>
<tr class="separator:ga4b26c79db832542ab73a692f7db941c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga98bde531b096434095b228308e7a3025"><td class="memTemplParams" colspan="2">template&lt;int align&gt; </td></tr>
<tr class="memitem:ga98bde531b096434095b228308e7a3025"><td class="memTemplItemLeft" align="right" valign="top">static void gmx_simdcall&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga98bde531b096434095b228308e7a3025">gmx::gatherLoadBySimdIntTranspose</a> (const float *base, SimdFInt32 offset, SimdFloat *v0, SimdFloat *v1)</td></tr>
<tr class="memdesc:ga98bde531b096434095b228308e7a3025"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load 2 consecutive floats from each of GMX_SIMD_FLOAT_WIDTH offsets specified by a SIMD integer, transpose into 2 SIMD float variables.  <a href="group__module__simd.xhtml#ga98bde531b096434095b228308e7a3025">More...</a><br/></td></tr>
<tr class="separator:ga98bde531b096434095b228308e7a3025"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1e64aefa14afa2f473c4db52e82d4a99"><td class="memItemLeft" align="right" valign="top">static float gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#ga1e64aefa14afa2f473c4db52e82d4a99">gmx::reduceIncr4ReturnSum</a> (float *m, SimdFloat v0, SimdFloat v1, SimdFloat v2, SimdFloat v3)</td></tr>
<tr class="memdesc:ga1e64aefa14afa2f473c4db52e82d4a99"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reduce each of four SIMD floats, add those values to four consecutive floats in memory, return sum.  <a href="group__module__simd.xhtml#ga1e64aefa14afa2f473c4db52e82d4a99">More...</a><br/></td></tr>
<tr class="separator:ga1e64aefa14afa2f473c4db52e82d4a99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Higher-level SIMD utilities accessing partial (half-width) SIMD floats.</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>These functions are optional. The are only useful for SIMD implementation where the width is 8 or larger, and where it would be inefficient to process 4*8, 8*8, or more, interactions in parallel.</p>
<p>Currently, only Intel provides very wide SIMD implementations, but these also come with excellent support for loading, storing, accessing and shuffling parts of the register in so-called 'lanes' of 4 bytes each. We can use this to load separate parts into the low/high halves of the register in the inner loop of the nonbonded kernel, which e.g. makes it possible to process 4*4 nonbonded interactions as a pattern of 2*8. We can also use implementations with width 16 or greater.</p>
<p>To make this more generic, when <a class="el" href="group__module__simd.xhtml#ga0d9f8d6284ecbbd135b89f2ad8999839">GMX_SIMD_HAVE_HSIMD_UTIL_REAL</a> is 1, the SIMD implementation provides seven special routines that:</p>
<ul>
<li>Load the low/high parts of a SIMD variable from different pointers</li>
<li>Load half the SIMD width from one pointer, and duplicate in low/high parts</li>
<li>Load two reals, put 1st one in all low elements, and 2nd in all high ones.</li>
<li>Store the low/high parts of a SIMD variable to different pointers</li>
<li>Subtract both SIMD halves from a single half-SIMD-width memory location.</li>
<li>Load aligned pairs (LJ parameters) from two base pointers, with a common offset list, and put these in the low/high SIMD halves.</li>
<li>Reduce each half of two SIMD registers (i.e., 4 parts in total), increment four adjacent memory positions, and return the total sum.</li>
</ul>
<p>Remember: this is ONLY used when the native SIMD width is large. You will just waste time if you implement it for normal 16-byte SIMD architectures.</p>
<p>This is part of the new C++ SIMD interface, so these functions are only available when using C++. Since some Gromacs code reliying on the SIMD module is still C (not C++), we have kept the C-style naming for now - this will change once we are entirely C++. </p>
</div></td></tr>
<tr class="memitem:a22b5bada57cd592ed73c5af81953f4b1"><td class="memItemLeft" align="right" valign="top">static SimdFloat gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a22b5bada57cd592ed73c5af81953f4b1">gmx::loadDualHsimd</a> (const float *m0, const float *m1)</td></tr>
<tr class="memdesc:a22b5bada57cd592ed73c5af81953f4b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load low &amp; high parts of SIMD float from different locations.  <a href="#a22b5bada57cd592ed73c5af81953f4b1">More...</a><br/></td></tr>
<tr class="separator:a22b5bada57cd592ed73c5af81953f4b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62c7b5f1de8725256644546b05e3e63b"><td class="memItemLeft" align="right" valign="top">static SimdFloat gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a62c7b5f1de8725256644546b05e3e63b">gmx::loadDuplicateHsimd</a> (const float *m)</td></tr>
<tr class="memdesc:a62c7b5f1de8725256644546b05e3e63b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load half-SIMD-width float data, spread to both halves.  <a href="#a62c7b5f1de8725256644546b05e3e63b">More...</a><br/></td></tr>
<tr class="separator:a62c7b5f1de8725256644546b05e3e63b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2f2cb5527d6f6dcdefbec1592207da5"><td class="memItemLeft" align="right" valign="top">static SimdFloat gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#ab2f2cb5527d6f6dcdefbec1592207da5">gmx::loadU1DualHsimd</a> (const float *m)</td></tr>
<tr class="memdesc:ab2f2cb5527d6f6dcdefbec1592207da5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load two floats, spread 1st in low half, 2nd in high half.  <a href="#ab2f2cb5527d6f6dcdefbec1592207da5">More...</a><br/></td></tr>
<tr class="separator:ab2f2cb5527d6f6dcdefbec1592207da5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e9a1e1e45a47398ab3d7eb1732d9abc"><td class="memItemLeft" align="right" valign="top">static void gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a5e9a1e1e45a47398ab3d7eb1732d9abc">gmx::storeDualHsimd</a> (float *m0, float *m1, SimdFloat a)</td></tr>
<tr class="memdesc:a5e9a1e1e45a47398ab3d7eb1732d9abc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Store low &amp; high parts of SIMD float to different locations.  <a href="#a5e9a1e1e45a47398ab3d7eb1732d9abc">More...</a><br/></td></tr>
<tr class="separator:a5e9a1e1e45a47398ab3d7eb1732d9abc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02c414f8f25b517e035764998720dd1c"><td class="memItemLeft" align="right" valign="top">static void gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a02c414f8f25b517e035764998720dd1c">gmx::incrDualHsimd</a> (float *m0, float *m1, SimdFloat a)</td></tr>
<tr class="memdesc:a02c414f8f25b517e035764998720dd1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add each half of SIMD variable to separate memory adresses.  <a href="#a02c414f8f25b517e035764998720dd1c">More...</a><br/></td></tr>
<tr class="separator:a02c414f8f25b517e035764998720dd1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab498b7b673584374b736bb2299575f3b"><td class="memItemLeft" align="right" valign="top">static void gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#ab498b7b673584374b736bb2299575f3b">gmx::decrHsimd</a> (float *m, SimdFloat a)</td></tr>
<tr class="memdesc:ab498b7b673584374b736bb2299575f3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the two halves of a SIMD float, subtract the sum from half-SIMD-width consecutive floats in memory.  <a href="#ab498b7b673584374b736bb2299575f3b">More...</a><br/></td></tr>
<tr class="separator:ab498b7b673584374b736bb2299575f3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11666cd65bdfee331799b2c1dc732c60"><td class="memTemplParams" colspan="2">template&lt;int align&gt; </td></tr>
<tr class="memitem:a11666cd65bdfee331799b2c1dc732c60"><td class="memTemplItemLeft" align="right" valign="top">static void gmx_simdcall&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a11666cd65bdfee331799b2c1dc732c60">gmx::gatherLoadTransposeHsimd</a> (const float *base0, const float *base1, const std::int32_t offset[], SimdFloat *v0, SimdFloat *v1)</td></tr>
<tr class="memdesc:a11666cd65bdfee331799b2c1dc732c60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load 2 consecutive floats from each of GMX_SIMD_FLOAT_WIDTH/2 offsets, transpose into SIMD float (low half from base0, high from base1).  <a href="#a11666cd65bdfee331799b2c1dc732c60">More...</a><br/></td></tr>
<tr class="separator:a11666cd65bdfee331799b2c1dc732c60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab658dd5cd12d3a06f13bc4b36de8ef97"><td class="memItemLeft" align="right" valign="top">static float gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#ab658dd5cd12d3a06f13bc4b36de8ef97">gmx::reduceIncr4ReturnSumHsimd</a> (float *m, SimdFloat v0, SimdFloat v1)</td></tr>
<tr class="memdesc:ab658dd5cd12d3a06f13bc4b36de8ef97"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reduce the 4 half-SIMD-with floats in 2 SIMD variables (sum halves), increment four consecutive floats in memory, return sum.  <a href="#ab658dd5cd12d3a06f13bc4b36de8ef97">More...</a><br/></td></tr>
<tr class="separator:ab658dd5cd12d3a06f13bc4b36de8ef97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c940b444e69a8b8ace1f4edb676712b"><td class="memItemLeft" align="right" valign="top">static SimdFloat gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a2c940b444e69a8b8ace1f4edb676712b">gmx::loadUNDuplicate4</a> (const float *m)</td></tr>
<tr class="memdesc:a2c940b444e69a8b8ace1f4edb676712b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load N floats and duplicate them 4 times each.  <a href="#a2c940b444e69a8b8ace1f4edb676712b">More...</a><br/></td></tr>
<tr class="separator:a2c940b444e69a8b8ace1f4edb676712b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb7fd8f79d0826a5bd8639bae5e81a52"><td class="memItemLeft" align="right" valign="top">static SimdFloat gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#adb7fd8f79d0826a5bd8639bae5e81a52">gmx::load4DuplicateN</a> (const float *m)</td></tr>
<tr class="memdesc:adb7fd8f79d0826a5bd8639bae5e81a52"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load 4 floats and duplicate them N times each.  <a href="#adb7fd8f79d0826a5bd8639bae5e81a52">More...</a><br/></td></tr>
<tr class="separator:adb7fd8f79d0826a5bd8639bae5e81a52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d2166ee15a19367373fdbe5ca180dc4"><td class="memItemLeft" align="right" valign="top">static SimdFloat gmx_simdcall&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacegmx.xhtml#a5d2166ee15a19367373fdbe5ca180dc4">gmx::loadU4NOffset</a> (const float *m, int offset)</td></tr>
<tr class="memdesc:a5d2166ee15a19367373fdbe5ca180dc4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load floats in blocks of 4 at fixed offsets.  <a href="#a5d2166ee15a19367373fdbe5ca180dc4">More...</a><br/></td></tr>
<tr class="separator:a5d2166ee15a19367373fdbe5ca180dc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:gacc4ad17022538e3d670e55694e55ccc2"><td class="memItemLeft" align="right" valign="top">static const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__module__simd.xhtml#gacc4ad17022538e3d670e55694e55ccc2">gmx::c_simdBestPairAlignmentFloat</a> = 2</td></tr>
<tr class="memdesc:gacc4ad17022538e3d670e55694e55ccc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Best alignment to use for aligned pairs of float data.  <a href="group__module__simd.xhtml#gacc4ad17022538e3d670e55694e55ccc2">More...</a><br/></td></tr>
<tr class="separator:gacc4ad17022538e3d670e55694e55ccc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:18 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>

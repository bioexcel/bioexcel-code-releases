<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>Gromacs: src/gromacs/pbcutil/pbc.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Gromacs
   &#160;<span id="projectnumber">2018.3</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="pages.xhtml"><span>Other&#160;Docs</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Groups</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(12)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_8a21c46af9718d1f610eb513153099d7.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_a46192700e9e8ed44c648f0a55ee9a53.xhtml">gromacs</a></li><li class="navelem"><a class="el" href="dir_86075d52fc32ee046a6f1b95a156ba02.xhtml">pbcutil</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">pbc.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="gmxpre_8h.xhtml">gmxpre.h</a>&quot;</code><br/>
<code>#include &quot;pbc.h&quot;</code><br/>
<code>#include &lt;cmath&gt;</code><br/>
<code>#include &lt;algorithm&gt;</code><br/>
<code>#include &quot;<a class="el" href="functions_8h.xhtml">gromacs/math/functions.h</a>&quot;</code><br/>
<code>#include &quot;gromacs/math/units.h&quot;</code><br/>
<code>#include &quot;gromacs/math/utilities.h&quot;</code><br/>
<code>#include &quot;gromacs/math/vec.h&quot;</code><br/>
<code>#include &quot;gromacs/math/vecdump.h&quot;</code><br/>
<code>#include &quot;gromacs/pbcutil/ishift.h&quot;</code><br/>
<code>#include &quot;gromacs/pbcutil/mshift.h&quot;</code><br/>
<code>#include &quot;<a class="el" href="exceptions_8h.xhtml">gromacs/utility/exceptions.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="fatalerror_8h.xhtml">gromacs/utility/fatalerror.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="gmxassert_8h.xhtml">gromacs/utility/gmxassert.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="smalloc_8h.xhtml">gromacs/utility/smalloc.h</a>&quot;</code><br/>
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for pbc.cpp:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="pbc_8cpp__incl.svg" width="1915" height="366"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><a name="details" id="details"></a><h2 class="groupheader">Description</h2>
<div class="textblock"><p>Implements routines in pbc.h. </p>
<p>Utility functions for handling periodic boundary conditions. Mainly used in analysis tools. </p>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:af018a39ef1d0afbfb20d2dc29bffa542"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af018a39ef1d0afbfb20d2dc29bffa542"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#af018a39ef1d0afbfb20d2dc29bffa542">BOX_MARGIN</a>&#160;&#160;&#160;1.0010</td></tr>
<tr class="memdesc:af018a39ef1d0afbfb20d2dc29bffa542"><td class="mdescLeft">&#160;</td><td class="mdescRight">Margin factor for error message. <br/></td></tr>
<tr class="separator:af018a39ef1d0afbfb20d2dc29bffa542"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abce7843cbe1904c9d28a0ca58d360d06"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abce7843cbe1904c9d28a0ca58d360d06"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#abce7843cbe1904c9d28a0ca58d360d06">BOX_MARGIN_CORRECT</a>&#160;&#160;&#160;1.0005</td></tr>
<tr class="memdesc:abce7843cbe1904c9d28a0ca58d360d06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Margin correction if the box is too skewed. <br/></td></tr>
<tr class="separator:abce7843cbe1904c9d28a0ca58d360d06"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a4efaf4e07364d6302f598569aa7e55dc"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom">{ <br/>
&#160;&#160;<b>epbcdxRECTANGULAR</b> = 1, 
<b>epbcdxTRICLINIC</b>, 
<b>epbcdx2D_RECT</b>, 
<b>epbcdx2D_TRIC</b>, 
<br/>
&#160;&#160;<b>epbcdx1D_RECT</b>, 
<b>epbcdx1D_TRIC</b>, 
<b>epbcdxSCREW_RECT</b>, 
<b>epbcdxSCREW_TRIC</b>, 
<br/>
&#160;&#160;<b>epbcdxNOPBC</b>, 
<b>epbcdxUNSUPPORTED</b>
<br/>
 }</td></tr>
<tr class="separator:a4efaf4e07364d6302f598569aa7e55dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ae7ce349d6a26970b979fb91e3d216dd1"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#ae7ce349d6a26970b979fb91e3d216dd1">ePBC2npbcdim</a> (int ePBC)</td></tr>
<tr class="memdesc:ae7ce349d6a26970b979fb91e3d216dd1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of dimensions that use pbc.  <a href="#ae7ce349d6a26970b979fb91e3d216dd1">More...</a><br/></td></tr>
<tr class="separator:ae7ce349d6a26970b979fb91e3d216dd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04742edf90899bcb8f2ece6c28d8c89e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#a04742edf90899bcb8f2ece6c28d8c89e">dump_pbc</a> (FILE *fp, <a class="el" href="structt__pbc.xhtml">t_pbc</a> *pbc)</td></tr>
<tr class="memdesc:a04742edf90899bcb8f2ece6c28d8c89e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dump the contents of the pbc structure to the file.  <a href="#a04742edf90899bcb8f2ece6c28d8c89e">More...</a><br/></td></tr>
<tr class="separator:a04742edf90899bcb8f2ece6c28d8c89e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1cc069504f3a03200ae926f555981fc"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#ae1cc069504f3a03200ae926f555981fc">check_box</a> (int ePBC, const matrix box)</td></tr>
<tr class="memdesc:ae1cc069504f3a03200ae926f555981fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check the box for consistency.  <a href="#ae1cc069504f3a03200ae926f555981fc">More...</a><br/></td></tr>
<tr class="separator:ae1cc069504f3a03200ae926f555981fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec6c71950b4b9e1c90429eff68ea4168"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#aec6c71950b4b9e1c90429eff68ea4168">matrix_convert</a> (matrix box, const rvec vec, const rvec angleInDegrees)</td></tr>
<tr class="memdesc:aec6c71950b4b9e1c90429eff68ea4168"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates box matrix from edge lengths and angles.  <a href="#aec6c71950b4b9e1c90429eff68ea4168">More...</a><br/></td></tr>
<tr class="separator:aec6c71950b4b9e1c90429eff68ea4168"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ee1fb60c67a9252ac14402f3c882393"><td class="memItemLeft" align="right" valign="top"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#a7ee1fb60c67a9252ac14402f3c882393">max_cutoff2</a> (int ePBC, const matrix box)</td></tr>
<tr class="memdesc:a7ee1fb60c67a9252ac14402f3c882393"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute the maximum cutoff for the box.  <a href="#a7ee1fb60c67a9252ac14402f3c882393">More...</a><br/></td></tr>
<tr class="separator:a7ee1fb60c67a9252ac14402f3c882393"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3b98e90dd667880bc7104c7f5cf33bb"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#aa3b98e90dd667880bc7104c7f5cf33bb">guess_ePBC</a> (const matrix box)</td></tr>
<tr class="memdesc:aa3b98e90dd667880bc7104c7f5cf33bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Guess PBC typr.  <a href="#aa3b98e90dd667880bc7104c7f5cf33bb">More...</a><br/></td></tr>
<tr class="separator:aa3b98e90dd667880bc7104c7f5cf33bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0e031c9c240880dba4e8fed199c77a5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad0e031c9c240880dba4e8fed199c77a5"></a>
static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#ad0e031c9c240880dba4e8fed199c77a5">correct_box_elem</a> (FILE *fplog, int step, tensor box, int v, int d)</td></tr>
<tr class="memdesc:ad0e031c9c240880dba4e8fed199c77a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the box still obeys the restrictions, if not, correct it. <br/></td></tr>
<tr class="separator:ad0e031c9c240880dba4e8fed199c77a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a910a537097d66e38a3c42222d78a9c9c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#a910a537097d66e38a3c42222d78a9c9c">correct_box</a> (FILE *fplog, int step, tensor box, t_graph *graph)</td></tr>
<tr class="memdesc:a910a537097d66e38a3c42222d78a9c9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Corrects the box if necessary.  <a href="#a910a537097d66e38a3c42222d78a9c9c">More...</a><br/></td></tr>
<tr class="separator:a910a537097d66e38a3c42222d78a9c9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78b1ef201a4d3acae7ef1115bab5edf9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a78b1ef201a4d3acae7ef1115bab5edf9"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#a78b1ef201a4d3acae7ef1115bab5edf9">low_set_pbc</a> (<a class="el" href="structt__pbc.xhtml">t_pbc</a> *pbc, int ePBC, const ivec dd_pbc, const matrix box)</td></tr>
<tr class="memdesc:a78b1ef201a4d3acae7ef1115bab5edf9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Do the real arithmetic for filling the pbc struct. <br/></td></tr>
<tr class="separator:a78b1ef201a4d3acae7ef1115bab5edf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab40201bc08010820cb8626b9a5fbe1cb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#ab40201bc08010820cb8626b9a5fbe1cb">set_pbc</a> (<a class="el" href="structt__pbc.xhtml">t_pbc</a> *pbc, int ePBC, const matrix box)</td></tr>
<tr class="memdesc:ab40201bc08010820cb8626b9a5fbe1cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initiate the periodic boundary condition algorithms.  <a href="#ab40201bc08010820cb8626b9a5fbe1cb">More...</a><br/></td></tr>
<tr class="separator:ab40201bc08010820cb8626b9a5fbe1cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbc1fe78042a0c6f7e557fbb4bad91ee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structt__pbc.xhtml">t_pbc</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#abbc1fe78042a0c6f7e557fbb4bad91ee">set_pbc_dd</a> (<a class="el" href="structt__pbc.xhtml">t_pbc</a> *pbc, int ePBC, const ivec domdecCells, <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> bSingleDir, const matrix box)</td></tr>
<tr class="memdesc:abbc1fe78042a0c6f7e557fbb4bad91ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initiate the periodic boundary condition algorithms.  <a href="#abbc1fe78042a0c6f7e557fbb4bad91ee">More...</a><br/></td></tr>
<tr class="separator:abbc1fe78042a0c6f7e557fbb4bad91ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d6a489816eadddbdbd19509b0ff5e46"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#a9d6a489816eadddbdbd19509b0ff5e46">pbc_dx</a> (const <a class="el" href="structt__pbc.xhtml">t_pbc</a> *pbc, const rvec x1, const rvec x2, rvec dx)</td></tr>
<tr class="memdesc:a9d6a489816eadddbdbd19509b0ff5e46"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute distance with PBC.  <a href="#a9d6a489816eadddbdbd19509b0ff5e46">More...</a><br/></td></tr>
<tr class="separator:a9d6a489816eadddbdbd19509b0ff5e46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4493bda77a264b3e5e060e5be15e40ac"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#a4493bda77a264b3e5e060e5be15e40ac">pbc_dx_aiuc</a> (const <a class="el" href="structt__pbc.xhtml">t_pbc</a> *pbc, const rvec x1, const rvec x2, rvec dx)</td></tr>
<tr class="memdesc:a4493bda77a264b3e5e060e5be15e40ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute distance vector for simple PBC types.  <a href="#a4493bda77a264b3e5e060e5be15e40ac">More...</a><br/></td></tr>
<tr class="separator:a4493bda77a264b3e5e060e5be15e40ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8b82070cfe00adb5de6c225e7b2266a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#ab8b82070cfe00adb5de6c225e7b2266a">pbc_dx_d</a> (const <a class="el" href="structt__pbc.xhtml">t_pbc</a> *pbc, const dvec x1, const dvec x2, dvec dx)</td></tr>
<tr class="memdesc:ab8b82070cfe00adb5de6c225e7b2266a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute distance vector in double precision.  <a href="#ab8b82070cfe00adb5de6c225e7b2266a">More...</a><br/></td></tr>
<tr class="separator:ab8b82070cfe00adb5de6c225e7b2266a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed4eb588362a25ae4e27c50ce18d2a61"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#aed4eb588362a25ae4e27c50ce18d2a61">calc_shifts</a> (const matrix box, rvec shift_vec[])</td></tr>
<tr class="memdesc:aed4eb588362a25ae4e27c50ce18d2a61"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes shift vectors.  <a href="#aed4eb588362a25ae4e27c50ce18d2a61">More...</a><br/></td></tr>
<tr class="separator:aed4eb588362a25ae4e27c50ce18d2a61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d6c4b7f68e35e4a12fc61762403e8a5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#a3d6c4b7f68e35e4a12fc61762403e8a5">calc_box_center</a> (int ecenter, const matrix box, rvec box_center)</td></tr>
<tr class="memdesc:a3d6c4b7f68e35e4a12fc61762403e8a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the center of the box.  <a href="#a3d6c4b7f68e35e4a12fc61762403e8a5">More...</a><br/></td></tr>
<tr class="separator:a3d6c4b7f68e35e4a12fc61762403e8a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeaad96a6543848974a05bdb231082e15"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#aeaad96a6543848974a05bdb231082e15">calc_triclinic_images</a> (const matrix box, rvec img[])</td></tr>
<tr class="memdesc:aeaad96a6543848974a05bdb231082e15"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the NTRICIMG box images.  <a href="#aeaad96a6543848974a05bdb231082e15">More...</a><br/></td></tr>
<tr class="separator:aeaad96a6543848974a05bdb231082e15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad86e69f233a6305b3eb3d2a863a6dd6f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#ad86e69f233a6305b3eb3d2a863a6dd6f">calc_compact_unitcell_vertices</a> (int ecenter, const matrix box, rvec vert[])</td></tr>
<tr class="memdesc:ad86e69f233a6305b3eb3d2a863a6dd6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the NCUCVERT vertices of a compact unitcell.  <a href="#ad86e69f233a6305b3eb3d2a863a6dd6f">More...</a><br/></td></tr>
<tr class="separator:ad86e69f233a6305b3eb3d2a863a6dd6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40f5614a6337897b9a11d59c78bb8975"><td class="memItemLeft" align="right" valign="top">int *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#a40f5614a6337897b9a11d59c78bb8975">compact_unitcell_edges</a> ()</td></tr>
<tr class="memdesc:a40f5614a6337897b9a11d59c78bb8975"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute unitcell edges.  <a href="#a40f5614a6337897b9a11d59c78bb8975">More...</a><br/></td></tr>
<tr class="separator:a40f5614a6337897b9a11d59c78bb8975"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a815b809d1ff95cafb0fdcf74029fd229"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#a815b809d1ff95cafb0fdcf74029fd229">put_atoms_in_box</a> (int ePBC, const matrix box, <a class="el" href="classgmx_1_1ArrayRef.xhtml">gmx::ArrayRef</a>&lt; <a class="el" href="namespacegmx.xhtml#a139c1919a9680de4ad1450f42e37d33b">gmx::RVec</a> &gt; x)</td></tr>
<tr class="memdesc:a815b809d1ff95cafb0fdcf74029fd229"><td class="mdescLeft">&#160;</td><td class="mdescRight">Put atoms inside the simulations box.  <a href="#a815b809d1ff95cafb0fdcf74029fd229">More...</a><br/></td></tr>
<tr class="separator:a815b809d1ff95cafb0fdcf74029fd229"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55aaad77afec7b9eaebb70b687754d03"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#a55aaad77afec7b9eaebb70b687754d03">put_atoms_in_triclinic_unitcell</a> (int ecenter, const matrix box, <a class="el" href="classgmx_1_1ArrayRef.xhtml">gmx::ArrayRef</a>&lt; <a class="el" href="namespacegmx.xhtml#a139c1919a9680de4ad1450f42e37d33b">gmx::RVec</a> &gt; x)</td></tr>
<tr class="memdesc:a55aaad77afec7b9eaebb70b687754d03"><td class="mdescLeft">&#160;</td><td class="mdescRight">Put atoms inside triclinic box.  <a href="#a55aaad77afec7b9eaebb70b687754d03">More...</a><br/></td></tr>
<tr class="separator:a55aaad77afec7b9eaebb70b687754d03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac14dddcaea753593f89b901abac9bd8d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#ac14dddcaea753593f89b901abac9bd8d">put_atoms_in_compact_unitcell</a> (int ePBC, int ecenter, const matrix box, <a class="el" href="classgmx_1_1ArrayRef.xhtml">gmx::ArrayRef</a>&lt; <a class="el" href="namespacegmx.xhtml#a139c1919a9680de4ad1450f42e37d33b">gmx::RVec</a> &gt; x)</td></tr>
<tr class="memdesc:ac14dddcaea753593f89b901abac9bd8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Put atoms inside the unitcell.  <a href="#ac14dddcaea753593f89b901abac9bd8d">More...</a><br/></td></tr>
<tr class="separator:ac14dddcaea753593f89b901abac9bd8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a71b40bb117074fcd27138fcda4a686c7"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#a71b40bb117074fcd27138fcda4a686c7">epbc_names</a> [epbcNR+1]</td></tr>
<tr class="memdesc:a71b40bb117074fcd27138fcda4a686c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Strings corresponding to epbc enum values.  <a href="#a71b40bb117074fcd27138fcda4a686c7">More...</a><br/></td></tr>
<tr class="separator:a71b40bb117074fcd27138fcda4a686c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a295f0733b1c5ace0ce0be089b223ab44"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a295f0733b1c5ace0ce0be089b223ab44"></a>
static <a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="pbc_8cpp.xhtml#a295f0733b1c5ace0ce0be089b223ab44">bWarnedGuess</a> = 0</td></tr>
<tr class="memdesc:a295f0733b1c5ace0ce0be089b223ab44"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set to true if warning has been printed. <br/></td></tr>
<tr class="separator:a295f0733b1c5ace0ce0be089b223ab44"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a3d6c4b7f68e35e4a12fc61762403e8a5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void calc_box_center </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ecenter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const matrix&#160;</td>
          <td class="paramname"><em>box</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>box_center</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates the center of the box. </p>
<p>See the description for the enum ecenter above. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ecenter</td><td>Description of center type </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">box</td><td>The simulation box </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">box_center</td><td>The center of the box </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad86e69f233a6305b3eb3d2a863a6dd6f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void calc_compact_unitcell_vertices </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ecenter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const matrix&#160;</td>
          <td class="paramname"><em>box</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>vert</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates the NCUCVERT vertices of a compact unitcell. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ecenter</td><td>The center type </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">box</td><td>The simulation box </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">vert</td><td>The vertices </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aed4eb588362a25ae4e27c50ce18d2a61"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void calc_shifts </td>
          <td>(</td>
          <td class="paramtype">const matrix&#160;</td>
          <td class="paramname"><em>box</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>shift_vec</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Computes shift vectors. </p>
<p>This routine calculates ths shift vectors necessary to use the neighbor searching routine. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">box</td><td>The simulation box </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">shift_vec</td><td>The shifting vectors </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aeaad96a6543848974a05bdb231082e15"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void calc_triclinic_images </td>
          <td>(</td>
          <td class="paramtype">const matrix&#160;</td>
          <td class="paramname"><em>box</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>img</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculates the NTRICIMG box images. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">box</td><td>The simulation box </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">img</td><td>The triclinic box images </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae1cc069504f3a03200ae926f555981fc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* check_box </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ePBC</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const matrix&#160;</td>
          <td class="paramname"><em>box</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check the box for consistency. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ePBC</td><td>The pbc identifier </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">box</td><td>The box matrix </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>NULL if the box is supported by Gromacs. Otherwise returns a string with the problem. When ePBC=-1, the type of pbc is guessed from the box matrix. </dd></dl>

</div>
</div>
<a class="anchor" id="a40f5614a6337897b9a11d59c78bb8975"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int* compact_unitcell_edges </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compute unitcell edges. </p>
<dl class="section return"><dt>Returns</dt><dd>an array of unitcell edges of length NCUCEDGE*2, this is an index in vert[], which is calculated by calc_unitcell_vertices. The index consists of NCUCEDGE pairs of vertex indices. The index does not change, so it needs to be retrieved only once. </dd></dl>

</div>
</div>
<a class="anchor" id="a910a537097d66e38a3c42222d78a9c9c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a> correct_box </td>
          <td>(</td>
          <td class="paramtype">FILE *&#160;</td>
          <td class="paramname"><em>fplog</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>step</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">tensor&#160;</td>
          <td class="paramname"><em>box</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct t_graph *&#160;</td>
          <td class="paramname"><em>graph</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Corrects the box if necessary. </p>
<p>Checks for un-allowed box angles and corrects the box and the integer shift vectors in the graph (if graph!=NULL) if necessary. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fplog</td><td>File for debug output </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">step</td><td>The MD step number </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">box</td><td>The simulation cell </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">graph</td><td>Information about molecular connectivity </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>TRUE when the box was corrected. </dd></dl>

</div>
</div>
<a class="anchor" id="a04742edf90899bcb8f2ece6c28d8c89e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dump_pbc </td>
          <td>(</td>
          <td class="paramtype">FILE *&#160;</td>
          <td class="paramname"><em>fp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structt__pbc.xhtml">t_pbc</a> *&#160;</td>
          <td class="paramname"><em>pbc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Dump the contents of the pbc structure to the file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fp</td><td>The file pointer to write to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pbc</td><td>The periodic boundary condition information structure </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae7ce349d6a26970b979fb91e3d216dd1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int ePBC2npbcdim </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ePBC</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of dimensions that use pbc. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ePBC</td><td>The periodic boundary condition type </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the number of dimensions that use pbc, starting at X </dd></dl>

</div>
</div>
<a class="anchor" id="aa3b98e90dd667880bc7104c7f5cf33bb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int guess_ePBC </td>
          <td>(</td>
          <td class="paramtype">const matrix&#160;</td>
          <td class="paramname"><em>box</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Guess PBC typr. </p>
<p>Guesses the type of periodic boundary conditions using the box </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">box</td><td>The box matrix </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The pbc identifier </dd></dl>

</div>
</div>
<a class="anchor" id="aec6c71950b4b9e1c90429eff68ea4168"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void matrix_convert </td>
          <td>(</td>
          <td class="paramtype">matrix&#160;</td>
          <td class="paramname"><em>box</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const rvec&#160;</td>
          <td class="paramname"><em>vec</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const rvec&#160;</td>
          <td class="paramname"><em>angleInDegrees</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates box matrix from edge lengths and angles. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">box</td><td>The box matrix </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">vec</td><td>The edge lengths </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">angleInDegrees</td><td>The angles </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a7ee1fb60c67a9252ac14402f3c882393"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="real_8h.xhtml#a58a0c7cf2501f4492da833421be92547">real</a> max_cutoff2 </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ePBC</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const matrix&#160;</td>
          <td class="paramname"><em>box</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compute the maximum cutoff for the box. </p>
<p>Returns the square of the maximum cut-off allowed for the box, taking into account that the grid neighborsearch code and pbc_dx only check combinations of single box-vector shifts. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ePBC</td><td>The pbc identifier </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">box</td><td>The box matrix </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the maximum cut-off. </dd></dl>

</div>
</div>
<a class="anchor" id="a9d6a489816eadddbdbd19509b0ff5e46"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pbc_dx </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structt__pbc.xhtml">t_pbc</a> *&#160;</td>
          <td class="paramname"><em>pbc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const rvec&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const rvec&#160;</td>
          <td class="paramname"><em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>dx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compute distance with PBC. </p>
<p>Calculate the correct distance vector from x2 to x1 and put it in dx. set_pbc must be called before ever calling this routine.</p>
<p>Note that for triclinic boxes that do not obey the GROMACS unit-cell restrictions, pbc_dx and pbc_dx_aiuc will not correct for PBC. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">pbc</td><td>The pbc information structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">x1</td><td>Coordinates for particle 1 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">x2</td><td>Coordinates for particle 2 </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dx</td><td>Distance vector </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a4493bda77a264b3e5e060e5be15e40ac"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int pbc_dx_aiuc </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structt__pbc.xhtml">t_pbc</a> *&#160;</td>
          <td class="paramname"><em>pbc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const rvec&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const rvec&#160;</td>
          <td class="paramname"><em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">rvec&#160;</td>
          <td class="paramname"><em>dx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compute distance vector for simple PBC types. </p>
<p>Calculate the correct distance vector from x2 to x1 and put it in dx, This function can only be used when all atoms are in the rectangular or triclinic unit-cell. set_pbc_dd or set_pbc must be called before ever calling this routine. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">pbc</td><td>The pbc information structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">x1</td><td>Coordinates for particle 1 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">x2</td><td>Coordinates for particle 2 </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dx</td><td>Distance vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the ishift required to shift x1 at closest distance to x2; i.e. if 0&lt;=ishift&lt;SHIFTS then x1 - x2 + shift_vec[ishift] = dx (see calc_shifts below on how to obtain shift_vec) </dd></dl>

</div>
</div>
<a class="anchor" id="ab8b82070cfe00adb5de6c225e7b2266a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void pbc_dx_d </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structt__pbc.xhtml">t_pbc</a> *&#160;</td>
          <td class="paramname"><em>pbc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const dvec&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const dvec&#160;</td>
          <td class="paramname"><em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">dvec&#160;</td>
          <td class="paramname"><em>dx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compute distance vector in double precision. </p>
<p>Compute distance with PBC. </p>

</div>
</div>
<a class="anchor" id="a815b809d1ff95cafb0fdcf74029fd229"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void put_atoms_in_box </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ePBC</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const matrix&#160;</td>
          <td class="paramname"><em>box</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classgmx_1_1ArrayRef.xhtml">gmx::ArrayRef</a>&lt; <a class="el" href="namespacegmx.xhtml#a139c1919a9680de4ad1450f42e37d33b">gmx::RVec</a> &gt;&#160;</td>
          <td class="paramname"><em>x</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Put atoms inside the simulations box. </p>
<p>These routines puts ONE or ALL atoms in the box, not caring about charge groups! Also works for triclinic cells. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ePBC</td><td>The pbc type </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">box</td><td>The simulation box </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">x</td><td>The coordinates of the atoms </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac14dddcaea753593f89b901abac9bd8d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void put_atoms_in_compact_unitcell </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ePBC</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ecenter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const matrix&#160;</td>
          <td class="paramname"><em>box</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classgmx_1_1ArrayRef.xhtml">gmx::ArrayRef</a>&lt; <a class="el" href="namespacegmx.xhtml#a139c1919a9680de4ad1450f42e37d33b">gmx::RVec</a> &gt;&#160;</td>
          <td class="paramname"><em>x</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Put atoms inside the unitcell. </p>
<p>This puts ALL atoms at the closest distance for the center of the box as calculated by calc_box_center. When ePBC=-1, the type of pbc is guessed from the box matrix. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ePBC</td><td>The pbc type </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ecenter</td><td>The pbc center type </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">box</td><td>The simulation box </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">x</td><td>The coordinates of the atoms </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a55aaad77afec7b9eaebb70b687754d03"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void put_atoms_in_triclinic_unitcell </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ecenter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const matrix&#160;</td>
          <td class="paramname"><em>box</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classgmx_1_1ArrayRef.xhtml">gmx::ArrayRef</a>&lt; <a class="el" href="namespacegmx.xhtml#a139c1919a9680de4ad1450f42e37d33b">gmx::RVec</a> &gt;&#160;</td>
          <td class="paramname"><em>x</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Put atoms inside triclinic box. </p>
<p>This puts ALL atoms in the triclinic unit cell, centered around the box center as calculated by calc_box_center. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ecenter</td><td>The pbc center type </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">box</td><td>The simulation box </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">x</td><td>The coordinates of the atoms </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab40201bc08010820cb8626b9a5fbe1cb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_pbc </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structt__pbc.xhtml">t_pbc</a> *&#160;</td>
          <td class="paramname"><em>pbc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ePBC</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const matrix&#160;</td>
          <td class="paramname"><em>box</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initiate the periodic boundary condition algorithms. </p>
<p>pbc_dx will not use pbc and return the normal difference vector when one or more of the diagonal elements of box are zero. When ePBC=-1, the type of pbc is guessed from the box matrix. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">pbc</td><td>The pbc information structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ePBC</td><td>The PBC identifier </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">box</td><td>The box tensor </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="abbc1fe78042a0c6f7e557fbb4bad91ee"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structt__pbc.xhtml">t_pbc</a>* set_pbc_dd </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structt__pbc.xhtml">t_pbc</a> *&#160;</td>
          <td class="paramname"><em>pbc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ePBC</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const ivec&#160;</td>
          <td class="paramname"><em>domdecCells</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="basedefinitions_8h.xhtml#a8fddad319f226e856400d190198d5151">gmx_bool</a>&#160;</td>
          <td class="paramname"><em>bSingleDir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const matrix&#160;</td>
          <td class="paramname"><em>box</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initiate the periodic boundary condition algorithms. </p>
<p>As set_pbc, but additionally sets that correct distances can be obtained using (combinations of) single box-vector shifts. Should be used with pbc_dx_aiuc. If domdecCells!=NULL pbc is not used for directions with dd-&gt;nc[i]==1 with bSingleDir==TRUE or with dd-&gt;nc[i]&lt;=2 with bSingleDir==FALSE. Note that when no PBC is required only pbc-&gt;ePBC is set, the rest of the struct will be invalid. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">pbc</td><td>The pbc information structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ePBC</td><td>The PBC identifier </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">domdecCells</td><td>3D integer vector describing the number of DD cells or nullptr if not using DD. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bSingleDir</td><td>TRUE if DD communicates only in one direction along dimensions </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">box</td><td>The box tensor </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the pbc structure when pbc operations are required, NULL otherwise. </dd></dl>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="a71b40bb117074fcd27138fcda4a686c7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* epbc_names[epbcNR+1]</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">=</div>
<div class="line">{</div>
<div class="line">    <span class="stringliteral">&quot;xyz&quot;</span>, <span class="stringliteral">&quot;no&quot;</span>, <span class="stringliteral">&quot;xy&quot;</span>, <span class="stringliteral">&quot;screw&quot;</span>, <span class="keyword">nullptr</span></div>
<div class="line">}</div>
</div><!-- fragment -->
<p>Strings corresponding to epbc enum values. </p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Thu Aug 23 2018 14:57:17 for Gromacs by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
